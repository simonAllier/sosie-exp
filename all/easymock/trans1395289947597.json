[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,0,35,36,1,2,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,21,22,23,24,57,58,59,60,61,62,63,64,65,66,67,3,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,5,6,7,8,83,84,9,10,85,86,87,88,89,90,91,92,93,11,12,94,13,95,96,14,97,98,99,100,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[15,16,106,107,108,109,105,110,111,112,113,114,115,116,117,118,119,66,120,121,122,123,124,125,126,127,128,129,130,131,95,132,133,134,135,136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[138,139,140,116],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[35,141],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[142,143,144,145,5,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[29,146],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[15,16,147,148,149,150,151,152,153,154,155,156,157,158,17,159,160,30,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,138,196,139,106,107,31,197,198,108,109,105,110,199,200,201,202,203,111,204,112,113,32,114,115,205,206,207,140,208,116,117,118,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,119,230,231,232,233,234,235,236,237,238,239,240,241,242,33,243,34,0,35,36,244,245,246,1,2,37,38,247,39,248,40,249,41,42,250,43,44,251,252,253,254,45,255,46,47,256,257,258,259,48,260,49,261,262,50,51,263,52,264,53,265,266,267,268,18,269,270,271,141,54,19,20,55,272,56,273,21,22,274,275,276,23,24,277,278,279,280,281,282,283,284,285,286,57,58,287,288,289,290,291,292,59,60,61,62,293,294,295,296,297,298,299,300,63,64,301,302,303,304,305,25,306,307,308,65,309,66,67,3,68,69,310,120,311,312,313,314,70,121,315,316,317,318,319,320,321,322,323,324,325,326,327,26,27,328,28,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,71,72,352,353,73,354,355,74,75,76,356,357,358,359,360,77,78,79,361,362,363,29,364,365,366,146,367,368,369,370,371,372,373,374,375,80,376,377,378,379,380,122,123,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,124,125,396,397,126,81,82,5,6,398,399,7,8,83,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,84,9,10,423,424,425,85,426,427,86,87,88,89,90,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,91,444,445,92,93,11,127,128,129,130,131,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,12,94,478,13,95,96,14,97,98,479,480,481,482,483,484,485,486,487,488,489,490,132,133,134,135,136,99,491,100,101,492,493,102,103,104],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[494,495,258,19,20],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[197,199,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:338","sourceCode":"if (java.lang.reflect.Type != null) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","resolvedType":"actualTypeArgument","variable":"variable"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[198],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[496],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[243,141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[161,162,497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[161,260,262,498,499,500,501,502,293,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[142,143,144,145,5,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"position":"org.easymock.Capture:82","failures":[219,221,222,223,224,225,226,228,504,229,119,231],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[335,341,348,349,131,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[147,148,149,150,151,152,154,155,156,157,158,17,159,160,30,161,162,163,174,177,187,193,197,109,199,200,202,203,204,32,205,206,207,140,208,116,209,212,219,220,221,222,224,225,226,227,228,229,231,235,236,238,240,242,33,243,0,35,36,1,2,38,247,39,248,40,249,41,42,43,44,251,252,253,258,48,49,264,53,265,266,267,268,270,20,273,21,22,274,276,23,24,280,281,57,293,63,307,309,66,67,3,68,69,26,27,28,334,335,337,342,347,76,364,365,370,371,372,374,375,376,377,378,379,380,383,124,125,396,397,6,7,8,83,402,403,405,410,415,420,421,9,10,431,432,433,434,435,436,437,438,441,443,444,445,93,12,478,13,95,96,14,97,98,101,492,493,103,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[256],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[15,16,147,148,149,150,151,152,154,155,156,157,158,17,159,160,30,161,162,163,174,177,187,193,138,196,139,106,107,31,197,108,109,105,110,199,200,202,203,111,204,112,113,32,114,115,205,206,207,140,208,116,117,118,209,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,119,230,231,232,233,234,235,236,238,239,240,242,33,243,34,0,35,36,244,245,246,1,2,37,38,247,39,248,40,249,41,42,250,43,44,251,252,253,45,46,258,259,48,49,50,51,52,264,53,265,266,267,268,18,270,54,19,20,55,273,21,22,274,276,23,24,280,281,57,293,63,25,306,307,308,65,309,66,67,3,68,69,310,120,311,312,313,314,121,315,26,27,28,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,76,357,358,364,365,370,371,372,374,375,80,376,377,378,379,380,122,123,383,124,125,396,397,126,81,82,5,6,398,399,7,8,83,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,84,9,10,431,432,433,434,435,436,437,438,441,443,444,445,11,127,128,129,130,131,470,471,472,473,474,12,94,478,13,95,96,14,97,98,480,481,482,483,484,485,132,133,134,135,136,100,101,492,493,102,103,104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[506,219,221,222,223,224,225,226,228,504,229,119,231],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[32],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[161,260,262,498,499,500,501,502,293,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":197,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":456,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":36,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":158,"org.easymock.tests2.DelegateToTest.testReturnException":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":481,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests.MockClassControlTest.testToString":77,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":292,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":400,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":177,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":124,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":88,"org.easymock.tests2.UsageConstraintsTest.testNull":109,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":266,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":44,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.CaptureTest.testPrimitive":222,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":419,"org.easymock.tests.UsageTest.moreThanOneArgument":82,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":134,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":486,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageVarargTest.varargIntAccepted":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":131,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests2.DependencyTest.testClassMocking":278,"org.easymock.tests2.AnswerTest.answer":209,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":218,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":427,"org.easymock.tests2.CaptureTest.testAnd":219,"org.easymock.tests2.UsageTest.strictResetToDefault":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":357,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":490,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":415,"org.easymock.tests.LimitationsTest.mockFinalMethod":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":474,"org.easymock.tests2.DependencyTest.testClassMockingSupport":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":71,"org.easymock.tests2.CaptureTest.testCapture1_2446744":223,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":216,"org.easymock.tests.UsageThrowableTest.throwError":431,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":386,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":87,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":195,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":387,"org.easymock.tests.MockingTest.testInterfaceMocking":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":182,"org.easymock.tests2.UsageTest.niceToStrict":35,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":75,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":258,"org.easymock.tests2.MockBuilderTest.testCreateMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":190,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":409,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":142,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":426,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":477,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":192,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":445,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":343,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":204,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":228,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":373,"org.easymock.tests2.EasyMockSupportClassTest.testAll":174,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":217,"org.easymock.tests2.CaptureTest.testCaptureAll":220,"org.easymock.tests.MockNameTest.defaultName":70,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":135,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":380,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":473,"org.easymock.samples.BasicClassMockTest.testPrintContent":156,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":437,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":485,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":114,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":55,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":324,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":233,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":248,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":480,"org.easymock.tests2.CaptureTest.testCaptureFirst":231,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":40,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":339,"org.easymock.tests2.UsageTest.moreThanOneArgument":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":230,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":379,"org.easymock.tests.GenericTest.testBridgedEquals":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":103,"org.easymock.tests.UsageExpectAndReturnTest.longType":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":470,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":418,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":140,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":416,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":132,"org.easymock.tests.UsageCallCountTest.tooManyCalls":104,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":290,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":405,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":436,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":21,"org.easymock.tests.MockingTest.testNiceClassMocking":331,"org.easymock.tests.MockingTest.testClassMocking":326,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":491,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":307,"org.easymock.tests2.UsageConstraintsTest.testFind":108,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":422,"org.easymock.tests.MockTypeTest.fromEasyMockClass":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":139,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests.UsageExpectAndReturnTest.object":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":289,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":375,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":487,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":348,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":370,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":297,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":184,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":476,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":215,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":254,"org.easymock.tests.UsageVarargTest.varargCharAccepted":374,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":316,"org.easymock.tests2.CaptureTest.testCaptureMultiple":506,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":508,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":252,"org.easymock.tests.DefaultClassInstantiatorTest.object":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":475,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":73,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":296,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":19,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":406,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":428,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":193,"org.easymock.tests2.UsageTest.resumeIfFailure":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":483,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":341,"org.easymock.tests2.SerializationTest.testAllMockedMethod":163,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":462,"org.easymock.samples.SupportTest.voteForRemovals":160,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":143,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":412,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":468,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":210,"org.easymock.tests.UsageExpectAndThrowTest.object":410,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":169,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":411,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":171,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":425,"org.easymock.tests2.CaptureTest.testCaptureNone":227,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":378,"org.easymock.tests2.ThreadingTest.testThreadSafe":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":188,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":493,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":155,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":397,"org.easymock.tests2.UsageConstraintsTest.any":202,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndThrowTest.longType":403,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.tests2.SerializationTest.testClass":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests.LimitationsTest.mockNativeMethod":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":351,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":284,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests2.NameTest.nameForMocksControl":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":286,"org.easymock.tests2.MockedExceptionTest.testMockedException":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":176,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":404,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":196,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":264,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":49,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":268,"org.easymock.tests2.CaptureTest.testCaptureLast":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":199,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":327,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":408,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.samples.ExampleTest.removeNonExistingDocument":153,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":287,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":298,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":319,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":234,"org.easymock.tests2.MockBuilderTest.testCreateMockString":52,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.floatType":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":212,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":295,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":187,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":423,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":20,"org.easymock.tests.LimitationsTest.privateConstructor":440,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":438,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests2.UsageTest.defaultResetToNice":246,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":347,"org.easymock.tests.UsageVarargTest.differentLength":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":283,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests2.UsageConstraintsTest.equals":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":271,"org.easymock.tests.UsageTest.openCallCountByLastCall":398,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":396,"org.easymock.tests.UsageCallCountTest.tooFewCalls":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":505,"org.easymock.tests.UsageThrowableTest.throwCheckedException":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":145,"org.easymock.tests.MockingTest.testStrictClassMocking":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":23,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":315,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":58,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":276,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":214,"org.easymock.tests.ObjectMethodsTest.testHashCode":354,"org.easymock.tests2.NameTest.nameForNiceMock":61,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":236,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.DelegateToTest.testStubDelegate":239,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":95,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":261,"org.easymock.tests.UsageVarargTest.varargLongAccepted":377,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":293,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.UsageThrowableTest.noUpperLimit":432,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":115,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":164,"org.easymock.tests2.SerializationTest.test":162,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":224,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":318,"org.easymock.tests2.UsageConstraintsTest.testSame":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":333,"org.easymock.samples.SupportTest.addDocument":159,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":275,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":179,"org.easymock.tests.GenericTest.testPackageScope":364,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":302,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":329,"org.easymock.tests2.NameTest.nameForMock":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":344,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":414,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":358,"org.easymock.tests2.MockedExceptionTest.testRealException":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":125,"org.easymock.tests2.NameTest.nameForStrictMock":60,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":509,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":168,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":300,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":494,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":229,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.MockBuilderTest.testWithConstructor":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":180,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":345,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":322,"org.easymock.tests.UsageVarargTest.varargShortAccepted":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":102,"org.easymock.tests2.UsageConstraintsTest.cmpTo":203,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.CaptureTest.testCaptureFromStub":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":385,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":346,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.samples.ExampleTest.addAndChangeDocument":154,"org.easymock.tests.UsageStrictMockTest.testVerify":479,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":471,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":129,"org.easymock.tests.LimitationsTest.abstractClass":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":130,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":42,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":371}}]
