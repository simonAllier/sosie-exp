[{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[13],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[14,15,16,17,18],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[19,20,21,22],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[38,39],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[40,23,24,25,41,42,27,29],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[44,32,33,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[47,48,49],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[46,50,51,52],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[40,23,24,25,26,41,42,27,29,30,53,32,34,36,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[29,30,32,56,57,58,0,59,34,36,1,2,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,4,5],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,29,127,128,129,130,131,56,132,133,134,57,135,136,137,35,138,139,65,68,78,84,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[30,56,57,58,0,59,34,1,2,60,61,158],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[159,160,161,162,163,164,18],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[165,166,167,168,169,170],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[172,173,174,87,88,89,175,47,48,176,177,178,49,179,180,13,181,182,183,184,185,109,186,187,188,189,190,191,192,193,194,45,130,131,56,132,134,57,195,196,197,62,65,67,69,70,73,76,79,80,83,140,141,143,144,145,198,146,199,200,147,148,149,201,202,203,204,205,206,4,5,153],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[223],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[224,225,226,227,167,95,168,228,229,230,128,231,232,233],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[234,224,225,235,236,90,92,93,171,237,226,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,167,94,256,95,96,257,258,97,98,99,100,101,102,103,104,105,259,180,260,261,262,263,264,265,266,267,106,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,228,294,295,229,230,296,297,298,299,300,301,302,181,182,183,107,108,109,303,304,305,306,307,308,193,194,309,14,310,110,111,112,113,114,115,311,312,116,117,313,118,119,120,314,121,122,123,124,125,315,15,126,16,17,31,316,317,318,127,319,128,129,320,33,45,50,321,322,323,324,325,326,327,328,20,329,330,331,332,21,333,334,51,335,336,337,338,339,52,340,341,22,342,343,344,345,346,347,348,349,350,351,352,353,130,132,133,195,196,197,354,159,161,355,356,357,231,358,359,360,361,232,233,362,363,162,163,164,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,139,384,65,140,141,142,143,144,145,146,149,150,151,385,152,205,206,221,154,18,155,156,386,157,387,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[224,225,95,388,128],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"matched"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[165,166,167,168,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":323,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":292,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":359,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":221,"org.easymock.tests2.DelegateToTest.testReturnException":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":304,"org.easymock.tests.MockingTest.testPartialClassMocking":87,"org.easymock.tests.MockClassControlTest.testToString":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":23,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests2.UsageTest.wrongArguments":231,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":220,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests2.UsageConstraintsTest.testNull":325,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":194,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":350,"org.easymock.tests2.CaptureTest.testPrimitive":368,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests.UsageTest.moreThanOneArgument":293,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":104,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":101,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests2.AnswerTest.answer":162,"org.easymock.tests2.CaptureTest.testAnd":365,"org.easymock.tests2.UsageTest.strictResetToDefault":356,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":346,"org.easymock.tests2.DelegateToTest.testDelegate":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":287,"org.easymock.tests.LimitationsTest.mockFinalMethod":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":9,"org.easymock.tests2.CaptureTest.testCapture1_2446744":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":285,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":259,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":86,"org.easymock.samples.PartialClassMockTest.testGetArea":153,"org.easymock.tests2.CompareToTest.testLessOrEqual":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests2.UsageTest.niceToStrict":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":136,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":219,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":281,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":8,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":21,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":118,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":38,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":332,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":374,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.MockClassControlTest.testEquals":193,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests2.CaptureTest.testCaptureAll":366,"org.easymock.tests2.UsageConstraintsTest.testMatches":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":105,"org.easymock.samples.ExampleTest.voteForRemovals":157,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":234,"org.easymock.samples.BasicClassMockTest.testPrintContent":206,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":27,"org.easymock.tests2.UsageConstraintsTest.greaterThan":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":179,"org.easymock.samples.ExampleTest.voteForRemoval":155,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":201,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":198,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":355,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":344,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":303,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":28,"org.easymock.tests2.CaptureTest.testCaptureFirst":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":345,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":312,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":357,"org.easymock.tests2.CaptureTest.testCapture2_2446744":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":138,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":113,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":102,"org.easymock.tests.UsageCallCountTest.tooManyCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests.MockingTest.testNiceClassMocking":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":131,"org.easymock.tests.MockingTest.testClassMocking":173,"org.easymock.tests2.UsageConstraintsTest.testContains":331,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":197,"org.easymock.tests2.UsageConstraintsTest.testFind":324,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":161,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests.UsageExpectAndReturnTest.object":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":24,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":253,"org.easymock.tests.UsageTest.exactCallCountByLastCall":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":122,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":14,"org.easymock.tests.MockClassControlTest.testHashCode":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests2.EasyMockSupportTest.testVerify":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":75,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":7,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":309,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests2.CaptureTest.testCaptureMultiple":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests2.UsageTest.openCallCountByLastCall":360,"org.easymock.tests.DefaultClassInstantiatorTest.object":47,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":6,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":123,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests2.UsageTest.resumeIfFailure":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":306,"org.easymock.tests2.StubTest.stubWithReturnValue":380,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":170,"org.easymock.samples.SupportTest.voteForRemovals":152,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":284,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":44,"org.easymock.tests.UsageExpectAndThrowTest.object":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":337,"org.easymock.tests2.DelegateToTest.testWrongClass":16,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":283,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":62,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":165,"org.easymock.tests2.CaptureTest.testCaptureNone":373,"org.easymock.tests.UsageUnorderedTest.message":226,"org.easymock.tests.UsageVerifyTest.twoReturns":225,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":79,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":300,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":205,"org.easymock.tests2.CaptureTest.testCapture_2617107":367,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests2.UsageConstraintsTest.any":329,"org.easymock.tests2.StubTest.stub":379,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":178,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":216,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":43,"org.easymock.tests2.MockedExceptionTest.testMockedException":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":67,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":276,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":40,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":214,"org.easymock.tests2.CaptureTest.testCaptureLast":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":328,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":338,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":280,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":341,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":218,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":176,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":383,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":69,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":64,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":53,"org.easymock.tests.UsageVerifyTest.twoThrows":224,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":148,"org.easymock.tests.LimitationsTest.privateConstructor":185,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":61,"org.easymock.tests2.UsageConstraintsTest.testNotNull":340,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.samples.ExampleTest.voteAgainstRemovals":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":215,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.CallbackTest.callback":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":269,"org.easymock.tests.UsageCallCountTest.tooFewCalls":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests.MockingTest.testStrictClassMocking":172,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":237,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":364,"org.easymock.tests2.CompareToTest.testGreateOrEqual":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":41,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":384,"org.easymock.tests2.DependencyTest.testInterfaceMocking":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":25,"org.easymock.samples.ExampleTest.addDocument":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":80,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.AnswerTest.stubAnswer":164,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":124,"org.easymock.tests.UsageExpectAndReturnTest.floatType":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":29,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":321,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":203,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":370,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":39,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":111,"org.easymock.tests2.UsageConstraintsTest.testSame":326,"org.easymock.samples.SupportTest.addDocument":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":70,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":119,"org.easymock.tests2.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":286,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":93,"org.easymock.tests2.MockedExceptionTest.testRealException":354,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":54,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":135,"org.easymock.tests2.UsageStrictMockTest.range":128,"org.easymock.tests2.UsageConstraintsTest.lessThan":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":74,"org.easymock.tests2.CaptureTest.testCaptureRightOne":375,"org.easymock.tests2.UsageConstraintsTest.testOr":327,"org.easymock.tests.UsageRangeTest.combination":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":141,"org.easymock.tests.UsageTest.wrongArguments":228,"org.easymock.tests2.MockBuilderTest.testWithConstructor":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":71,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":120,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":49,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests2.UsageConstraintsTest.cmpTo":330,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":361,"org.easymock.tests2.CaptureTest.testCaptureFromStub":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":167,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":299,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":1,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":314,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.tests2.UsageConstraintsTest.constraints":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":387,"org.easymock.tests.UsageStrictMockTest.testVerify":258,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":222,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":99,"org.easymock.tests.LimitationsTest.abstractClass":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":100,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":388,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":348}}]
