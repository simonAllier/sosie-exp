[{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[44,45,46,47,48,49],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[50,51,52,53,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[44,45,46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[33,66,67,68],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,34,79,35,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"name","methodName":"name"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[103],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[104,105,106,2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,107,108,109,33,67,110,78,34,111,79,35,112,113,114,115,116,117,80,81,40,118,82,83,119,120,121,122,123,124,125,84,126,127,128,129,130,131,1,85,132,133,86,134,87,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,91,94,152,153,154,155,156,157,158,159,160,100,101,102,161,162,163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[165,166,167,168,169,170,171,172,173,174,175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[177,178,179,180,181,182,183,184,185,186,69,187,70,71,188,50,103,189,190,191,192,193,194,72,73,74,75,195,76,77,78,34,79,35,112,113,114,80,81,118,82,83,84,85,86,87,88,89,196,197,46,198,199,200,201,202,203,204,90,91,92,93,94,95,96,205,206,207,208,209,210,211,49,212,213,214,215,216,217,218,219,220,221,222,223,224,225,97,98,99,100,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[226,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[228,229,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,230,231,232,233,234,235,33,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[4,236,237,238,239,240,241,242],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[33,66,67,68],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[243,116,132,133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[156,244,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[246],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[156,244,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[44,45,46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[50,247,248,249,250],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[178,190,192,193,197,202,212,214,215,221,222,223,251,252,253,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[255,58,59,256,257,258,259,260,261,262,60,263,264],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[265,266,267,268,269,270,271,272,273,274,104,105,106,2,3,275,4,177,276,178,179,180,181,277,278,0,182,183,184,185,279,280,9,12,22,28,107,108,109,281,282,283,33,66,67,284,186,285,69,286,187,70,287,71,188,288,289,290,291,292,293,294,295,296,50,51,65,52,246,53,54,247,64,297,298,227,248,164,103,299,300,56,301,302,303,304,57,305,249,189,306,190,191,192,193,194,307,308,309,310,58,311,59,256,257,258,259,260,312,261,60,263,313,264,314,315,316,317,195,76,110,78,34,111,318,79,35,112,113,116,117,80,81,118,82,83,319,320,125,84,321,126,127,128,129,130,85,132,133,86,88,322,323,324,325,326,135,138,327,328,329,330,331,332,333,334,335,336,337,338,196,197,46,198,339,340,199,200,201,341,342,343,344,345,202,143,144,145,346,347,148,149,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,206,207,403,404,208,209,210,211,405,49,212,213,214,215,216,406,407,408,220,221,222,223,409,410,411,412,413,414,415,416,417,418,419,224,420,421,422,423,424,425,426,225,427,428,429,430,431],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[432],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[104,105,106,2,2,3,3,4,5,433,434,435,436,437,438,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,107,108,109,33,67,110,78,34,111,79,35,439,112,243,113,114,115,116,117,80,81,40,118,82,43,440,83,121,124,125,84,126,127,128,129,130,131,1,85,132,133,86,134,87,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,91,94,152,153,154,155,156,157,158,99,159,160,100,101,102,161,162,163],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[247,248,249,250],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[177,278,280,338,196,340,344,368,370,371,372,373,374,375,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,408,222,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[5,237,238,239,441,240,241,242,39,442],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":77,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":181,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":410,"org.easymock.tests.MockingTest.testPartialClassMocking":143,"org.easymock.tests.MockClassControlTest.testToString":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":383,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":251,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":237,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":247,"org.easymock.tests2.UsageTest.wrongArguments":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":341,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":329,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests2.UsageConstraintsTest.testNull":52,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":433,"org.easymock.tests2.CaptureTest.testPrimitive":256,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":402,"org.easymock.tests.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.UsageTest.argumentsOrdered":200,"org.easymock.tests.UsageVarargTest.varargIntAccepted":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":415,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":419,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests2.DependencyTest.testClassMocking":119,"org.easymock.tests2.AnswerTest.answer":307,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":317,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":398,"org.easymock.tests.LimitationsTest.mockFinalMethod":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":335,"org.easymock.tests2.DependencyTest.testClassMockingSupport":120,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":203,"org.easymock.tests2.CaptureTest.testCapture1_2446744":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":315,"org.easymock.tests.UsageThrowableTest.throwError":368,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":93,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":30,"org.easymock.samples.PartialClassMockTest.testGetArea":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":384,"org.easymock.tests2.UsageTest.niceToStrict":180,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":17,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":235,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testCreateMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":392,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":44,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":21,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":248,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":359,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":227,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":244,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":261,"org.easymock.tests.MockClassControlTest.testEquals":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":9,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":400,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":434,"org.easymock.tests2.CaptureTest.testCaptureAll":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":333,"org.easymock.tests.MockNameTest.defaultName":90,"org.easymock.tests2.UsageConstraintsTest.testMatches":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":431,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":221,"org.easymock.samples.BasicClassMockTest.testPrintContent":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":374,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":242,"org.easymock.tests2.UsageConstraintsTest.greaterThan":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":86,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":158,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":134,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":323,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":43,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":135,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":285,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":409,"org.easymock.tests2.CaptureTest.testCaptureFirst":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":355,"org.easymock.tests2.UsageTest.moreThanOneArgument":178,"org.easymock.tests2.CaptureTest.testCapture2_2446744":313,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":430,"org.easymock.tests.GenericTest.testBridgedEquals":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":209,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":230,"org.easymock.tests.UsageExpectAndReturnTest.longType":351,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":331,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":440,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":401,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":399,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":210,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":388,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":373,"org.easymock.tests.MockingTest.testNiceClassMocking":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests.MockingTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":243,"org.easymock.tests2.UsageConstraintsTest.testContains":298,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":65,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":338,"org.easymock.tests.MockTypeTest.fromEasyMockClass":92,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":283,"org.easymock.tests.UsageExpectAndReturnTest.object":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":71,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":238,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":432,"org.easymock.tests.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":165,"org.easymock.tests.MockClassControlTest.testHashCode":161,"org.easymock.tests2.EasyMockSupportTest.testVerify":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":19,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":314,"org.easymock.tests.UsageVarargTest.varargCharAccepted":425,"org.easymock.tests2.CaptureTest.testCaptureMultiple":255,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests2.UsageTest.openCallCountByLastCall":277,"org.easymock.tests.DefaultClassInstantiatorTest.object":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":228,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":289,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":20,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":438,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":132,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":61,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":91,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":412,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":357,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":45,"org.easymock.samples.SupportTest.voteForRemovals":273,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":395,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":68,"org.easymock.tests.UsageExpectAndThrowTest.object":393,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":301,"org.easymock.tests2.DelegateToTest.testWrongClass":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":347,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":214,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":394,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":6,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":47,"org.easymock.tests2.CaptureTest.testCaptureNone":312,"org.easymock.tests.UsageUnorderedTest.message":202,"org.easymock.tests.UsageVerifyTest.twoReturns":223,"org.easymock.tests.UsageVarargTest.varargByteAccepted":429,"org.easymock.tests2.ThreadingTest.testThreadSafe":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":23,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":104,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":98,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":344,"org.easymock.tests2.UsageConstraintsTest.any":64,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":411,"org.easymock.tests.UsageExpectAndThrowTest.longType":386,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":156,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":367,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":172,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.NameTest.nameForMocksControl":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":173,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":11,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":236,"org.easymock.tests2.CaptureTest.testCaptureLast":260,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":302,"org.easymock.tests.MockingTest.testTwoMocks":142,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":391,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":174,"org.easymock.tests.UsageStrictMockTest.differentMethods":215,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":166,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":154,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":83,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":159,"org.easymock.tests.UsageExpectAndThrowTest.floatType":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":13,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":308,"org.easymock.tests.UsageVerifyTest.twoThrows":222,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests.LimitationsTest.privateConstructor":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":32,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":375,"org.easymock.tests2.UsageTest.defaultResetToNice":0,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":171,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":131,"org.easymock.tests.UsageTest.openCallCountByLastCall":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":343,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":330,"org.easymock.tests.UsageThrowableTest.throwCheckedException":372,"org.easymock.tests.MockingTest.testStrictClassMocking":140,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":382,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":318,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":310,"org.easymock.tests2.CompareToTest.testGreateOrEqual":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":240,"org.easymock.tests2.NameTest.nameForNiceMock":74,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":239,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.DelegateToTest.testStubDelegate":292,"org.easymock.tests2.AnswerTest.stubAnswer":309,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":212,"org.easymock.tests.UsageVarargTest.varargLongAccepted":428,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":300,"org.easymock.tests.UsageThrowableTest.noUpperLimit":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":296,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":121,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":258,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":245,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":153,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":349,"org.easymock.samples.SupportTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":14,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":169,"org.easymock.tests2.NameTest.nameForMock":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":360,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":42,"org.easymock.tests2.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":421,"org.easymock.tests2.MockedExceptionTest.testRealException":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":442,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":342,"org.easymock.tests2.NameTest.nameForStrictMock":73,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":115,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":229,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":124,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":155,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":252,"org.easymock.tests.ErrorMessageTest.testGetters":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":192,"org.easymock.tests2.UsageConstraintsTest.lessThan":249,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":167,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":18,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":198,"org.easymock.tests2.MockBuilderTest.testWithConstructor":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":15,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":427,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":157,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":297,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests2.CaptureTest.testCaptureFromStub":263,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":114,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":403,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":362,"org.easymock.tests2.CaptureTest.testCapture":262,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":271,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":332,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":259,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":417,"org.easymock.tests.LimitationsTest.abstractClass":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":418,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":70,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":254}}]
