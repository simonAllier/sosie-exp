[{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[73,74,75,76,77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[80,81,73,82,83,84,85,16,16,17,17,18,86,87,88,89,90,91,92,93,21,0,1,2,22,94,74,24,25,26,27,95,28,29,96,97,98,99,100,101,102,103,104,105,106,33,34,107,35,36,37,39,41,42,43,108,109,110,111,44,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,75,160,76,161,162,77,47,49,51,52,54,163,164,3,165,166,167,168,169,170,57,58,59,60,171,172,173,174,8,9,10,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,11,12,13,192,193,194,195,196,197,198,199,200,201,63,65,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,78,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,14,66,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,68,69,70,72,267,268,269,270,271,272,273,274,275,276,15,277,278,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[280,96,97,281,98,99,282,283,100,102,284,103,104,105,106,285],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[172],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[286,287,288,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.ConstructorArgs:54","failures":[16,17,21,291,22,26,29,292,293,294,295,296,297,298,299,300,301,302,303,57,304,305,58,306,307,308,309,310,311,312,313,314,59,315,316,317,318,319,60,320,321],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[81,73,82,83,322,84,85,86,87,88,89,90,92,21,323,0,324,1,2,325,22,94,23,74,25,26,28,29,96,97,281,98,99,282,283,100,101,102,103,104,105,106,33,34,107,35,36,37,38,39,40,42,108,109,110,111,44,112,326,327,328,329,115,116,117,119,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,330,156,157,158,159,75,161,162,77,45,49,50,163,164,3,331,165,332,166,167,168,333,334,169,170,335,336,337,338,8,9,10,175,176,177,178,179,183,184,185,186,187,188,189,190,191,339,340,11,341,12,13,342,195,196,197,198,199,200,201,343,344,345,346,347,63,64,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,348,78,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,14,66,250,251,349,350,351,352,353,252,253,254,255,256,257,258,259,354,355,356,357,358,359,360,361,362,363,260,261,262,263,264,265,266,68,69,70,72,272,274,275,276,15,364,277,278,365,366,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,81,82,83,84,18,86,87,88,89,90,91,92,93,21,0,1,2,22,94,24,25,26,27,95,28,29,96,97,98,99,100,101,102,103,105,106,33,34,107,35,36,37,39,42,113,116,120,121,122,123,124,125,126,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,75,162,49,51,52,163,164,3,165,166,167,169,170,57,58,59,60,172,173,174,8,10,175,176,177,178,179,181,184,186,187,188,189,190,191,11,12,13,63,65,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,66,250,252,253,256,257,258,259,260,261,68,69,70,367,368,369,370,371,272,274,275,276,15,277,278,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[246,372],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[374,375,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[73,115,117,118,119,222,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[0,96,97,281,98,99,282,283,100,101,102,103,104,105,106,39,108,109,378,134,135,136,137,138,139,140,141,142,143,379,144,145,146,147,148,149,150,151,152,153,154,155,330,156,157,158,159,175,176,177,178,179,340,11,199,14,250,251,252,253,254,255,256,363,260,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[380,80,81,73,82,83,322,84,85,16,17,381,18,19,20,382,86,87,88,89,90,91,92,93,21,383,323,0,324,1,2,325,22,94,23,74,24,25,26,27,95,28,29,96,97,281,98,99,282,283,100,101,102,103,104,105,106,33,34,107,35,36,37,38,39,40,41,42,43,108,109,110,111,44,112,113,326,327,328,329,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,384,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,330,156,157,158,159,75,161,162,77,45,47,49,50,51,52,53,54,56,163,164,3,331,165,332,166,167,168,333,334,169,170,57,58,59,60,335,336,337,338,8,9,10,175,176,177,178,179,184,185,186,187,188,189,190,191,385,339,340,11,341,12,13,342,195,196,197,198,199,200,201,343,344,345,386,346,347,63,64,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,78,222,223,387,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,14,66,250,251,349,350,351,352,353,252,253,254,255,256,257,258,259,354,355,356,357,358,388,359,360,361,362,363,260,261,262,263,264,265,266,68,69,70,285,285,72,272,274,275,276,15,389,364,277,278,365,366,279],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[34,390,391,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[393,394,395,396,397,398,399,400],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[380,80,81,73,82,83,322,84,401,85,16,16,17,17,381,18,19,20,382,86,87,88,89,90,91,92,93,21,383,323,0,324,1,2,325,22,94,23,74,24,25,26,27,95,28,29,96,97,281,98,99,282,283,100,101,102,103,104,105,106,33,34,107,35,36,37,38,39,40,41,42,43,108,109,110,111,44,112,113,326,327,328,329,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,384,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,330,156,157,158,159,392,402,403,404,75,161,162,77,45,47,49,50,51,52,53,54,56,163,164,3,331,165,332,166,167,168,333,334,169,170,57,58,59,60,335,336,337,338,8,9,10,175,176,177,178,179,184,185,186,187,188,189,190,191,385,339,340,11,341,12,13,342,405,406,407,408,409,195,196,197,198,199,200,410,411,201,343,344,345,386,346,347,63,64,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,412,413,414,415,348,416,417,418,419,420,421,422,78,222,223,224,387,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,14,66,250,251,349,350,351,352,353,252,253,254,255,256,257,258,259,354,355,356,357,358,388,359,360,361,362,363,260,261,262,263,264,265,266,68,69,70,423,71,424,425,426,427,428,429,72,272,273,274,275,276,15,389,364,277,278,365,366,279],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[156],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.UsageTest.argumentsOrdered":334,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":130,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":332,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":381,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":196,"org.easymock.tests.MockingTest.testPartialClassMocking":68,"org.easymock.tests.MockClassControlTest.testToString":424,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":391,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":225,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":4,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":252,"org.easymock.tests2.UsageTest.wrongArguments":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":337,"org.easymock.samples.ExampleTest.answerVsDelegate":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":62,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":35,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":129,"org.easymock.tests2.CaptureTest.testPrimitive":98,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":256,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":264,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":245,"org.easymock.tests.UsageTest.argumentsOrdered":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests.ReplayStateInvalidUsageTest.times":419,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests2.AnswerTest.answer":75,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests2.UsageTest.strictResetToDefault":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":124,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":274,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":414,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":266,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":321,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":173,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":376,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":234,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":319,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":147,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":102,"org.easymock.tests.MockClassControlTest.testEquals":428,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":242,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":30,"org.easymock.tests2.CaptureTest.testCaptureAll":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":265,"org.easymock.samples.ExampleTest.voteForRemovals":84,"org.easymock.tests.UsageVarargTest.allKinds":363,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":383,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":200,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":43,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":38,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":72,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":122,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":195,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":123,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":209,"org.easymock.tests2.CaptureTest.testCapture2_2446744":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":346,"org.easymock.tests.UsageExpectAndReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":243,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":171,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":262,"org.easymock.tests.UsageCallCountTest.tooManyCalls":347,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":411,"org.easymock.tests2.UsageConstraintsTest.testContains":146,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":46,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":109,"org.easymock.tests.UsageExpectAndReturnTest.object":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":128,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":358,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":409,"org.easymock.tests.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":180,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":222,"org.easymock.tests.MockClassControlTest.testHashCode":427,"org.easymock.tests2.EasyMockSupportTest.testVerify":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":312,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":378,"org.easymock.tests.UsageVarargTest.varargCharAccepted":357,"org.easymock.tests2.CaptureTest.testCaptureMultiple":280,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests.DefaultClassInstantiatorTest.object":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":267,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":426,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":231,"org.easymock.tests.CapturesMatcherTest.test":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":192,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":198,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":297,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":211,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":237,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":160,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":182,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":261,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":301,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":336,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":174,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":361,"org.easymock.tests2.ThreadingTest.testThreadSafe":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":315,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageConstraintsTest.any":144,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":418,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":197,"org.easymock.tests.UsageExpectAndThrowTest.longType":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":417,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":324,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":32,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":325,"org.easymock.tests2.NameTest.nameForMocksControl":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests2.MockedExceptionTest.testMockedException":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":305,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":37,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":67,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":233,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":333,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.samples.ExampleTest.removeNonExistingDocument":401,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":88,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":423,"org.easymock.tests.UsageExpectAndThrowTest.floatType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":161,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":42,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":294,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":110,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests.UsageVarargTest.differentLength":388,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests.UsageTest.openCallCountByLastCall":277,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":254,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":338,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":95,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":77,"org.easymock.tests.ObjectMethodsTest.testHashCode":408,"org.easymock.tests2.NameTest.nameForNiceMock":403,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":90,"org.easymock.tests2.DependencyTest.testInterfaceMocking":92,"org.easymock.samples.ExampleTest.addDocument":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":316,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.stubAnswer":162,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests.UsageVarargTest.varargLongAccepted":360,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":367,"org.easymock.tests.UsageExpectAndReturnTest.floatType":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.SerializationTest.test":94,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":282,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.samples.SupportTest.addDocument":380,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":307,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.NameTest.nameForMock":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":214,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":275,"org.easymock.tests2.MockedExceptionTest.testRealException":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":253,"org.easymock.tests2.NameTest.nameForStrictMock":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":36,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":5,"org.easymock.tests.ErrorMessageTest.testGetters":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":311,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.UsageTest.wrongArguments":364,"org.easymock.tests2.MockBuilderTest.testWithConstructor":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargShortAccepted":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":386,"org.easymock.tests2.UsageConstraintsTest.cmpTo":145,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":76,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":413,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":48,"org.easymock.tests.UsageTest.unexpectedCallWithArray":389,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":216,"org.easymock.tests2.CaptureTest.testCapture":284,"org.easymock.tests2.UsageConstraintsTest.constraints":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":405,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":382,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":126,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":7,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":355}}]
