[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,27,28,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[32,33,34,7,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[37],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[38,39,40,41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[42,43,3,44,45,46,47,48,49,50,23,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,4,87,32,88,89,90,5,91,33,92,93,94,6,95,96,34,7,97,8,98,99,100,101,102,103,24,25,10,104,105,106,35,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,11,125,126,127,12,128,129,130,131,132,13,133,134,135,136,137,14,138,139,140,15,141,16,142,143,26,144,145,146,147,148,149,27,150,151,152,153,154,155,156,157,158,36,159,160,161,162,163,164,165,166,166,167,167,168,169,170,171,172,173,174,28,175,176,177,22,178,179,180,181,182,183,184,29,185,186,187,20,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,21,206,207,208,209,210,40,211,212,213,214,41,215,216,217,218,30,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,31,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,2,290,291,292,293,294,17,295,296,297,298,299,300,301,18,302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[3,44,45,46,47,48,49,50,23,305,306,307,308,309,310,311,312,313,314,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,315,316,317,318,319,320,321,322,67,69,70,72,73,78,79,80,81,82,323,324,325,86,4,87,32,88,89,90,5,91,33,92,93,94,6,95,96,34,7,97,8,326,327,98,328,329,330,331,332,333,102,103,24,25,10,104,105,106,35,107,108,109,110,111,112,114,115,116,334,335,336,337,338,339,340,341,342,343,344,345,117,118,119,120,121,122,127,12,128,129,130,131,132,13,133,134,135,136,137,14,138,139,140,15,141,16,142,346,143,26,144,145,146,147,347,348,148,149,27,150,151,152,153,154,155,156,157,158,36,159,349,164,350,165,166,167,168,169,170,171,351,172,352,173,353,354,174,38,39,28,175,176,177,22,178,179,180,181,182,183,184,29,185,186,187,20,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,21,206,207,208,209,210,40,211,212,213,214,41,215,216,217,218,30,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,355,246,356,357,358,359,248,249,250,252,253,254,255,360,31,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,2,290,361,291,292,293,294,17,295,296,297,298,299,300,301,18,302,303,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[362,44,305,306,307,308,309,311,312,313,314,51,52,53,56,57,58,59,60,61,62,63,64,65,66,316,72,78,79,80,81,82,86,4,87,32,88,89,90,5,91,33,92,93,94,6,95,96,34,7,97,8,326,327,98,328,329,330,102,103,24,25,104,105,106,35,107,108,109,111,112,114,115,116,117,119,120,121,122,127,12,128,129,130,131,132,13,133,134,135,136,137,14,138,139,140,15,141,16,346,26,146,147,347,149,27,155,156,157,158,36,159,349,164,168,169,170,171,351,172,173,175,176,22,178,181,184,185,187,20,194,195,198,199,200,202,203,204,205,206,207,209,215,216,217,218,30,221,222,223,224,225,226,229,230,231,232,233,246,356,357,358,359,248,249,252,253,254,360,31,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,2,290,361,291,292,293,294,295,296,297,298,299,300,302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[363,364],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[51,52,53,54,55,56,65,10,104,105,117,118,143,26,155,156,157,158,36,206,365,228,31,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,291,292,293,294,17,295,296,297,298,299,300,301,18,302,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[366,367,368,369,370,160,364,166,166,167,167,353,354,174,371,372,373,185,186,374,375,187,20,188,189,190,191,376,192,193,196,200,203,204,205,21,206,377,208,209,378,379,380,381,382,383,384,385,211,386,387,212,388,389,390,391,392,393,394,395,396,213,397,398,399,400,401,214,402,403,404,231,232,2,361],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[262,268],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,74,75,76,405,118,230,231,232,233,254],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:56","sourceCode":"java.util.List<org.easymock.internal.ExpectedInvocationAndResult>.add(new org.easymock.internal.ExpectedInvocationAndResult(org.easymock.internal.ExpectedInvocation , org.easymock.internal.Result))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[406,407,408,409,410,411,412,405,413,414,415,416,417,418,419,420,421,9,422,423,424,425],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,75,76,405,344],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[57,142,145,146,22,191,235,239,240,243,246,255,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[269],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[44,86,90,94,34,97,417,99,10,112,127,132,137,140,141,173,176,225,226,227,246,252,260,275,278,287,292,297,298,302,303,304],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[426],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[42,43,3,44,46,47,48,49,50,23,305,306,307,308,309,310,311,312,313,314,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,83,84,85,86,4,87,32,88,89,90,5,91,33,92,93,94,6,95,96,34,7,97,8,99,100,101,103,24,25,10,104,105,106,35,107,108,109,110,111,112,114,117,118,119,127,12,128,129,130,131,132,13,133,134,135,136,137,14,138,139,140,15,141,16,142,346,143,26,144,145,146,147,347,148,149,27,150,151,152,153,154,155,156,157,158,36,349,162,163,350,165,168,169,170,171,351,172,173,353,354,38,39,28,175,176,177,22,178,179,180,181,182,183,184,29,187,188,189,201,204,206,207,208,209,210,40,41,30,219,220,221,222,225,226,227,228,229,230,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,360,31,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,2,290,361,291,292,293,294,17,295,296,297,298,299,300,301,18,302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":263,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":415,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":39,"org.easymock.tests2.DelegateToTest.testReturnException":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":62,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":317,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":212,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":289,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":269,"org.easymock.tests2.UsageTest.wrongArguments":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":121,"org.easymock.samples.ExampleTest.answerVsDelegate":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests2.UsageConstraintsTest.testNull":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":203,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":243,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":380,"org.easymock.tests2.CaptureTest.testPrimitive":294,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":56,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":16,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":123,"org.easymock.tests.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageVarargTest.varargIntAccepted":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":155,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":36,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests.ReplayStateInvalidUsageTest.times":342,"org.easymock.tests2.AnswerTest.answer":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":218,"org.easymock.tests2.CaptureTest.testAnd":291,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":126,"org.easymock.tests2.DelegateToTest.testDelegate":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":42,"org.easymock.tests2.CaptureTest.testCapture1_2446744":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":216,"org.easymock.tests.UsageThrowableTest.throwError":148,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":403,"org.easymock.samples.PartialClassMockTest.testGetArea":174,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":12,"org.easymock.tests2.UsageTest.niceToStrict":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":134,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":119,"org.easymock.tests.UsageOverloadedMethodTest.overloading":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":275,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":274,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":299,"org.easymock.tests2.EasyMockSupportClassTest.testAll":211,"org.easymock.tests.MockClassControlTest.testEquals":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":15,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":381,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":217,"org.easymock.tests2.CaptureTest.testCaptureAll":292,"org.easymock.tests2.UsageConstraintsTest.testMatches":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":334,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":51,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":81,"org.easymock.samples.BasicClassMockTest.testPrintContent":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":66,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":251,"org.easymock.tests2.UsageConstraintsTest.greaterThan":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":210,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":370,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":226,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":378,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":164,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":236,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":247,"org.easymock.tests2.CaptureTest.testCaptureFirst":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":237,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":5,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":18,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":314,"org.easymock.tests.GenericTest.testBridgedEquals":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":332,"org.easymock.tests.UsageExpectAndReturnTest.longType":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":78,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":141,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":101,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":75,"org.easymock.tests.UsageCallCountTest.tooManyCalls":333,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.testContains":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":327,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":232,"org.easymock.tests2.UsageConstraintsTest.testFind":264,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":112,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":304,"org.easymock.tests.UsageExpectAndReturnTest.object":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":242,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":309,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":325,"org.easymock.tests.UsageTest.exactCallCountByLastCall":23,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":34,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":69,"org.easymock.tests.MockClassControlTest.testHashCode":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":394,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":215,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":365,"org.easymock.tests.UsageVarargTest.varargCharAccepted":308,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":245,"org.easymock.tests.DefaultClassInstantiatorTest.object":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":83,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":208,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":214,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":318,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":64,"org.easymock.tests2.StubTest.stubWithReturnValue":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":33,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":361,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":99,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":1,"org.easymock.samples.SupportTest.voteForRemovals":165,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":137,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":100,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":219,"org.easymock.tests.UsageExpectAndThrowTest.object":135,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":281,"org.easymock.tests2.DelegateToTest.testWrongClass":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":104,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":105,"org.easymock.samples.ConstructorCalledMockTest.testTax":166,"org.easymock.tests.UsageStrictMockTest.range":145,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":163,"org.easymock.tests2.CaptureTest.testCaptureNone":298,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":313,"org.easymock.tests2.ThreadingTest.testThreadSafe":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":397,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":330,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":353,"org.easymock.tests2.CaptureTest.testCapture_2617107":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":55,"org.easymock.tests2.UsageConstraintsTest.any":271,"org.easymock.tests2.StubTest.stub":253,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndThrowTest.longType":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":340,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":102,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":8,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.MockedExceptionTest.testMockedException":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":130,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":205,"org.easymock.tests2.CaptureTest.testCaptureLast":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":199,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":268,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":282,"org.easymock.tests.MockingTest.testTwoMocks":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":133,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":286,"org.easymock.samples.ExampleTest.removeNonExistingDocument":352,"org.easymock.tests.UsageStrictMockTest.differentMethods":146,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":338,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":227,"org.easymock.tests2.MockBuilderTest.testCreateMockString":192,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":128,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":221,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":213,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":209,"org.easymock.tests2.UsageConstraintsTest.testNotNull":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":230,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":310,"org.easymock.tests2.CallbackTest.callback":246,"org.easymock.tests.UsageTest.openCallCountByLastCall":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":54,"org.easymock.tests.UsageCallCountTest.tooFewCalls":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":122,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":19,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":223,"org.easymock.tests.ObjectMethodsTest.testHashCode":324,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":229,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":288,"org.easymock.samples.ExampleTest.addDocument":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.DelegateToTest.testStubDelegate":249,"org.easymock.tests2.AnswerTest.stubAnswer":222,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests.UsageVarargTest.varargLongAccepted":312,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":97,"org.easymock.tests.UsageExpectAndReturnTest.floatType":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":224,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":167,"org.easymock.tests.UsageThrowableTest.noUpperLimit":149,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":279,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":371,"org.easymock.tests2.SerializationTest.test":290,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":4,"org.easymock.tests2.UsageConstraintsTest.testSame":266,"org.easymock.samples.SupportTest.addDocument":350,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":389,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":94,"org.easymock.tests2.UsageStrictMockTest.differentMethods":258,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":60,"org.easymock.tests2.MockedExceptionTest.testRealException":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":418,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":345,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":375,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":372,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":280,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":186,"org.easymock.tests2.UsageStrictMockTest.range":257,"org.easymock.tests2.UsageConstraintsTest.lessThan":287,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":393,"org.easymock.tests2.CaptureTest.testCaptureRightOne":300,"org.easymock.tests2.UsageConstraintsTest.testOr":267,"org.easymock.tests.UsageRangeTest.combination":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":201,"org.easymock.tests.UsageTest.wrongArguments":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":6,"org.easymock.tests.UsageVarargTest.varargShortAccepted":311,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":331,"org.easymock.tests2.UsageConstraintsTest.cmpTo":272,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":335,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":374,"org.easymock.tests.UsageTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.UsageConstraintsTest.constraints":262,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests2.ConstraintsToStringTest.containsToString":426,"org.easymock.tests.UsageStrictMockTest.testVerify":347,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":79,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":158,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":240,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":306}}]
