[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,1,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,4,5,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,51,52,55,57,58,59,60,61,62,63,65,66,67,68,69,70,71,74,76,77,79,80,82,84,85,86,87,88,89,93,94,1,95,96,97,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,126,131,132,133,134,135,136,137,138,140,142,143,144,298,299,300,301,145,147,150,151,302,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,3,4,5,188,189,191,194,195,196,303,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[21,28,33,304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,11,12,13,14,19,21,22,24,25,31,32,33,46,51,115,147,166,177,178,181,305,306,307,308,309,201,202,203,204,205,310,224,225,226,227,228,250,251,295,295,296,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[140,311,312,141,142,143,144,313,314,315,316,317,318,319,320,321,322,323,324,145,325,162,326,327,328,174,175,176,329,330,331,332,333,334,335,336,337,338,339,280,281,340,341,292,293,295,295,296,296,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,42,46,48,49,51,52,55,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,76,77,79,80,82,84,85,86,88,90,91,92,1,95,97,100,101,103,104,105,107,108,111,112,113,114,116,117,119,120,121,122,123,124,125,126,133,134,135,136,137,138,140,142,143,144,145,147,149,150,151,302,166,168,169,171,173,174,175,176,177,178,181,182,3,4,5,188,189,192,193,196,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,272,274,275,276,277,278,279,280,340,283,285,286,288,291,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,40,41,42,43,45,46,49,50,0,51,53,54,55,56,70,71,74,75,77,78,85,86,88,89,92,1,96,97,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,117,118,121,122,125,126,127,128,129,130,131,132,133,135,136,137,138,140,141,143,298,299,300,301,316,145,147,150,151,302,156,157,158,159,160,161,162,164,166,169,170,342,171,172,173,174,175,176,177,178,181,182,3,4,5,183,184,185,186,187,189,197,198,199,200,201,202,203,204,205,303,343,206,207,208,209,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,344,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,280,281,283,284,285,286,287,288,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[36,37,38,39,55,75,76,77,78,79,80,81,82,83,100,102,103,120,121,122,123,125,126,133,134,136,137,138,139,140,141,142,143,144,316,145,162,328,174,175,176,280,281,340,292,293,295,295,296,296,297],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[341],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[332,333,334,335,337,338],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,42,46,48,49,51,52,55,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,76,77,79,80,82,84,85,86,88,90,91,92,1,95,97,100,101,103,104,105,107,108,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,133,134,135,136,137,138,140,142,143,144,145,147,149,150,151,302,166,168,169,171,173,346,347,348,174,175,176,349,177,178,181,182,3,4,5,188,189,192,193,196,201,202,203,204,205,310,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,272,274,275,276,277,278,279,280,340,283,285,286,288,291,295,295,296,296,297],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,40,41,42,43,45,46,49,50,0,51,53,54,55,56,70,71,74,75,77,78,85,86,88,89,92,1,96,97,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,117,118,121,122,125,126,127,128,129,130,131,132,133,135,136,137,138,140,141,143,298,299,300,301,316,145,147,150,151,302,156,157,158,159,160,161,162,164,166,169,170,342,171,172,173,174,175,176,177,178,181,182,3,4,5,183,184,185,186,187,189,197,198,199,200,201,202,203,204,205,303,343,206,207,208,209,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,344,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,280,281,283,284,285,286,287,288,289],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[350,97],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[36,37,38,39,55,75,76,351,77,78,79,80,81,82,83,100,102,103,120,121,122,123,125,126,133,134,136,137,138,139,140,141,142,143,144,314,352,316,317,318,319,145,162,328,174,175,176,330,331,280,281,340,292,293,295,295,296,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[305,353,354,355,306,307,356,357,358,359,360,361,362,363,308,364,6,365,309,366,367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[369,354],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[339,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,1,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,370,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,298,299,300,301,371,372,373,315,316,317,318,319,320,321,322,145,374,375,376,377,378,379,380,2,381,382,383,384,147,148,149,150,151,152,153,154,302,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,342,171,172,173,174,175,176,177,178,179,180,181,182,3,4,5,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,303,343,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,332,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,385,289,290,291,292,293,294,295,295,296,296,297],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[386,42,43,356],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,1,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,4,5,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[388,389,390,391,392,393,394],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:105","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"failures":[395],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[396,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[46,48,49,86,87,93,94,298,299,300,301,397,398,399,165,166,168,169,171,172,173,189,191,194,195,229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":188,"org.easymock.tests2.UsageTest.argumentsOrdered":94,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":360,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":89,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testReturnException":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":157,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests.MockClassControlTest.testToString":317,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":252,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":397,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":199,"org.easymock.samples.ExampleTest.answerVsDelegate":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":331,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":136,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":66,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":322,"org.easymock.tests2.CaptureTest.testPrimitive":107,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageTest.moreThanOneArgument":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":271,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":203,"org.easymock.tests.UsageTest.argumentsOrdered":195,"org.easymock.tests.UsageVarargTest.varargIntAccepted":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":75,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":228,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.ReplayStateInvalidUsageTest.times":381,"org.easymock.tests2.AnswerTest.answer":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":130,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":61,"org.easymock.tests2.DelegateToTest.testDelegate":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":267,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":187,"org.easymock.tests2.CaptureTest.testCapture1_2446744":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":128,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":205,"org.easymock.samples.PartialClassMockTest.testGetArea":297,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests2.UsageTest.niceToStrict":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":253,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.MockBuilderTest.testCreateMock":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":261,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":150,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":21,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":241,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":20,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":129,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests2.UsageConstraintsTest.testMatches":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":288,"org.easymock.tests.UsageVarargTest.allKinds":223,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":186,"org.easymock.samples.BasicClassMockTest.testPrintContent":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":161,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":369,"org.easymock.tests2.UsageConstraintsTest.greaterThan":24,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":3,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":144,"org.easymock.samples.ExampleTest.voteForRemoval":285,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":338,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":71,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":59,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":156,"org.easymock.tests2.CaptureTest.testCaptureFirst":117,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":60,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":73,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":365,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":222,"org.easymock.tests.GenericTest.testBridgedEquals":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":183,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":270,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":29,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":201,"org.easymock.tests.UsageCallCountTest.tooManyCalls":212,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testNiceClassMocking":329,"org.easymock.tests.MockingTest.testClassMocking":327,"org.easymock.tests2.UsageConstraintsTest.testContains":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":11,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageExpectAndReturnTest.object":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":391,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":217,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":373,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":389,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests.MockClassControlTest.testHashCode":320,"org.easymock.tests2.EasyMockSupportTest.testVerify":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":370,"org.easymock.tests.UsageVarargTest.varargCharAccepted":216,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":68,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":142,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":258,"org.easymock.tests.CapturesMatcherTest.test":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":318,"org.easymock.tests2.UsageTest.resumeIfFailure":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":159,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":388,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":239,"org.easymock.tests2.SerializationTest.testAllMockedMethod":102,"org.easymock.samples.SupportTest.voteForRemovals":291,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":264,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":386,"org.easymock.tests.UsageExpectAndThrowTest.object":262,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":27,"org.easymock.tests2.DelegateToTest.testWrongClass":98,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":395,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":250,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":251,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":295,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":198,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests.UsageUnorderedTest.message":229,"org.easymock.tests.UsageVerifyTest.twoReturns":173,"org.easymock.tests.UsageVarargTest.varargByteAccepted":221,"org.easymock.tests2.ThreadingTest.testThreadSafe":70,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageConstraintsTest.any":17,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":2,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":158,"org.easymock.tests.UsageExpectAndThrowTest.longType":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":336,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":380,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.SerializationTest.testClass":100,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":249,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":340,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.NameTest.nameForMocksControl":301,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":256,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":138,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":15,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":28,"org.easymock.tests.MockingTest.testTwoMocks":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":260,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.samples.ExampleTest.removeNonExistingDocument":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":334,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":72,"org.easymock.tests2.MockBuilderTest.testCreateMockString":83,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.floatType":254,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":23,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests.UsageVerifyTest.twoThrows":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":286,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":143,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":362,"org.easymock.tests.UsageVarargTest.differentLength":218,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":200,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.MockingTest.testStrictClassMocking":326,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":124,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":74,"org.easymock.tests2.NameTest.nameForNiceMock":300,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":392,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.DelegateToTest.testStubDelegate":97,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests.UsageVarargTest.varargLongAccepted":220,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":359,"org.easymock.tests.UsageExpectAndReturnTest.floatType":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":103,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":296,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":25,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":8,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":109,"org.easymock.tests2.SerializationTest.test":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":231,"org.easymock.samples.SupportTest.addDocument":290,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests.GenericTest.testPackageScope":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.NameTest.nameForMock":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":242,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":5,"org.easymock.tests2.MockedExceptionTest.testRealException":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":363,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.NameTest.nameForStrictMock":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":26,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":335,"org.easymock.tests.ErrorMessageTest.testGetters":387,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":358,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":134,"org.easymock.tests.UsageTest.wrongArguments":191,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.varargShortAccepted":219,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":210,"org.easymock.tests2.UsageConstraintsTest.cmpTo":18,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests2.CompareToTest.testLessThan":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":355,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":375,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":190,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":244,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.samples.ExampleTest.addAndChangeDocument":289,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":282,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":184,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":236,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":227,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":63,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":214}}]
