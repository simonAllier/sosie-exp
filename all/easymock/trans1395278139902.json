[{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"this","methodName":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[18,8,28,29,30,30,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[56,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[59,60,12,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:183","failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,25,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,32,14,15,171,172,173,174,16,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,34,40,41,42,47,48,49,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,17,240,241,9,242,243,59,244,245,10,246,247,57,11,248,249,250,251,252,253,12,254,255,256,257,61,258,259,55,260,261,262],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[242,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[55,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[18,263,69,19,264,265,76,266,116,267,268,269,131,132,133,270,271,272,273,274,275,276,277,278,279,20,280,281,282,21,283,30,31,32,171,172,284,285,185,186,187,188,190,191,33,286,200,287,288,289,290,291,292,293,294,295,296,205,297,207,298,208,50,56,299,300,52,53,27,301,54,261],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.LastControl:95","failures":[219,221,228,9,242,59,245,10,60,12,61],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[302],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[62,303,304,305,306,63,263,8,70,71,72,73,74,75,76,78,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,307,308,111,112,113,114,115,309,310,311,312,313,116,25,117,118,119,120,314,315,316,317,318,319,320,321,131,132,133,322,323,324,325,326,327,328,329,330,331,332,134,135,333,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,334,159,160,161,162,163,335,336,337,338,339,164,165,166,167,169,170,30,30,31,31,32,174,16,175,176,178,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,340,341,199,33,286,200,342,201,343,202,203,204,34,37,40,41,42,45,288,47,48,49,205,297,206,207,298,208,56,52,53,27,209,344,345,210,211,212,213,214,346,215,216,217,347,218,219,220,222,348,225,226,227,228,349,350,229,230,351,231,232,233,234,352,353,235,236,237,238,17,240,241,9,242,243,59,244,245,10,246,247,57,11,248,249,250,251,252,253,12,254,255,257,61,258,259,55,260,262],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[75,2,80,354,5,355,356,357,162,163,180,358,359,360],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[361,362,363,364,365,366],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:178","failures":[28,42],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[361,362,363,366,34,35,367,44,55],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[368],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[30,30,31,31,34,35,43,44,51,55],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[282,369,370],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[18,8,30,31,32,34,35,40,43,44,371,46,47,48,51,53,54,55],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[10,246],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[18,263,69,8,19,264,265,76,266,116,372,267,268,269,131,132,133,270,28,29,271,272,273,274,275,276,277,278,373,279,20,280,281,282,21,374,283,30,30,31,31,32,171,172,284,285,185,186,187,188,190,191,33,286,200,34,35,375,36,376,37,38,302,39,40,377,41,367,42,44,371,45,378,46,287,379,380,288,381,289,47,290,291,382,383,292,384,385,293,386,48,294,295,387,388,296,49,389,390,205,297,207,298,208,50,56,51,299,300,52,53,27,301,54,55,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[391,392,393,394,395],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[62,303,304,305,306,396,63,263,8,70,71,72,73,74,75,76,397,2,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,398,307,308,111,112,5,355,113,114,356,357,115,309,310,311,312,313,116,25,117,118,119,120,399,400,401,402,403,314,404,315,316,405,317,406,130,318,319,320,407,408,409,372,321,269,131,132,133,322,323,324,325,326,327,328,329,330,331,332,28,410,411,29,13,412,134,135,413,271,273,274,275,276,333,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,334,159,160,161,162,163,414,415,416,417,335,336,337,338,339,164,165,166,167,169,170,30,30,31,31,32,174,16,418,175,176,419,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,358,195,196,197,198,340,359,360,341,199,33,286,200,342,201,343,202,203,204,34,420,36,37,38,40,377,41,42,371,45,46,288,47,48,49,205,297,206,207,298,208,50,56,300,52,53,27,54,209,344,345,210,211,212,213,214,346,215,216,217,347,218,219,220,221,222,348,223,224,225,226,227,228,349,350,229,230,351,231,232,233,234,352,353,235,236,237,238,239,17,421,422,423,424,425,240,241,9,242,243,59,244,245,10,246,60,247,57,11,248,249,250,251,252,253,12,254,255,256,257,61,258,259,55,260,262],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":242,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.UsageTest.argumentsOrdered":360,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":196,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":323,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":273,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":138,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":47,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageTest.wrongArguments":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":416,"org.easymock.samples.ExampleTest.answerVsDelegate":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":29,"org.easymock.tests2.UsageConstraintsTest.testNull":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":236,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":278,"org.easymock.tests2.CaptureTest.testPrimitive":222,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":157,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":337,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":328,"org.easymock.tests.UsageTest.argumentsOrdered":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":365,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":120,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":24,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":368,"org.easymock.tests2.AnswerTest.answer":209,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":425,"org.easymock.tests2.CaptureTest.testAnd":219,"org.easymock.tests2.UsageTest.strictResetToDefault":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":300,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":233,"org.easymock.tests2.DelegateToTest.testDelegate":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":153,"org.easymock.tests.LimitationsTest.mockFinalMethod":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":403,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":398,"org.easymock.tests2.CaptureTest.testCapture1_2446744":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":423,"org.easymock.tests.UsageThrowableTest.throwError":83,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":139,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":292,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.MockBuilderTest.testCreateMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":147,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":396,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":414,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":296,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":249,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":102,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":333,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":369,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":227,"org.easymock.tests.MockClassControlTest.testEquals":277,"org.easymock.tests2.EasyMockSupportClassTest.testAll":288,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":69,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":424,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":401,"org.easymock.tests2.CaptureTest.testCaptureAll":220,"org.easymock.tests.MockNameTest.defaultName":413,"org.easymock.tests2.UsageConstraintsTest.testMatches":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":338,"org.easymock.samples.ExampleTest.voteForRemovals":169,"org.easymock.tests.UsageVarargTest.allKinds":130,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":402,"org.easymock.samples.BasicClassMockTest.testPrintContent":172,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":89,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":327,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":347,"org.easymock.tests2.UsageConstraintsTest.greaterThan":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":366,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.samples.ExampleTest.voteForRemoval":166,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":301,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":116,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":231,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":322,"org.easymock.tests2.CaptureTest.testCaptureFirst":229,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":232,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":98,"org.easymock.tests2.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":129,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":399,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":156,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":335,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":22,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":88,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":186,"org.easymock.tests.MockingTest.testNiceClassMocking":270,"org.easymock.tests.MockingTest.testClassMocking":268,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":200,"org.easymock.tests2.UsageConstraintsTest.testFind":243,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":410,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":214,"org.easymock.tests.UsageExpectAndReturnTest.object":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":235,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":35,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":107,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":315,"org.easymock.tests.MockClassControlTest.testHashCode":276,"org.easymock.tests2.EasyMockSupportTest.testVerify":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":385,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":23,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":422,"org.easymock.tests.UsageVarargTest.varargCharAccepted":124,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":373,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":238,"org.easymock.tests.DefaultClassInstantiatorTest.object":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":304,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":407,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":144,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":108,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":49,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":274,"org.easymock.tests2.UsageTest.resumeIfFailure":341,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":325,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":367,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":309,"org.easymock.samples.SupportTest.voteForRemovals":174,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":150,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":310,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":344,"org.easymock.tests.UsageExpectAndThrowTest.object":148,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":254,"org.easymock.tests2.DelegateToTest.testWrongClass":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":135,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":287,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":415,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":320,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":163,"org.easymock.tests.UsageVarargTest.varargByteAccepted":128,"org.easymock.tests2.ThreadingTest.testThreadSafe":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":294,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":66,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":171,"org.easymock.tests2.CaptureTest.testCapture_2617107":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":73,"org.easymock.tests2.UsageConstraintsTest.any":247,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":26,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":110,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":8,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.tests2.MockedExceptionTest.testMockedException":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":289,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":142,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":208,"org.easymock.tests2.CaptureTest.testCaptureLast":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":307,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":255,"org.easymock.tests.MockingTest.testTwoMocks":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":146,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":359,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":258,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":280,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":202,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":271,"org.easymock.tests.UsageExpectAndThrowTest.floatType":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":290,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":210,"org.easymock.tests.UsageVerifyTest.twoThrows":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":375,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":48,"org.easymock.samples.ExampleTest.voteAgainstRemoval":167,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests.LimitationsTest.privateConstructor":265,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":90,"org.easymock.tests2.UsageTest.defaultResetToNice":340,"org.easymock.samples.ExampleTest.voteAgainstRemovals":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":106,"org.easymock.tests2.CallbackTest.callback":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":51,"org.easymock.tests.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":417,"org.easymock.tests.UsageThrowableTest.throwCheckedException":87,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.MockingTest.testStrictClassMocking":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":421,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":212,"org.easymock.tests.ObjectMethodsTest.testHashCode":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":364,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":204,"org.easymock.tests2.DependencyTest.testInterfaceMocking":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":363,"org.easymock.samples.ExampleTest.addDocument":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":216,"org.easymock.tests2.AnswerTest.stubAnswer":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":78,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":43,"org.easymock.tests.UsageVarargTest.varargLongAccepted":127,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":109,"org.easymock.tests.UsageExpectAndReturnTest.floatType":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests.UsageThrowableTest.noUpperLimit":84,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":253,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":241,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":284,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":223,"org.easymock.tests2.SerializationTest.test":260,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":92,"org.easymock.tests2.UsageConstraintsTest.testSame":244,"org.easymock.samples.SupportTest.addDocument":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":291,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.NameTest.nameForMock":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":103,"org.easymock.tests2.UsageStrictMockTest.differentMethods":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":160,"org.easymock.tests2.MockedExceptionTest.testRealException":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":71,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":285,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":37,"org.easymock.tests2.UsageStrictMockTest.range":180,"org.easymock.tests2.UsageConstraintsTest.lessThan":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":58,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":384,"org.easymock.tests2.CaptureTest.testCaptureRightOne":228,"org.easymock.tests2.UsageConstraintsTest.testOr":245,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":297,"org.easymock.tests.UsageTest.wrongArguments":355,"org.easymock.tests2.MockBuilderTest.testWithConstructor":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":382,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":104,"org.easymock.tests.UsageVarargTest.varargShortAccepted":126,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":21,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":345,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":38,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":105,"org.easymock.tests2.CaptureTest.testCapture":1,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":79,"org.easymock.samples.ExampleTest.addAndChangeDocument":170,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":400,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":97,"org.easymock.tests.LimitationsTest.abstractClass":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":119,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":352}}]
