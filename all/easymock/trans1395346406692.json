[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[75,76,77,78],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,2,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,5,148,149,7,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,8,166,167,168,169,170,171,172,79,80,81,82,83,173,84,85,86,87,88,89,174,175,176,177,178,179,180,21,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,23,212,24,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,28,29,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,31,253,33,36,41,42,44,45,47,50,53,54,55,56,57,254,255,256,257,258,259,260,261,76,77,78,262,263,264,265,266,267,268,269,270,61,62,63,64,66,67,68,69,70,71,74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[271,272,122,273,274,275,135,136,137,276,277,278,138,279,280,148,149,281,282,283,164,284,285,286,287,288,289,290,291,181,182,183,184,185,186,187,188,292,292,293,293,202,203,204,205,294,295,296,297,298,299,206,207,208,300,209,301,210,302,303,304,211,305,306,307,308,309,216,310,311,217,312,313,314,315,316,317,318,319,320,218,321,322,323,324,325,219,326,327,231,232,234,235,236,237,28,328,329,29,330,238,331,332,333,334,335,254,336,337,258,259,260,76,78,262,263,264,265,267,268],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[338,339,173,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[75,76,77,78],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[205,207,237,333,258],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[35,41,61,63,71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[287,346,347],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[348,332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.Capture:82","failures":[61,63,64,65,66,67,68,70,341,71,72,74],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[342,349,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[351,352,113,114,115,116,117,118,119,120,121,122,0,1,2,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,353,354,355,356,3,4,139,140,141,142,143,357,144,145,146,147,5,148,149,6,7,150,151,152,153,358,359,154,155,360,361,156,157,158,362,363,159,160,364,161,365,366,367,368,162,369,370,371,372,163,373,374,375,376,377,165,8,9,166,378,379,167,10,11,380,381,174,175,382,176,383,384,385,386,177,387,388,389,390,178,391,392,393,394,395,396,397,12,13,14,15,16,17,179,180,18,19,20,21,22,398,399,400,401,402,189,190,403,191,192,193,194,195,196,404,198,199,200,292,293,201,202,203,204,205,296,206,207,208,209,210,302,211,405,406,348,23,212,24,213,214,215,216,217,218,219,25,26,27,407,220,221,222,223,408,224,225,226,409,410,227,228,229,411,230,231,232,233,234,235,236,237,28,29,330,238,331,412,239,240,241,242,243,244,245,246,247,248,249,250,251,413,252,30,31,414,415,253,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,254,255,256,257,416,417,258,259,260,418,261,76,77,78,262,263,264,265,266,267,268,269,419,270,420,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[421,344,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,112,351,352,113,114,115,116,117,271,445,446,272,447,448,118,119,120,121,122,0,1,2,123,124,125,126,127,128,129,130,449,131,132,450,133,134,273,274,275,135,136,451,137,452,453,276,277,278,138,279,353,354,355,356,3,4,139,140,141,454,142,143,357,144,145,146,147,5,280,148,149,281,282,6,7,150,151,152,153,455,456,457,358,359,154,155,360,361,156,157,158,342,349,350,362,363,159,160,364,161,365,366,367,368,162,369,370,371,372,163,373,374,375,376,338,458,339,283,164,284,285,286,287,288,289,290,377,165,8,9,166,378,379,167,168,10,11,459,169,170,171,460,291,461,172,462,343,463,464,465,79,80,81,82,83,173,84,85,86,87,88,89,466,345,467,468,469,380,381,174,175,382,176,383,384,385,386,177,387,388,389,390,178,391,392,393,394,395,470,396,397,12,13,14,15,16,17,179,180,471,18,19,20,21,22,181,182,183,184,185,186,187,188,398,399,400,401,402,189,190,403,191,192,193,194,195,196,197,404,198,199,200,292,292,293,293,201,202,203,204,205,294,296,297,298,299,206,207,208,300,209,301,210,302,303,211,405,406,348,23,212,24,213,214,215,307,308,309,216,310,311,217,312,313,314,315,316,317,318,319,320,218,321,322,323,324,325,219,326,327,25,472,26,27,407,473,474,475,476,477,478,479,220,221,222,223,408,224,225,226,409,410,227,228,229,411,230,231,232,233,234,235,236,237,480,28,328,329,29,330,238,331,332,333,412,239,240,241,242,243,244,245,246,247,248,249,250,251,413,252,30,31,414,415,253,334,335,481,482,32,33,34,35,36,483,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,254,336,337,484,485,486,487,488,255,489,490,491,492,493,494,256,495,496,257,416,417,258,259,260,418,497,498,499,500,501,261,502,503,504,505,506,507,76,77,78,262,263,264,265,266,267,268,508,269,419,270,509,420,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[63,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[510,511,512,513,514,33,35,48,51,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[421,424,425,434,439,0,9,10,11,79,12,13,14,15,16,471,18,19,22,398,399,400,401,402,292,292,293,293,407,30,33,34,37,38,39,40,46,48,49,51,52,53,58,59,60,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[271,272,122,273,274,275,135,136,137,276,277,278,138,279,280,148,149,281,282,283,164,284,285,286,287,288,289,290,291,181,182,183,184,185,186,187,188,292,292,293,293,202,203,204,205,294,295,296,297,298,299,206,207,208,300,209,301,210,302,303,304,211,305,306,307,308,309,216,310,311,217,312,313,314,315,316,317,318,319,320,218,321,322,323,324,325,219,326,327,231,232,234,235,236,237,28,328,329,29,330,238,331,332,333,334,335,254,336,337,258,259,260,76,78,262,263,264,265,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[36,41,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[292,292,293,293,416],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[36,37,40,41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests2.UsageTest.argumentsOrdered":229,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":358,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":430,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":226,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":201,"org.easymock.tests2.DelegateToTest.testReturnException":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":354,"org.easymock.tests.MockingTest.testPartialClassMocking":135,"org.easymock.tests.MockClassControlTest.testToString":183,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":473,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":315,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":221,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":18,"org.easymock.tests2.UsageTest.wrongArguments":224,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":494,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":120,"org.easymock.samples.ExampleTest.answerVsDelegate":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":272,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":453,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":234,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":248,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":22,"org.easymock.tests.UsageTest.moreThanOneArgument":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":376,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":400,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":466,"org.easymock.tests.UsageTest.argumentsOrdered":157,"org.easymock.tests.UsageVarargTest.varargIntAccepted":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":16,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":95,"org.easymock.tests.ReplayStateInvalidUsageTest.times":86,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests2.DependencyTest.testClassMocking":478,"org.easymock.tests2.AnswerTest.answer":256,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":215,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":469,"org.easymock.tests2.DelegateToTest.testDelegate":420,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":163,"org.easymock.tests.LimitationsTest.mockFinalMethod":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":153,"org.easymock.tests2.DependencyTest.testClassMockingSupport":479,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":461,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":213,"org.easymock.tests.UsageThrowableTest.throwError":2,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":81,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":446,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":507,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":327,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":98,"org.easymock.samples.PartialClassMockTest.testGetArea":202,"org.easymock.tests.MockingTest.testInterfaceMocking":451,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":82,"org.easymock.tests2.CompareToTest.testLessOrEqual":514,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":456,"org.easymock.tests2.UsageTest.niceToStrict":225,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":206,"org.easymock.tests2.MockBuilderTest.testCreateMock":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":368,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":444,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":118,"org.easymock.tests.UsageOverloadedMethodTest.overloading":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":325,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":387,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":189,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":346,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests.MockClassControlTest.testEquals":187,"org.easymock.tests2.EasyMockSupportClassTest.testAll":216,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":374,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":151,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":214,"org.easymock.tests.MockNameTest.defaultName":465,"org.easymock.tests2.UsageConstraintsTest.testMatches":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":401,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":79,"org.easymock.samples.ExampleTest.voteForRemovals":196,"org.easymock.tests.UsageVarargTest.allKinds":5,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":152,"org.easymock.samples.BasicClassMockTest.testPrintContent":204,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":128,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":413,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":4,"org.easymock.tests2.UsageConstraintsTest.greaterThan":51,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":331,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":99,"org.easymock.samples.ExampleTest.voteForRemoval":193,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":290,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":237,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":91,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":122,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":241,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":353,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":508,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":242,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":230,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":384,"org.easymock.tests2.UsageTest.moreThanOneArgument":408,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":23,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":302,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":147,"org.easymock.tests.GenericTest.testBridgedEquals":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":116,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":7,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":239,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":375,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":471,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":373,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":398,"org.easymock.tests.UsageCallCountTest.tooManyCalls":117,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":263,"org.easymock.tests.MockingTest.testNiceClassMocking":276,"org.easymock.tests.MockingTest.testClassMocking":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":112,"org.easymock.tests2.UsageConstraintsTest.testContains":46,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":295,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":260,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":403,"org.easymock.tests.MockTypeTest.fromEasyMockClass":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":377,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":247,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":143,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":171,"org.easymock.tests.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":338,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":498,"org.easymock.tests.MockClassControlTest.testHashCode":186,"org.easymock.tests2.EasyMockSupportTest.testVerify":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":318,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":24,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":32,"org.easymock.tests.UsageVarargTest.varargCharAccepted":142,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":283,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":409,"org.easymock.tests.DefaultClassInstantiatorTest.object":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":342,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":497,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":185,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":97,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":365,"org.easymock.tests.CapturesMatcherTest.test":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":392,"org.easymock.tests.ReplayStateInvalidCallsTest.times":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":343,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":104,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":219,"org.easymock.tests2.UsageTest.resumeIfFailure":411,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":356,"org.easymock.tests2.StubTest.stubWithReturnValue":407,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.tests2.SerializationTest.testAllMockedMethod":78,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":436,"org.easymock.samples.SupportTest.voteForRemovals":200,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":370,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":442,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":495,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":339,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":54,"org.easymock.tests2.DelegateToTest.testWrongClass":270,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":292,"org.easymock.tests.UsageStrictMockTest.range":378,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":369,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":208,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":119,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":457,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":146,"org.easymock.tests2.ThreadingTest.testThreadSafe":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":321,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":114,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":460,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":203,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":21,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests2.StubTest.stub":27,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":84,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":31,"org.easymock.tests2.SerializationTest.testClass":76,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":261,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":394,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":109,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.NameTest.nameForMocksControl":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests2.MockedExceptionTest.testMockedException":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":311,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":361,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":472,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":209,"org.easymock.tests.MockingTest.testNicePartialClassMocking":136,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":236,"org.easymock.tests2.CompareToTest.testCompareEqual":512,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":172,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":108,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":268,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":55,"org.easymock.tests.MockingTest.testTwoMocks":275,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":367,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":59,"org.easymock.samples.ExampleTest.removeNonExistingDocument":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":490,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":83,"org.easymock.tests.UsageStrictMockTest.differentMethods":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":285,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":348,"org.easymock.tests2.MockBuilderTest.testCreateMockString":211,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":181,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":312,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":337,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":218,"org.easymock.samples.ExampleTest.voteAgainstRemoval":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":238,"org.easymock.tests.LimitationsTest.privateConstructor":278,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":129,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":258,"org.easymock.tests2.UsageTest.defaultResetToNice":227,"org.easymock.samples.ExampleTest.voteAgainstRemovals":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.UsageVarargTest.differentLength":357,"org.easymock.tests2.CallbackTest.callback":412,"org.easymock.tests2.UsageConstraintsTest.equals":483,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":328,"org.easymock.tests.UsageTest.openCallCountByLastCall":360,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":20,"org.easymock.tests.UsageCallCountTest.tooFewCalls":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":121,"org.easymock.tests.UsageThrowableTest.throwCheckedException":126,"org.easymock.tests.MockingTest.testStrictClassMocking":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":264,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":266,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":417,"org.easymock.tests2.CompareToTest.testGreateOrEqual":513,"org.easymock.tests.ObjectMethodsTest.testHashCode":170,"org.easymock.tests2.NameTest.nameForNiceMock":476,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":107,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":212,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.samples.ExampleTest.addDocument":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":322,"org.easymock.tests2.DelegateToTest.testStubDelegate":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.AnswerTest.stubAnswer":416,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests.UsageVarargTest.varargLongAccepted":145,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":393,"org.easymock.tests.UsageExpectAndReturnTest.floatType":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":254,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":505,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageThrowableTest.noUpperLimit":123,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":52,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":334,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":347,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":284,"org.easymock.tests2.UsageConstraintsTest.testSame":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":381,"org.easymock.samples.SupportTest.addDocument":199,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":92,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":313,"org.easymock.tests.GenericTest.testPackageScope":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":504,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":90,"org.easymock.tests2.NameTest.nameForMock":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":388,"org.easymock.tests2.UsageStrictMockTest.differentMethods":415,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":382,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":372,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":397,"org.easymock.tests2.MockedExceptionTest.testRealException":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":433,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":89,"org.easymock.tests2.NameTest.nameForStrictMock":475,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":335,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":53,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":296,"org.easymock.tests2.UsageStrictMockTest.range":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":96,"org.easymock.tests2.UsageConstraintsTest.lessThan":60,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":240,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":317,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests.UsageRangeTest.combination":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":232,"org.easymock.tests.UsageTest.wrongArguments":155,"org.easymock.tests2.MockBuilderTest.testWithConstructor":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":314,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":344,"org.easymock.tests.UsageVarargTest.varargShortAccepted":144,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":115,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":110,"org.easymock.tests2.UsageConstraintsTest.cmpTo":45,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":496,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":100,"org.easymock.tests2.CompareToTest.testLessThan":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":410,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":80,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":297,"org.easymock.tests.UsageTest.unexpectedCallWithArray":154,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":106,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":390,"org.easymock.tests2.CaptureTest.testCapture":341,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":404,"org.easymock.tests.UsageStrictMockTest.testVerify":168,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":198,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests2.CompareToTest.testGreateThan":511,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":150,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":14,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":306,"org.easymock.tests.LimitationsTest.abstractClass":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":383,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":15,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":245}}]
