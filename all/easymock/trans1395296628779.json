[{"position":"org.easymock.internal.MockBuilder:178","failures":[0,1],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[3,4],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,37,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,6,7,8,9,10,11,12,13,14,15,81,82,83,84,85,86,4,87,16,17,88,89,90,18,19,91,92,93,94,95,96,97,98,5,20,21,22,23,99,100,101,102,103,104,24,25,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,0,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[37,38,43,266,49,53,267,268,269,270,271,272,70,273,274,71,275,276,277,278,279,280,281,282,283,72,284,285,286,287,288,73,289,290,119,291,292,293,294,295,296],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,37,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,6,7,8,9,10,11,12,13,15,81,82,83,84,85,86,4,87,16,17,88,90,18,19,91,92,93,94,95,96,97,98,5,20,21,23,99,102,103,104,24,25,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,0,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[119,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[297],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[298,299,300],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[106,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[37,38,43,266,49,53,267,268,269,270,271,272,70,273,274,71,275,276,277,278,279,280,281,282,283,72,284,285,286,287,288,73,289,290,119,291,292,293,294,295,296],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[29,31,32,33,35,36,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,6,7,8,9,10,11,12,13,15,81,82,83,84,85,86,4,87,16,17,88,90,18,19,91,96,20,21,23,99,102,103,104,24,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,128,129,0,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,152,153,154,156,158,301,302,303,304,305,162,163,164,165,166,167,168,169,170,181,182,183,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,217,220,222,223,224,225,226,227,250,251,252,253,254,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[306,307,308,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[309,29,30,31,32,310,33,34,311,312,313,314,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,315,316,55,317,56,57,318,319,320,321,322,58,59,60,61,323,62,324,63,64,65,325,326,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,6,7,8,9,10,11,12,13,15,81,82,83,84,85,86,4,87,16,17,88,89,90,18,19,91,92,93,95,96,97,5,20,21,22,23,99,100,101,102,103,104,24,25,105,106,107,108,109,110,111,112,113,114,115,116,117,118,327,119,120,328,121,124,125,126,329,127,128,330,129,0,331,130,332,131,132,133,134,135,136,333,137,334,138,139,140,141,142,143,335,336,337,338,144,146,147,151,339,340,341,342,343,344,153,154,155,156,157,158,345,346,161,162,347,163,164,348,165,166,349,350,167,168,351,352,169,170,171,172,173,174,175,176,177,178,179,180,353,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,217,218,354,355,356,357,358,359,360,361,362,363,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,252,253,254,255,364,365,366,367,368,369,257,258,259,260,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[86],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[309,29,30,31,32,310,33,34,311,312,313,314,35,36,41,43,44,45,46,47,48,49,50,51,52,53,54,316,55,317,56,57,318,58,59,60,323,62,324,325,326,67,70,71,72,73,77,78,7,9,12,13,15,81,83,86,16,17,88,89,90,18,95,97,5,20,21,22,23,100,101,102,103,104,24,106,107,108,109,110,111,112,113,115,116,117,118,327,119,120,328,121,124,128,129,0,131,132,133,134,135,136,137,139,141,142,144,151,339,155,157,158,346,161,162,347,163,164,348,350,351,352,169,170,177,178,179,180,181,182,183,184,185,194,195,197,202,207,354,355,356,357,358,360,361,362,363,219,220,221,222,223,224,225,226,227,231,232,234,239,244,252,253,254,364,365,366,368,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[95,97,121,178,179],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[56,323,325,326,155,157,158,161,163,349,350,351,352,370,353],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[6,7,9,11,12,14,16,18,20,22,24],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[269],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[309,29,30,31,32,310,33,34,311,312,313,314,35,39,40,41,42,44,45,46,47,50,51,54,316,55,317,56,57,318,58,59,60,61,62,324,63,64,325,66,67,68,69,70,74,75,76,77,78,79,80,6,7,8,9,10,11,12,13,15,81,82,83,84,85,86,4,87,16,17,88,89,90,18,19,91,92,93,95,96,97,5,20,21,22,23,99,100,101,102,103,104,24,25,105,106,107,108,109,110,111,112,113,115,116,117,118,327,120,328,121,124,125,126,131,132,133,134,135,136,137,141,142,143,144,146,147,151,339,371,153,154,155,156,157,158,346,162,347,163,164,348,165,166,167,168,351,169,170,171,172,173,174,175,176,177,372,373,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,217,218,354,355,356,357,358,360,361,362,363,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,255,364,365,366,368,369,374,375,257,258,259,260,261],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[44,54,55,56,57,61,323,325,326,376,377,378,155,156,157,158,161,162,163,164,166,349,350,351,352,379,380,381,308,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[266,382,383,384,385,386,293],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[55,56,57,61,323,325,326,387,388,389,390,155,156,157,158,161,162,163,164,166,350,351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[391],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[68,160,393],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[43,266,119,382,383,384,394,395,293,294],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[37,37,38,38,55,79,80,8,9,10,11,82,84,85,4,87,18,19,91,25,153,154,397,398,399,400,401,162,182,183,186,187,188,189,190,191,217,228,257,258,259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.UsageTest.argumentsOrdered":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":324,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":309,"org.easymock.tests2.DelegateToTest.testReturnException":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":172,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":278,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageTest.wrongArguments":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":337,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":375,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageTest.moreThanOneArgument":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":212,"org.easymock.tests.UsageTest.argumentsOrdered":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":44,"org.easymock.tests2.AnswerTest.answer":121,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests2.UsageTest.strictResetToDefault":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":308,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":393,"org.easymock.tests.UsageThrowableTest.throwError":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":261,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":290,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":250,"org.easymock.tests2.UsageTest.niceToStrict":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":28,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":128,"org.easymock.tests2.MockBuilderTest.testCreateMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":288,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":299,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.MockClassControlTest.testEquals":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":342,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":260,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests.UsageVarargTest.allKinds":219,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":226,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":395,"org.easymock.tests2.UsageConstraintsTest.greaterThan":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":333,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":177,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":106,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests2.CaptureTest.testCapture2_2446744":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":363,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":368,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":89,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":263,"org.easymock.tests.UsageCallCountTest.tooManyCalls":369,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests.MockTypeTest.fromEasyMockClass":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":93,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":345,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":383,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":373,"org.easymock.tests.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":179,"org.easymock.tests2.EasyMockSupportTest.testVerify":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":281,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageVarargTest.varargCharAccepted":357,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":305,"org.easymock.tests2.UsageTest.openCallCountByLastCall":63,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":26,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":148,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":73,"org.easymock.tests2.UsageTest.resumeIfFailure":66,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":174,"org.easymock.tests2.StubTest.stubWithReturnValue":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":328,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":159,"org.easymock.samples.SupportTest.voteForRemovals":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":160,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":122,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":17,"org.easymock.tests2.DelegateToTest.testWrongClass":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":154,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":376,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":270,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":336,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":251,"org.easymock.tests.UsageUnorderedTest.message":155,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":362,"org.easymock.tests2.ThreadingTest.testThreadSafe":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":366,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":380,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests2.StubTest.stub":68,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":173,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":298,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":317,"org.easymock.tests2.SerializationTest.testClass":119,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":170,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests2.NameTest.nameForMocksControl":390,"org.easymock.tests2.MockedExceptionTest.testMockedException":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":274,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":0,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":88,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":325,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":19,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests2.MockBuilderTest.testCreateMockString":332,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":275,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":269,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":227,"org.easymock.tests2.UsageTest.defaultResetToNice":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests.UsageVarargTest.differentLength":359,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":184,"org.easymock.tests.UsageCallCountTest.tooFewCalls":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":338,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":224,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":218,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":51,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":385,"org.easymock.tests2.NameTest.nameForNiceMock":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":384,"org.easymock.samples.ExampleTest.addDocument":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":285,"org.easymock.tests2.DelegateToTest.testStubDelegate":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests.UsageVarargTest.varargLongAccepted":361,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":43,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":38,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":87,"org.easymock.tests.UsageThrowableTest.noUpperLimit":221,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.SerializationTest.test":120,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":300,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.samples.SupportTest.addDocument":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":276,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.NameTest.nameForMock":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":372,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":147,"org.easymock.tests2.MockedExceptionTest.testRealException":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":183,"org.easymock.tests2.NameTest.nameForStrictMock":388,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":27,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":127,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":280,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":132,"org.easymock.tests.UsageTest.wrongArguments":350,"org.easymock.tests2.MockBuilderTest.testWithConstructor":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests.UsageVarargTest.varargShortAccepted":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":367,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":123,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.CaptureTest.testCaptureFromStub":25,"org.easymock.tests.UsageTest.unexpectedCallWithArray":349,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":365,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":347,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests2.ConstraintsToStringTest.containsToString":297,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":311,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":346,"org.easymock.tests2.CompareToTest.testGreateThan":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":355}}]
