[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"failures":[13,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[47],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,21,22,69,70,71,72,73,74,75,76,77,78,79,80,41,42,43,44,45,81,82,46,83,84,85,86,87,88,89,27,8,90,9,91,92,93,94,95,96,97,32,33,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[121,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[123,124,48,125,49,126,50,51,127,52,128,129,130,131,53,54,56,57,58,132,59,133,60,61,62,134,135,136,137,67,69,70,71,72,73,74,75,76,78,79,138,139,140,140,141,141,80,88,142,89,143,144,145,94,146,147,118,119,120],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[148,149,150,151,152,140,141],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[153,154,155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[13,158,159,16,37,160,161,162,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[163,164,165,137,166,167,168,169,170,171,172,173,174],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[68,21,22,176,121,97,32,33,177,122,157,178,179,36,180,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,12,13,158,14,159,15,16,37,200,201,202,17,6,203,18,204,205,19,161,206,207,208,162,20,209,123,49,126,50,51,52,129,130,210,131,53,54,55,56,57,58,59,133,61,211,212,213,214,215,216,217,63,218,219,64,220,221,38,222,39,223,224,225,226,227,228,229,40,230,231,232,233,65,66,234,163,164,165,137,166,67,235,236,68,237,21,22,238,69,70,71,72,239,240,241,176,242,243,244,23,24,245,246,247,7,248,249,250,154,155,251,252,253,254,73,74,75,76,77,78,79,138,139,140,140,141,141,255,80,256,257,41,42,258,43,44,259,45,260,261,25,262,263,264,265,266,267,81,82,46,83,84,268,26,269,270,271,272,273,274,275,276,277,278,88,142,27,8,90,9,279,167,91,280,168,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,143,303,304,28,305,306,307,92,93,308,309,310,311,312,313,94,121,314,315,316,317,318,319,320,4,97,321,32,33,322,323,146,324,179,5,325,34,35,326,327,328,169,170,171,172,173,174,329,330,331,332,98,99,100,101,102,103,333,334,104,105,335,106,107,108,336,109,110,111,112,113,337,36,180,181,114,115,116,117,338,118,119,120,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[216,217],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[340,341,342,343,344,345,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[123],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"value"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[200,203,209,349],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[350,64,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[182,183,184,185,159,15,201,202,162,20,221,68,21,22,240,176,242,23,24,246,247,248,249,258,262,26,269,278,88,305,307,352,29,30,121,4,97,32,33,324,179,325,34,35,326,327,328,36,180,181],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,12,13,158,14,159,15,16,37,200,160,201,202,17,6,203,18,204,205,19,161,206,207,353,208,162,20,209,123,210,55,211,212,213,214,215,216,217,63,218,350,219,64,220,175,221,38,222,39,223,224,225,226,227,228,229,40,230,231,232,65,66,234,163,164,165,137,166,235,236,68,237,21,22,238,239,354,240,241,176,242,243,244,23,24,245,246,247,7,248,249,153,355,250,154,155,251,356,252,253,254,73,77,255,256,257,41,42,258,43,44,259,45,260,261,25,262,263,264,265,266,267,81,82,46,83,84,85,86,87,268,26,269,270,271,272,273,357,274,275,276,277,278,88,27,8,90,9,279,167,91,280,168,281,282,358,359,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,28,305,306,307,360,361,352,362,363,364,365,92,93,366,29,30,367,368,369,95,96,370,371,372,373,374,121,314,315,316,317,318,319,320,4,97,321,32,33,322,323,324,179,5,325,34,35,326,327,328,375,376,377,169,170,171,172,173,174,329,330,331,332,98,99,100,101,102,103,333,334,104,105,335,106,107,108,336,109,110,111,112,113,378,337,36,180,181,114,115,116,117,338,379,380,381,382,383,384,339,385],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[340,341,342,343,344,345,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[156],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[340,386,67,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":158,"org.easymock.tests2.UsageTest.argumentsOrdered":247,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":324,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":244,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":170,"org.easymock.tests.MockingTest.testPartialClassMocking":118,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":283,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":177,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":341,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":91,"org.easymock.tests2.UsageTest.wrongArguments":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":331,"org.easymock.samples.ExampleTest.answerVsDelegate":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":145,"org.easymock.tests2.UsageConstraintsTest.testNull":159,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":195,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":282,"org.easymock.tests.UsageTest.moreThanOneArgument":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":302,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":116,"org.easymock.tests.UsageTest.argumentsOrdered":327,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":84,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":214,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.DelegateToTest.testDelegate":221,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":378,"org.easymock.tests2.CaptureTest.testCapture1_2446744":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":212,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":338,"org.easymock.samples.PartialClassMockTest.testGetArea":80,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":82,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":95,"org.easymock.tests2.UsageTest.niceToStrict":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":284,"org.easymock.tests2.ThreadingTest.testChangeDefault":348,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageOverloadedMethodTest.overloading":268,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":203,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":87,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":47,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":6,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests2.EasyMockSupportClassTest.testAll":69,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":300,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":134,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":213,"org.easymock.tests2.CaptureTest.testCaptureAll":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":316,"org.easymock.tests.MockNameTest.defaultName":379,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":117,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.samples.BasicClassMockTest.testPrintContent":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":317,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":174,"org.easymock.tests2.UsageConstraintsTest.greaterThan":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":8,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.samples.ExampleTest.voteForRemoval":43,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":132,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":188,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":169,"org.easymock.tests2.CaptureTest.testCaptureFirst":232,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":189,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":334,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests2.CaptureTest.testCapture2_2446744":231,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":52,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":361,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":314,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":301,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":114,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":352,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":74,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":124,"org.easymock.tests2.UsageConstraintsTest.testContains":17,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":26,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":194,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":342,"org.easymock.tests.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":279,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":346,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":198,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":211,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":233,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests2.UsageTest.openCallCountByLastCall":23,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":372,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests2.UsageTest.resumeIfFailure":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":172,"org.easymock.tests2.StubTest.stubWithReturnValue":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":131,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":370,"org.easymock.samples.SupportTest.voteForRemovals":41,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":295,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":371,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.UsageExpectAndThrowTest.object":293,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.samples.ConstructorCalledMockTest.testTax":140,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":330,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":96,"org.easymock.tests2.CaptureTest.testCaptureNone":228,"org.easymock.tests.UsageUnorderedTest.message":121,"org.easymock.tests.UsageVerifyTest.twoReturns":181,"org.easymock.tests.UsageVarargTest.varargByteAccepted":276,"org.easymock.tests2.ThreadingTest.testThreadSafe":215,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":307,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":138,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":359,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":281,"org.easymock.tests2.UsageConstraintsTest.any":201,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":10,"org.easymock.tests2.StubTest.stub":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":171,"org.easymock.tests.UsageExpectAndThrowTest.longType":286,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":311,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.tests2.SerializationTest.testClass":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests.LimitationsTest.mockNativeMethod":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":113,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":89,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":136,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests2.NameTest.nameForMocksControl":185,"org.easymock.tests2.MockedExceptionTest.testMockedException":165,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":287,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":58,"org.easymock.tests2.CaptureTest.testCaptureLast":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":291,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":20,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":347,"org.easymock.tests.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":310,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":217,"org.easymock.tests2.MockBuilderTest.testCreateMockString":129,"org.easymock.tests.UsageExpectAndThrowTest.floatType":285,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":204,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests.UsageVerifyTest.twoThrows":180,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":71,"org.easymock.samples.ExampleTest.voteAgainstRemoval":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":369,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests2.UsageConstraintsTest.testNotNull":162,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.UsageTest.defaultResetToNice":245,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":109,"org.easymock.tests.UsageVarargTest.differentLength":357,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":152,"org.easymock.tests.UsageTest.openCallCountByLastCall":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":168,"org.easymock.tests.UsageCallCountTest.tooFewCalls":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":332,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":77,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":155,"org.easymock.tests2.CompareToTest.testGreateOrEqual":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":344,"org.easymock.tests2.NameTest.nameForNiceMock":184,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests2.DependencyTest.testInterfaceMocking":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":343,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testStubDelegate":64,"org.easymock.tests2.AnswerTest.stubAnswer":154,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":275,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":112,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":141,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageThrowableTest.noUpperLimit":25,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":19,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":12,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.samples.SupportTest.addDocument":257,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":367,"org.easymock.tests2.NameTest.nameForMock":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":151,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":9,"org.easymock.tests2.MockedExceptionTest.testRealException":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":313,"org.easymock.tests2.NameTest.nameForStrictMock":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":57,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":161,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":122,"org.easymock.tests.ErrorMessageTest.testGetters":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":187,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageTest.wrongArguments":325,"org.easymock.tests2.MockBuilderTest.testWithConstructor":148,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":31,"org.easymock.tests.UsageVarargTest.varargShortAccepted":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":360,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests2.CaptureTest.testCaptureFromStub":230,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":308,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":125,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":306,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":336,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests.UsageStrictMockTest.testVerify":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":256,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":315,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":226,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":46,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":83,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270}}]
