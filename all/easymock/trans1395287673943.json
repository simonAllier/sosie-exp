[{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,2,3,4,1,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[0,12,13,14,15,16,2,17,3,18,19,20,21,22,4,23,24,25,26,27,28,29,30,31,32,33,34,1,35,36,37,38,39,40,5,41,42,43,44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[0,13,14,84,21,4,23,24,25,26,28,29,85,86,31,32,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,13,21,4,23,24,25,26,28,29,31,44,45,46],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[87,88,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.Range:52","failures":[0,12,13,14,105,106,107,108,109,110,111,112,22,23,113,114,24,25,115,116,117,118,26,27,28,29,119,120,121,122,123,30,31,32,99,124,125,126,104,127,128,129,43,44,130,131,45,46,132,133],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[52,53,59,60,134,135,136,137,138,139,62,140,141,142,143,144,145,146,147,148,63,149,150,151,152,153,64,154,155,65,156,157,158,67,70,75,78,159,81,160,161],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[47,48,50,51,54,56,57,58,62,63,64,65,66,68,69,72,74,76,80,82],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[162,58,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[163,164,119,165,166,167,133,168,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[170,65,171,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[173,33,174],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[98,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[24,176,45],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:63","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,110,199,111,200,201,202,203,204,205,206,207,208,209,210,211,112,114,212,28,213,129,131,83,214,215,216],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[201,202,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[220,221],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[222,223,224,225,47,48,49,226,227,50,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,220,245,246,247,221,248,249,51,250,251,52,52,53,53,252,253,254,173,255,54,256,55,257,162,56,57,258,259,58,59,60,260,261,134,135,136,137,138,139,62,140,141,142,143,144,145,146,147,148,63,149,150,151,152,153,64,154,155,65,172,262,263,264,265,156,266,267,157,66,68,69,71,72,73,74,76,78,79,80,82,83,214,215],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MocksControl:131","failures":[268],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[270,271,272],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[49,240,241,242,51,52,53,54,56,57,265,156,267,157,83],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests2.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":174,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":7,"org.easymock.tests2.SerializationTest.testAllMockedMethod":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":118,"org.easymock.tests.MockingTest.testPartialClassMocking":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":49,"org.easymock.tests.MockClassControlTest.testToString":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":170,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":179,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":218,"org.easymock.tests.UsageExpectAndThrowTest.object":189,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ExampleTest.answerVsDelegate":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":198,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":134,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":85,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":149,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":108,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":250,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":95,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":42,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":73,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.UsageExpectAndThrowTest.longType":182,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":247,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":37,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests.LimitationsTest.mockNativeMethod":224,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":102,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":162,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":217,"org.easymock.tests2.NameTest.nameForMocksControl":123,"org.easymock.tests2.MockedExceptionTest.testMockedException":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":139,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests2.DelegateToTest.testDelegate":128,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":183,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":76,"org.easymock.tests.MockingTest.testNicePartialClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":255,"org.easymock.tests.LimitationsTest.mockFinalMethod":225,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":16,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests.MockingTest.testTwoMocks":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":15,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":158,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":187,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.ConstraintsToStringTest.andToString":40,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":86,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":140,"org.easymock.tests.UsageExpectAndThrowTest.floatType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests.ResultTest.createReturnResultToString":93,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":61,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.PartialClassMockTest.testGetArea":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":180,"org.easymock.tests.LimitationsTest.privateConstructor":223,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":161,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":83,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":272,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":151,"org.easymock.tests2.CallbackTest.callback":165,"org.easymock.tests2.UsageConstraintsTest.equals":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":55,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":18,"org.easymock.tests.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":177,"org.easymock.tests.UsageCallCountTest.tooFewCalls":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":266,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":269,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests.MockClassControlTest.testEquals":235,"org.easymock.tests2.EasyMockSupportClassTest.testAll":137,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests.MockingTest.testStrictClassMocking":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":196,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":205,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":169,"org.easymock.tests2.NameTest.nameForNiceMock":122,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.samples.BasicClassMockTest.testPrintContent":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":154,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":258,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":248,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests2.ConstraintsToStringTest.orToString":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":249,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":262,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests2.SerializationTest.test":171,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":220,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.testSame":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":141,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests2.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.GenericTest.testBridgedEquals":228,"org.easymock.tests2.NameTest.nameForMock":120,"org.easymock.tests.UsageExpectAndReturnTest.longType":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":257,"org.easymock.tests.UsageCallCountTest.tooManyCalls":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":17,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":152,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":19,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":265,"org.easymock.tests.MockingTest.testNiceClassMocking":243,"org.easymock.tests.MockingTest.testClassMocking":238,"org.easymock.tests2.NameTest.nameForStrictMock":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":215,"org.easymock.tests2.UsageConstraintsTest.testFind":175,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":110,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":271,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":263,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests2.CaptureTest.testCaptureRightOne":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":145,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":20,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":116,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":67,"org.easymock.tests.MockClassControlTest.testHashCode":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":146,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":36,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":106,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":164,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":84,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":219,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":270,"org.easymock.tests.DefaultClassInstantiatorTest.object":244,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":186,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":159,"org.easymock.tests2.CaptureTest.testCapture":91,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":185,"org.easymock.tests2.ConstraintsToStringTest.notToString":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":9,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":38,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests.LimitationsTest.abstractClass":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47}}]
