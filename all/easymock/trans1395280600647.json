[{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[29,30,31,32,33],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[34,35,26,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[43,44],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[45,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,8,97,98,99,100,101,102,103,104,105,106,43,107,9,108,109,34,110,111,10,112,113,114,115,116,117,118,119,120,121,122,123,124,11,125,126,127,128,129,130,131,132,133,134,135,136,0,137,1,2,3,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,47,48,49,50,51,156,157,158,159,160,29,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,7,183,184,185,186,187,188,189,190,191,26,192,193,36,27,194,195,196,196,197,197,198,199,200,201,202,203,4,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,52,247,248,53,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,39,40,41,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,30,327,328,329,330,331,332,333,334,335,336,337,338,339,55,56,57,58,59,60,61,62,63,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,32,33,368,369,370,371,372,373,374,375,376,377,378,6,379,380,381,382],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[383,384,385,386,324,333],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[113,114,115,387],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[13,14,19,20,21,22,23,24,26,27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[113,114,115,387],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[383,384,385,386,324,333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[388,139,149,150,389],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[64,65,66,67,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,8,97,98,99,100,101,102,104,105,106,43,107,108,109,113,114,115,116,118,119,120,121,123,124,125,127,128,129,130,131,132,135,0,137,3,138,139,140,141,143,144,145,146,147,148,151,153,155,47,48,49,50,51,156,158,159,161,162,169,170,172,173,176,179,181,183,184,185,187,188,189,191,26,36,27,203,4,204,205,206,207,209,211,212,218,219,220,221,222,226,227,228,229,230,231,232,234,235,236,237,238,239,240,242,243,244,245,246,247,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,279,280,281,282,283,284,288,289,307,317,318,319,320,321,323,325,327,328,329,330,332,58,59,60,61,62,63,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,390,367,32,33,368,369,370,371,372,374,375,376,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[113,114,115,387],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[181,7,185,189,4,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:336","sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[391,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,392,85,86,87,88,89,90,91,92,93,94,95,96,8,97,98,99,100,101,102,103,104,105,106,43,107,19,9,393,20,394,108,109,34,21,110,395,396,111,10,23,112,113,114,115,116,117,118,119,120,121,122,397,123,398,399,124,11,125,126,400,12,127,128,129,130,131,132,133,134,135,136,0,137,1,2,3,138,139,140,141,142,143,144,145,146,147,148,149,150,151,35,401,402,403,404,405,406,152,407,408,153,154,155,47,48,49,50,51,156,24,409,157,158,159,160,29,161,162,410,411,412,163,413,414,164,415,416,417,418,419,420,421,422,423,165,424,425,426,427,428,166,429,430,431,432,433,434,435,167,436,437,438,439,440,441,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,7,183,184,185,442,443,444,445,446,186,447,448,449,450,451,452,187,453,188,189,190,191,26,192,454,193,36,27,28,194,195,196,197,198,199,200,201,202,203,4,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,455,223,456,224,225,226,227,228,229,230,457,231,232,233,234,235,236,237,238,45,239,240,241,46,37,242,243,244,245,246,52,247,248,53,249,250,458,251,252,253,459,38,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,39,40,41,276,277,278,279,280,281,282,283,284,285,286,287,460,461,462,463,464,42,465,466,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,467,468,307,469,308,309,310,470,471,5,472,473,474,475,54,476,477,478,479,480,481,482,483,311,484,485,486,487,488,312,489,313,314,315,316,317,318,319,320,321,322,323,324,325,326,30,327,328,329,330,331,332,333,334,335,336,337,338,339,55,56,57,58,59,60,61,62,63,340,341,342,343,490,344,491,492,493,494,495,496,497,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,390,367,32,33,368,369,370,371,372,498,499,500,373,374,375,501,376,502,503,504,377,378,6,379,380,381,382],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[107,9,393,394,108,109,34,110,396,111,10,112,113,115,116,117,119,120,121,122,123,398,399,124,11,125,126,400,12,35,401,402,404,407,408,48,49,50,156,24,410,411,412,163,413,414,164,415,416,417,418,419,420,421,422,423,165,424,425,426,427,428,166,429,430,190,191,26,192,36,27,194,195,196,196,197,197,199,45,239,240,241,46,274,275,39,40,41,276,277,278,460,42,467,468,307,469,330,344,491,492,493,494,495,497,499,500,373,374,375,376,504],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[107,505,9,393,394,108,109,34,110,396,111,10,506,112,113,115,116,117,119,120,121,122,123,398,399,124,11,125,126,400,12,35,404,507,508,48,49,50,156,24,410,411,412,163,413,414,164,415,416,417,418,419,420,421,422,423,165,424,425,426,427,428,166,429,430,190,191,26,192,36,27,194,195,196,196,197,197,199,45,239,240,241,46,38,274,275,39,40,41,276,277,278,460,42,467,468,307,469,330,344,491,492,493,494,495,497,499,500,373,374,375,376,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":478,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":198,"org.easymock.tests2.DelegateToTest.testReturnException":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":59,"org.easymock.tests.MockingTest.testPartialClassMocking":374,"org.easymock.tests.MockClassControlTest.testToString":39,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":391,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests2.UsageTest.wrongArguments":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":247,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":342,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":42,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":503,"org.easymock.tests2.UsageConstraintsTest.testNull":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":77,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":278,"org.easymock.tests2.CaptureTest.testPrimitive":141,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":273,"org.easymock.tests.UsageTest.moreThanOneArgument":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":370,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":290,"org.easymock.tests.UsageTest.argumentsOrdered":338,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":218,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":222,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests.ReplayStateInvalidUsageTest.times":303,"org.easymock.tests2.DependencyTest.testClassMocking":407,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":130,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":462,"org.easymock.tests2.CaptureTest.testAnd":138,"org.easymock.tests2.UsageTest.strictResetToDefault":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":72,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests2.DelegateToTest.testDelegate":3,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":269,"org.easymock.tests.LimitationsTest.mockFinalMethod":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":321,"org.easymock.tests2.DependencyTest.testClassMockingSupport":408,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":142,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":128,"org.easymock.tests.UsageThrowableTest.throwError":210,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":297,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":372,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":430,"org.easymock.samples.PartialClassMockTest.testGetArea":199,"org.easymock.tests.MockingTest.testInterfaceMocking":501,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":219,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":419,"org.easymock.tests2.UsageTest.niceToStrict":172,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":108,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":426,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":263,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":383,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":16,"org.easymock.tests.UsageOverloadedMethodTest.overloading":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":379,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":147,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":457,"org.easymock.tests2.EasyMockSupportClassTest.testAll":163,"org.easymock.tests.MockClassControlTest.testEquals":277,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":271,"org.easymock.tests2.CaptureTest.testCaptureAll":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":319,"org.easymock.tests.MockNameTest.defaultName":498,"org.easymock.tests2.UsageConstraintsTest.testMatches":8,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":371,"org.easymock.samples.ExampleTest.voteForRemovals":207,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":367,"org.easymock.samples.BasicClassMockTest.testPrintContent":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":320,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":216,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":63,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":496,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":126,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":497,"org.easymock.samples.ExampleTest.voteForRemoval":204,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":400,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":122,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":168,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":330,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":70,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":58,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":71,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":352,"org.easymock.tests2.UsageTest.moreThanOneArgument":170,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":485,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":46,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":286,"org.easymock.tests.UsageExpectAndReturnTest.longType":348,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":317,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":506,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":272,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":368,"org.easymock.tests.UsageCallCountTest.tooManyCalls":287,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":215,"org.easymock.tests.MockingTest.testNiceClassMocking":504,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":191,"org.easymock.tests.MockingTest.testClassMocking":500,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":505,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":280,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":85,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":227,"org.easymock.tests.MockTypeTest.fromEasyMockClass":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":188,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests.UsageExpectAndReturnTest.object":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":76,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":232,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":253,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":18,"org.easymock.tests.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":6,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":443,"org.easymock.tests.MockClassControlTest.testHashCode":276,"org.easymock.tests2.EasyMockSupportTest.testVerify":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":421,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":152,"org.easymock.tests.UsageVarargTest.varargCharAccepted":231,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":490,"org.easymock.tests2.CaptureTest.testCaptureMultiple":388,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":489,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":313,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":442,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":11,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":260,"org.easymock.tests.CapturesMatcherTest.test":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":40,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":61,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":354,"org.easymock.tests2.SerializationTest.testAllMockedMethod":115,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":311,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":384,"org.easymock.samples.SupportTest.voteForRemovals":202,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":312,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":182,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":456,"org.easymock.tests.UsageExpectAndThrowTest.object":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DelegateToTest.testWrongClass":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.tests.UsageStrictMockTest.range":30,"org.easymock.samples.ConstructorCalledMockTest.testTax":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":190,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":410,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":305,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":341,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":385,"org.easymock.tests2.CaptureTest.testCaptureNone":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":310,"org.easymock.tests.UsageUnorderedTest.message":316,"org.easymock.tests.UsageVerifyTest.twoReturns":33,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":424,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":284,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":194,"org.easymock.tests2.CaptureTest.testCapture_2617107":140,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests2.StubTest.stub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":60,"org.easymock.tests.UsageExpectAndThrowTest.longType":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":494,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":301,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.SerializationTest.testClass":113,"org.easymock.tests.LimitationsTest.mockNativeMethod":307,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":414,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":453,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.CaptureTest.testCaptureLast":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":366,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":262,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":299,"org.easymock.tests.UsageStrictMockTest.differentMethods":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":444,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":492,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":112,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":415,"org.easymock.tests.UsageExpectAndThrowTest.floatType":256,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":183,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":409,"org.easymock.tests.UsageVerifyTest.twoThrows":32,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":308,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":125,"org.easymock.tests.LimitationsTest.privateConstructor":468,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":14,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":217,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.UsageVarargTest.differentLength":233,"org.easymock.tests2.CallbackTest.callback":189,"org.easymock.tests2.UsageConstraintsTest.equals":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":398,"org.easymock.tests.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":343,"org.easymock.tests.UsageThrowableTest.throwCheckedException":214,"org.easymock.tests.MockingTest.testStrictClassMocking":499,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":193,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":185,"org.easymock.tests.ObjectMethodsTest.testHashCode":252,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.samples.ExampleTest.addDocument":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.AnswerTest.stubAnswer":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":325,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":395,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.floatType":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":156,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.UsageThrowableTest.noUpperLimit":211,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":35,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":143,"org.easymock.tests2.SerializationTest.test":114,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":491,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":346,"org.easymock.samples.SupportTest.addDocument":201,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":454,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":416,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":502,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":357,"org.easymock.tests2.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":481,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":306,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":493,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":43,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":507,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":420,"org.easymock.tests2.CaptureTest.testCaptureRightOne":148,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.UsageTest.wrongArguments":334,"org.easymock.tests2.MockBuilderTest.testWithConstructor":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":417,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":358,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":495,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":285,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":7,"org.easymock.tests2.CompareToTest.testLessThan":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":296,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":283,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":359,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":209,"org.easymock.tests.UsageStrictMockTest.testVerify":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":200,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":318,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":144,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":220,"org.easymock.tests.LimitationsTest.abstractClass":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":221,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":74,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229}}]
