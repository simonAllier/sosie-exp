[{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[21,22,23,24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1065","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,36,74,37,75,76,38,39,77,78,79,80,81,82,83,84,85,86,87,88,2,89,3,4,90,91,92,93,94,95,5,6,7,8,9,10,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,11,12,13,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,14,164,165,0,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,40,41,42,43,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,15,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,44,45,249,46,47,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,26,27,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,51,52,298,299,300,301,302,53,54,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,32,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,16,17,18,19,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,55,56,57,58,1,425,426,427,428,429,430,20,431,432,59,433,60,61,434,435,436,21,437,438,439,440,441,442,22,443,444,445,446,447,33,448,449,450,451,452,453,454,62,455,456,457,458,459,460,461,462,463,464,465,466,23,467,24,468,469,470,471,472,473,474,25,475,476,34,35,63,477],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[73,36,74,37,75,76,38,39,77,78,79,80,82,83,85,86,87,88,2,89,3,4,90,91,92,5,6,7,8,9,10,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,152,153,182,40,41,42,43,184,185,186,187,188,189,190,192,193,197,198,200,216,15,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,44,45,249,46,47,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,280,281,282,26,27,283,284,285,286,287,288,290,291,292,293,294,295,296,297,51,52,298,299,300,301,53,54,304,313,315,316,319,320,321,322,323,324,325,326,327,328,330,331,332,333,336,340,349,359,362,372,378,386,397,400,401,402,403],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[73,75,76,77,40,42,45,296,300,301,304,397,59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[256,478,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[64,65,66,67,68,69,70,71,73,36,74,37,38,39,77,84,92,98,99,100,105,108,109,110,123,126,127,148,150,151,154,155,156,40,41,42,43,221,247,44,45,249,46,47,250,296,51,52,298,299,53,54,303,304,309,310,311,315,316,318,319,320,322,323,326,327,329,338,341,343,349,350,386,387,411,413,415,416,418,419,423,55,56,57,58,431,59,433,60,61,434,21,450],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[480,481,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[73,76,4,90,5,6,7,8,9,10,107,193,15,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,261,265,266,296,301,16,17,18,19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[64,483,484,65,66,67,68,69,70,71,72,73,36,74,37,75,76,38,39,77,78,79,80,81,82,83,84,85,86,87,88,2,89,3,4,90,91,92,93,94,95,5,6,7,8,9,10,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,11,12,13,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,14,164,165,0,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,40,41,42,43,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,15,217,218,219,220,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,44,45,249,46,47,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,26,27,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,51,52,298,299,300,301,302,53,54,303,304,507,508,509,510,511,512,305,513,514,306,307,308,309,310,311,312,313,314,315,316,515,317,318,319,320,321,322,323,324,516,325,326,327,517,328,329,330,331,332,333,334,335,336,32,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,518,403,404,405,519,406,407,408,409,16,17,18,19,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,55,56,57,58,1,425,426,427,428,429,430,20,431,432,59,433,60,61,434,435,436,21,437,438,439,440,441,442,22,443,444,445,446,447,33,448,449,450,451,452,453,454,62,455,456,457,458,459,460,461,462,463,464,465,466,23,467,24,468,469,470,471,472,473,474,25,475,476,34,35,63,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[401,402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[520],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[521,522,523,524],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":437,"org.easymock.tests2.UsageTest.argumentsOrdered":54,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":299,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testReturnException":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":197,"org.easymock.tests.MockClassControlTest.testToString":98,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":362,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":48,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":463,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":506,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":443,"org.easymock.tests2.UsageTest.wrongArguments":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":89,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":219,"org.easymock.samples.ExampleTest.answerVsDelegate":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":67,"org.easymock.tests2.UsageConstraintsTest.testNull":440,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":202,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":331,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":419,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":103,"org.easymock.tests2.CaptureTest.testPrimitive":468,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":91,"org.easymock.tests.UsageTest.moreThanOneArgument":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":222,"org.easymock.tests.UsageVarargTest.varargIntAccepted":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":309,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":514,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":490,"org.easymock.tests.ReplayStateInvalidUsageTest.times":212,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":349,"org.easymock.tests2.DependencyTest.testClassMocking":460,"org.easymock.tests2.AnswerTest.answer":397,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":396,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":484,"org.easymock.tests2.CaptureTest.testAnd":23,"org.easymock.tests2.UsageTest.strictResetToDefault":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":94,"org.easymock.tests2.DelegateToTest.testDelegate":429,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":226,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":489,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":118,"org.easymock.tests2.DependencyTest.testClassMockingSupport":461,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":70,"org.easymock.tests2.CaptureTest.testCapture1_2446744":469,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":394,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":206,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":66,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":493,"org.easymock.samples.PartialClassMockTest.testGetArea":293,"org.easymock.tests.MockingTest.testInterfaceMocking":199,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests2.UsageTest.niceToStrict":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests2.ThreadingTest.testChangeDefault":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":157,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":313,"org.easymock.tests2.MockBuilderTest.testCreateMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":415,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":448,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":139,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":478,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":474,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":81,"org.easymock.tests.MockClassControlTest.testEquals":102,"org.easymock.tests2.EasyMockSupportClassTest.testAll":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":274,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.CaptureTest.testCaptureAll":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":116,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":30,"org.easymock.tests.MockNameTest.defaultName":221,"org.easymock.tests2.UsageConstraintsTest.testMatches":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":204,"org.easymock.samples.ExampleTest.voteForRemovals":288,"org.easymock.tests.UsageVarargTest.allKinds":2,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":431,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":93,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":341,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":494,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.samples.ExampleTest.voteForRemoval":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":334,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":486,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":280,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":296,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":412,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":413,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":476,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":408,"org.easymock.tests2.UsageTest.moreThanOneArgument":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":319,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":88,"org.easymock.tests.GenericTest.testBridgedEquals":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":155,"org.easymock.tests.UsageExpectAndReturnTest.longType":131,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":455,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":12,"org.easymock.tests.UsageCallCountTest.tooManyCalls":156,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests.MockingTest.testNiceClassMocking":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":322,"org.easymock.tests.MockingTest.testClassMocking":195,"org.easymock.tests2.UsageConstraintsTest.testContains":447,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":18,"org.easymock.tests2.UsageConstraintsTest.testFind":439,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":193,"org.easymock.tests.MockTypeTest.fromEasyMockClass":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":477,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests.UsageExpectAndReturnTest.object":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":336,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":418,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":83,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":125,"org.easymock.tests.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":162,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":111,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":144,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":106,"org.easymock.tests.ResultTest.createThrowResultToString":482,"org.easymock.tests.MockClassControlTest.testHashCode":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":518,"org.easymock.tests.UsageVarargTest.varargCharAccepted":82,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":178,"org.easymock.tests2.UsageTest.openCallCountByLastCall":300,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":421,"org.easymock.tests.DefaultClassInstantiatorTest.object":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":119,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":492,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.ReplayStateInvalidCallsTest.times":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":11,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":499,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":378,"org.easymock.tests2.UsageTest.resumeIfFailure":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":513,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.StubTest.stubWithReturnValue":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":456,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":137,"org.easymock.tests2.SerializationTest.testAllMockedMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":524,"org.easymock.samples.SupportTest.voteForRemovals":282,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":177,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":398,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":113,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":454,"org.easymock.tests2.DelegateToTest.testWrongClass":427,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":496,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":307,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":315,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":218,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":488,"org.easymock.tests2.CaptureTest.testCaptureNone":473,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":508,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageVarargTest.varargByteAccepted":87,"org.easymock.tests2.ThreadingTest.testThreadSafe":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":373,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":153,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":126,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":90,"org.easymock.tests2.UsageConstraintsTest.any":445,"org.easymock.tests2.StubTest.stub":430,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":210,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":433,"org.easymock.tests2.SerializationTest.testClass":464,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":386,"org.easymock.tests.LimitationsTest.mockNativeMethod":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":346,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":504,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":434,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":509,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.MockedExceptionTest.testMockedException":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":63,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":328,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":316,"org.easymock.tests.MockingTest.testNicePartialClassMocking":198,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":333,"org.easymock.tests2.CaptureTest.testCaptureLast":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":71,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":503,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":62,"org.easymock.tests.MockingTest.testTwoMocks":196,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":500,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":517,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":458,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":512,"org.easymock.samples.ExampleTest.removeNonExistingDocument":289,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":511,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":254,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":407,"org.easymock.tests2.MockBuilderTest.testCreateMockString":320,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":96,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.ResultTest.createReturnResultToString":481,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":400,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":372,"org.easymock.tests.ResultTest.createDelegateResultToString":480,"org.easymock.samples.ExampleTest.voteAgainstRemoval":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":340,"org.easymock.tests.LimitationsTest.privateConstructor":181,"org.easymock.tests2.UsageConstraintsTest.testNotNull":457,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.UsageTest.defaultResetToNice":302,"org.easymock.samples.ExampleTest.voteAgainstRemovals":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":143,"org.easymock.tests.UsageVarargTest.differentLength":84,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":345,"org.easymock.tests2.CallbackTest.callback":423,"org.easymock.tests2.UsageConstraintsTest.equals":438,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":522,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":32,"org.easymock.tests.UsageTest.openCallCountByLastCall":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":220,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":521,"org.easymock.tests.MockingTest.testStrictClassMocking":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":326,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":325,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":402,"org.easymock.tests.ObjectMethodsTest.testHashCode":124,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":502,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":409,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":497,"org.easymock.tests2.DependencyTest.testInterfaceMocking":462,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":374,"org.easymock.tests2.DelegateToTest.testStubDelegate":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.stubAnswer":401,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":515,"org.easymock.tests.UsageVarargTest.varargLongAccepted":86,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.floatType":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":403,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":436,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":305,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":470,"org.easymock.tests2.SerializationTest.test":465,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":479,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":253,"org.easymock.tests2.UsageConstraintsTest.testSame":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":129,"org.easymock.samples.SupportTest.addDocument":281,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":516,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":487,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":201,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":485,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":31,"org.easymock.tests2.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":132,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":95,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":168,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":215,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":306,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":453,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":310,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":491,"org.easymock.tests2.UsageConstraintsTest.lessThan":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":164,"org.easymock.tests2.CaptureTest.testCaptureRightOne":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":442,"org.easymock.tests.UsageRangeTest.combination":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":329,"org.easymock.tests.UsageTest.wrongArguments":37,"org.easymock.tests2.MockBuilderTest.testWithConstructor":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":141,"org.easymock.tests.UsageVarargTest.varargShortAccepted":85,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":154,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":505,"org.easymock.tests2.UsageConstraintsTest.cmpTo":446,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":399,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":160,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":301,"org.easymock.tests2.CaptureTest.testCaptureFromStub":475,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":205,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":311,"org.easymock.tests.UsageTest.unexpectedCallWithArray":74,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":501,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":152,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests2.ConstraintsToStringTest.notToString":520,"org.easymock.tests.UsageStrictMockTest.testVerify":251,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":294,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":115,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests.LimitationsTest.abstractClass":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":134,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":416,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":50,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":79}}]
