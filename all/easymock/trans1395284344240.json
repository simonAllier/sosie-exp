[{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"message"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,0,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,1,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,2,3,3,4,6,7,19,20,22,23,24,25,27,30,31,32,33,38,108,110,113,114,115,117,120,121,123,124,127,128,129,130,133,134,150,152,168,171,181,187,248,249,250,252,349,441,443,444,445,458],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[488,489,258,328,490,491],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,31,33,40,43,44,45,82,85,86,87,91,92,93,94,96,100,101,104,110,120,121,123,190,206,221,256,258,260,261,262,290,291,292,326,328,329,332,333,334,356,409,492,493,494,418,419,421,422],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[72,159,339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[2,2,3,3,4,8,9,11,14,19,20,21,22,23,24,25,27,30,31,32,33,36,37,38,39,40,42,43,44,45,46,52,55,56,61,62,63,64,71,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,117,120,121,123,124,127,128,129,130,132,133,134,143,147,148,150,151,158,168,171,181,187,192,194,195,196,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,234,235,239,240,241,242,244,245,249,250,252,256,258,259,260,261,262,263,264,265,266,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,290,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,384,385,386,388,389,390,394,419,420,421,422,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,443,450,451,452,453,454,455,458,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[395,399],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[2,2,3,3,4,6,7,19,20,22,23,24,25,27,30,31,32,33,38,108,495,110,111,113,114,115,117,120,121,496,123,497,498,499,124,127,128,129,130,133,134,150,152,168,171,181,187,248,249,250,252,335,340,349,441,443,444,445,458],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[52,53,54,59,60,62,65,206,207,210,212,213,229,266,267,268,414],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[144,147,148,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[398,501,502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[150,151,152,504],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[442,446],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[42,45,46,84,244,259,262,263,327,420,421,422],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[144,366],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[116,119,505,506,507,508,124,125,150],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[52,54,62,206,207,210,212,213,1,224,229],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[23,87,221],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[116,505,506,507,509,510,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[394,395,399],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[5,18,66,67,68,69,70,71,72,73,74,75,76,77,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[192,242,268,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,386,421,423,426,427,428,429,430,454],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[2,2,3,3,42,63,192,204,205,209,210,211,212,217,219,220,222,223,229,230,231,259,265,266,269,270,271,343,360,364,365,374,379,431,432,433,434,435,436,437,438,439,440,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":207,"org.easymock.tests2.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":370,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":87,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testReturnException":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":451,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":47,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":306,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":214,"org.easymock.tests2.UsageTest.wrongArguments":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":346,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":340,"org.easymock.tests2.UsageConstraintsTest.testNull":210,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":355,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":325,"org.easymock.tests.UsageTest.moreThanOneArgument":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":433,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":293,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":510,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.ReplayStateInvalidUsageTest.times":280,"org.easymock.tests2.DependencyTest.testClassMocking":232,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":81,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":337,"org.easymock.tests2.UsageTest.strictResetToDefault":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":358,"org.easymock.tests2.DelegateToTest.testDelegate":198,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":321,"org.easymock.tests.LimitationsTest.mockFinalMethod":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":305,"org.easymock.tests2.DependencyTest.testClassMockingSupport":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":79,"org.easymock.tests.UsageThrowableTest.throwError":423,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":274,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":339,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":418,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":189,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":461,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":176,"org.easymock.tests2.UsageTest.niceToStrict":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":113,"org.easymock.tests2.MockBuilderTest.testCreateMock":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":74,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":315,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":344,"org.easymock.tests.UsageOverloadedMethodTest.overloading":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":219,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":479,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":384,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":501,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":218,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":406,"org.easymock.tests2.EasyMockSupportClassTest.testAll":168,"org.easymock.tests.MockClassControlTest.testEquals":354,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":444,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":323,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":497,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":303,"org.easymock.tests.MockNameTest.defaultName":402,"org.easymock.tests2.UsageConstraintsTest.testMatches":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":434,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":272,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests.UsageVarargTest.allKinds":414,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":420,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":304,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":429,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":160,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":508,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":400,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":34,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":441,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":450,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":475,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":378,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":413,"org.easymock.tests.GenericTest.testBridgedEquals":446,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":291,"org.easymock.tests.UsageExpectAndReturnTest.longType":471,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":301,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":324,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":227,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":431,"org.easymock.tests.UsageCallCountTest.tooManyCalls":292,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":311,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":428,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests.MockingTest.testNiceClassMocking":255,"org.easymock.tests.MockingTest.testClassMocking":247,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests2.UsageConstraintsTest.testContains":217,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":285,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":209,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":386,"org.easymock.tests.MockTypeTest.fromEasyMockClass":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests.UsageExpectAndReturnTest.object":478,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":408,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":390,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":484,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":154,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":178,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":149,"org.easymock.tests.UsageVarargTest.varargCharAccepted":407,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":393,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageTest.openCallCountByLastCall":88,"org.easymock.tests.DefaultClassInstantiatorTest.object":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":415,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":388,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":426,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":485,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":187,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":335,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":453,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":477,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":152,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":376,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":318,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":382,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":449,"org.easymock.tests.UsageExpectAndThrowTest.object":316,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":225,"org.easymock.tests2.DelegateToTest.testWrongClass":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":141,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":317,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":282,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":462,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":419,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":494,"org.easymock.tests.UsageVerifyTest.twoReturns":422,"org.easymock.tests.UsageVarargTest.varargByteAccepted":412,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":182,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":289,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageConstraintsTest.any":215,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":452,"org.easymock.tests.UsageExpectAndThrowTest.longType":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":398,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":278,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.SerializationTest.testClass":150,"org.easymock.tests.LimitationsTest.mockNativeMethod":458,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":487,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":445,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests2.NameTest.nameForMocksControl":51,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":170,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":310,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":117,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":24,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":226,"org.easymock.tests.MockingTest.testTwoMocks":248,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":314,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":230,"org.easymock.samples.ExampleTest.removeNonExistingDocument":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":73,"org.easymock.tests.UsageStrictMockTest.differentMethods":262,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":155,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.MockBuilderTest.testCreateMockString":123,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":172,"org.easymock.tests.UsageExpectAndThrowTest.floatType":308,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":167,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":146,"org.easymock.tests.UsageVerifyTest.twoThrows":421,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":126,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":181,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":457,"org.easymock.tests2.UsageConstraintsTest.testNotNull":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":430,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests2.UsageTest.defaultResetToNice":90,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.differentLength":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":67,"org.easymock.tests2.CallbackTest.callback":190,"org.easymock.tests2.UsageConstraintsTest.equals":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":267,"org.easymock.tests.UsageCallCountTest.tooFewCalls":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":347,"org.easymock.tests.UsageThrowableTest.throwCheckedException":427,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":246,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":72,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":148,"org.easymock.tests.ObjectMethodsTest.testHashCode":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":509,"org.easymock.tests2.NameTest.nameForNiceMock":50,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.DelegateToTest.testStubDelegate":195,"org.easymock.tests2.AnswerTest.stubAnswer":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":259,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":118,"org.easymock.tests.UsageVarargTest.varargLongAccepted":411,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":486,"org.easymock.tests.UsageExpectAndReturnTest.floatType":470,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":124,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":223,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":136,"org.easymock.tests2.SerializationTest.test":151,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":469,"org.easymock.tests2.UsageConstraintsTest.testSame":211,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":131,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":173,"org.easymock.tests.GenericTest.testPackageScope":443,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":161,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":253,"org.easymock.tests2.NameTest.nameForMock":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":480,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":122,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":472,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":320,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":359,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":266,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":283,"org.easymock.tests2.NameTest.nameForStrictMock":49,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":112,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":177,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.UsageConstraintsTest.testOr":212,"org.easymock.tests.UsageRangeTest.combination":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":20,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests2.MockBuilderTest.testWithConstructor":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":174,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":410,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":399,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":290,"org.easymock.tests2.UsageConstraintsTest.cmpTo":216,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":363,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":273,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":328,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":482,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":474,"org.easymock.tests.LimitationsTest.abstractClass":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":439,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
