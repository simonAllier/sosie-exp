[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,57,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[141,142,143,144,145,146],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[93,117,147,148,149,150,139],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[60,151,94,152,113,120,123,124,125,128,153,134,149,150,154,155,140,156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[157,158,0,159],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[60,160,161,162,163,164,165,166,113,167,168,169,170,171,172,173,174],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[157,0,3,175,176,4,177,178,179,6,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,15,16,17,18,19,197,20,22,198,199,23,27,145,145,146,146,200,28,29,201,202,30,40,42,43,203,46,55,204,205,206],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[157,158,0,159],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[207,208,209,210,211,212,213,214,215,216,217,218,157,158,0,219,220,221,222,223,224,225,226,227,228,229,230,231,232,58,233,59,234,235,60,160,236,61,62,63,237,161,162,64,238,1,2,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,65,3,175,176,4,254,177,178,179,255,5,256,257,6,258,7,180,8,9,259,260,10,261,262,11,263,181,12,13,264,265,14,182,266,267,268,269,270,271,272,66,273,183,185,186,274,187,188,189,190,275,191,192,194,276,277,67,68,278,69,70,279,71,72,280,281,282,73,74,15,16,283,17,18,19,197,284,20,144,21,22,198,199,23,24,25,75,76,77,285,286,78,79,80,81,287,288,289,290,291,82,83,84,85,292,86,87,293,294,295,296,297,298,88,89,299,26,27,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,90,91,92,57,318,319,320,321,151,322,93,94,152,323,324,325,326,327,328,329,330,331,332,95,333,145,145,146,146,200,28,29,334,335,336,337,338,339,340,96,341,342,343,344,345,346,347,348,349,350,201,351,352,202,353,354,97,98,355,356,99,357,100,101,102,103,358,104,105,106,107,359,108,109,110,111,30,112,113,167,168,114,115,169,170,360,361,362,363,364,365,116,366,367,368,369,370,371,372,373,374,375,376,117,31,32,33,34,35,36,37,377,378,379,380,381,382,383,384,385,386,387,388,389,38,39,40,41,118,119,390,391,120,392,121,122,123,124,393,125,126,127,128,394,129,130,131,132,395,396,153,397,133,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,42,43,203,44,45,46,47,48,49,50,51,52,134,149,150,458,459,460,461,462,463,464,465,466,467,154,468,469,470,471,472,473,474,475,476,135,136,137,138,477,478,174,155,479,139,140,156,480,53,54,55,204,205,481,206,482,483,56,484,485,486,487,488],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[79,80,289,290,293,294,298,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[160,161,162,93,167,168,169,170,117,149,150,468,489,490,174,139],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[67,71,72,74,81,290,151,337,338,346,347,348,349,350,372,373,374,375,376,117,404,405,443,155],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[287],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[67,71,72,74,81,290,151,337,338,346,347,348,349,350,372,373,374,375,376,117,404,405,443,155],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[493,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[66,349,380,421,428],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[163,165,167,171,172,174],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[255,496,497,498,499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[502,288,84,89],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[457],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[157,158,0,159],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[299,26,27,300,338,348,439,440,441,442,443,444],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[60,160,161,162,269,270,271,272,151,93,94,113,168,169,170,503,134,149,150,174,155,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.Capture:83","failures":[504],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":285,"org.easymock.tests2.UsageTest.argumentsOrdered":162,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":61,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":325,"org.easymock.tests2.DelegateToTest.testReturnException":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":440,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests.MockClassControlTest.testToString":47,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":268,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":503,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":288,"org.easymock.tests2.UsageTest.wrongArguments":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":346,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":343,"org.easymock.samples.ExampleTest.answerVsDelegate":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":202,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":483,"org.easymock.tests2.UsageConstraintsTest.testNull":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":17,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":250,"org.easymock.tests2.CaptureTest.testPrimitive":278,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":460,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":170,"org.easymock.tests.UsageVarargTest.varargIntAccepted":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":376,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":494,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests2.DependencyTest.testClassMocking":229,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":222,"org.easymock.tests2.CaptureTest.testAnd":277,"org.easymock.tests2.UsageTest.strictResetToDefault":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":245,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":488,"org.easymock.tests2.DelegateToTest.testDelegate":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":394,"org.easymock.tests.LimitationsTest.mockFinalMethod":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":395,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":220,"org.easymock.tests.UsageThrowableTest.throwError":397,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":352,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":267,"org.easymock.samples.PartialClassMockTest.testGetArea":200,"org.easymock.tests.MockingTest.testInterfaceMocking":481,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":335,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":10,"org.easymock.tests2.UsageTest.niceToStrict":236,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":215,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":124,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":341,"org.easymock.tests.UsageOverloadedMethodTest.overloading":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":263,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":466,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":104,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":280,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":448,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.MockClassControlTest.testEquals":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":221,"org.easymock.tests.MockNameTest.defaultName":377,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":461,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":331,"org.easymock.tests.UsageVarargTest.allKinds":456,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":29,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":402,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":308,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":317,"org.easymock.tests2.UsageConstraintsTest.greaterThan":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":37,"org.easymock.samples.ExampleTest.voteForRemoval":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":24,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":197,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":234,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":243,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":439,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":244,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":101,"org.easymock.tests2.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":192,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":455,"org.easymock.tests.GenericTest.testBridgedEquals":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":193,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":296,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":458,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":362,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":495,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":392,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":175,"org.easymock.tests.MockingTest.testNiceClassMocking":56,"org.easymock.tests.MockingTest.testClassMocking":54,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":184,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests.MockTypeTest.fromEasyMockClass":351,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":477,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageExpectAndReturnTest.object":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":450,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":436,"org.easymock.tests.UsageTest.exactCallCountByLastCall":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":430,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":255,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":108,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":465,"org.easymock.tests.MockClassControlTest.testHashCode":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":302,"org.easymock.tests2.EasyMockSupportTest.testVerify":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":262,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":493,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":470,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":463,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":276,"org.easymock.tests.UsageVarargTest.varargCharAccepted":449,"org.easymock.tests2.CaptureTest.testCaptureMultiple":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastCall":62,"org.easymock.tests.DefaultClassInstantiatorTest.object":31,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":434,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":210,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":301,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":49,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":182,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":48,"org.easymock.tests2.UsageTest.resumeIfFailure":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":442,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":297,"org.easymock.tests2.SerializationTest.testAllMockedMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":422,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":165,"org.easymock.samples.SupportTest.voteForRemovals":324,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":126,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":159,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":428,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":224,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":393,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":294,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":404,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":405,"org.easymock.samples.ConstructorCalledMockTest.testTax":145,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":239,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":189,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":342,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":171,"org.easymock.tests2.CaptureTest.testCaptureNone":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":336,"org.easymock.tests.UsageUnorderedTest.message":117,"org.easymock.tests.UsageVerifyTest.twoReturns":150,"org.easymock.tests.UsageVarargTest.varargByteAccepted":454,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":12,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":437,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":28,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":166,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":349,"org.easymock.tests2.UsageConstraintsTest.any":290,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":66,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndThrowTest.longType":391,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":35,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.tests2.SerializationTest.testClass":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":111,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":209,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.NameTest.nameForMocksControl":272,"org.easymock.tests2.MockedExceptionTest.testMockedException":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":120,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":190,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":19,"org.easymock.tests2.CaptureTest.testCaptureLast":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":396,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":178,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":287,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":295,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":123,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":332,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":214,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":303,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":33,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":57,"org.easymock.tests2.MockBuilderTest.testCreateMockString":194,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":45,"org.easymock.tests.UsageExpectAndThrowTest.floatType":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":8,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":226,"org.easymock.tests.UsageVerifyTest.twoThrows":149,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":181,"org.easymock.samples.ExampleTest.voteAgainstRemoval":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":199,"org.easymock.tests.LimitationsTest.privateConstructor":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":298,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":403,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":299,"org.easymock.tests2.UsageTest.defaultResetToNice":237,"org.easymock.samples.ExampleTest.voteAgainstRemovals":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":359,"org.easymock.tests.UsageVarargTest.differentLength":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":208,"org.easymock.tests2.CallbackTest.callback":65,"org.easymock.tests2.UsageConstraintsTest.equals":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":144,"org.easymock.tests.UsageTest.openCallCountByLastCall":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":348,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":4,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":344,"org.easymock.tests.UsageThrowableTest.throwCheckedException":400,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":172,"org.easymock.tests.MockingTest.testStrictClassMocking":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":338,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":213,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":254,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests2.CompareToTest.testGreateOrEqual":502,"org.easymock.tests.ObjectMethodsTest.testHashCode":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.NameTest.nameForNiceMock":271,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.DelegateToTest.testStubDelegate":315,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests.UsageVarargTest.varargLongAccepted":453,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":179,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":146,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests.UsageThrowableTest.noUpperLimit":133,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":1,"org.easymock.tests2.SerializationTest.test":158,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":98,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":9,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":309,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":482,"org.easymock.tests2.NameTest.nameForMock":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":143,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":128,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":138,"org.easymock.tests2.MockedExceptionTest.testRealException":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":347,"org.easymock.tests2.NameTest.nameForStrictMock":270,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":274,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":2,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":147,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":185,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":305,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":261,"org.easymock.tests2.CaptureTest.testCaptureRightOne":281,"org.easymock.tests2.UsageConstraintsTest.testOr":81,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":168,"org.easymock.tests2.MockBuilderTest.testWithConstructor":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":259,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":452,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":36,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests2.UsageConstraintsTest.cmpTo":291,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CaptureTest.testCaptureFromStub":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":186,"org.easymock.tests.UsageTest.unexpectedCallWithArray":167,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":107,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":479,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.samples.ExampleTest.addAndChangeDocument":95,"org.easymock.tests.UsageStrictMockTest.testVerify":480,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":100,"org.easymock.tests.LimitationsTest.abstractClass":38,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":375,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":446,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":247}}]
