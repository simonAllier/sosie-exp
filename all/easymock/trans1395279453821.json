[{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[53,54,55,56,56,57,57,58,59,60,61,62,63,64,65,66,67,68,69,0,2,70,71,23,72,73,74,75,76,24,25,26,77,27,78,79,80,81,82,83,28,84,29,85,86,87,88,89,90,91,92,93],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.Capture:82","failures":[96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[109,110,35,40,111,112],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[113,114,115,116],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[117,118,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[120,121,122,123,124,125,126,127,128,129,53,54,130,131,55,56,56,57,57,132,133,58,134,59,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,60,61,62,63,152,64,65,153,154,155,156,157,158,159,160,161,162,163,164,4,165,166,5,6,7,167,168,169,170,171,8,9,172,173,10,11,12,174,175,176,13,14,15,16,177,178,179,180,181,182,183,184,185,66,186,187,67,188,189,190,191,192,193,194,195,196,68,197,198,199,200,201,69,202,203,204,205,206,207,208,114,209,17,210,211,212,213,214,215,216,217,218,219,220,221,108,222,223,18,115,224,225,226,227,228,116,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,96,246,97,98,99,100,101,102,247,103,105,106,248,107,249,19,250,251,252,20,21,253,254,22,255,256,257,0,1,2,258,259,260,261,262,263,71,23,72,264,73,74,75,76,265,24,25,26,77,27,266,78,79,80,81,267,82,268,269,83,28,84,29,270,271,272,273,274,275,276,277,278,30,279,280,281,282,283,284,285,85,86,87,286,287,288,289,290,291,292,293,294,295,296,297,298,299,31,300,32,33,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,94,319,320,321,322,323,34,324,35,325,36,37,38,326,327,39,328,40,41,329,330,42,43,44,331,332,88,333,334,335,336,337,338,339,89,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,95,397,398,399,400,401,402,403,404,405,406,47,407,408,409,410,411,412,413,414,415,416,417,418,419,420,117,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,118,442,443,444,90,91,92,445,93,446,447,448,449,450,451,452,453,454,48,49,50,455,456,457,458,459,460,461,462,463,119,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[8,173,204,205,206,114,222,115,231,245,246,102,247,107,274,31,313,328,375,381,387,391,393,421,427,433,437,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[135,483,484,485,486,487,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[489,490,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[17,97,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[230],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[229],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[477,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[301,305,306,315,319,346,117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[496],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[497,17,217,222,231],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[498],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[18,79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[120,121,122,123,124,125,126,128,129,53,54,130,131,55,56,56,57,57,132,133,58,134,59,141,150,151,60,61,62,63,152,64,65,158,4,165,166,5,6,7,167,8,9,172,173,10,11,12,174,175,176,13,14,15,16,177,178,66,67,68,69,204,205,206,207,208,114,209,17,210,212,213,214,215,216,217,218,219,220,221,108,222,223,18,115,224,225,226,227,228,116,229,230,231,233,234,235,236,237,239,240,241,242,243,244,245,96,246,97,98,99,100,101,102,247,103,105,106,248,107,249,19,250,251,252,20,21,253,254,22,255,256,257,0,1,2,258,259,260,261,262,263,71,23,73,75,76,25,77,27,266,78,79,80,82,83,28,84,29,272,273,274,30,279,280,281,282,283,284,85,86,87,298,299,31,300,32,33,317,322,34,324,35,325,36,37,38,326,327,39,328,40,41,329,330,42,43,44,88,334,335,336,337,338,339,89,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,95,397,398,399,400,401,402,403,405,406,47,407,408,409,410,411,413,414,415,416,417,418,419,420,117,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,118,442,90,91,92,93,449,450,451,452,453,454,49,50,119,465,466,467,468,469,470,471,472,480,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[59,135,0,483,484,485,499,500,488,265],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[501,115],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[502,231],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[59,503,483,484,485,486,487,500],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[17,210,213,215,216,218,225,229,96,97,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[352],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":210,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":311,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":12,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":120,"org.easymock.tests2.DelegateToTest.testReturnException":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":335,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":457,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":232,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":421,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":67,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":217,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":365,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":290,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":447,"org.easymock.tests2.UsageConstraintsTest.testNull":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":22,"org.easymock.tests2.CaptureTest.testPrimitive":98,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":440,"org.easymock.tests.UsageTest.moreThanOneArgument":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":467,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":395,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageVarargTest.varargIntAccepted":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":487,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":374,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests.ReplayStateInvalidUsageTest.times":354,"org.easymock.tests2.DependencyTest.testClassMocking":148,"org.easymock.tests2.AnswerTest.answer":258,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":171,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":280,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests2.DelegateToTest.testDelegate":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":436,"org.easymock.tests.LimitationsTest.mockFinalMethod":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.DependencyTest.testClassMockingSupport":149,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":480,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":169,"org.easymock.tests.UsageThrowableTest.throwError":413,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":348,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":289,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":164,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":203,"org.easymock.samples.PartialClassMockTest.testGetArea":55,"org.easymock.tests.MockingTest.testInterfaceMocking":445,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":349,"org.easymock.tests2.CompareToTest.testLessOrEqual":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":371,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":422,"org.easymock.tests2.UsageTest.niceToStrict":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":192,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":73,"org.easymock.tests2.MockBuilderTest.testCreateMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":430,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":109,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageOverloadedMethodTest.overloading":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":222,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":361,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":386,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":103,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":404,"org.easymock.tests.MockClassControlTest.testEquals":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":438,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":170,"org.easymock.tests2.CaptureTest.testCaptureAll":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests.MockNameTest.defaultName":412,"org.easymock.tests2.UsageConstraintsTest.testMatches":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":468,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":346,"org.easymock.samples.ExampleTest.voteForRemovals":126,"org.easymock.tests.UsageVarargTest.allKinds":411,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":300,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":419,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":160,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":29,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":479,"org.easymock.samples.ExampleTest.voteForRemoval":123,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":270,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":250,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":334,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":251,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":16,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":382,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":248,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":94,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":410,"org.easymock.tests.GenericTest.testBridgedEquals":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":378,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":439,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":117,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":437,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":465,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":426,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":418,"org.easymock.tests.MockingTest.testNiceClassMocking":448,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":61,"org.easymock.tests.MockingTest.testClassMocking":444,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":450,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":212,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":274,"org.easymock.tests.MockTypeTest.fromEasyMockClass":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests.UsageExpectAndReturnTest.object":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":484,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":406,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":343,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":391,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":360,"org.easymock.tests.MockClassControlTest.testHashCode":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":154,"org.easymock.tests2.EasyMockSupportTest.testVerify":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":194,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":168,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":45,"org.easymock.tests.UsageVarargTest.varargCharAccepted":405,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests.DefaultClassInstantiatorTest.object":473,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":282,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":341,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":153,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":459,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":427,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":392,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":69,"org.easymock.tests2.UsageTest.resumeIfFailure":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":337,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":317,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":110,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":433,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":259,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":464,"org.easymock.tests.UsageExpectAndThrowTest.object":431,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DelegateToTest.testWrongClass":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":181,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":432,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":183,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":442,"org.easymock.tests2.CaptureTest.testCaptureNone":247,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":490,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":51,"org.easymock.tests.UsageVerifyTest.twoReturns":33,"org.easymock.tests.UsageVarargTest.varargByteAccepted":409,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":197,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":454,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":368,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageExpectAndThrowTest.longType":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":336,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":477,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":352,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":394,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":140,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":187,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":425,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":238,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":76,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":80,"org.easymock.tests2.CompareToTest.testNotComparable":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":503,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":136,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":216,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.MockingTest.testTwoMocks":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":429,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":230,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":492,"org.easymock.samples.ExampleTest.removeNonExistingDocument":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":143,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":155,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":475,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":455,"org.easymock.tests.UsageExpectAndThrowTest.floatType":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":188,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":185,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":261,"org.easymock.tests.UsageVerifyTest.twoThrows":32,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":68,"org.easymock.samples.ExampleTest.voteAgainstRemoval":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":332,"org.easymock.tests2.UsageConstraintsTest.testNotNull":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":420,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests.UsageVarargTest.differentLength":47,"org.easymock.tests2.CallbackTest.callback":8,"org.easymock.tests2.UsageConstraintsTest.equals":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":268,"org.easymock.tests.UsageTest.openCallCountByLastCall":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":367,"org.easymock.tests.UsageCallCountTest.tooFewCalls":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":491,"org.easymock.tests.UsageThrowableTest.throwCheckedException":417,"org.easymock.tests.MockingTest.testStrictClassMocking":443,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":400,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":62,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":486,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.NameTest.nameForNiceMock":235,"org.easymock.tests2.DependencyTest.testInterfaceMocking":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":485,"org.easymock.samples.ExampleTest.addDocument":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":202,"org.easymock.tests2.DelegateToTest.testStubDelegate":242,"org.easymock.tests2.AnswerTest.stubAnswer":262,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":325,"org.easymock.tests.UsageVarargTest.varargLongAccepted":408,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":393,"org.easymock.tests.UsageExpectAndReturnTest.floatType":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":57,"org.easymock.tests.UsageThrowableTest.noUpperLimit":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":224,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":209,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":179,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":474,"org.easymock.tests2.UsageConstraintsTest.testSame":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":376,"org.easymock.samples.SupportTest.addDocument":130,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":189,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":161,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":446,"org.easymock.tests2.NameTest.nameForMock":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":387,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":379,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":435,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":281,"org.easymock.tests2.MockedExceptionTest.testRealException":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":292,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":314,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":366,"org.easymock.tests2.NameTest.nameForStrictMock":234,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":180,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":476,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":23,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":157,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":309,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":193,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":489,"org.easymock.tests2.UsageConstraintsTest.testOr":215,"org.easymock.tests.UsageRangeTest.combination":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":190,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":478,"org.easymock.tests.UsageVarargTest.varargShortAccepted":407,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":48,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":260,"org.easymock.tests2.CompareToTest.testLessThan":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":389,"org.easymock.tests2.CaptureTest.testCapture":104,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.samples.ExampleTest.addAndChangeDocument":128,"org.easymock.tests.UsageStrictMockTest.testVerify":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":129,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests2.CompareToTest.testGreateThan":501,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":372,"org.easymock.tests.LimitationsTest.abstractClass":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":381,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":373,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":21}}]
