[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,29,4,5,6,7,8,9,30,31,10,11,12,32,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,2,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,69,70,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[94,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[96,97,98,99,100,101,102,103,52,55,104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[106,107,108,109,110,16,111,112,17,18,33,113,34,114,115,116,117,118,119,120,121,122,123,124,94,125,126,127,95,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,42,147,148,149,150,151,152,153,154,155,156,157,158,159,160,0,1,2,3,161,162,163,164,165,15,19,166,167,168,169,170,171,172,173,174,49,51,52,54,55,175,29,56,57,176,58,59,60,62,65,177,178,179,180,181,182,183,184,185,186,187,188,189,4,5,6,7,8,9,190,191,192,193,194,20,195,196,21,22,73,197,198,199,200,74,201,202,203,23,204,205,32,206,207,24,25,26,208,209,210,211,212,77,78,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,27,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,13,83,84,85,283,284,285,286,287,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[122,124,137,143],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[106,107,108,109,110,16,17,18,33,113,34,114,115,118,119,120,121,289,290,291,292,122,123,124,94,125,126,127,95,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,39,42,43,147,148,149,150,152,153,154,155,156,157,160,0,1,2,3,161,162,164,293,294,295,296,15,19,167,168,297,173,49,51,52,54,55,175,29,56,176,58,59,60,62,63,65,177,178,179,180,181,182,183,184,185,186,187,188,189,4,5,6,7,8,9,191,192,193,20,21,22,298,299,300,301,302,73,197,303,198,199,74,23,204,205,207,24,25,26,208,209,210,211,212,304,305,306,307,308,77,78,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,27,272,273,275,276,282,83,84,85,309,310,283,284,285,286,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[311,312,313,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[315,80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[316],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.UsageTest.argumentsOrdered":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.tests2.StubTest.stubWithReturnValue":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":315,"org.easymock.tests.MockClassControlTest.testToString":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":36,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageTest.wrongArguments":166,"org.easymock.tests.UsageStrictMockTest.range":196,"org.easymock.samples.ConstructorCalledMockTest.testTax":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":301,"org.easymock.samples.ExampleTest.answerVsDelegate":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests2.UsageConstraintsTest.testNull":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.CaptureTest.testPrimitive":150,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":207,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests.UsageTest.moreThanOneArgument":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":300,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":210,"org.easymock.tests2.CaptureTest.testCaptureNone":155,"org.easymock.tests.UsageUnorderedTest.message":243,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":220,"org.easymock.tests2.ThreadingTest.testThreadSafe":114,"org.easymock.tests.UsageTest.argumentsOrdered":269,"org.easymock.tests.UsageVarargTest.varargIntAccepted":215,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":286,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":71,"org.easymock.tests2.CaptureTest.testCapture_2617107":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":43,"org.easymock.tests2.UsageConstraintsTest.any":130,"org.easymock.tests2.StubTest.stub":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":111,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests.LimitationsTest.mockNativeMethod":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":242,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":79,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":296,"org.easymock.tests2.CaptureTest.testAnd":147,"org.easymock.tests2.UsageTest.strictResetToDefault":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":63,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":99,"org.easymock.tests2.NameTest.nameForMocksControl":292,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":267,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":248,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests2.CaptureTest.testCaptureLast":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":271,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":313,"org.easymock.tests2.CaptureTest.testCapture1_2446744":151,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests.UsageThrowableTest.throwError":274,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":200,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":116,"org.easymock.tests2.MockBuilderTest.testCreateMockString":48,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":86,"org.easymock.tests.UsageExpectAndThrowTest.floatType":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":212,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":136,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":107,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":37,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":186,"org.easymock.samples.ExampleTest.voteAgainstRemoval":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":245,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":81,"org.easymock.tests2.UsageTest.niceToStrict":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":97,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":281,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.tests2.MockBuilderTest.testCreateMock":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests.UsageTest.openCallCountByLastCall":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":122,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":32,"org.easymock.tests.UsageCallCountTest.tooFewCalls":284,"org.easymock.tests.UsageOverloadedMethodTest.overloading":191,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":190,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":316,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":133,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":302,"org.easymock.tests.UsageThrowableTest.throwCheckedException":278,"org.easymock.tests.MockClassControlTest.testEquals":92,"org.easymock.tests2.EasyMockSupportClassTest.testAll":35,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":295,"org.easymock.tests2.CaptureTest.testCaptureAll":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.testMatches":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":211,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests2.NameTest.nameForNiceMock":291,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests.UsageVarargTest.allKinds":222,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.tests2.DependencyTest.testInterfaceMocking":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.samples.BasicClassMockTest.testPrintContent":72,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":280,"org.easymock.tests2.AnswerTest.stubAnswer":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":303,"org.easymock.tests.UsageVarargTest.varargLongAccepted":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":66,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.samples.ExampleTest.voteForRemoval":180,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":241,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":70,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageThrowableTest.noUpperLimit":275,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.SerializationTest.test":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":30,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.tests2.UsageConstraintsTest.testSame":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.CaptureTest.testCaptureFirst":160,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":221,"org.easymock.tests.GenericTest.testBridgedEquals":80,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageCallCountTest.tooManyCalls":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":283,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":249,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":310,"org.easymock.tests2.NameTest.nameForStrictMock":290,"org.easymock.tests2.UsageConstraintsTest.testContains":132,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":125,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":120,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":40,"org.easymock.tests2.UsageStrictMockTest.range":112,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":317,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":314,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":217,"org.easymock.tests.UsageTest.exactCallCountByLastCall":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":282,"org.easymock.tests2.CaptureTest.testCaptureRightOne":157,"org.easymock.tests2.UsageConstraintsTest.testOr":95,"org.easymock.tests.UsageRangeTest.combination":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":239,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests2.MockBuilderTest.testWithConstructor":98,"org.easymock.tests.MockClassControlTest.testHashCode":91,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":293,"org.easymock.tests2.UsageConstraintsTest.cmpTo":131,"org.easymock.tests.UsageVarargTest.varargCharAccepted":216,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":110,"org.easymock.tests2.UsageTest.openCallCountByLastCall":169,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.CaptureTest.testCaptureFromStub":158,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":277,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":285,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":90,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests2.UsageConstraintsTest.constraints":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":184,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":153,"org.easymock.tests2.UsageTest.resumeIfFailure":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":75,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":188,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":214}}]
