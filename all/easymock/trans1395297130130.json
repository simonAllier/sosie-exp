[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[14,15,16,17],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[33,34,35],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,63,2,3,64,65,66,0,1,67,68,69,70,71,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[73,74,75,76,76,77,77,4,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,42,97,98,99,100,101,102,12,103,104,105,106,107,108,109,44,110,111,112,113,114,33,115,34,116,117,118,119,120,121,122],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[123,124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[4,125,126,127,128,129,130,18,131,132,133,134,40,135,136,137,138,139,57,58,60,140,141,142,143,61,62,144,145,15,146,63,2,3,64,65,66,0,1,68,147,148,149,150,151,152,16,153,69,70,154,17,71,72,155,89,156,42,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,104,106,109,110,111,112,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,24,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,31,213,214],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[215,216,217,218,219,220,75,221,76,76,77,77,222,223,224,225,226,227,4,125,126,127,128,228,129,229,230,130,18,131,132,133,134,40,135,136,137,138,139,57,58,60,140,141,142,143,61,62,144,145,15,146,63,2,3,64,65,66,0,1,68,147,148,149,150,151,152,16,153,69,70,154,17,71,72,155,81,82,83,84,87,89,91,92,94,156,231,41,42,232,97,98,99,100,233,101,102,157,234,235,236,237,238,12,239,158,159,160,43,161,162,163,164,165,166,167,168,169,170,171,172,173,103,104,240,105,106,107,109,110,111,112,241,242,243,174,244,245,246,175,176,247,248,177,178,249,179,180,181,182,183,184,250,251,252,253,254,185,186,255,256,187,257,188,113,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,33,34,189,24,190,191,192,193,194,195,196,289,29,290,197,198,291,292,199,200,201,202,293,294,295,296,297,203,204,205,298,299,206,207,208,209,210,300,301,302,303,304,305,306,307,211,308,118,212,30,31,213,309,120,121,122,310,311,214],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[75,76,77,4,82,83,84,85,312,87,88,313,314,89,90,91,10,92,315,11,93,94,316,96,231,12,13,317,108,318,110,111,319,32,34,116,117],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[57,59,61,63,2,64,66,0,67,69,71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[18,320,321,24,29,30,31],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[141,143],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[59,61,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[322,323,18,131,132,19,40,324,20,21,138,139,63,152,87,93,94,96,239,163,167,168,171,104,110,112,325,22,326,327,23,328,24,190,192,25,26,27,28,196,329,330,331,29,199,332,333,30,31],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[215,217,218,219,75,221,224,126,127,130,18,131,81,82,83,84,87,89,91,92,94,97,98,99,100,233,101,102,12,43,103,104,240,105,106,107,109,110,111,112,175,185,186,255,256,187,257,33,34,189,24,190,191,290,199,200,201,202,293,294,295,296,297,203,298,299,207,208,209,300,301,302,303,304,305,306,307,211,308,118,120,121,122,310,311,214],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[334,335,336],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[5,6,7,337,338,10,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[5,6,7,337,338,10,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":261,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":324,"org.easymock.tests2.StubTest.stubWithReturnValue":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":299,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":17,"org.easymock.tests2.SerializationTest.testAllMockedMethod":78,"org.easymock.tests2.DelegateToTest.testReturnException":223,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":259,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":32,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":276,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":264,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":234,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.DelegateToTest.testWrongClass":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":175,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":47,"org.easymock.samples.ExampleTest.answerVsDelegate":216,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":117,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":275,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":91,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":171,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":187,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":186,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":332,"org.easymock.tests.UsageVerifyTest.twoReturns":31,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":284,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":305,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":90,"org.easymock.tests2.UsageConstraintsTest.any":68,"org.easymock.tests2.StubTest.stub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":246,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":323,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.LimitationsTest.mockNativeMethod":118,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":304,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":34,"org.easymock.tests2.AnswerTest.answer":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":39,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.MockedExceptionTest.testMockedException":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":166,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":288,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":92,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CaptureTest.testCaptureLast":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.MockingTest.testTwoMocks":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":72,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.tests.UsageStrictMockTest.differentMethods":190,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":160,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":333,"org.easymock.tests2.MockBuilderTest.testCreateMockString":96,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":152,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":317,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.PartialClassMockTest.testGetArea":75,"org.easymock.tests2.CompareToTest.testLessOrEqual":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":306,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":185,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":265,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests2.UsageConstraintsTest.testNotNull":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.tests2.UsageTest.defaultResetToNice":137,"org.easymock.samples.ExampleTest.voteAgainstRemovals":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":300,"org.easymock.tests.UsageVarargTest.differentLength":326,"org.easymock.tests2.CallbackTest.callback":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":273,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":15,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":45,"org.easymock.tests.UsageOverloadedMethodTest.overloading":197,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":149,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":48,"org.easymock.tests.UsageThrowableTest.throwCheckedException":181,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":79,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":309,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":233,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":257,"org.easymock.samples.ExampleTest.voteForRemovals":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":337,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":161,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.BasicClassMockTest.testPrintContent":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":53,"org.easymock.tests2.DelegateToTest.testStubDelegate":224,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":183,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests2.AnswerTest.stubAnswer":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":263,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":189,"org.easymock.tests2.UsageConstraintsTest.greaterThan":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":303,"org.easymock.tests.UsageExpectAndReturnTest.floatType":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests.UsageThrowableTest.noUpperLimit":249,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":113,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.SerializationTest.test":125,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":164,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":294,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":258,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":222,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":165,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests.GenericTest.testPackageScope":33,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":43,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.GenericTest.testBridgedEquals":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":330,"org.easymock.tests.UsageExpectAndReturnTest.longType":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":50,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":95,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":289,"org.easymock.tests2.MockedExceptionTest.testRealException":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":269,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":182,"org.easymock.tests.MockingTest.testNiceClassMocking":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":86,"org.easymock.tests2.UsageConstraintsTest.testContains":148,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":3,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":198,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":336,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":320,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":163,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":285,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests2.MockBuilderTest.testWithConstructor":312,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":329,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":36,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":235,"org.easymock.tests2.UsageTest.openCallCountByLastCall":135,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":335,"org.easymock.tests.DefaultClassInstantiatorTest.object":49,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":173,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":250,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":88,"org.easymock.tests.UsageTest.unexpectedCallWithArray":25,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":271,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":51,"org.easymock.tests2.UsageTest.resumeIfFailure":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":307,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":211,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":168}}]
