[{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,4,70,71,72,73,74,75,76,77,78,16,79,80,81,82,83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[85,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[89,39,57,63],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[90,48,54,66],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[91,92,93,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[7,8,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[15,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[111,112,113,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,2,3,4,5,6,7,153,154,155,156,157,111,158,159,160,161,70,162,163,164,165,166,167,168,8,9,169,96,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,112,204,113,205,206,98,99,207,208,100,101,209,210,211,212,213,214,215,216,71,217,91,218,92,219,220,221,222,223,224,225,226,93,94,227,95,72,73,74,228,10,11,12,13,14,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,15,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,75,76,77,78,16,79,272,273,274,275,276,277,278,279,280,281,282,283,284,17,18,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,102,103,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,19,373,104,374,375,376,80,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,105,395,396,397,398,399,106,107,400,401,81,82,83,84,402,403,85,86,20,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,21,458,459,460,461,462,463,464,465,466,467,468,469,87,88,22,470,23,471,472,473,474,475,476,477,24,25,26,27,28,29,30,31,32,33,34,35,36,37,478,479,480,481,482,483,484,485,486,487,488,489,490,38,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,39,40,41,42,108,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,507],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[466],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,2,3,4,5,6,7,153,154,155,156,157,111,158,159,160,161,70,162,163,164,165,166,167,168,8,9,169,96,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,112,204,113,205,206,98,99,207,208,100,101,209,210,211,212,213,214,215,216,71,217,91,218,92,219,220,221,222,223,224,225,226,93,94,227,95,72,73,74,228,10,11,12,13,14,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,15,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,75,76,77,78,16,79,272,273,274,275,276,277,278,279,280,281,282,283,284,17,18,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,102,103,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,19,373,104,374,375,376,80,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,105,395,396,397,398,399,106,107,400,401,81,82,83,84,402,403,85,86,20,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,21,458,459,460,461,462,463,464,465,466,467,468,469,87,88,22,470,23,508,509,510,471,511,472,473,474,475,476,477,24,25,26,27,28,29,30,31,32,33,34,35,36,37,478,479,480,481,482,483,484,485,486,487,488,489,490,38,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,39,40,41,42,108,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,507],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"threadSafe"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[123,124,125,512,513,7,8,96,170,514,97,98,99,100,101,240,317,102,103,104,374,105,106,107,400,413,422,423,424,487],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[7,8,9,170,206,99,100,101,102,103,19,374,394,105,106,107,408,409,410,411],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[96,170,104,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[346,347,405,406,515,516,517,518,420,421,519,458,67],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[0,2,3,6,9,210,214,215,221,226,10,11,12,13,14,261,17,18,333,334,335,336,337,346,346,347,347,19,80,35,39,40,43,44,45,46,52,54,55,57,58,64,65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[515,516,517,518,519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.RecordState:327","failures":[115,116,73,74],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[148,149,150,151,152,163,164,165,166,228,260,262,263,264,265,266,268,271,277,282,286,287,288,289,290,291,292,293,326,327,328,329,330,331,332,346,346,347,347,348,351,352,520,377,380,383,384,385,386,389,390,81,82,83,405,406,412,521,413,414,415,416,417,418,419,421,422,423,522,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,453,454,455,456,21,458,459,460,461,462,463,464,465,67,69],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[523,524,525,90,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[526,24,26,27,28,29,30,31,33,527,34,35,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[44,49,59,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":218,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":396,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":349,"org.easymock.tests2.DelegateToTest.testReturnException":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":76,"org.easymock.tests.MockingTest.testPartialClassMocking":265,"org.easymock.tests.MockClassControlTest.testToString":288,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":407,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":370,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":48,"org.easymock.tests2.UsageTest.wrongArguments":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":2,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":502,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":324,"org.easymock.samples.ExampleTest.answerVsDelegate":339,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":282,"org.easymock.tests2.UsageConstraintsTest.testNull":44,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":487,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":293,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":6,"org.easymock.tests.UsageTest.moreThanOneArgument":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":316,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":335,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":10,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":14,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":131,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":496,"org.easymock.tests.ReplayStateInvalidUsageTest.times":160,"org.easymock.tests2.DependencyTest.testClassMocking":367,"org.easymock.tests2.AnswerTest.answer":466,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":506,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":279,"org.easymock.tests2.UsageTest.strictResetToDefault":393,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":319,"org.easymock.tests2.DelegateToTest.testDelegate":477,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":276,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":312,"org.easymock.tests.LimitationsTest.mockFinalMethod":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":233,"org.easymock.tests2.DependencyTest.testClassMockingSupport":368,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":201,"org.easymock.tests2.CaptureTest.testCapture1_2446744":28,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":504,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":155,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":281,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":513,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":134,"org.easymock.samples.PartialClassMockTest.testGetArea":348,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":156,"org.easymock.tests.MockingTest.testInterfaceMocking":267,"org.easymock.tests2.CompareToTest.testLessOrEqual":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":436,"org.easymock.tests2.UsageTest.niceToStrict":395,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":298,"org.easymock.tests2.ThreadingTest.testChangeDefault":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":416,"org.easymock.tests2.MockBuilderTest.testCreateMock":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":306,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":483,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":116,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":322,"org.easymock.tests.UsageOverloadedMethodTest.overloading":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":54,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":192,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":53,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":33,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":244,"org.easymock.tests2.EasyMockSupportClassTest.testAll":428,"org.easymock.tests.MockClassControlTest.testEquals":292,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":505,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":231,"org.easymock.tests.MockNameTest.defaultName":285,"org.easymock.tests2.UsageConstraintsTest.testMatches":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":336,"org.easymock.samples.ExampleTest.voteForRemovals":343,"org.easymock.tests.UsageVarargTest.allKinds":15,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":232,"org.easymock.samples.BasicClassMockTest.testPrintContent":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":371,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":318,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":463,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":135,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":332,"org.easymock.samples.ExampleTest.voteForRemoval":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":464,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":456,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":392,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":228,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":480,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":75,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":481,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":401,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":188,"org.easymock.tests2.UsageTest.moreThanOneArgument":394,"org.easymock.tests2.CaptureTest.testCapture2_2446744":36,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":152,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":124,"org.easymock.tests.UsageExpectAndReturnTest.longType":184,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":229,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":522,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":315,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":62,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":125,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":501,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":384,"org.easymock.tests.MockingTest.testNiceClassMocking":271,"org.easymock.tests.MockingTest.testClassMocking":263,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":521,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":118,"org.easymock.tests2.UsageConstraintsTest.testContains":52,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":43,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":296,"org.easymock.tests.MockTypeTest.fromEasyMockClass":280,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.object":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":500,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":486,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":209,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":112,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":406,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":197,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":236,"org.easymock.tests.MockClassControlTest.testHashCode":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests2.EasyMockSupportTest.testVerify":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":438,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":234,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":514,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":503,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":38,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests2.CaptureTest.testCaptureMultiple":526,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":95,"org.easymock.tests2.UsageTest.openCallCountByLastCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":489,"org.easymock.tests.DefaultClassInstantiatorTest.object":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":114,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":256,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":439,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":461,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":133,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":303,"org.easymock.tests.ReplayStateInvalidCallsTest.times":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":72,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":447,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":289,"org.easymock.tests2.UsageTest.resumeIfFailure":400,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":78,"org.easymock.tests2.StubTest.stubWithReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":518,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":63,"org.easymock.tests2.SerializationTest.testAllMockedMethod":69,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.samples.SupportTest.voteForRemovals":354,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":309,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":227,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":467,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":113,"org.easymock.tests.UsageExpectAndThrowTest.object":307,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":60,"org.easymock.tests2.DelegateToTest.testWrongClass":475,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":17,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":18,"org.easymock.tests.UsageStrictMockTest.range":96,"org.easymock.samples.ConstructorCalledMockTest.testTax":346,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":381,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":485,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":308,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":425,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":323,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":129,"org.easymock.tests2.CaptureTest.testCaptureNone":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":254,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":509,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":512,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":442,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":122,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":259,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":93,"org.easymock.tests2.UsageConstraintsTest.any":50,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":159,"org.easymock.tests2.StubTest.stub":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":94,"org.easymock.tests.UsageExpectAndThrowTest.longType":300,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":158,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":373,"org.easymock.tests2.SerializationTest.testClass":67,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":360,"org.easymock.tests.LimitationsTest.mockNativeMethod":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":145,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":375,"org.easymock.tests2.NameTest.nameForMocksControl":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":495,"org.easymock.tests2.MockedExceptionTest.testMockedException":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":430,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":470,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":301,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":450,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":419,"org.easymock.tests.MockingTest.testNicePartialClassMocking":266,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":455,"org.easymock.tests2.CompareToTest.testCompareEqual":525,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":491,"org.easymock.tests2.CaptureTest.testCaptureLast":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":390,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":144,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":61,"org.easymock.tests.MockingTest.testTwoMocks":264,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":141,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":305,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":65,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":511,"org.easymock.samples.ExampleTest.removeNonExistingDocument":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":498,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":471,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":328,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":86,"org.easymock.tests2.MockBuilderTest.testCreateMockString":424,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":432,"org.easymock.tests.UsageExpectAndThrowTest.floatType":299,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":515,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":441,"org.easymock.samples.ExampleTest.voteAgainstRemoval":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":462,"org.easymock.tests.LimitationsTest.privateConstructor":164,"org.easymock.tests2.UsageConstraintsTest.testNotNull":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":81,"org.easymock.tests2.UsageTest.defaultResetToNice":399,"org.easymock.samples.ExampleTest.voteAgainstRemovals":338,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":492,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.CallbackTest.callback":507,"org.easymock.tests2.UsageConstraintsTest.equals":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":458,"org.easymock.tests.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":325,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests.MockingTest.testStrictClassMocking":262,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":497,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":385,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":388,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests2.CompareToTest.testGreateOrEqual":90,"org.easymock.tests.ObjectMethodsTest.testHashCode":257,"org.easymock.tests2.NameTest.nameForNiceMock":410,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":404,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":143,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":138,"org.easymock.tests2.DependencyTest.testInterfaceMocking":369,"org.easymock.samples.ExampleTest.addDocument":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":443,"org.easymock.tests2.DelegateToTest.testStubDelegate":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.AnswerTest.stubAnswer":87,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":420,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":91,"org.easymock.tests.UsageExpectAndReturnTest.floatType":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":405,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":347,"org.easymock.tests.UsageThrowableTest.noUpperLimit":174,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":377,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":29,"org.easymock.tests2.SerializationTest.test":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":182,"org.easymock.tests2.UsageConstraintsTest.testSame":45,"org.easymock.samples.SupportTest.addDocument":353,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":387,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":128,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":433,"org.easymock.tests.GenericTest.testPackageScope":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":269,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":126,"org.easymock.tests2.NameTest.nameForMock":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":519,"org.easymock.tests2.UsageStrictMockTest.differentMethods":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":311,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":320,"org.easymock.tests2.MockedExceptionTest.testRealException":84,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":220,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":3,"org.easymock.tests2.NameTest.nameForStrictMock":409,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":415,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":380,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":413,"org.easymock.tests2.UsageStrictMockTest.range":104,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":132,"org.easymock.tests2.UsageConstraintsTest.lessThan":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":359,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":437,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":46,"org.easymock.tests.UsageRangeTest.combination":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":451,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":434,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":211,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":331,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":123,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":146,"org.easymock.tests2.UsageConstraintsTest.cmpTo":51,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":468,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":136,"org.easymock.tests2.CompareToTest.testLessThan":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":213,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":398,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":154,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":414,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":142,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":195,"org.easymock.tests2.CaptureTest.testCapture":527,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.samples.ExampleTest.addAndChangeDocument":345,"org.easymock.tests2.ConstraintsToStringTest.notToString":110,"org.easymock.tests.UsageStrictMockTest.testVerify":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":350,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests2.CompareToTest.testGreateThan":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":230,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":30,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":520,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":187,"org.easymock.tests.LimitationsTest.abstractClass":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":13,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":484,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242}}]
