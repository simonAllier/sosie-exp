[{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[50,51,52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:99","failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,14,89,90,15,16,17,18,91,19,20,21,22,23,92,93,94,95,96,97,24,25,98,99,100,101,102,103,104,105,106,107,108,31,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,32,132,133,134,135,136,50,51,137,138,139,140,141,3,142,143,144,145,146,147,148,149,150,151,152,153,11,154,155,33,34,156,157,35,10,36,37,158,159,160,161,38,162,39,40,163,41,42,164,165,166,6,43,44,45,167,168,169,170,171,172,173,4,5,48,174,175,176,177,178,179,180,181,182,183,184,185,8,186],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"name","key":"name"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[71,73,87,88,24,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[187],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[188,189,190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[50,51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[192,193,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[12,12,13,13,54,195,196,197,198,199,66,67,68,200,92,201,93,202,97,203,204,205,206,207,208,209,210,211,134,50,52,137,138,139,140,212,141,213,3,214,142,143,215,144,216,145,146,147,148,150,151,167,168,170,171,172,217,173,218,4,5,48,49,186],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[219,220,221,222,223,135,224,136,175,176,225,177,178,226,227,179,180,181,182,46,183,184,228,8,229,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":157,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":119,"org.easymock.tests2.StubTest.stubWithReturnValue":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":78,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":6,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests2.DelegateToTest.testReturnException":228,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests.MockClassControlTest.testToString":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":138,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":122,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":165,"org.easymock.tests2.DelegateToTest.testWrongClass":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests.UsageStrictMockTest.range":89,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.samples.ExampleTest.answerVsDelegate":219,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":116,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests2.UsageConstraintsTest.testNull":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":170,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":142,"org.easymock.tests2.CaptureTest.testPrimitive":177,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":18,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":28,"org.easymock.tests2.CaptureTest.testCaptureNone":180,"org.easymock.tests.UsageVerifyTest.twoReturns":60,"org.easymock.tests2.ThreadingTest.testThreadSafe":152,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":195,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":212,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":214,"org.easymock.tests2.UsageConstraintsTest.any":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":187,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":88,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.CaptureTest.testAnd":175,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":143,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":172,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":192,"org.easymock.tests2.CaptureTest.testCaptureLast":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":158,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":166,"org.easymock.tests.MockingTest.testTwoMocks":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":188,"org.easymock.tests2.CaptureTest.testCapture1_2446744":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":69,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":44,"org.easymock.tests.UsageThrowableTest.throwError":98,"org.easymock.tests.UsageStrictMockTest.differentMethods":90,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":11,"org.easymock.tests2.MockBuilderTest.testCreateMockString":216,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":30,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":163,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":224,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":139,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":5,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":211,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests.LimitationsTest.privateConstructor":194,"org.easymock.tests2.UsageConstraintsTest.testNotNull":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":104,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":215,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests.UsageTest.openCallCountByLastCall":63,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageOverloadedMethodTest.overloading":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":39,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":162,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":101,"org.easymock.tests.MockClassControlTest.testEquals":209,"org.easymock.tests2.EasyMockSupportClassTest.testAll":137,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":201,"org.easymock.tests2.CaptureTest.testCaptureAll":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests2.UsageConstraintsTest.testMatches":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":29,"org.easymock.samples.ExampleTest.voteForRemovals":58,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":155,"org.easymock.tests.UsageVarargTest.allKinds":9,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.samples.BasicClassMockTest.testPrintContent":196,"org.easymock.tests2.DelegateToTest.testStubDelegate":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":103,"org.easymock.tests2.AnswerTest.stubAnswer":136,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":106,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":87,"org.easymock.tests.UsageExpectAndReturnTest.floatType":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":42,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":200,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":226,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":111,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":70,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":7,"org.easymock.tests2.CaptureTest.testCaptureFirst":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":112,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":76,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":154,"org.easymock.tests2.CaptureTest.testCapture2_2446744":183,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":144,"org.easymock.tests.GenericTest.testBridgedEquals":202,"org.easymock.tests.UsageExpectAndReturnTest.longType":72,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":77,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":193,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests2.NameTest.nameForStrictMock":47,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":186,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":223,"org.easymock.tests.UsageExpectAndReturnTest.object":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":141,"org.easymock.tests2.UsageStrictMockTest.range":132,"org.easymock.tests2.UsageConstraintsTest.lessThan":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":117,"org.easymock.tests.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":182,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":168,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.MockClassControlTest.testHashCode":208,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":82,"org.easymock.tests2.UsageConstraintsTest.cmpTo":161,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":120,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":0,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":83,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":4,"org.easymock.tests2.UsageConstraintsTest.constraints":156,"org.easymock.tests.CapturesMatcherTest.test":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":86,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":140,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":227,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":75,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":115}}]
