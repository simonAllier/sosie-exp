[{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[41],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[75,76,77,41,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,15,150,151,152,35,153,36,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,16,174],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[105,175,176],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[22,23,24,25,27,177,178,179,28,29,30,31,33,37,38,39],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[101,102,103,104,106,107],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[126,127,180,181,147],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[139,182,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.Range:44","failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,0,1,202,203,204,205,206,207,208,209,210,211,212,213,75,214,215,216,217,76,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,22,23,77,250,251,252,253,254,24,255,256,25,26,257,258,259,260,261,262,41,78,79,80,81,82,83,84,85,86,87,88,89,42,43,44,45,46,263,47,48,49,50,51,52,264,265,266,267,268,269,270,271,27,272,90,91,92,93,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,2,327,328,3,329,177,94,95,96,97,98,330,99,331,332,100,333,334,335,336,337,101,102,103,104,105,106,338,107,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,28,29,361,362,30,31,363,364,365,366,367,368,369,370,371,372,108,109,110,111,112,373,374,375,376,377,378,379,380,381,382,383,4,384,5,385,386,387,388,389,390,391,6,392,393,394,113,114,115,395,396,397,116,117,398,118,119,120,121,399,122,123,124,125,126,127,128,129,130,400,401,402,403,404,131,405,406,407,132,408,409,410,411,32,412,413,133,134,135,136,414,415,137,138,416,417,418,419,420,421,422,423,424,33,34,425,139,182,140,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,7,8,447,448,9,449,10,11,450,12,451,452,453,454,455,456,457,458,459,13,460,461,462,463,14,464,465,466,467,468,469,470,471,472,473,474,475,476,477,141,142,143,144,145,146,147,148,149,15,150,40,151,152,35,153,36,478,479,480,481,482,483,484,485,486,487,488,489,154,155,490,156,491,157,158,159,160,161,492,162,163,164,165,493,166,167,168,169,170,171,172,494,495,496,497,498,499,500,501,502,503,504,37,505,506,507,508,509,38,39,510,511,512,513,514,173,16,174,515,516,517,518,519,520],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,249,22,23,255,25,26,27,521,522,179,360,423,33,34,523,524,525,526,527,528,504],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:318","failures":[264,267],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[101,102,103,104,106,107],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[24,529,521,28,524,530],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[190,192,193,194,195,196,197,198,199,200,201,0,1,203,204,205,206,207,208,209,210,211,212,213,236,242,244,249,22,23,77,250,251,252,253,254,24,255,256,25,26,257,258,259,260,261,262,78,79,80,264,265,266,267,268,269,270,271,27,92,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,2,327,328,3,329,96,97,98,99,334,335,336,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,29,361,362,30,31,363,368,369,370,371,372,108,109,110,110,111,111,112,373,374,375,376,377,378,379,381,382,383,4,384,5,385,386,387,388,389,390,391,6,392,393,394,113,114,115,395,396,397,116,117,398,118,119,120,121,122,125,126,127,128,401,402,403,404,410,411,32,412,413,133,134,135,136,415,137,138,417,421,422,423,424,33,34,425,139,182,140,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,7,8,448,9,449,10,11,450,12,451,452,453,454,455,456,457,458,459,13,460,461,462,463,14,464,465,471,141,143,147,149,150,35,483,156,158,166,172,498,499,501,502,503,504,37,505,506,507,508,509,38,39,510,511,512,514,173,515,516,517,518,519,520],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[454],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[206,212,223,22,252,273,274,277,279,280,281,282,284,285,286,287,289,290,291,292,359,362,397,502,508],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[206,212,22,264,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,328,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[197,198,199,200,201,203,204,207,255,305,306,310,312,313,314,315,316,110,110,111,111,392,397,423,445,446,448,9,449,10,453,455,456,458,459,14,464,465],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[532,139,182,140],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[533,534,535],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,249,22,23,255,25,26,27,360,29,30,31,423,33,34,523,525,535,527,530,528,536,504,37,38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4,5,6,11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[75,76,77,41,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,110,111,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,405,132,133,134,135,136,137,138,139,140,141,143,144,146,147,148,149,150,151,152,35,36,154,155,490,156,491,157,158,159,160,161,492,162,163,164,165,493,166,167,168,169,170,171,172,494,495,496,497,173,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":230,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":506,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":373,"org.easymock.tests2.DelegateToTest.testReturnException":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":209,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.tests.MockClassControlTest.testToString":84,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":273,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":499,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":450,"org.easymock.tests2.UsageTest.wrongArguments":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":203,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":366,"org.easymock.samples.ExampleTest.answerVsDelegate":375,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":76,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":435,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":89,"org.easymock.tests2.CaptureTest.testPrimitive":385,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":292,"org.easymock.tests.UsageTest.moreThanOneArgument":360,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":201,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":58,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":535,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":483,"org.easymock.tests.ReplayStateInvalidUsageTest.times":49,"org.easymock.tests2.DependencyTest.testClassMocking":496,"org.easymock.tests2.AnswerTest.answer":515,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":420,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":215,"org.easymock.tests2.UsageTest.strictResetToDefault":503,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":430,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":261,"org.easymock.tests2.DelegateToTest.testDelegate":444,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":196,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":288,"org.easymock.tests.LimitationsTest.mockFinalMethod":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":248,"org.easymock.tests2.DependencyTest.testClassMockingSupport":497,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":386,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":418,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":44,"org.easymock.tests.UsageThrowableTest.throwError":264,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":217,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":61,"org.easymock.samples.PartialClassMockTest.testGetArea":112,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":45,"org.easymock.tests.MockingTest.testInterfaceMocking":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":335,"org.easymock.tests2.UsageTest.niceToStrict":505,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":147,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":169,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":524,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":282,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":431,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":214,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":364,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":455,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":328,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":350,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":454,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":391,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":296,"org.easymock.tests2.EasyMockSupportClassTest.testAll":156,"org.easymock.tests.MockClassControlTest.testEquals":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":419,"org.easymock.tests2.CaptureTest.testCaptureAll":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":246,"org.easymock.tests.MockNameTest.defaultName":272,"org.easymock.tests2.UsageConstraintsTest.testMatches":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":315,"org.easymock.samples.ExampleTest.voteForRemovals":379,"org.easymock.tests.UsageVarargTest.allKinds":304,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":249,"org.easymock.samples.BasicClassMockTest.testPrintContent":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":270,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":213,"org.easymock.tests2.UsageConstraintsTest.greaterThan":458,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":128,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":107,"org.easymock.samples.ExampleTest.voteForRemoval":376,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":121,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":502,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":77,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":428,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":208,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":439,"org.easymock.tests2.CaptureTest.testCaptureFirst":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":429,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":511,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":346,"org.easymock.tests2.UsageTest.moreThanOneArgument":504,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":412,"org.easymock.tests2.CaptureTest.testCapture2_2446744":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":238,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":303,"org.easymock.tests.GenericTest.testBridgedEquals":81,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":324,"org.easymock.tests.UsageExpectAndReturnTest.longType":342,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":291,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":462,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":312,"org.easymock.tests.UsageCallCountTest.tooManyCalls":325,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":533,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":134,"org.easymock.tests.MockingTest.testNiceClassMocking":100,"org.easymock.tests.MockingTest.testClassMocking":95,"org.easymock.tests2.UsageConstraintsTest.testContains":453,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":181,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":448,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":252,"org.easymock.tests.MockTypeTest.fromEasyMockClass":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":514,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndReturnTest.object":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":298,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":186,"org.easymock.tests.UsageTest.exactCallCountByLastCall":363,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":189,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.MockClassControlTest.testHashCode":87,"org.easymock.tests2.EasyMockSupportTest.testVerify":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":164,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":534,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":194,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":417,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":178,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":500,"org.easymock.tests.UsageVarargTest.varargCharAccepted":297,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":337,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageTest.openCallCountByLastCall":507,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":437,"org.easymock.tests.DefaultClassInstantiatorTest.object":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":184,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":126,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":279,"org.easymock.tests.ReplayStateInvalidCallsTest.times":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":307,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":67,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":526,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":172,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":85,"org.easymock.tests2.UsageTest.resumeIfFailure":510,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":211,"org.easymock.tests2.StubTest.stubWithReturnValue":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":348,"org.easymock.tests2.SerializationTest.testAllMockedMethod":140,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":236,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":530,"org.easymock.samples.SupportTest.voteForRemovals":383,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":285,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":532,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":516,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":191,"org.easymock.tests.UsageExpectAndThrowTest.object":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":460,"org.easymock.tests2.DelegateToTest.testWrongClass":442,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":110,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":408,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":433,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":154,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":529,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":56,"org.easymock.tests2.CaptureTest.testCaptureNone":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":336,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":302,"org.easymock.tests2.ThreadingTest.testThreadSafe":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":167,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":322,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":187,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":108,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":536,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":240,"org.easymock.tests2.UsageConstraintsTest.any":451,"org.easymock.tests2.StubTest.stub":396,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":105,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":47,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":424,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":471,"org.easymock.tests2.SerializationTest.testClass":139,"org.easymock.tests.LimitationsTest.mockNativeMethod":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":480,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":72,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":425,"org.easymock.tests2.NameTest.nameForMocksControl":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":157,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":362,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":513,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":277,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":478,"org.easymock.tests2.CaptureTest.testCaptureLast":389,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":138,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":11,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":461,"org.easymock.tests.MockingTest.testTwoMocks":96,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":68,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":281,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":464,"org.easymock.samples.ExampleTest.removeNonExistingDocument":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":103,"org.easymock.tests2.ConstraintsToStringTest.andToString":527,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":32,"org.easymock.tests2.MockBuilderTest.testCreateMockString":36,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":159,"org.easymock.tests.UsageExpectAndThrowTest.floatType":275,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":518,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":174,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":166,"org.easymock.samples.ExampleTest.voteAgainstRemoval":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":127,"org.easymock.tests.LimitationsTest.privateConstructor":91,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.UsageTest.defaultResetToNice":509,"org.easymock.samples.ExampleTest.voteAgainstRemovals":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":354,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":479,"org.easymock.tests.UsageVarargTest.differentLength":299,"org.easymock.tests2.CallbackTest.callback":501,"org.easymock.tests2.UsageConstraintsTest.equals":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":123,"org.easymock.tests.UsageTest.openCallCountByLastCall":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":205,"org.easymock.tests.UsageCallCountTest.tooFewCalls":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":367,"org.easymock.tests.UsageThrowableTest.throwCheckedException":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":521,"org.easymock.tests.MockingTest.testStrictClassMocking":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":137,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":135,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":415,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":520,"org.easymock.tests.ObjectMethodsTest.testHashCode":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":20,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":413,"org.easymock.tests2.NameTest.nameForNiceMock":403,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":70,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.samples.ExampleTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.DelegateToTest.testStubDelegate":441,"org.easymock.tests2.AnswerTest.stubAnswer":519,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":255,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":40,"org.easymock.tests.UsageVarargTest.varargLongAccepted":301,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":229,"org.easymock.tests.UsageExpectAndReturnTest.floatType":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":173,"org.easymock.tests2.ConstraintsToStringTest.orToString":523,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":459,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":446,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":387,"org.easymock.tests2.SerializationTest.test":182,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":176,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":102,"org.easymock.tests2.UsageConstraintsTest.testSame":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":340,"org.easymock.samples.SupportTest.addDocument":382,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":55,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":160,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":331,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":53,"org.easymock.tests2.NameTest.nameForMock":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":153,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":287,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":262,"org.easymock.tests2.MockedExceptionTest.testRealException":395,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":522,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":233,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":204,"org.easymock.tests2.NameTest.nameForStrictMock":402,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":104,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests.ErrorMessageTest.testGetters":531,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":163,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests2.MockBuilderTest.testWithConstructor":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":161,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":352,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":323,"org.easymock.tests2.UsageConstraintsTest.cmpTo":452,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":73,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":517,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":223,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":508,"org.easymock.tests2.CaptureTest.testCaptureFromStub":392,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":43,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":144,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":353,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":381,"org.easymock.tests2.ConstraintsToStringTest.notToString":525,"org.easymock.tests.UsageStrictMockTest.testVerify":258,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":372,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":245,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":199,"org.easymock.tests.LimitationsTest.abstractClass":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":200,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":432,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":294}}]
