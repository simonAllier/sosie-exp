[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[382,383,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[50,55,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[49,65,134,137,138,139,143,144,145,146,149,160,162,170,173,174,175,182,186,187,190,199,222,233,234,236,268,489,490,296,345,347,348,351,352,353,369,491,385,391,393,395,396,397,420,421,422,424,425],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[33,34,35,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[282,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[19,21,22,23,24,25,26,28,495,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[496,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[382,383,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[166,167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,225,226,227,228,230,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,272,273,274,275,276,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,41,42,43,44,47,48,49,50,52,53,54,55,56,57,59,60,61,62,63,64,65,0,66,67,68,69,70,71,72,73,74,82,83,84,85,87,88,89,91,94,95,96,102,112,115,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,156,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,209,216,217,218,219,220,222,226,227,228,230,233,234,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,288,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,345,346,347,348,349,350,351,352,353,354,355,356,357,358,362,363,365,369,370,371,372,373,374,375,376,377,378,379,380,381,389,390,391,392,393,394,395,396,397,398,399,401,402,405,406,407,408,414,415,416,417,418,419,420,421,422,423,424,425,426,428,429,431,432,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,483,484,485],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[58],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[66],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[17,18,33,44,45,84,89,90,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,499,500,221,224,229,232,501,235],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[404],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[74,502],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[174,503,396,424,425],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[387,434,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":50,"org.easymock.tests2.UsageTest.argumentsOrdered":144,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":345,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":331,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":139,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testReturnException":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":303,"org.easymock.tests.MockingTest.testPartialClassMocking":362,"org.easymock.tests.MockClassControlTest.testToString":310,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":194,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":459,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":115,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageTest.wrongArguments":137,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":375,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":274,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":458,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":478,"org.easymock.tests.UsageTest.moreThanOneArgument":346,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":318,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":214,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":381,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.DependencyTest.testClassMocking":177,"org.easymock.tests2.AnswerTest.answer":91,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":203,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":271,"org.easymock.tests2.UsageTest.strictResetToDefault":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":413,"org.easymock.tests2.DelegateToTest.testDelegate":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":474,"org.easymock.tests.LimitationsTest.mockFinalMethod":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":358,"org.easymock.tests2.DependencyTest.testClassMockingSupport":178,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":439,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":201,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":273,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":385,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":133,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":378,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":434,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":460,"org.easymock.tests2.UsageTest.niceToStrict":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":120,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":226,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":468,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":373,"org.easymock.tests.UsageOverloadedMethodTest.overloading":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":429,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":293,"org.easymock.tests2.EasyMockSupportClassTest.testAll":112,"org.easymock.tests.MockClassControlTest.testEquals":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":402,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":476,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":356,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":319,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":301,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":423,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":0,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":370,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":162,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":166,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":163,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":154,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":405,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":302,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":36,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":168,"org.easymock.tests2.UsageTest.moreThanOneArgument":136,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":339,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":300,"org.easymock.tests.GenericTest.testBridgedEquals":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":421,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":477,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":481,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":383,"org.easymock.tests.UsageCallCountTest.tooManyCalls":422,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":464,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testNiceClassMocking":368,"org.easymock.tests.MockingTest.testClassMocking":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":218,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":408,"org.easymock.tests.MockTypeTest.fromEasyMockClass":272,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":391,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":295,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":353,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":410,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":205,"org.easymock.tests.MockClassControlTest.testHashCode":313,"org.easymock.tests2.EasyMockSupportTest.testVerify":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":122,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":437,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":426,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":147,"org.easymock.tests.UsageVarargTest.varargCharAccepted":294,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":496,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.DefaultClassInstantiatorTest.object":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":436,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":204,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":160,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":311,"org.easymock.tests2.UsageTest.resumeIfFailure":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":269,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":305,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":337,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":471,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":343,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":92,"org.easymock.tests.UsageExpectAndThrowTest.object":469,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":388,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DelegateToTest.testWrongClass":39,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":479,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":480,"org.easymock.tests.UsageStrictMockTest.range":396,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":80,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":470,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":374,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":435,"org.easymock.tests2.CaptureTest.testCaptureNone":27,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":491,"org.easymock.tests.UsageVerifyTest.twoReturns":425,"org.easymock.tests.UsageVarargTest.varargByteAccepted":299,"org.easymock.tests2.ThreadingTest.testThreadSafe":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":126,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":419,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":384,"org.easymock.tests.UsageExpectAndThrowTest.longType":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":342,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":288,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":99,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests2.NameTest.nameForMocksControl":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":101,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":114,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":463,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":238,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":230,"org.easymock.tests.MockingTest.testNicePartialClassMocking":363,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":97,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.MockingTest.testTwoMocks":361,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":467,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":10,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":104,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":206,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":280,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":167,"org.easymock.tests2.MockBuilderTest.testCreateMockString":236,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":308,"org.easymock.tests.UsageExpectAndThrowTest.floatType":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":116,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":94,"org.easymock.tests.UsageVerifyTest.twoThrows":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":46,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":125,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.LimitationsTest.privateConstructor":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.UsageTest.defaultResetToNice":142,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":98,"org.easymock.tests.UsageVarargTest.differentLength":296,"org.easymock.tests2.CallbackTest.callback":199,"org.easymock.tests2.UsageConstraintsTest.equals":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":157,"org.easymock.tests.UsageTest.openCallCountByLastCall":349,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":456,"org.easymock.tests.UsageCallCountTest.tooFewCalls":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":376,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests.MockingTest.testStrictClassMocking":359,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":169,"org.easymock.tests2.NameTest.nameForNiceMock":197,"org.easymock.tests2.DependencyTest.testInterfaceMocking":179,"org.easymock.samples.ExampleTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":132,"org.easymock.tests2.DelegateToTest.testStubDelegate":38,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":394,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":231,"org.easymock.tests.UsageVarargTest.varargLongAccepted":298,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":330,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":213,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":75,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":279,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":86,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":117,"org.easymock.tests.GenericTest.testPackageScope":401,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":212,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":366,"org.easymock.tests2.NameTest.nameForMock":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests2.UsageStrictMockTest.differentMethods":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":473,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":372,"org.easymock.tests2.MockedExceptionTest.testRealException":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests2.NameTest.nameForStrictMock":196,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":222,"org.easymock.tests2.UsageStrictMockTest.range":174,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":208,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.UsageConstraintsTest.testOr":55,"org.easymock.tests.UsageRangeTest.combination":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":149,"org.easymock.tests.UsageTest.wrongArguments":348,"org.easymock.tests2.MockBuilderTest.testWithConstructor":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":118,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":322,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":283,"org.easymock.tests.UsageVarargTest.varargShortAccepted":297,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":420,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":93,"org.easymock.tests2.CompareToTest.testLessThan":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":324,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":223,"org.easymock.tests.UsageTest.unexpectedCallWithArray":347,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":418,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests2.CaptureTest.testCapture":495,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":395,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests.UsageStrictMockTest.testVerify":399,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":392,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.LimitationsTest.abstractClass":286,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":380,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":291}}]
