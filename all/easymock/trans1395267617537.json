[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,1,100,101,102,103,104,105,106,107,108,109,110,111,112,113,52,53,54,55,56,57,58,59,114,60,61,62,63,64,18,115,116,117,118,119,120,121,122,29,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,48,280,281,282,0,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[347,348],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[350,351,352,353,354,310,344,345,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[126,133,246,251,274,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[355],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[356,357,358,359,248,337],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[360,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[52,54,55,56,57,58,59,60,363,61,62,64],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[364,100],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[41,179,42,365],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[2,8,366,9,10,11,12,13,14,15,16,367,17,23,368,41,369,370,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[5,6,371,18,19,20,21,22,24,28,29,30,33,37,42,47,48,49,348,295,372,373,374,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[2,3,4,66,67,68,69,70,71,72,73,5,6,74,75,76,7,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,1,100,101,102,103,104,105,106,107,108,109,110,111,112,113,8,9,11,12,13,14,15,16,17,52,53,54,55,56,57,58,59,114,60,61,62,63,64,18,19,115,20,21,22,23,24,25,26,27,28,116,117,118,119,120,121,122,29,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,147,149,150,151,30,31,32,33,152,34,35,153,154,155,156,157,158,159,160,161,162,163,164,165,37,38,39,40,166,169,170,171,172,173,174,175,176,177,178,41,179,42,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,44,45,46,223,224,225,226,227,232,234,235,238,242,244,245,246,247,248,249,250,251,252,253,254,47,260,261,262,263,264,265,269,270,272,273,274,275,276,277,278,279,48,49,280,281,282,284,285,286,287,288,289,290,291,292,293,294,51,296,297,298,299,300,301,302,303,304,305,306,307,308,309,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[375,92,98,109],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[85,86,88,90,91,93,102,107,52,54,61],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,3,4,4,5,6,7,376,8,9,10,377,11,12,13,14,378,15,16,17,18,19,20,21,22,23,379,24,380,381,25,26,27,28,382,383,121,122,29,384,385,386,387,30,31,32,33,34,35,388,389,390,37,391,392,38,393,394,395,396,397,398,399,400,401,39,402,403,404,405,406,40,407,408,41,42,409,410,43,44,45,46,411,412,413,369,370,47,414,360,415,416,417,361,418,347,48,49,50,348,295,419,420,421,422,372,373,374,423,424,51,425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[426,366,11,26,27],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[144,146,427],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.MocksControl:136","failures":[2,3,3,4,4,5,6,7,376,8,9,10,377,11,12,13,14,378,15,16,17,18,19,20,21,22,23,24,380,381,25,26,27,28,382,383,121,122,29,384,385,386,428,429,387,30,31,32,33,34,35,388,389,390,37,391,392,38,393,394,395,396,397,398,399,400,401,39,402,403,404,405,406,40,407,408,41,42,409,410,43,44,45,46,411,369,370,47,414,360,415,416,417,361,418,347,48,49,50,348,295,419,420,421,422,372,373,374,423,424,51,425],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[2,3,4,5,6,7,376,430,8,431,9,10,432,377,11,12,13,433,14,378,15,16,434,17,18,19,20,21,22,23,24,380,381,25,26,27,28,382,383,121,122,29,386,387,30,31,32,33,34,35,388,389,37,392,38,393,394,395,397,398,399,400,39,402,403,404,405,406,40,41,42,409,410,43,44,45,46,411,369,370,47,414,360,415,416,417,361,418,347,48,49,50,348,295,419,420,421,422,372,373,374,423,424,51,425],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[41,179,42,365],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[85,86,88,90,91,93,102,107,52,54,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[67,145,147,149,234],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[85,86,88,90,91,93,102,107,52,54,61],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[2,66,67,68,69,70,71,72,73,5,6,74,75,76,7,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,1,100,101,102,103,104,105,106,107,108,109,11,13,14,52,53,54,55,56,57,58,59,114,60,61,63,64,18,19,115,20,21,22,24,27,116,117,118,119,120,29,124,126,127,128,129,130,131,132,133,135,136,138,139,140,141,142,145,146,147,149,151,30,31,32,33,152,34,35,153,154,155,156,157,158,159,161,162,163,164,165,37,38,39,40,166,169,170,171,173,174,175,176,177,178,41,179,42,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,44,45,46,232,234,235,242,246,247,249,250,251,252,253,254,47,265,269,272,273,274,275,276,277,278,279,48,49,280,281,282,284,285,286,287,288,290,291,292,293,294,51,296,297,298,299,300,305,306,307,308,309,320,322,323,324,326,327,328,329,331,332,333,334,336,337,338,339,340,341,342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests2.UsageTest.argumentsOrdered":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testReturnException":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests.MockClassControlTest.testToString":420,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":38,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":303,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":162,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":374,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":300,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.UsageTest.argumentsOrdered":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":255,"org.easymock.tests.UsageVarargTest.varargIntAccepted":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":8,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":309,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests2.DependencyTest.testClassMocking":384,"org.easymock.tests2.AnswerTest.answer":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":113,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests2.DelegateToTest.testDelegate":149,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests2.DependencyTest.testClassMockingSupport":385,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":239,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":111,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":408,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":397,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":356,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests2.EasyMockSupportClassTest.testAll":37,"org.easymock.tests.MockClassControlTest.testEquals":373,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":112,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests.MockNameTest.defaultName":271,"org.easymock.tests2.UsageConstraintsTest.testMatches":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.samples.ExampleTest.voteForRemovals":71,"org.easymock.tests.UsageVarargTest.allKinds":294,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":322,"org.easymock.samples.BasicClassMockTest.testPrintContent":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":418,"org.easymock.samples.ExampleTest.voteForRemoval":68,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":117,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":47,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":155,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":144,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":156,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":63,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":293,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":331,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":367,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":332,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests.MockingTest.testNiceClassMocking":411,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testClassMocking":410,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":87,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":282,"org.easymock.tests.MockTypeTest.fromEasyMockClass":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":82,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":161,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":288,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":269,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":234,"org.easymock.tests.MockClassControlTest.testHashCode":372,"org.easymock.tests2.EasyMockSupportTest.testVerify":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":399,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":349,"org.easymock.tests.UsageVarargTest.varargCharAccepted":287,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastCall":132,"org.easymock.tests.DefaultClassInstantiatorTest.object":414,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":164,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":266,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.CapturesMatcherTest.test":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":200,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":433,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":0,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":357,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":365,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":167,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":333,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":334,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":340,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":358,"org.easymock.tests2.CaptureTest.testCaptureNone":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":346,"org.easymock.tests.UsageUnorderedTest.message":265,"org.easymock.tests.UsageVerifyTest.twoReturns":324,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":355,"org.easymock.tests.UsageVarargTest.varargByteAccepted":292,"org.easymock.tests2.ThreadingTest.testThreadSafe":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":402,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":5,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":202,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":353,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":417,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":124,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests2.NameTest.nameForMocksControl":80,"org.easymock.tests2.MockedExceptionTest.testMockedException":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":392,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":14,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":240,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.tests.UsageStrictMockTest.differentMethods":341,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":415,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":118,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":393,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":430,"org.easymock.tests.UsageVerifyTest.twoThrows":323,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":424,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests.UsageVarargTest.differentLength":289,"org.easymock.tests2.CallbackTest.callback":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":380,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":298,"org.easymock.tests.UsageCallCountTest.tooFewCalls":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.MockingTest.testStrictClassMocking":409,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":359,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":171,"org.easymock.tests.ObjectMethodsTest.testHashCode":313,"org.easymock.tests2.CompareToTest.testGreateOrEqual":375,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.NameTest.nameForNiceMock":79,"org.easymock.tests2.DependencyTest.testInterfaceMocking":139,"org.easymock.samples.ExampleTest.addDocument":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.DelegateToTest.testStubDelegate":146,"org.easymock.tests2.AnswerTest.stubAnswer":170,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":338,"org.easymock.tests.UsageVarargTest.varargLongAccepted":291,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndReturnTest.floatType":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":386,"org.easymock.tests2.SerializationTest.test":179,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.samples.SupportTest.addDocument":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":394,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":258,"org.easymock.tests2.NameTest.nameForMock":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":434,"org.easymock.tests2.UsageStrictMockTest.differentMethods":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":231,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":297,"org.easymock.tests2.NameTest.nameForStrictMock":78,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":416,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":176,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":398,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.UsageConstraintsTest.testOr":90,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":249,"org.easymock.tests2.MockBuilderTest.testWithConstructor":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":395,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.UsageVarargTest.varargShortAccepted":290,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":330,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":168,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":412,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":217,"org.easymock.tests2.CaptureTest.testCapture":363,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":72,"org.easymock.tests.UsageStrictMockTest.testVerify":343,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":74,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CompareToTest.testGreateThan":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":307,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":368,"org.easymock.tests.LimitationsTest.abstractClass":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":209,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":159,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":285}}]
