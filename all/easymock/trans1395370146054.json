[{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[46,47,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[43,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:54","sourceCode":"try {\n    return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[]);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62,63,18,64,65,66,67,68,69,70,71,72,73,74,75,49,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,57,151,152,153,154,50,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,46,202,203,204,205,206,207,208,51,209,210,211,212,213,214,215,216,217,218,219,220,17,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,52,53,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,56,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,24,25,26,27,486,487,28,29,30,31,32,488,19,489,490,20,491,492,493,494,495,496,33,34,35,36,497,498,37,38,39,40,41,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,2,3,4,5,6,7,8,9,10,11,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[513],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[172,222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[61,104,106,107,108,109,110,111,115,137,163,168,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,52,316,386,396,403],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[46,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[69,50,164,175,181,187,191,193,243,249,255,259,261,316,347,349,350,398,426,454,470,473,482,516,3,9,10,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[325,330,485,24,25,26,27,486,487,28,29,30,31,32,496,33,34,35,36,497,498,37,38,39,40,41],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[173,174,223,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[216,279,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[66,68,76,77,79,102,104,106,107,108,109,110,111,117,122,123,125,131,151,153,161,162,163,164,167,168,171,196,207,51,209,212,213,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,53,274,275,278,314,315,316,317,319,320,322,327,331,335,338,340,341,345,347,349,350,351,352,360,363,373,379,386,394,395,396,397,398,400,402,403,404,407,408,409,410,411,412,413,414,417,421,422,423,427,428,429,430,431,432,433,434,435,436,437,438,442,56,444,454,455,456,457,459,460,461,462,463,464,466,467,468,469,470,471,472,473,474,475,476,477,479,480,481,482,483,486,20,494,497,499,500,502,503,504,505,507,508,509,513,2,3,5,6,9,10,11,13,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[122,123,125,131,268,331,335,338,340,341,345,351,360,363,373,379,409,411,412,414,483,502,503,504,505,507,508,509,513],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:167","sourceCode":"final org.easymock.internal.ClassProxyFactory.MockMethodInterceptor org.easymock.internal.ClassProxyFactory.MockMethodInterceptor = new org.easymock.internal.ClassProxyFactory.MockMethodInterceptor(java.lang.reflect.InvocationHandler)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[394,395],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":457,"org.easymock.tests2.UsageTest.argumentsOrdered":406,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":67,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":401,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":134,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests.MockClassControlTest.testToString":281,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":387,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":363,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":395,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":308,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":464,"org.easymock.tests2.UsageTest.wrongArguments":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":99,"org.easymock.samples.ExampleTest.answerVsDelegate":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests2.UsageConstraintsTest.testNull":460,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":127,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":436,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":286,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageTest.moreThanOneArgument":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":311,"org.easymock.tests.UsageTest.argumentsOrdered":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":238,"org.easymock.tests.UsageVarargTest.varargIntAccepted":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":292,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":486,"org.easymock.tests.ReplayStateInvalidUsageTest.times":234,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":488,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":356,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":91,"org.easymock.tests2.UsageTest.strictResetToDefault":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.DelegateToTest.testDelegate":516,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":242,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":190,"org.easymock.tests.LimitationsTest.mockFinalMethod":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":159,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":220,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":354,"org.easymock.tests.UsageThrowableTest.throwError":104,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":228,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":93,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":295,"org.easymock.samples.PartialClassMockTest.testGetArea":331,"org.easymock.tests.MockingTest.testInterfaceMocking":124,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests2.UsageTest.niceToStrict":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":368,"org.easymock.tests2.ThreadingTest.testChangeDefault":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":58,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":338,"org.easymock.tests2.MockBuilderTest.testCreateMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":184,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":432,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":97,"org.easymock.tests.UsageOverloadedMethodTest.overloading":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":470,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":254,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":469,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":142,"org.easymock.tests.MockClassControlTest.testEquals":285,"org.easymock.tests2.EasyMockSupportClassTest.testAll":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":157,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":355,"org.easymock.tests.MockNameTest.defaultName":225,"org.easymock.tests2.UsageConstraintsTest.testMatches":471,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.samples.ExampleTest.voteForRemovals":322,"org.easymock.tests.UsageVarargTest.allKinds":150,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":110,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":440,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":515,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":37,"org.easymock.tests2.UsageConstraintsTest.greaterThan":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":423,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":296,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":203,"org.easymock.samples.ExampleTest.voteForRemoval":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":424,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":415,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":288,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":396,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":429,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":133,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":511,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":430,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":408,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":250,"org.easymock.tests2.UsageTest.moreThanOneArgument":398,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":345,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":149,"org.easymock.tests.GenericTest.testBridgedEquals":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":246,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":193,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":478,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":309,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":503,"org.easymock.tests.MockingTest.testNiceClassMocking":128,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests2.UsageConstraintsTest.testContains":468,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":81,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":494,"org.easymock.tests2.UsageConstraintsTest.testFind":459,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":316,"org.easymock.tests.MockTypeTest.fromEasyMockClass":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":384,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests.UsageExpectAndReturnTest.object":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":435,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":144,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":217,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":484,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":33,"org.easymock.tests.MockClassControlTest.testHashCode":284,"org.easymock.tests2.EasyMockSupportTest.testVerify":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":370,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":173,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":353,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":453,"org.easymock.tests.UsageVarargTest.varargCharAccepted":143,"org.easymock.tests2.CaptureTest.testCaptureMultiple":1,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":79,"org.easymock.tests2.UsageTest.openCallCountByLastCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":438,"org.easymock.tests.DefaultClassInstantiatorTest.object":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":172,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":26,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":421,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":283,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":181,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":260,"org.easymock.tests.ReplayStateInvalidCallsTest.times":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":222,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":301,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":379,"org.easymock.tests2.UsageTest.resumeIfFailure":407,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":136,"org.easymock.tests2.StubTest.stubWithReturnValue":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":479,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":252,"org.easymock.tests2.SerializationTest.testAllMockedMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":73,"org.easymock.samples.SupportTest.voteForRemovals":327,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":187,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":78,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":19,"org.easymock.tests.UsageExpectAndThrowTest.object":185,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":476,"org.easymock.tests2.DelegateToTest.testWrongClass":514,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":212,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":213,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":328,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":502,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":340,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":98,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":43,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":53,"org.easymock.tests.UsageVarargTest.varargByteAccepted":148,"org.easymock.tests2.ThreadingTest.testThreadSafe":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":374,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":85,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":218,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":332,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests2.UsageConstraintsTest.any":466,"org.easymock.tests2.StubTest.stub":385,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":224,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":77,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":46,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":232,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":443,"org.easymock.tests2.SerializationTest.testClass":499,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":497,"org.easymock.tests.LimitationsTest.mockNativeMethod":131,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":306,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":445,"org.easymock.tests2.NameTest.nameForMocksControl":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":493,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":362,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":125,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":409,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":341,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":414,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":485,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":509,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":463,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":305,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":477,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":302,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":510,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":405,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":481,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":28,"org.easymock.tests.UsageStrictMockTest.differentMethods":209,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":34,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":452,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":200,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":350,"org.easymock.tests2.MockBuilderTest.testCreateMockString":346,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":279,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":490,"org.easymock.tests.UsageVerifyTest.twoThrows":52,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":373,"org.easymock.samples.ExampleTest.voteAgainstRemoval":320,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":422,"org.easymock.tests.LimitationsTest.privateConstructor":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":480,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":492,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":111,"org.easymock.tests2.UsageTest.defaultResetToNice":404,"org.easymock.samples.ExampleTest.voteAgainstRemovals":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":258,"org.easymock.tests.UsageVarargTest.differentLength":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests2.CallbackTest.callback":426,"org.easymock.tests2.UsageConstraintsTest.equals":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":418,"org.easymock.tests.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":505,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":100,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":44,"org.easymock.tests.UsageThrowableTest.throwCheckedException":108,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":508,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":504,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":487,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":507,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":491,"org.easymock.tests.ObjectMethodsTest.testHashCode":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":22,"org.easymock.tests2.NameTest.nameForNiceMock":390,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":304,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":352,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":299,"org.easymock.tests2.DependencyTest.testInterfaceMocking":394,"org.easymock.samples.ExampleTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":375,"org.easymock.tests2.DelegateToTest.testStubDelegate":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.stubAnswer":20,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":207,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":342,"org.easymock.tests.UsageVarargTest.varargLongAccepted":147,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":66,"org.easymock.tests.UsageExpectAndReturnTest.floatType":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":483,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":329,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":474,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests.UsageThrowableTest.noUpperLimit":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":39,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":455,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":446,"org.easymock.tests2.SerializationTest.test":500,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":199,"org.easymock.tests2.UsageConstraintsTest.testSame":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":244,"org.easymock.samples.SupportTest.addDocument":326,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":506,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":289,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":365,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":38,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":126,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":287,"org.easymock.tests2.NameTest.nameForMock":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":444,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":189,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":495,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests2.NameTest.nameForStrictMock":389,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":337,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":475,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":335,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":293,"org.easymock.tests2.UsageConstraintsTest.lessThan":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":65,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":369,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":42,"org.easymock.tests2.UsageConstraintsTest.testOr":462,"org.easymock.tests.UsageRangeTest.combination":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":410,"org.easymock.tests.UsageTest.wrongArguments":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":366,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":256,"org.easymock.tests.UsageVarargTest.varargShortAccepted":146,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":467,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":307,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":489,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":61,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":403,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":227,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":336,"org.easymock.tests.UsageTest.unexpectedCallWithArray":165,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":303,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":206,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":257,"org.easymock.tests2.CaptureTest.testCapture":12,"org.easymock.tests2.UsageConstraintsTest.constraints":456,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":208,"org.easymock.samples.ExampleTest.addAndChangeDocument":324,"org.easymock.tests.UsageStrictMockTest.testVerify":211,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":325,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":156,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests.LimitationsTest.abstractClass":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":249,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":433,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":140,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":55}}]
