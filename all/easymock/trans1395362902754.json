[{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[36,37,38,39],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:520","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[40,41,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[43,44,45,46,26,47,39,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,24,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,107,108,109,23,110,111],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[109,114,115,116,117,118,119,45,46,26,38,48,120,51,52,53,55,57,121,58,59,60,122,123,124,125,126,127,128,79,129,83,130,85,86,131,90,91,93,94,132,95,133,134,135,136,102,104,105,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[138,139,140],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,2,37,141,142,143,118,44,144,145,119,45,146,46,147,148,149,150,151,26,47,152,153,154,155,39,139,156,4,50,52,53,55,157,56,121,158,159,122,123,160,161,124,61,162,163,164,165,166,167,168,169,170,112,171,172,125,62,173,174,175,176,177,178,179,180,181,182,183,184,185,186,74,187,188,189,190,9,10,12,13,16,17,18,19,21,22,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,84,85,86,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,131,89,92,252,132,133,253,254,255,256,257,258,259,260,261,262,103,105,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[265,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[61,166,174],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[30,266,138,31,32,140,267,268,194,198,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[270,160,62,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,109,37,141,142,143,118,44,144,145,119,45,146,46,147,148,271,149,150,272,151,26,47,152,153,154,155,39,139,156,3,4,5,6,49,50,51,52,53,54,55,157,56,57,121,58,158,159,59,60,122,123,160,161,124,61,162,163,164,165,166,167,168,169,170,112,171,172,125,62,173,174,175,176,273,177,178,179,180,7,8,181,182,183,184,185,186,74,187,188,189,190,9,10,11,12,13,14,15,16,17,18,19,21,22,191,192,193,194,195,196,197,198,274,275,199,276,200,277,278,201,202,23,203,204,279,205,280,281,282,283,284,285,286,127,128,206,110,24,76,78,207,208,209,210,211,287,212,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,219,309,220,221,222,223,224,225,226,227,228,82,83,84,130,85,86,87,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,131,89,91,92,252,93,94,132,95,133,253,254,255,256,310,311,257,258,312,313,314,260,261,262,103,104,105,263,264,315,316,317,318,319,106,320,321,322,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[219,221],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[43,323,324,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:156","sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\")","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[0,2,109,4,50,51,52,53,55,56,57,158,159,59,60,123,163,168,125,178,10,11,13,14,15,16,17,22,199,29,325,326,327,220,83,84,130,85,86,131,89,91,92,252,93,94,132,95,256,257,314,262,103,104,105,113],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests2.UsageTest.argumentsOrdered":60,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":58,"org.easymock.tests2.StubTest.stubWithReturnValue":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":272,"org.easymock.tests2.DelegateToTest.testReturnException":3,"org.easymock.tests.MockingTest.testPartialClassMocking":226,"org.easymock.samples.SupportTest.voteForRemovals":201,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":71,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":28,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":289,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":182,"org.easymock.tests.UsageExpectAndThrowTest.object":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.DelegateToTest.testWrongClass":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":255,"org.easymock.tests2.UsageTest.wrongArguments":57,"org.easymock.tests.UsageStrictMockTest.range":85,"org.easymock.samples.ConstructorCalledMockTest.testTax":34,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":192,"org.easymock.tests2.UsageConstraintsTest.testNull":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests2.CaptureTest.testPrimitive":12,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":308,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests.UsageTest.moreThanOneArgument":89,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":47,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":251,"org.easymock.tests2.CaptureTest.testCaptureNone":17,"org.easymock.tests.UsageUnorderedTest.message":95,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":134,"org.easymock.tests.UsageVerifyTest.twoReturns":105,"org.easymock.tests.UsageVarargTest.varargByteAccepted":321,"org.easymock.tests2.ThreadingTest.testThreadSafe":74,"org.easymock.tests.UsageTest.argumentsOrdered":94,"org.easymock.tests.UsageVarargTest.varargIntAccepted":317,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":286,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":207,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":323,"org.easymock.tests2.UsageConstraintsTest.any":168,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":211,"org.easymock.tests.UsageExpectAndThrowTest.longType":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":217,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":67,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.tests2.SerializationTest.testClass":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.LimitationsTest.mockNativeMethod":258,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":213,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":266,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests2.NameTest.nameForMocksControl":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":293,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":304,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":41,"org.easymock.tests2.CaptureTest.testCaptureLast":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":198,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":166,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":80,"org.easymock.tests2.CaptureTest.testCapture1_2446744":13,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":297,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":179,"org.easymock.tests.UsageThrowableTest.throwError":219,"org.easymock.tests.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.ConstraintsToStringTest.andToString":70,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":188,"org.easymock.tests2.MockBuilderTest.testCreateMockString":117,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":135,"org.easymock.tests.UsageExpectAndThrowTest.floatType":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests.UsageVerifyTest.twoThrows":104,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":183,"org.easymock.samples.PartialClassMockTest.testGetArea":200,"org.easymock.tests2.CompareToTest.testLessOrEqual":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":208,"org.easymock.samples.ExampleTest.voteAgainstRemoval":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":290,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests.LimitationsTest.privateConstructor":40,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":268,"org.easymock.tests2.UsageConstraintsTest.testNotNull":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":225,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":115,"org.easymock.samples.ExampleTest.voteAgainstRemovals":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.UsageVarargTest.differentLength":137,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":33,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":99,"org.easymock.tests.UsageTest.openCallCountByLastCall":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":298,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":64,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":310,"org.easymock.tests.UsageCallCountTest.tooFewCalls":284,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":112,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":18,"org.easymock.tests.UsageThrowableTest.throwCheckedException":222,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":306,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":69,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":98,"org.easymock.tests2.CaptureTest.testCaptureAll":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":108,"org.easymock.samples.ExampleTest.voteForRemovals":205,"org.easymock.tests2.NameTest.nameForNiceMock":326,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":190,"org.easymock.tests.UsageVarargTest.allKinds":113,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":103,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.DelegateToTest.testStubDelegate":4,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":224,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":120,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests2.UsageConstraintsTest.greaterThan":62,"org.easymock.tests.UsageVarargTest.varargLongAccepted":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":214,"org.easymock.samples.ExampleTest.voteForRemoval":203,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":139,"org.easymock.tests2.ConstraintsToStringTest.orToString":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":35,"org.easymock.tests.UsageThrowableTest.noUpperLimit":309,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":287,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":14,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":44,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.tests2.UsageConstraintsTest.testSame":164,"org.easymock.samples.SupportTest.addDocument":278,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests.GenericTest.testPackageScope":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.CaptureTest.testCapture2_2446744":21,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":322,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":127,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":305,"org.easymock.tests2.UsageStrictMockTest.differentMethods":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":294,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":193,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":42,"org.easymock.tests2.NameTest.nameForStrictMock":325,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":36,"org.easymock.tests2.UsageConstraintsTest.testContains":170,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":274,"org.easymock.tests2.UsageConstraintsTest.testFind":162,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":129,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":114,"org.easymock.tests2.UsageStrictMockTest.range":52,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":146,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":118,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":101,"org.easymock.tests2.UsageConstraintsTest.testOr":165,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":140,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":315,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":30,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":66,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":126,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":136,"org.easymock.tests2.UsageConstraintsTest.cmpTo":169,"org.easymock.tests.UsageVarargTest.varargCharAccepted":318,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":107,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":218,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":90,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":221,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":285,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests2.CaptureTest.testCapture":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests2.UsageConstraintsTest.constraints":124,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":280,"org.easymock.tests2.ConstraintsToStringTest.notToString":65,"org.easymock.tests.CapturesMatcherTest.test":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.UsageStrictMockTest.testVerify":88,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":277,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":82,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":184,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":15,"org.easymock.tests2.UsageTest.resumeIfFailure":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":210,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":45}}]
