[{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,3,4,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[251,252,134,134,135,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[253,254,0,17,21,25,26,29,37,255,256,65,66,257,258,68,259,74,88,260,261,262,263,264,265,266,267,268,269,270,1,150,271,272,273,274,275,276,229,277,278,3,4,279,280,281,282,283,284],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[285,286,269,287,288,280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[285,286,269,287,288,280],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,290,291,9,10,11,292,293,12,13,14,253,15,16,254,0,17,18,294,295,296,297,298,19,299,300,301,302,303,304,20,21,22,23,24,25,26,27,28,29,30,31,32,305,306,307,308,309,310,33,311,34,289,312,35,36,313,37,38,314,39,40,41,42,43,44,45,46,47,48,315,49,50,51,316,317,318,319,320,321,322,52,53,54,55,323,56,57,58,59,60,61,324,325,62,255,63,64,256,65,66,326,327,67,257,258,68,259,328,69,70,329,330,71,331,72,73,74,75,332,76,77,78,79,80,81,333,82,83,84,85,86,87,88,89,90,91,92,93,334,94,95,96,97,335,98,99,100,101,102,260,103,104,105,106,336,337,107,251,338,108,261,109,262,339,340,110,263,341,342,111,112,113,114,343,344,264,265,266,345,346,347,348,349,115,350,351,352,353,354,355,116,117,118,119,356,357,358,120,359,360,121,361,362,363,364,365,366,367,368,369,122,370,371,372,373,374,123,375,376,124,125,126,127,128,129,130,131,132,377,133,134,135,136,137,138,139,378,379,380,381,382,383,384,385,386,387,388,389,390,267,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,140,141,142,143,144,406,407,408,409,145,146,410,411,412,147,413,414,415,416,417,418,268,148,269,149,270,1,150,151,152,419,420,421,153,154,155,156,157,158,271,272,273,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,159,160,446,447,161,448,449,450,451,452,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,453,454,182,455,456,457,458,459,183,184,460,185,461,462,463,464,186,187,465,466,467,468,469,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,209,210,211,212,213,214,215,216,217,218,219,220,221,496,222,223,276,224,225,226,227,228,229,230,231,232,233,3,4,497,498,234,235,279,236,280,281,499,500,282,283,284,237,238,239,240,501,502,503,504,505,506,507,508,509,510,511,241,242,512,513,514,515,516,243,517,244,245,246,247,248,249,250],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[261,340,263,265],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[285,286,88,288,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[9,10,11,12,13,15,16,254,0,17,18,19,20,21,22,23,24,25,26,28,29,30,31,33,34,289,35,37,40,41,43,44,52,53,58,59,61,62,255,63,64,65,66,326,327,68,259,69,70,329,71,75,77,79,80,95,260,105,109,111,113,114,115,124,125,126,127,128,129,130,131,132,133,136,137,138,267,140,141,142,143,144,146,148,149,270,1,150,151,159,160,446,447,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,464,186,187,465,466,467,468,469,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,233,3,4,498,234,235,279,236,499,500,284,241,242,512,514,515,245,246,247,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.Range:70","failures":[0,17,1,150],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[52,53,54,55,61,324,74,75,76,77,78,79,80,81,333,82,91,92,95,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[519,83,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[44,255,327,116,117,118,119,403,404,405,406,407,408,446,447,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,464,187,465,466,467,468,469,470,3,235,279,500,515,245,246,247,248,249,250],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[5,6,7,8,290,291,9,10,11,292,293,12,13,14,253,15,16,254,0,17,18,294,295,296,297,298,19,299,300,301,302,303,304,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,289,312,35,36,313,520,37,38,314,39,40,41,42,43,44,45,46,47,48,315,49,50,51,316,317,318,319,521,320,321,322,52,53,54,55,323,56,57,58,59,60,61,324,325,62,255,63,64,256,65,66,326,327,67,257,258,68,259,328,69,70,329,330,71,331,72,73,74,75,332,76,77,78,79,80,81,333,82,83,84,85,86,87,88,89,90,91,92,93,334,94,95,96,97,335,98,99,100,101,102,260,103,104,105,106,336,337,107,251,338,108,261,109,262,339,340,110,522,263,341,523,342,111,112,113,524,114,343,344,264,265,525,266,345,346,347,348,349,115,350,351,352,353,354,355,116,117,118,119,356,357,358,120,359,360,121,361,362,363,364,365,366,367,368,369,122,370,371,372,373,374,123,375,376,124,125,126,127,128,129,130,131,132,377,133,134,135,136,137,138,139,378,379,380,381,382,383,526,384,385,386,387,388,389,527,390,267,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,140,141,142,143,144,406,407,408,409,145,146,410,411,412,147,413,414,415,416,417,418,268,148,269,149,270,1,150,151,152,419,420,421,153,154,155,156,157,158,271,272,273,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,159,160,446,447,161,448,449,450,451,452,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,453,454,182,455,275,456,457,458,459,183,184,460,185,461,462,463,464,186,187,465,466,467,468,469,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,470,471,472,473,209,210,211,212,213,214,215,216,217,218,219,220,221,496,222,223,276,224,225,226,227,228,229,230,231,232,233,3,4,497,498,234,235,279,236,280,281,499,500,282,283,284,237,238,239,240,501,502,503,504,505,506,507,508,509,510,511,241,242,512,513,514,515,516,243,517,244,245,246,247,248,249,250],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[52,54,61,74,75,77,79,80,333,91,95],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[52,54,55,323,56,57,58,60,528,61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[52,54,61,74,75,77,79,80,333,91,95],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,11,12,13,14,253,15,16,254,0,17,18,33,34,289,312,35,36,37,38,39,40,41,42,43,44,46,47,50,51,52,53,54,55,323,56,57,58,59,60,61,324,325,62,255,63,64,256,65,66,326,327,67,257,258,68,259,69,70,329,71,331,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,334,94,95,96,97,98,99,100,101,102,260,103,104,105,106,336,107,108,261,109,262,110,263,111,112,264,265,266,116,117,118,119,127,128,129,130,131,132,377,133,379,380,381,384,267,391,392,393,394,395,396,397,398,399,400,401,402,140,141,142,143,144,145,146,412,147,413,414,415,416,417,418,268,148,269,149,270,1,150,151,152,153,154,155,156,157,158,271,272,273,159,160,446,447,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,464,186,187,465,466,467,468,469,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,470,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,276,224,225,226,227,228,229,230,231,232,233,3,4,498,234,235,279,236,280,281,499,500,282,283,284,237,238,239,240,502,241,242,512,513,514,515,243,517,244,245,246,247,248,249,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[36,313,40,529,530,47,51,316,522,523,524,344,252,525,356,357,358,120,359,360,121,361,362,363,364,365,366,367,368,369,122,370,371,372,373,374,123,375,376,134,135],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message","this":"message"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[13,253,16,0,17,21,22,23,24,25,26,28,29,30,31,37,44,52,53,54,55,323,56,57,58,60,61,324,325,62,256,65,66,257,258,72,73,74,75,76,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,265,268,269,149,1,150,159,447,464,186,465,466,467,468,469,208,229,3,234,281,282,283],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[36,313,532,40,42,45,46,47,48,50,51,317,320,102,260,104,105,106,336,107,251,338,108,261,109,262,339,340,110,533,263,341,342,111,112,113,114,344,264,265,534,266,116,117,118,356,357,358,120,359,360,121,361,362,363,364,365,366,367,368,369,122,370,371,372,373,374,123,375,376,125,126,134,134,135,135,139,383,384,385,386,387,388,389,390,409,145,146,410,411,412,147,413,414,415,416,417,418,453,454,182,455,457,458,459,183,184,185,463,504,509,244],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[5,6,7,8,9,10,11,292,293,12,13,14,253,15,16,254,0,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,289,312,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,323,56,57,58,59,60,61,324,325,62,255,63,64,256,65,66,326,327,67,257,258,68,259,328,69,70,329,330,71,331,72,73,74,75,76,77,78,79,80,81,333,82,83,84,85,86,87,88,89,90,91,92,93,334,94,95,96,97,98,99,100,101,102,260,103,104,105,106,336,107,108,261,109,262,110,263,111,112,113,114,264,265,266,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,377,133,134,134,135,135,136,137,138,139,379,380,381,384,267,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,140,141,142,143,144,406,407,408,145,146,410,412,147,413,414,415,416,417,418,268,148,269,149,270,1,150,151,152,419,420,421,153,154,155,156,157,158,271,272,273,438,444,159,160,446,447,161,448,449,450,451,452,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,459,183,184,185,464,186,187,465,466,467,468,469,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,470,472,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,276,224,225,226,227,228,229,230,231,232,233,3,4,497,498,234,235,279,236,280,281,499,500,282,283,284,237,238,239,240,501,502,241,242,512,513,514,515,516,243,517,244,245,246,247,248,249,250],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[522],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests2.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":66,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":138,"org.easymock.tests2.DelegateToTest.testReturnException":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":246,"org.easymock.tests.MockingTest.testPartialClassMocking":183,"org.easymock.tests.MockClassControlTest.testToString":413,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":335,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":162,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":121,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":10,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageTest.wrongArguments":256,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":239,"org.easymock.samples.ExampleTest.answerVsDelegate":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":509,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":462,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":29,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":181,"org.easymock.tests.UsageTest.moreThanOneArgument":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":448,"org.easymock.tests.UsageTest.argumentsOrdered":283,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":214,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":479,"org.easymock.tests.ReplayStateInvalidUsageTest.times":399,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests2.DependencyTest.testClassMocking":290,"org.easymock.tests2.AnswerTest.answer":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":506,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":523,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":24,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":231,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":71,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":478,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":177,"org.easymock.tests.LimitationsTest.mockFinalMethod":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":213,"org.easymock.tests2.DependencyTest.testClassMockingSupport":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":501,"org.easymock.tests2.CaptureTest.testCapture1_2446744":323,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":6,"org.easymock.tests.UsageThrowableTest.throwError":464,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":393,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":508,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":275,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":529,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":482,"org.easymock.samples.PartialClassMockTest.testGetArea":139,"org.easymock.tests.MockingTest.testInterfaceMocking":460,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":163,"org.easymock.tests2.UsageTest.niceToStrict":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":365,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":383,"org.easymock.tests2.ThreadingTest.testChangeDefault":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":171,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":285,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":25,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":237,"org.easymock.tests.UsageOverloadedMethodTest.overloading":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":374,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":498,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":496,"org.easymock.tests.MockClassControlTest.testEquals":417,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":7,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":211,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":143,"org.easymock.samples.ExampleTest.voteForRemovals":132,"org.easymock.tests.UsageVarargTest.allKinds":228,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":233,"org.easymock.samples.BasicClassMockTest.testPrintContent":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":212,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":468,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":250,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":527,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":262,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":483,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.samples.ExampleTest.voteForRemoval":129,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":510,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":521,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":336,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":475,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":244,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":22,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":245,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":23,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":517,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":195,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":312,"org.easymock.tests2.CaptureTest.testCapture2_2446744":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":265,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":227,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":272,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":209,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":534,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":180,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":497,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":140,"org.easymock.tests.UsageCallCountTest.tooManyCalls":273,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":467,"org.easymock.tests.MockingTest.testNiceClassMocking":463,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":533,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":154,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests.MockTypeTest.fromEasyMockClass":507,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":28,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":223,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":381,"org.easymock.tests.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":471,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":449,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":514,"org.easymock.tests.MockClassControlTest.testHashCode":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":346,"org.easymock.tests2.EasyMockSupportTest.testVerify":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":367,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":512,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":277,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":331,"org.easymock.tests.UsageVarargTest.varargCharAccepted":222,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":526,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastCall":326,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":403,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":465,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":345,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":481,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":168,"org.easymock.tests.ReplayStateInvalidCallsTest.times":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":488,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":123,"org.easymock.tests2.UsageTest.resumeIfFailure":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":504,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":248,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":524,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":197,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.samples.SupportTest.voteForRemovals":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":286,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":174,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":444,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":292,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":473,"org.easymock.tests.UsageExpectAndThrowTest.object":172,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":485,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.samples.ConstructorCalledMockTest.testTax":134,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":321,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":401,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":287,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":421,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":306,"org.easymock.tests.UsageUnorderedTest.message":267,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":274,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":226,"org.easymock.tests2.ThreadingTest.testThreadSafe":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":370,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":125,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":382,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":503,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":398,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndThrowTest.longType":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":247,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":397,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":296,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":493,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.NameTest.nameForMocksControl":101,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":307,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":360,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":500,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":166,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":184,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.CompareToTest.testCompareEqual":519,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":294,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":502,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":459,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":489,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":310,"org.easymock.samples.ExampleTest.removeNonExistingDocument":377,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":395,"org.easymock.tests.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":347,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":309,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":266,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":412,"org.easymock.tests.UsageExpectAndThrowTest.floatType":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":520,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":122,"org.easymock.samples.ExampleTest.voteAgainstRemoval":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":419,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.LimitationsTest.privateConstructor":454,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":530,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":469,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.UsageTest.defaultResetToNice":67,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests.UsageVarargTest.differentLength":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":295,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.UsageConstraintsTest.equals":332,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":518,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":251,"org.easymock.tests.UsageTest.openCallCountByLastCall":499,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":446,"org.easymock.tests.UsageCallCountTest.tooFewCalls":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":240,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":308,"org.easymock.tests.UsageThrowableTest.throwCheckedException":466,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":288,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":470,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":49,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":14,"org.easymock.tests.ObjectMethodsTest.testHashCode":380,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":491,"org.easymock.tests2.NameTest.nameForNiceMock":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":35,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":486,"org.easymock.tests2.DependencyTest.testInterfaceMocking":9,"org.easymock.samples.ExampleTest.addDocument":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":371,"org.easymock.tests2.DelegateToTest.testStubDelegate":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.stubAnswer":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":149,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":343,"org.easymock.tests.UsageVarargTest.varargLongAccepted":225,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":135,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":516,"org.easymock.tests.UsageThrowableTest.noUpperLimit":186,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":317,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":56,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.samples.SupportTest.addDocument":136,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":315,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":476,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":362,"org.easymock.tests.GenericTest.testPackageScope":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":461,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":474,"org.easymock.tests2.NameTest.nameForMock":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":525,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":176,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":232,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":322,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":160,"org.easymock.tests2.NameTest.nameForStrictMock":99,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":342,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":320,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":263,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":480,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":21,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":366,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":305,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":260,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":224,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":271,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":494,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":293,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":327,"org.easymock.tests2.CaptureTest.testCaptureFromStub":324,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":392,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":341,"org.easymock.tests.UsageTest.unexpectedCallWithArray":280,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":490,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":157,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":202,"org.easymock.tests2.CaptureTest.testCapture":528,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":133,"org.easymock.tests.UsageStrictMockTest.testVerify":152,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":124,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":57,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":532,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.LimitationsTest.abstractClass":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":26,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220}}]
