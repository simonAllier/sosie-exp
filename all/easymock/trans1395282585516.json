[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[7,8],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[0,9,10,11,12,13,14,15,2,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,31,32],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[33,0,9,34,35,36,37,38,39,40,41,42,43,44,45,46,10,47,48,49,50,51,52,53,54,55,56,57,58,59,60,11,61,12,62,13,14,15,63,64,65,66,67,68,69,70,71,72,73,74,75,76,1,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,2,107,16,17,108,3,18,19,20,109,110,111,112,113,114,115,116,117,118,119,120,121,122,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,21,164,165,22,23,24,166,167,168,169,170,171,25,6,172,173,174,175,176,177,178,179,180,181,182,183,184,8,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,26,27,225,226,227,228,229,230,4,231,232,28,233,29,234,5,235,30,31,236,32,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[37,45,177,178,181,184,185,186,187,188,190,196,203,26],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,9,34,35,36,47,48,49,50,51,53,54,55,56,57,58,59,61,12,13,63,74,75,76,1,77,78,79,80,81,85,296,89,90,92,97,102,17,18,19,20,111,112,114,115,116,117,297,125,132,133,134,298,138,139,141,146,151,156,157,159,161,163,164,22,166,167,168,169,6,176,177,178,179,181,184,186,187,188,189,190,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,220,222,223,227,299,229,4,231,28,233,29,30,31,32,237,238,241,242,243,244,246,247,248,249,250,251,254,260,261,262,263,264,265,266,267,268,269,270,271,273,276,278,279,280,281,282,283,284,287,288,289,290,291,292,293,295],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:201","failures":[300,301,302,303,161,304,167,218,219,305,306,220,222,223,307,308,26,27,225,263,264,265,272,309,275,276,310,285,285,286,286,287],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[311,312,313,314,315,316],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[312,315],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[319,320,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[322,323,324,325,326,161,304,167,327,308],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[328,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[329,10,88,94,100,104,106,2,137,143,149,153,155,245,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[33,0,9,34,35,36,37,330,38,39,45,46,58,59,60,62,14,15,64,65,66,67,68,75,1,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,2,107,108,3,20,116,123,124,125,130,132,133,134,298,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,23,24,167,168,170,171,25,6,172,173,174,175,176,177,178,179,180,181,182,183,184,8,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,219,220,222,223,26,227,4,231,232,233,234,5,235,236,32,237,239,240,241,242,243,244,245,248,249,250,251,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,275,276,277,278,279,281,287,288,289,290,291,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[122,122,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[33,0,9,331,332,37,38,39,45,46,10,47,48,49,50,51,52,53,54,55,56,57,58,59,60,333,334,11,61,12,62,13,14,15,63,335,64,65,66,67,68,69,70,71,72,73,74,75,76,1,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,2,107,17,108,3,18,19,20,109,110,111,112,114,115,116,117,336,123,124,125,126,127,128,129,130,131,337,338,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,21,164,165,22,23,24,166,168,169,170,171,25,6,172,173,174,175,176,177,178,179,180,181,182,183,184,8,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,210,211,225,226,227,228,229,230,4,231,232,28,233,29,234,5,30,31,236,32,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,266,267,268,269,270,271,273,278,279,280,281,282,283,284,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[33,0,9,62,15,63,107,165,24,166,232],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[339,340,341,260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[342,162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[0,46,60,75,1,77,78,79,80,81,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,2,3,126,127,128,129,130,131,134,225,226,227,228,4,5,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[343,241,243,244,245,246,247,248,250,344,251,252,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[161,304,346,167,347,348,327,307,308,349,309,285,286],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[351,352,353,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[33,0,9,356,34,35,36,357,331,332,358,359,37,330,38,39,360,361,45,46,350,362,363,10,47,48,49,50,51,52,53,54,55,56,57,58,59,60,364,11,61,12,62,13,14,15,63,335,64,65,66,67,68,69,70,71,72,73,74,75,76,1,77,78,79,80,81,82,83,84,85,86,365,317,366,367,296,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,2,107,17,108,3,18,19,20,368,109,110,111,112,114,115,116,117,301,123,124,125,126,127,128,129,130,131,369,318,370,371,132,372,133,134,373,298,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,374,157,158,159,375,160,161,162,163,21,164,165,22,23,24,166,167,168,169,170,171,25,6,172,173,174,175,176,177,178,179,180,181,182,183,184,8,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,219,220,222,223,26,225,226,227,228,229,230,4,231,232,28,233,29,234,5,235,30,31,236,32,237,376,377,238,239,240,378,379,380,381,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,275,276,277,278,279,280,281,282,283,284,285,285,286,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[382,383,384,385,386,45,364,62,64,65,66,67,68,69,70,71,72,73,82,83,86,387,123,124,165,170,171,172,173,174,175,180,182,183,8,185,186,191,192,193,252,256,285,285,286,286],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[33,0,9,34,35,36,331,332,37,38,39,45,10,47,48,49,50,51,53,54,55,56,57,58,59,60,61,12,62,13,14,15,63,64,65,66,67,68,74,75,76,1,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,2,107,17,108,3,18,19,20,109,110,111,112,114,115,116,117,123,124,125,130,132,133,134,298,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,22,23,24,166,167,168,169,170,171,25,6,172,173,174,175,176,177,178,179,180,181,182,183,184,8,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,220,222,223,227,229,230,4,231,232,28,233,29,234,5,30,31,236,32,237,238,239,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,276,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[388,389,390],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":204,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":29,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":284,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":127,"org.easymock.tests.MockingTest.testPartialClassMocking":34,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":87,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":263,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":177,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":120,"org.easymock.samples.ExampleTest.answerVsDelegate":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":303,"org.easymock.tests2.UsageConstraintsTest.testNull":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":269,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":203,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":338,"org.easymock.tests2.CaptureTest.testPrimitive":244,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":86,"org.easymock.tests.UsageTest.moreThanOneArgument":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":71,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":218,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.AnswerTest.answer":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":217,"org.easymock.tests2.CaptureTest.testAnd":241,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":198,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":44,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":367,"org.easymock.tests2.CaptureTest.testCapture1_2446744":245,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":215,"org.easymock.tests.UsageThrowableTest.throwError":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":73,"org.easymock.samples.PartialClassMockTest.testGetArea":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests2.UsageTest.niceToStrict":233,"org.easymock.tests2.ThreadingTest.testChangeDefault":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":220,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":118,"org.easymock.tests.UsageOverloadedMethodTest.overloading":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":147,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":58,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":320,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":250,"org.easymock.tests2.EasyMockSupportClassTest.testAll":262,"org.easymock.tests.MockClassControlTest.testEquals":337,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":216,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":72,"org.easymock.samples.ExampleTest.voteForRemovals":293,"org.easymock.tests.UsageVarargTest.allKinds":57,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":43,"org.easymock.samples.BasicClassMockTest.testPrintContent":283,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":131,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":375,"org.easymock.tests2.UsageConstraintsTest.greaterThan":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":277,"org.easymock.samples.ExampleTest.voteForRemoval":290,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":196,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":126,"org.easymock.tests2.CaptureTest.testCaptureFirst":254,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":197,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.CaptureTest.testCapture2_2446744":253,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":329,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":56,"org.easymock.tests.GenericTest.testBridgedEquals":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests.UsageExpectAndReturnTest.longType":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":40,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":105,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":189,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":208,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":227,"org.easymock.tests2.UsageConstraintsTest.testFind":172,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":11,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":202,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":323,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":334,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":331,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":152,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":47,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":133,"org.easymock.tests2.EasyMockSupportTest.testVerify":206,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":214,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":299,"org.easymock.tests.UsageVarargTest.varargCharAccepted":50,"org.easymock.tests2.CaptureTest.testCaptureMultiple":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":205,"org.easymock.tests.DefaultClassInstantiatorTest.object":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":93,"org.easymock.tests.CapturesMatcherTest.test":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":265,"org.easymock.tests2.UsageTest.resumeIfFailure":236,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":129,"org.easymock.tests2.StubTest.stubWithReturnValue":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":327,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":145,"org.easymock.tests2.SerializationTest.testAllMockedMethod":169,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":360,"org.easymock.samples.SupportTest.voteForRemovals":281,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":354,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":361,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":376,"org.easymock.tests.UsageExpectAndThrowTest.object":97,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":124,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":222,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":119,"org.easymock.tests2.CaptureTest.testCaptureNone":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":55,"org.easymock.tests2.ThreadingTest.testThreadSafe":257,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":112,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":85,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests2.StubTest.stub":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":128,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests2.SerializationTest.testClass":167,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":155,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":301,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests2.NameTest.nameForMocksControl":381,"org.easymock.tests2.MockedExceptionTest.testMockedException":226,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":266,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":223,"org.easymock.tests.MockingTest.testNicePartialClassMocking":35,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":271,"org.easymock.tests2.CaptureTest.testCaptureLast":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":296,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":192,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":297,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":313,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":259,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":346,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":264,"org.easymock.samples.ExampleTest.voteAgainstRemoval":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":276,"org.easymock.tests2.UsageConstraintsTest.testNotNull":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":225,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":151,"org.easymock.tests.UsageVarargTest.differentLength":52,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":352,"org.easymock.tests.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":84,"org.easymock.tests.UsageCallCountTest.tooFewCalls":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":121,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":240,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":261,"org.easymock.tests2.NameTest.nameForNiceMock":380,"org.easymock.tests2.DependencyTest.testInterfaceMocking":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":324,"org.easymock.samples.ExampleTest.addDocument":292,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests2.AnswerTest.stubAnswer":239,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":307,"org.easymock.tests.UsageVarargTest.varargLongAccepted":54,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":154,"org.easymock.tests.UsageExpectAndReturnTest.floatType":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":161,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":286,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":185,"org.easymock.tests.UsageThrowableTest.noUpperLimit":76,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.SerializationTest.test":168,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":246,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":312,"org.easymock.tests2.UsageConstraintsTest.testSame":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":137,"org.easymock.samples.SupportTest.addDocument":280,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":339,"org.easymock.tests.GenericTest.testPackageScope":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.NameTest.nameForMock":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":148,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":39,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":83,"org.easymock.tests2.NameTest.nameForStrictMock":379,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":306,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":270,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":186,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":219,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":193,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":325,"org.easymock.tests2.CaptureTest.testCaptureRightOne":251,"org.easymock.tests2.UsageConstraintsTest.testOr":175,"org.easymock.tests.UsageRangeTest.combination":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":267,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":149,"org.easymock.tests.UsageVarargTest.varargShortAccepted":53,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":113,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":377,"org.easymock.tests2.CompareToTest.testLessThan":328,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":252,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":305,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":150,"org.easymock.tests2.CaptureTest.testCapture":344,"org.easymock.tests2.UsageConstraintsTest.constraints":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":294,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":41,"org.easymock.tests2.CompareToTest.testGreateThan":7,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":200}}]
