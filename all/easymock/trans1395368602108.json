[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,0,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,2,3,4,5,6,7,8,9,10,11,12,13,14,15,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,294,295,296,64,110,111,112,297,298,299,300,301,157,165,167,168,302,303,304,305,306,307,243,285,287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[308,64,66,69,70,110,111,112,164,165,167,168,243,244,250,251,309,310,311,312,285,287,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16,24,25,26,27,28,30,39,61,62,63,64,67,68,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,165,167,168,170,172,173,174,175,178,180,181,185,187,188,189,190,191,192,193,194,0,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,313,216,217,218,2,5,11,12,219,220,221,222,224,225,226,227,234,236,237,241,242,243,245,247,248,253,254,255,256,257,258,259,260,261,263,264,266,273,274,275,276,277,278,279,281,282,285,287,288,291,292,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,154,315,255,316,256,258,259,260,282],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1555","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[317,318,319,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[64,110,111,112,301,165,168,169,243,285,288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,321,31,322,323,324,325,326,32,33,34,35,36,327,37,38,328,329,330,331,39,332,40,41,42,43,44,45,333,334,46,47,48,49,50,51,52,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,53,357,358,359,360,361,362,363,364,365,366,367,368,54,55,56,57,58,59,60,61,62,369,370,371,372,63,64,65,66,67,68,69,70,71,72,73,373,374,375,74,75,76,77,78,79,80,81,376,377,378,379,380,381,382,383,384,385,82,83,386,84,387,388,389,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,390,116,117,118,119,120,121,122,123,391,392,393,394,395,396,397,398,124,399,125,126,127,128,129,130,131,297,298,400,401,402,403,404,405,406,407,408,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,409,152,153,154,299,155,156,300,301,157,410,411,412,158,159,160,161,162,163,164,165,166,167,168,169,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,315,436,437,438,439,440,441,442,443,444,445,170,171,172,173,174,175,176,177,178,179,180,181,182,446,447,448,449,450,451,183,184,185,186,187,188,189,190,452,191,192,193,194,0,195,453,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,454,455,456,457,458,459,213,460,461,462,463,464,465,214,466,215,313,216,217,467,468,469,470,471,218,472,473,474,475,476,477,2,3,4,5,6,7,8,9,10,11,12,13,14,15,478,479,219,220,221,222,223,480,224,225,226,481,227,228,229,230,231,232,233,482,483,234,235,236,237,484,485,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,486,255,487,316,256,257,258,259,488,260,261,262,263,264,265,266,267,489,268,490,491,269,270,271,272,492,493,273,274,275,276,494,277,278,279,495,280,281,282,496,309,310,311,312,283,284,285,286,287,288,289,497,498,499,500,501,502,503,504,505,290,506,507,291,508,509,510,511,512,513,514,515,516,292,517,518,519,520,521,293,522,523],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[232,235,267,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1608","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[16,20,21,24,25,27,28,30,39,55,56,57,58,59,61,62,370,63,64,67,68,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,124,399,125,126,127,128,131,409,152,153,165,167,168,415,170,172,173,174,175,178,180,181,185,187,188,189,190,191,192,193,194,0,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,313,216,217,218,2,5,11,12,219,220,221,222,225,233,234,236,237,239,241,242,243,245,247,248,253,254,255,257,261,262,263,264,265,266,268,270,271,272,273,274,275,276,277,278,279,281,285,287,288,290,291,292,293],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[363],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"defaultValue"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[46,62,64,66,69,70,75,89,93,94,96,99,110,111,112,124,399,125,126,136,140,141,143,146,301,162,165,167,169,171,175,176,179,188,189,191,193,194,198,201,202,204,211,239,243,244,245,246,250,251,252,280,282,283,285,287,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[16,39,82,83,84,106,216,225,233,234,236,237,239,254,261,263,264,266,273,274,275,276,277,278,279,290,291,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[327],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":190,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.UsageTest.argumentsOrdered":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":433,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":19,"org.easymock.tests2.DelegateToTest.testReturnException":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":41,"org.easymock.tests.MockingTest.testPartialClassMocking":82,"org.easymock.tests.MockClassControlTest.testToString":393,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":496,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":511,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":291,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":308,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":356,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageTest.wrongArguments":244,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":406,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":388,"org.easymock.tests2.UsageConstraintsTest.testNull":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":264,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":57,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":448,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":109,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":340,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests.ReplayStateInvalidUsageTest.times":365,"org.easymock.tests2.DependencyTest.testClassMocking":478,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":231,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":403,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":125,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":326,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests.LimitationsTest.mockFinalMethod":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":36,"org.easymock.tests2.DependencyTest.testClassMockingSupport":479,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":297,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":489,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":229,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":359,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":523,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":343,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.MockingTest.testInterfaceMocking":386,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":106,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":512,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests2.UsageTest.niceToStrict":245,"org.easymock.tests2.ThreadingTest.testChangeDefault":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":234,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":519,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":303,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":516,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":96,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":60,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":199,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":390,"org.easymock.tests.MockClassControlTest.testEquals":397,"org.easymock.tests2.EasyMockSupportClassTest.testAll":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":34,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":230,"org.easymock.tests.MockNameTest.defaultName":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":357,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests.UsageVarargTest.allKinds":123,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":35,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":45,"org.easymock.tests2.UsageConstraintsTest.greaterThan":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":506,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":399,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":272,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":344,"org.easymock.samples.ExampleTest.voteForRemoval":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":492,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":267,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":336,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":504,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":480,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":92,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":216,"org.easymock.tests2.UsageTest.moreThanOneArgument":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":239,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":122,"org.easymock.tests.GenericTest.testBridgedEquals":329,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":51,"org.easymock.tests.UsageExpectAndReturnTest.longType":88,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":409,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":55,"org.easymock.tests.UsageCallCountTest.tooManyCalls":52,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":520,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests.MockingTest.testNiceClassMocking":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":274,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.UsageConstraintsTest.testContains":198,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":334,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":191,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":62,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageExpectAndReturnTest.object":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":117,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":323,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":486,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":101,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":155,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.MockClassControlTest.testHashCode":396,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":514,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":154,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":228,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":454,"org.easymock.tests.UsageVarargTest.varargCharAccepted":116,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.DefaultClassInstantiatorTest.object":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":373,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":515,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":395,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":270,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":102,"org.easymock.tests.ReplayStateInvalidCallsTest.times":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":349,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":293,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":305,"org.easymock.tests2.UsageTest.resumeIfFailure":252,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":43,"org.easymock.tests2.StubTest.stubWithReturnValue":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":223,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":444,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":487,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":371,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":503,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":338,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":416,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":121,"org.easymock.tests2.ThreadingTest.testThreadSafe":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":517,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":49,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":130,"org.easymock.tests2.UsageConstraintsTest.any":196,"org.easymock.tests2.StubTest.stub":280,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":42,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":363,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests2.SerializationTest.testClass":221,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":104,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":354,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":499,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests2.MockedExceptionTest.testMockedException":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":507,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":237,"org.easymock.tests.MockingTest.testNicePartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":467,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.CompareToTest.testCompareEqual":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":298,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":279,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":353,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":350,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":495,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":211,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":502,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":501,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":378,"org.easymock.tests2.ConstraintsToStringTest.andToString":306,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":313,"org.easymock.tests2.MockBuilderTest.testCreateMockString":240,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":508,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":505,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":292,"org.easymock.samples.ExampleTest.voteAgainstRemoval":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":414,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":271,"org.easymock.tests.LimitationsTest.privateConstructor":331,"org.easymock.tests2.UsageConstraintsTest.testNotNull":210,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.UsageVarargTest.differentLength":118,"org.easymock.tests2.CallbackTest.callback":282,"org.easymock.tests2.UsageConstraintsTest.equals":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":490,"org.easymock.tests.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":129,"org.easymock.tests.UsageCallCountTest.tooFewCalls":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":500,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":294,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":277,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":217,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":352,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":347,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.samples.ExampleTest.addDocument":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":522,"org.easymock.tests2.DelegateToTest.testStubDelegate":225,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":120,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":103,"org.easymock.tests.UsageExpectAndReturnTest.floatType":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":254,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":21,"org.easymock.tests2.ConstraintsToStringTest.orToString":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests.UsageThrowableTest.noUpperLimit":75,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":204,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":188,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":446,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.SerializationTest.test":222,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":86,"org.easymock.tests2.UsageConstraintsTest.testSame":193,"org.easymock.samples.SupportTest.addDocument":23,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":494,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":337,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":509,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":387,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":335,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":97,"org.easymock.tests2.UsageStrictMockTest.differentMethods":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":491,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":126,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":295,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":368,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":265,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":379,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":233,"org.easymock.tests2.UsageStrictMockTest.range":287,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":341,"org.easymock.tests2.UsageConstraintsTest.lessThan":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":513,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":497,"org.easymock.tests2.UsageConstraintsTest.testOr":194,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":262,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":510,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":98,"org.easymock.tests.UsageVarargTest.varargShortAccepted":119,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":50,"org.easymock.tests2.UsageConstraintsTest.cmpTo":197,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":355,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":316,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":426,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":358,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":482,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":351,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":48,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":99,"org.easymock.tests2.UsageConstraintsTest.constraints":189,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.samples.ExampleTest.addAndChangeDocument":31,"org.easymock.tests2.ConstraintsToStringTest.notToString":304,"org.easymock.tests.UsageStrictMockTest.testVerify":413,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":33,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":107,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":91,"org.easymock.tests.LimitationsTest.abstractClass":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":108,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":114}}]
