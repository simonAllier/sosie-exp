[{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[91,107,108],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[94],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[27,146,28,147],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[0,148,149,150,151,152,153,154,125,155,156,157,126,127,158,128,129,130,131,132,133,134,135,159,160,161,162,163,164,165,166,136,137,167,168,169,138,139,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,109,186,187,188,189,190,110,111,191,192,2,3,4,5,193,194,6,7,195,196,197,198,199,200,201,202,203,112,204,205,8,9,206,10,207,11,12,13,14,15,208,16,17,18,19,209,20,21,22,23,24,25,26,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,27,146,28,29,30,31,32,33,34,35,36,37,38,39,236,40,41,42,43,44,237,238,239,240,45,46,47,241,242,243,244,245,48,49,246,50,51,52,53,247,54,55,56,57,58,59,60,61,62,63,64,65,248,249,250,251,252,253,254,255,256,257,258,259,260,261,66,262,263,264,67,265,266,267,268,140,141,142,143,269,270,271,272,273,274,144,145,275,276,68,69,70,71,277,278,279,280,281,282,283,284,285,72,73,74,75,76,286,77,287,288,78,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,114,115,307,308,116,117,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,118,340,341,119,342,343,344,79,80,81,82,83,84,85,86,345,346,347,348,349,350,351,352,353,354,355,87,88,89,90,91,92,356,93,357,358,359,360,361,362,363,364,365,366,367,368,369,1,370,371,372,373,374,375,376,377,378,379,380,381,382,94,95,96,97,98,383,384,385,386,387,388,389,390,391,392,393,394,395,120,99,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,121,100,413,414,415,416,101,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,122,123,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,102,103,489,104,490,491,492,105,106],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,149,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[185,109,110,111,202,204,232,233,234,235,306,115,116,117,118,340,342,121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[493,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[94,95,96,97,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[498,493],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[148,149,150,152,153,154,155,156,157,126,127,128,129,130,131,132,133,135,159,160,161,162,163,164,165,166,136,137,167,168,169,138,139,170,176,183,184,185,109,186,187,188,189,190,110,111,191,192,2,3,4,5,194,6,7,198,199,200,201,202,203,112,204,205,10,12,20,26,218,225,228,229,230,27,146,28,29,31,35,36,37,39,41,42,44,237,238,239,240,45,241,242,243,244,245,48,49,246,50,51,52,53,54,57,58,59,60,63,64,65,248,249,250,251,252,253,254,255,256,257,258,259,260,261,267,268,140,141,142,143,269,270,271,272,273,274,144,145,275,276,70,283,284,285,75,76,77,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,114,115,307,308,116,117,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,339,118,340,341,119,342,343,345,346,347,348,349,353,354,357,358,95,96,386,388,389,390,392,393,120,99,408,409,410,411,412,121,419,420,421,422,423,424,425,426,499,499,430,431,432,434,435,436,437,438,439,440,441,442,122,123,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,469,470,471,472,473,474,475,481,482,483,484,485,486,488,102,103,489,104,490,491,492,105,106],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[27,146,28,147],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[371,375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[153,154,155,225,227,228,230,372,390,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[185,109,110,111,202,112,204,232,233,234,235,306,115,116,117,118,340,119,342,500,501,502,121,442,122,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[2,3,4,5,6,7,10,12,20,26,503,504,505,27,28,29,506,31,32,35,36,37,39,41,42,507,44,45,48,49,50,51,52,53,54,57,58,59,60,65,70,74,75,76,77,80,95,96,97,99,100,101,102,102,103,103,104,105,106],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[35,37,39,507,44,104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[183,189,268,285,302,305,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,393,411,419,421,422,423,424,425,426,122],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[149,152,153,154,155,156,157,126,127,128,129,130,131,132,133,135,160,161,162,163,164,165,166,136,137,167,169,138,139,170,184,185,186,188,189,191,202,112,204,229,230,35,241,242,51,59,249,250,251,254,255,258,260,268,141,143,269,272,273,274,144,276,284,285,289,290,291,292,293,302,305,306,307,308,310,311,314,316,317,318,319,321,322,323,324,326,327,328,329,340,119,342,353,354,357,386,387,388,389,408,409,412,419,422,423,424,425,426,442,122,446,447,450,452,453,454,455,457,458,459,460,462,463,464,465,482,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[140,142,269,270,271,274,144,145,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":127,"org.easymock.tests2.UsageTest.argumentsOrdered":111,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":1,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":489,"org.easymock.tests2.DelegateToTest.testReturnException":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":299,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":81,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":231,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":310,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":500,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":199,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":408,"org.easymock.tests2.UsageTest.wrongArguments":109,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":482,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":101,"org.easymock.tests2.UsageConstraintsTest.testNull":129,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":50,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":412,"org.easymock.tests.UsageTest.moreThanOneArgument":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":329,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":476,"org.easymock.tests.UsageTest.argumentsOrdered":117,"org.easymock.tests.UsageVarargTest.varargIntAccepted":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":293,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests2.DependencyTest.testClassMocking":196,"org.easymock.tests2.AnswerTest.answer":225,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":240,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":414,"org.easymock.tests2.CaptureTest.testAnd":140,"org.easymock.tests2.UsageTest.strictResetToDefault":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":480,"org.easymock.tests2.DelegateToTest.testDelegate":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":325,"org.easymock.tests.LimitationsTest.mockFinalMethod":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests2.DependencyTest.testClassMockingSupport":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":383,"org.easymock.tests2.CaptureTest.testCapture1_2446744":269,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":238,"org.easymock.tests.UsageThrowableTest.throwError":419,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":398,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":416,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":182,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":211,"org.easymock.samples.PartialClassMockTest.testGetArea":104,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":399,"org.easymock.tests.MockingTest.testInterfaceMocking":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":16,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":311,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":319,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":413,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":393,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":457,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":283,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":274,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":10,"org.easymock.tests.MockClassControlTest.testEquals":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":327,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":503,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":497,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":486,"org.easymock.tests.UsageVarargTest.allKinds":441,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":442,"org.easymock.samples.BasicClassMockTest.testPrintContent":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":425,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":178,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":60,"org.easymock.samples.ExampleTest.voteForRemoval":483,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":61,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":99,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":298,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests2.CaptureTest.testCaptureFirst":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":453,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":244,"org.easymock.tests2.CaptureTest.testCapture2_2446744":275,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":440,"org.easymock.tests.GenericTest.testBridgedEquals":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":474,"org.easymock.tests.UsageExpectAndReturnTest.longType":449,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":328,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":466,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":475,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":3,"org.easymock.tests.MockingTest.testNiceClassMocking":78,"org.easymock.tests.MockingTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":468,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":65,"org.easymock.tests2.UsageConstraintsTest.testFind":128,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":285,"org.easymock.tests.MockTypeTest.fromEasyMockClass":415,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.object":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":435,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":309,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":462,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":172,"org.easymock.tests.MockClassControlTest.testHashCode":84,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":18,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":237,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":212,"org.easymock.tests.UsageVarargTest.varargCharAccepted":434,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":494,"org.easymock.tests.DefaultClassInstantiatorTest.object":87,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":216,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":58,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":316,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":463,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":82,"org.easymock.tests2.UsageTest.resumeIfFailure":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":301,"org.easymock.tests2.StubTest.stubWithReturnValue":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":375,"org.easymock.samples.SupportTest.voteForRemovals":492,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":322,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":147,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":381,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":226,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":429,"org.easymock.tests.UsageExpectAndThrowTest.object":320,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":137,"org.easymock.tests2.DelegateToTest.testWrongClass":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":353,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":354,"org.easymock.tests.UsageStrictMockTest.range":119,"org.easymock.samples.ConstructorCalledMockTest.testTax":102,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":265,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":321,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":406,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests2.CaptureTest.testCaptureNone":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests.UsageUnorderedTest.message":121,"org.easymock.tests.UsageVerifyTest.twoReturns":123,"org.easymock.tests.UsageVarargTest.varargByteAccepted":439,"org.easymock.tests2.ThreadingTest.testThreadSafe":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":21,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":472,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":105,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":300,"org.easymock.tests.UsageExpectAndThrowTest.longType":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":402,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":465,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":215,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.MockedExceptionTest.testMockedException":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":11,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":213,"org.easymock.tests2.CaptureTest.testCaptureLast":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":384,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":74,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":446,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":318,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":110,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":139,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":220,"org.easymock.tests.UsageStrictMockTest.differentMethods":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":173,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":89,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":243,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":13,"org.easymock.tests.UsageExpectAndThrowTest.floatType":312,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":228,"org.easymock.tests.UsageVerifyTest.twoThrows":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":47,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.LimitationsTest.privateConstructor":69,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":426,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":63,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.differentLength":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":214,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests2.UsageConstraintsTest.equals":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":55,"org.easymock.tests.UsageTest.openCallCountByLastCall":307,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":410,"org.easymock.tests.UsageCallCountTest.tooFewCalls":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests.UsageThrowableTest.throwCheckedException":423,"org.easymock.tests.MockingTest.testStrictClassMocking":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":358,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":219,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":230,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":245,"org.easymock.tests2.DependencyTest.testInterfaceMocking":198,"org.easymock.samples.ExampleTest.addDocument":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":22,"org.easymock.tests2.DelegateToTest.testStubDelegate":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.AnswerTest.stubAnswer":229,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":340,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":438,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":464,"org.easymock.tests.UsageExpectAndReturnTest.floatType":448,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":103,"org.easymock.tests.UsageThrowableTest.noUpperLimit":420,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":157,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":66,"org.easymock.tests2.SerializationTest.test":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":270,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":108,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":447,"org.easymock.tests2.UsageConstraintsTest.testSame":130,"org.easymock.samples.SupportTest.addDocument":491,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":193,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":14,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":179,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":287,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":458,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":43,"org.easymock.tests2.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":450,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":324,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":389,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":409,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":407,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":34,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":67,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":501,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":136,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":112,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":175,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":124,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":368,"org.easymock.tests2.CaptureTest.testCaptureRightOne":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":17,"org.easymock.tests2.UsageConstraintsTest.testOr":131,"org.easymock.tests.UsageRangeTest.combination":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":115,"org.easymock.tests2.MockBuilderTest.testWithConstructor":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":15,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargShortAccepted":437,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":92,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":473,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":227,"org.easymock.tests2.CompareToTest.testLessThan":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":363,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":145,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":397,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageTest.unexpectedCallWithArray":114,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":460,"org.easymock.tests2.UsageConstraintsTest.constraints":126,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":488,"org.easymock.tests.UsageStrictMockTest.testVerify":344,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":490,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":271,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":452,"org.easymock.tests.LimitationsTest.abstractClass":68,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":292,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":502,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255}}]
