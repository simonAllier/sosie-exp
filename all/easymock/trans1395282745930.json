[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,1,66,67,68,69,70,71,72,73,74,75,76,77,78,2,79,3,80,4,5,6,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,7,8,9,114,115,116,117,118,119,120,121,11,122,123,124,125,126,12,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,15,254,16,17,255,256,18,19,20,257,21,22,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,23,303,304,305,306,307,308,309,310,311,312,24,313,25,314,315,26,27,316,317,28,29,30,318,319,320,321,322,323,31,324,325,326,32,33,327,328,34,329,330,331,332,333,334,335,336,337,338,339,340,341,342,35,343,344,345,346,347,348,349,350,49,351,36,37,352,38,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,39,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,40,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,41,460,461,42,43,44,462,463,464,45,46,47,48,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[231,232,236],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[491,492,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[117,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[80,15,255,256,20,257,22,296,317,41,462,463,48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[292,293,334,339,340,342,344,349,351,494,352,353,354,495,496,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,488],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[58,71,72,73,74,75,80,5,6,114,115,118,123,125,12,127,128,129,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,212,213,214,217,222,224,225,226,227,228,229,242,243,245,15,254,255,256,20,257,22,270,271,277,281,283,284,286,287,289,296,300,302,23,303,304,305,306,309,24,313,25,317,29,30,323,31,324,325,326,32,33,327,328,34,329,330,332,333,334,335,337,338,339,35,346,348,350,37,353,363,372,382,384,385,39,386,388,389,390,391,392,393,395,396,397,398,399,400,40,401,402,403,404,405,407,408,409,410,412,413,414,416,417,420,421,422,423,425,426,430,433,443,449,455,456,457,458,459,41,460,461,43,462,463,464,47,48,474,475,481,488,489],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[0,58,59,70,71,72,73,74,75,3,80,114,115,116,117,118,265,270,271,309,317,379,384,385,39,386,388,389,390,391,392,393,394,395,396,397,398,399,400,40,401,402,403,404,405,406,407,408,409,410,413,414,415,416,417,418,419,420,421,422,423,424,425,426,452,454,458],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[497,384,401,407],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[0,3,5,14,16,17,18,19,21,22,278,29,42,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,79,3,80,4,5,6,81,107,110,111,112,113,8,9,114,115,116,117,118,123,124,12,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,212,213,214,217,222,223,224,225,226,227,228,229,242,243,245,15,254,17,255,256,18,19,20,257,21,22,265,270,271,272,274,275,279,280,281,282,283,284,285,286,287,288,289,291,294,295,296,299,300,301,302,23,303,304,305,306,309,313,26,316,317,28,29,30,318,323,31,324,325,326,32,33,328,34,329,330,331,332,333,334,335,337,338,339,346,348,350,353,362,363,364,366,372,382,384,385,39,386,388,389,390,391,392,393,395,396,397,398,399,400,40,401,402,403,404,405,406,407,408,409,410,412,413,414,415,416,417,418,419,420,421,422,423,425,426,430,433,443,449,452,454,455,456,457,458,459,41,460,461,42,43,44,462,463,45,46,48,474,475,481,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[498,499],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[40],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[307,315,341,347,380,433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[500,488,489,490],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[349,354,491,501,502,503,492,493,504,488],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[292,293,310,494,352,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[39,415,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[3,506,507,16,508,509],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[80,15,255,256,20,257,22,296,317,41,462,463,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[50,51,52,53,54,55,56,57,99,104,107,122,123,124,125,126,215,216,217,218,231,232,233,234,235,236,238,239,240,241,242,243,245,248,281,292,292,293,293,294,295,302,23,304,305,306,307,308,309,310,311,312,24,313,25,314,315,332,333,334,335,338,339,341,35,343,345,346,347,348,350,351,36,37,38,353,354,380,381,382,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,465,466,467,469,472,473,488,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"classMockingDisabled","key":"classMockingDisabled"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,79,80,4,5,6,81,114,115,116,117,118,124,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,212,213,214,222,223,224,225,226,227,228,229,249,250,251,252,253,15,254,255,256,20,257,21,22,261,262,263,264,265,266,270,271,272,274,275,279,280,282,283,284,285,286,287,288,289,291,294,295,296,299,300,23,305,313,26,316,317,28,29,30,318,323,31,324,325,326,32,33,328,34,329,330,346,348,350,362,363,364,366,372,386,389,391,392,408,411,412,413,414,420,421,423,426,455,456,457,459,41,460,461,43,44,462,463,47,48,474,475,481,488,489],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[59,116,137,219,220,221,261,262,263,264,265,266,380,381,382,383,412],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":386,"org.easymock.tests2.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":140,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":44,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":279,"org.easymock.tests2.DelegateToTest.testReturnException":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":242,"org.easymock.tests.MockClassControlTest.testToString":52,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":356,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":433,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":166,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageTest.wrongArguments":42,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":92,"org.easymock.samples.ExampleTest.answerVsDelegate":285,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":104,"org.easymock.tests2.UsageConstraintsTest.testNull":389,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":304,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":34,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":57,"org.easymock.tests2.CaptureTest.testPrimitive":416,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests.UsageTest.moreThanOneArgument":254,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":94,"org.easymock.tests.UsageVarargTest.varargIntAccepted":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":493,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":75,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":481,"org.easymock.tests.ReplayStateInvalidUsageTest.times":162,"org.easymock.tests2.DependencyTest.testClassMocking":472,"org.easymock.tests2.AnswerTest.answer":296,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":413,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":101,"org.easymock.tests2.UsageTest.strictResetToDefault":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":326,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":98,"org.easymock.tests2.DelegateToTest.testDelegate":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests2.DependencyTest.testClassMockingSupport":473,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":258,"org.easymock.tests2.CaptureTest.testCapture1_2446744":417,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":156,"org.easymock.tests.UsageThrowableTest.throwError":222,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":103,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":11,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":505,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":451,"org.easymock.samples.PartialClassMockTest.testGetArea":281,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":157,"org.easymock.tests.MockingTest.testInterfaceMocking":244,"org.easymock.tests2.CompareToTest.testLessOrEqual":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":167,"org.easymock.tests2.UsageTest.niceToStrict":43,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":130,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":346,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":175,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":32,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":90,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":399,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":498,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":398,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":422,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":63,"org.easymock.tests2.EasyMockSupportClassTest.testAll":430,"org.easymock.tests.MockClassControlTest.testEquals":56,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests2.CaptureTest.testCaptureAll":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.MockNameTest.defaultName":89,"org.easymock.tests2.UsageConstraintsTest.testMatches":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.samples.ExampleTest.voteForRemovals":289,"org.easymock.tests.UsageVarargTest.allKinds":70,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.samples.BasicClassMockTest.testPrintContent":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":228,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests2.UsageConstraintsTest.greaterThan":401,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":238,"org.easymock.samples.ExampleTest.voteForRemoval":286,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":456,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":107,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":324,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":426,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":325,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":461,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":458,"org.easymock.tests2.CaptureTest.testCapture2_2446744":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":148,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":69,"org.easymock.tests.GenericTest.testBridgedEquals":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":8,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":406,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.UsageCallCountTest.tooManyCalls":9,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":227,"org.easymock.tests.MockingTest.testNiceClassMocking":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":333,"org.easymock.tests.MockingTest.testClassMocking":240,"org.easymock.tests2.UsageConstraintsTest.testContains":397,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":109,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":382,"org.easymock.tests2.UsageConstraintsTest.testFind":388,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests.MockTypeTest.fromEasyMockClass":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":454,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":2,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":65,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":86,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":135,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":76,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":354,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests.MockClassControlTest.testHashCode":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":440,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":379,"org.easymock.tests.UsageVarargTest.varargCharAccepted":64,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":230,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":153,"org.easymock.tests2.UsageTest.openCallCountByLastCall":462,"org.easymock.tests.DefaultClassInstantiatorTest.object":231,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":119,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":84,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":441,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":449,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":53,"org.easymock.tests2.UsageTest.resumeIfFailure":47,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":412,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":349,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":283,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":178,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":152,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":297,"org.easymock.tests.UsageExpectAndThrowTest.object":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":78,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":404,"org.easymock.tests2.DelegateToTest.testWrongClass":364,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":470,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":427,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":164,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":91,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests2.CaptureTest.testCaptureNone":421,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":10,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":68,"org.easymock.tests2.ThreadingTest.testThreadSafe":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":444,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":113,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":87,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":294,"org.easymock.tests2.CaptureTest.testCapture_2617107":415,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.UsageConstraintsTest.any":395,"org.easymock.tests2.StubTest.stub":411,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":160,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.SerializationTest.testClass":488,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":372,"org.easymock.tests.LimitationsTest.mockNativeMethod":217,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests2.NameTest.nameForMocksControl":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests2.MockedExceptionTest.testMockedException":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":432,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":453,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":245,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":350,"org.easymock.tests.MockingTest.testNicePartialClassMocking":243,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.CaptureTest.testCaptureLast":420,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":339,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":405,"org.easymock.tests.MockingTest.testTwoMocks":241,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":409,"org.easymock.samples.ExampleTest.removeNonExistingDocument":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":233,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":457,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":434,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":299,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":355,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":443,"org.easymock.samples.ExampleTest.voteAgainstRemoval":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":313,"org.easymock.tests.LimitationsTest.privateConstructor":216,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":496,"org.easymock.tests2.UsageConstraintsTest.testNotNull":408,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":229,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":380,"org.easymock.tests2.UsageTest.defaultResetToNice":464,"org.easymock.samples.ExampleTest.voteAgainstRemovals":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.UsageVarargTest.differentLength":1,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests2.UsageConstraintsTest.equals":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":93,"org.easymock.tests.UsageThrowableTest.throwCheckedException":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":239,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":337,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":301,"org.easymock.tests.ObjectMethodsTest.testHashCode":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":492,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":459,"org.easymock.tests2.NameTest.nameForNiceMock":359,"org.easymock.tests2.DependencyTest.testInterfaceMocking":474,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.DelegateToTest.testStubDelegate":363,"org.easymock.tests2.AnswerTest.stubAnswer":300,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":80,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":49,"org.easymock.tests.UsageVarargTest.varargLongAccepted":67,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":353,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":293,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":402,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":385,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":465,"org.easymock.tests2.SerializationTest.test":489,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":418,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":232,"org.easymock.tests2.UsageConstraintsTest.testSame":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.samples.SupportTest.addDocument":282,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":435,"org.easymock.tests.GenericTest.testPackageScope":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":134,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":246,"org.easymock.tests2.NameTest.nameForMock":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":129,"org.easymock.tests2.MockedExceptionTest.testRealException":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":143,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":115,"org.easymock.tests2.NameTest.nameForStrictMock":358,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":305,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":469,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":403,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":35,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":439,"org.easymock.tests2.CaptureTest.testCaptureRightOne":423,"org.easymock.tests2.UsageConstraintsTest.testOr":391,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":436,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.UsageVarargTest.varargShortAccepted":66,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":236,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":7,"org.easymock.tests2.UsageConstraintsTest.cmpTo":396,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":133,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":463,"org.easymock.tests2.CaptureTest.testCaptureFromStub":424,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":155,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":343,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":112,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":291,"org.easymock.tests.UsageStrictMockTest.testVerify":82,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":280,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.LimitationsTest.abstractClass":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":74,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":33,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":61}}]
