[{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[91,0,1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[92,93,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,44,44,45,45,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,0,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[203,3,4,5,204,205,6,7,206,207,208,209,210,211,212,213,214,215,216,217,20,21,218,92,22,219,220,221,222,223,224,225,226,227,228,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,107,265,266,267,268,29,30,31,32,33,34,35,269,270,271,112,113,114,37,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,11,38,299,300,301,302,303,304,305,306,307,308,309,310,39,40,41,42,43,124,125,128,311,312,44,45,313,314,315,316,317,318,319,129,130,131,65,66,320,321,12,13,322,323,324,325,326,14,15,327,328,135,137,140,141,142,143,145,146,147,148,149,150,151,329,152,153,154,155,330,156,157,158,159,160,163,164,165,166,72,176,179,189,195,84,331,332,333,334,335,336,337,338,198,339,340,341,342,343,200,201,202,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,94,46,363,364,47,365,366,367,368,48,49,369,370,50,51,52,53,371,372,373,374,54,375,55,56,376,57,58,59,377,378,379,380,60,61,62,381,382,0,1,2,383,384,385,386,387,388,389,390,391,392,393,63,394,395,396,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[323,157,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[321,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[398,399,400],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:29","sourceCode":"-1726286682930686024L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[120,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[120,402,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[403,404],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[405,406,407],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[203,3,5,204,205,6,7,206,207,208,209,210,211,213,214,215,216,217,20,21,218,92,22,219,226,229,230,231,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,107,265,266,267,268,29,30,269,270,271,112,113,114,37,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,11,38,299,300,301,302,303,304,305,306,307,308,309,310,39,40,41,42,43,124,125,128,311,312,313,314,315,316,317,318,319,129,130,131,65,66,320,321,12,13,322,323,324,325,14,15,328,140,142,143,148,149,150,151,329,152,153,154,155,330,156,157,158,160,165,72,176,179,189,195,84,335,336,337,338,198,339,340,341,342,343,202,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,46,364,47,365,366,367,368,48,49,369,370,50,51,52,53,371,372,373,374,54,375,55,56,376,57,58,59,377,378,379,380,60,61,62,381,382,0,1,2,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[408,335,358,396,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":370,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":85,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":323,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":66,"org.easymock.tests2.DelegateToTest.testReturnException":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":223,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":372,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":20,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":275,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":96,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":156,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":354,"org.easymock.tests2.CaptureTest.testPrimitive":386,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":22,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":33,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests2.AnswerTest.answer":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":334,"org.easymock.tests2.CaptureTest.testAnd":383,"org.easymock.tests2.UsageTest.strictResetToDefault":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":349,"org.easymock.tests2.DelegateToTest.testDelegate":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":292,"org.easymock.tests.LimitationsTest.mockFinalMethod":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":387,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":332,"org.easymock.tests.UsageThrowableTest.throwError":303,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":197,"org.easymock.samples.PartialClassMockTest.testGetArea":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":184,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":278,"org.easymock.tests2.UsageTest.niceToStrict":322,"org.easymock.tests2.ThreadingTest.testChangeDefault":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":75,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":286,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":273,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":55,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":402,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":375,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":392,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.MockClassControlTest.testEquals":102,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":294,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":169,"org.easymock.tests2.CaptureTest.testCaptureAll":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":333,"org.easymock.tests2.UsageConstraintsTest.testMatches":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":34,"org.easymock.samples.ExampleTest.voteForRemovals":318,"org.easymock.tests.UsageVarargTest.allKinds":217,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":265,"org.easymock.samples.BasicClassMockTest.testPrintContent":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":236,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":309,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":227,"org.easymock.tests2.UsageConstraintsTest.greaterThan":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":166,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":122,"org.easymock.samples.ExampleTest.voteForRemoval":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":167,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":347,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":222,"org.easymock.tests2.CaptureTest.testCaptureFirst":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":348,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.CaptureTest.testCapture2_2446744":394,"org.easymock.tests2.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":146,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests.GenericTest.testBridgedEquals":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":263,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":233,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":295,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":28,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":31,"org.easymock.tests.UsageCallCountTest.tooManyCalls":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":398,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":308,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":136,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":202,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":271,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":397,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":353,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":199,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":230,"org.easymock.tests.MockClassControlTest.testHashCode":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":80,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":186,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":399,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":331,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.object":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":79,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":164,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":283,"org.easymock.tests.CapturesMatcherTest.test":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":403,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":225,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":380,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":18,"org.easymock.samples.SupportTest.voteForRemovals":312,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":289,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":91,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":93,"org.easymock.tests.UsageExpectAndThrowTest.object":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":377,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":30,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":300,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests2.CaptureTest.testCaptureNone":391,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":267,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":190,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":261,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":129,"org.easymock.tests2.CaptureTest.testCapture_2617107":385,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":92,"org.easymock.tests2.UsageConstraintsTest.any":373,"org.easymock.tests2.StubTest.stub":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":224,"org.easymock.tests.UsageExpectAndThrowTest.longType":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":120,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":171,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":69,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":71,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":281,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":143,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.CaptureTest.testCaptureLast":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":371,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":378,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":285,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":74,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":81,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":118,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":341,"org.easymock.tests2.MockBuilderTest.testCreateMockString":147,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":180,"org.easymock.tests.UsageExpectAndThrowTest.floatType":279,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests.UsageVerifyTest.twoThrows":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.ExampleTest.voteAgainstRemoval":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":310,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":68,"org.easymock.tests.UsageVarargTest.differentLength":212,"org.easymock.tests2.CallbackTest.callback":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":161,"org.easymock.tests.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":276,"org.easymock.tests.UsageThrowableTest.throwCheckedException":307,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":329,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":338,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":343,"org.easymock.tests2.DependencyTest.testInterfaceMocking":381,"org.easymock.samples.ExampleTest.addDocument":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.DelegateToTest.testStubDelegate":360,"org.easymock.tests2.AnswerTest.stubAnswer":337,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":198,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":88,"org.easymock.tests.UsageThrowableTest.noUpperLimit":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":388,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":401,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":117,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":181,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.UsageStrictMockTest.differentMethods":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":221,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":21,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":139,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":396,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":133,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":119,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":137,"org.easymock.tests2.UsageStrictMockTest.range":366,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":83,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":134,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":346,"org.easymock.tests2.CaptureTest.testCaptureRightOne":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":185,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":121,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":262,"org.easymock.tests2.UsageConstraintsTest.cmpTo":374,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":138,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.tests2.UsageConstraintsTest.constraints":369,"org.easymock.samples.ExampleTest.addAndChangeDocument":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":65,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":234,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":389,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":41,"org.easymock.tests.LimitationsTest.abstractClass":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":42,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":351}}]
