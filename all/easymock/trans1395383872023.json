[{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[260,260,261,261,30,31,32,33,34,46,79,80,81,82,83,102,103,106,262,128,129,138,263,264,265,266,267,148,149,152,153,154,155,160,162,163,165,166,171,172,173,192,246,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[156,157],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[196,197,198],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[269,270,21,271,27,272,38,85,86,99,140,165,225,248,256],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[43,273,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[19,274,275,276,48,51,52,53,54,55,85,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,277,246],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[167,168],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[279,260,261,280,281,282,283,144,196,207,284,285,286,287,288,208,209,289,290,291,292,293,294,210,295,211,225,296,297,298,299,300,240,301,302,303,304],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[305,306,39,137,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[279,309,310,260,260,261,261,280,12,13,281,311,312,313,14,314,29,315,316,317,318,319,320,321,322,323,324,56,57,58,325,326,97,327,328,329,330,331,332,282,283,333,334,144,145,146,196,198,207,285,286,288,208,209,289,291,293,294,210,211,225,296,232,233,235,236,237,298,238,299,335,239,300,240,336,337,301,338,241,242,339,243,244,340,341,342,343,344,345,302,346,347,348,349,350,351,352,353,354,303,355,356,357,358,359,304,360,361],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[233,239,336,242,362,354,360,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,17,18,19,20,47,104,363,364,365,366,144,145,146,147,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[290,296,367,368,369,370,371],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[98,135,140,141,374,375,376,377,210,216,247,252,256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[273],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[378,379,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":151,"org.easymock.tests2.UsageTest.argumentsOrdered":222,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.tests2.StubTest.stubWithReturnValue":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":198,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":16,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":308,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests.MockClassControlTest.testToString":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":367,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":157,"org.easymock.tests2.UsageTest.wrongArguments":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests.UsageStrictMockTest.range":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":133,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":338,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":283,"org.easymock.tests2.UsageConstraintsTest.testNull":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":377,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":332,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":289,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.UsageTest.moreThanOneArgument":38,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":32,"org.easymock.tests2.CaptureTest.testCaptureNone":189,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":86,"org.easymock.tests.UsageVarargTest.varargByteAccepted":94,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests.UsageTest.argumentsOrdered":44,"org.easymock.tests.UsageVarargTest.varargIntAccepted":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":355,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":26,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":79,"org.easymock.tests2.CaptureTest.testCapture_2617107":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":209,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests2.StubTest.stub":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":17,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.SerializationTest.testClass":196,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests.LimitationsTest.mockNativeMethod":14,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":281,"org.easymock.tests2.AnswerTest.answer":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.CaptureTest.testAnd":181,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":287,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":239,"org.easymock.tests2.NameTest.nameForMocksControl":251,"org.easymock.tests2.MockedExceptionTest.testMockedException":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":291,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":237,"org.easymock.tests.LimitationsTest.mockFinalMethod":314,"org.easymock.tests2.CaptureTest.testCaptureLast":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":244,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":11,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":221,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":380,"org.easymock.tests.UsageThrowableTest.throwError":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":28,"org.easymock.tests.UsageStrictMockTest.differentMethods":141,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":317,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":211,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":34,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":297,"org.easymock.tests.UsageVerifyTest.twoThrows":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":303,"org.easymock.samples.PartialClassMockTest.testGetArea":279,"org.easymock.tests2.CompareToTest.testLessOrEqual":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":80,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests2.UsageTest.niceToStrict":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests.LimitationsTest.privateConstructor":313,"org.easymock.tests2.ThreadingTest.testChangeDefault":378,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":55,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":294,"org.easymock.tests2.UsageTest.defaultResetToNice":220,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":357,"org.easymock.tests2.CallbackTest.callback":247,"org.easymock.tests2.UsageConstraintsTest.equals":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":299,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":375,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":131,"org.easymock.tests.UsageCallCountTest.tooFewCalls":24,"org.easymock.tests.UsageOverloadedMethodTest.overloading":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":134,"org.easymock.tests.UsageThrowableTest.throwCheckedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.MockClassControlTest.testEquals":331,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.MockingTest.testStrictClassMocking":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":9,"org.easymock.tests2.CaptureTest.testCaptureAll":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":242,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":33,"org.easymock.tests2.CompareToTest.testGreateOrEqual":278,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":370,"org.easymock.tests2.NameTest.nameForNiceMock":250,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests.UsageVarargTest.allKinds":96,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":369,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":10,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":54,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":20,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":336,"org.easymock.tests.UsageVarargTest.varargLongAccepted":93,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":321,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":337,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":225,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests.UsageThrowableTest.noUpperLimit":49,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":29,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":333,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":186,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":316,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.tests2.UsageConstraintsTest.testSame":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":15,"org.easymock.tests2.CaptureTest.testCaptureFirst":194,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":347,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests2.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":193,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":95,"org.easymock.tests.GenericTest.testBridgedEquals":311,"org.easymock.tests2.NameTest.nameForMock":248,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":7,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":295,"org.easymock.tests2.UsageStrictMockTest.differentMethods":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageCallCountTest.tooManyCalls":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":358,"org.easymock.tests2.MockedExceptionTest.testRealException":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests.MockingTest.testNiceClassMocking":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":241,"org.easymock.tests.MockingTest.testClassMocking":323,"org.easymock.tests2.NameTest.nameForStrictMock":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":22,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":152,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":36,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":288,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":135,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":334,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":318,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":269,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":285,"org.easymock.tests2.UsageStrictMockTest.range":256,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":368,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":91,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":268,"org.easymock.tests.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":351,"org.easymock.tests2.CaptureTest.testCaptureRightOne":191,"org.easymock.tests2.UsageConstraintsTest.testOr":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":296,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.MockBuilderTest.testWithConstructor":284,"org.easymock.tests.MockClassControlTest.testHashCode":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":352,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":372,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":275,"org.easymock.tests.UsageVarargTest.varargShortAccepted":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":174,"org.easymock.tests.UsageVarargTest.varargCharAccepted":90,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":218,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":219,"org.easymock.tests.DefaultClassInstantiatorTest.object":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":286,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":329,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":300,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.UsageStrictMockTest.testVerify":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":363,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":304,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":8,"org.easymock.tests2.UsageTest.resumeIfFailure":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":81,"org.easymock.tests.LimitationsTest.abstractClass":312,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":376,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":270,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":88}}]
