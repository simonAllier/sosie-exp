[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,63,64,11,65,66,67,12,13,14,15,68,69,70,71,72,73,74,75,76,16,17,18,19,20,21,21,22,22,23,24,25,77,78,79,26,80,27,28,81,29,30,31,32,82,33,34,83,84,35,36,37,38,39,40,41,42,43,44,45,46,47,48,85,86,49,50,51,52,87,53,88,89,90,91,92,93,94,54,95,96,55,97,98,99,100,101,102,103,104,105,56,106,107,108,109,110,57,111,112,58,113,114,115,59,60,61],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[118,119,120,121,122,123,124,125,126],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","state":"threadSafe","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,116,142],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[127,143,144,145,146,147,148,128,149,150,151,152,153,154,155,156,157,158,159,160,129,161,162,130,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,131,220,132,221,222,223,224,225,226,227,228,133,134,229,135,230,11,231,232,136,233,234,235,236,237,238,239,240,241,242,243,13,14,15,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,137,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,16,17,18,289,290,291,20,292,293,21,21,22,22,294,295,296,297,298,299,300,23,24,25,301,302,138,303,304,305,306,307,308,309,117,310,311,312,139,27,29,31,32,34,36,37,38,39,313,40,41,42,43,314,44,45,46,48,50,51,52,315,54,55,56,57,316,317,318,319,320,140,321,58,322,323,324,325,326,114,115,59,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,141,348,349,350,351,116,352,353,354,355,142,356,357,358,359,118,119,360,361,362,120,121,363,122,364,365,366,367,368,369,370,371,372,123,373,374,375,376,377,378,379,380,381,60,382,61,124,383,125,384,385,386,387,388,389,390,126,391,392,393,394,395],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[396,397,398,399,400,401,402,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[0,1,3,11,12,13,14,15,16,17,18,20,21,21,22,22,23,24,25,26,80,27,28,29,30,31,32,33,34,84,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,89,90,404,91,54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[76,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[405],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[346,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[241,16,18,289,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[406],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[143,231,232,136,233,271,137,273,407,408,409,410,304,354,142,356],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[411,60,382,61],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.UsageTest.argumentsOrdered":311,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":220,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":307,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":302,"org.easymock.tests2.DelegateToTest.testReturnException":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":168,"org.easymock.tests.MockingTest.testPartialClassMocking":13,"org.easymock.tests.MockClassControlTest.testToString":4,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":407,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":363,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":305,"org.easymock.samples.ExampleTest.answerVsDelegate":295,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":44,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":337,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":88,"org.easymock.tests2.CaptureTest.testPrimitive":384,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests.UsageTest.argumentsOrdered":148,"org.easymock.tests.UsageVarargTest.varargIntAccepted":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":284,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":288,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests2.AnswerTest.answer":317,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":226,"org.easymock.tests2.CaptureTest.testAnd":124,"org.easymock.tests2.UsageTest.strictResetToDefault":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":332,"org.easymock.tests2.DelegateToTest.testDelegate":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests.LimitationsTest.mockFinalMethod":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests.UsageThrowableTest.throwError":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":112,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":101,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests2.UsageTest.niceToStrict":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":204,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":105,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":175,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":195,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":367,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":390,"org.easymock.tests.MockClassControlTest.testEquals":8,"org.easymock.tests2.EasyMockSupportClassTest.testAll":54,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":89,"org.easymock.tests2.CaptureTest.testCaptureAll":383,"org.easymock.tests2.UsageConstraintsTest.testMatches":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.samples.ExampleTest.voteForRemovals":299,"org.easymock.tests.UsageVarargTest.allKinds":159,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":231,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":282,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":172,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":349,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":405,"org.easymock.tests2.UsageConstraintsTest.greaterThan":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":75,"org.easymock.samples.ExampleTest.voteForRemoval":296,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":87,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":323,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":47,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":20,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":330,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":167,"org.easymock.tests2.CaptureTest.testCaptureFirst":393,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":331,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":191,"org.easymock.tests2.CaptureTest.testCapture2_2446744":392,"org.easymock.tests2.UsageTest.moreThanOneArgument":304,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":227,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":158,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":209,"org.easymock.tests.UsageExpectAndReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":328,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":230,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":236,"org.easymock.tests.UsageCallCountTest.tooManyCalls":210,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":37,"org.easymock.tests.MockingTest.testNiceClassMocking":68,"org.easymock.tests.MockingTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":80,"org.easymock.tests2.UsageConstraintsTest.testContains":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":360,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":395,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests.UsageExpectAndReturnTest.object":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":336,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":153,"org.easymock.tests.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":113,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":174,"org.easymock.tests.MockClassControlTest.testHashCode":7,"org.easymock.tests2.EasyMockSupportTest.testVerify":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":103,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":182,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":173,"org.easymock.tests.UsageVarargTest.varargCharAccepted":152,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":135,"org.easymock.tests2.UsageTest.openCallCountByLastCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":279,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":177,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests2.UsageTest.resumeIfFailure":312,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":170,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":193,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":376,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":225,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":62,"org.easymock.samples.SupportTest.voteForRemovals":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":411,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":318,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":373,"org.easymock.tests2.DelegateToTest.testWrongClass":348,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":234,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":235,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":92,"org.easymock.tests2.CaptureTest.testCaptureNone":389,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests.UsageUnorderedTest.message":233,"org.easymock.tests.UsageVerifyTest.twoReturns":136,"org.easymock.tests.UsageVarargTest.varargByteAccepted":157,"org.easymock.tests2.ThreadingTest.testThreadSafe":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":106,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":208,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":133,"org.easymock.tests2.UsageConstraintsTest.any":364,"org.easymock.tests2.StubTest.stub":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":134,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":73,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":355,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests.LimitationsTest.mockNativeMethod":11,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":203,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":404,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":357,"org.easymock.tests2.NameTest.nameForMocksControl":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":396,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":96,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":14,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":46,"org.easymock.tests2.CaptureTest.testCaptureLast":388,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":374,"org.easymock.tests.MockingTest.testTwoMocks":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":310,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":378,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":273,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":97,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":320,"org.easymock.tests.UsageVerifyTest.twoThrows":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":56,"org.easymock.samples.ExampleTest.voteAgainstRemoval":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.LimitationsTest.privateConstructor":64,"org.easymock.tests2.UsageConstraintsTest.testNotNull":377,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":283,"org.easymock.tests2.UsageTest.defaultResetToNice":117,"org.easymock.samples.ExampleTest.voteAgainstRemovals":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":221,"org.easymock.tests.UsageVarargTest.differentLength":154,"org.easymock.tests2.CallbackTest.callback":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":85,"org.easymock.tests.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":161,"org.easymock.tests.UsageCallCountTest.tooFewCalls":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":39,"org.easymock.tests.UsageThrowableTest.throwCheckedException":280,"org.easymock.tests.MockingTest.testStrictClassMocking":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":313,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":321,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":326,"org.easymock.tests2.NameTest.nameForNiceMock":344,"org.easymock.tests2.DependencyTest.testInterfaceMocking":380,"org.easymock.samples.ExampleTest.addDocument":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":107,"org.easymock.tests2.DelegateToTest.testStubDelegate":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.stubAnswer":140,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":271,"org.easymock.tests.UsageVarargTest.varargLongAccepted":156,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":131,"org.easymock.tests.UsageExpectAndReturnTest.floatType":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests.UsageThrowableTest.noUpperLimit":277,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":359,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":77,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":386,"org.easymock.tests2.SerializationTest.test":382,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":185,"org.easymock.tests2.UsageConstraintsTest.testSame":362,"org.easymock.samples.SupportTest.addDocument":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":98,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests2.NameTest.nameForMock":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":196,"org.easymock.tests2.UsageStrictMockTest.differentMethods":356,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":188,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":222,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests2.NameTest.nameForStrictMock":343,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":81,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":394,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":78,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":408,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":72,"org.easymock.tests.ErrorMessageTest.testGetters":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests2.UsageConstraintsTest.lessThan":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":329,"org.easymock.tests2.CaptureTest.testCaptureRightOne":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":102,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageTest.wrongArguments":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":99,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":3,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":212,"org.easymock.tests.UsageVarargTest.varargShortAccepted":155,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":74,"org.easymock.tests2.UsageConstraintsTest.cmpTo":365,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":214,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests2.CaptureTest.testCaptureFromStub":391,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":198,"org.easymock.tests2.UsageConstraintsTest.constraints":118,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":300,"org.easymock.tests.UsageStrictMockTest.testVerify":275,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":301,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":387,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":190,"org.easymock.tests.LimitationsTest.abstractClass":63,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":287,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":410,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":334}}]
