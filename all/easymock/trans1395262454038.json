[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[7],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[24,25,15,26,27],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[28,29,30,31,32,33],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[38,39,40,41,42],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[43,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,23,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,28,112,113,38,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,31,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,34,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,46,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,45,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,40,41,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,42,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,47,379,380,381,382,383,384,385,5,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,37,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,35,460,36,461,462,463,12,464,13,465,466,467,468,469,470,471,14,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,25,505,15,16,506,507,17,508,18,19,509,20,510,511,512,513,514,515,516,26,517,21,518,519,520,27,22,521,522,9,10,11,523],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[524,525,526],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,23,84,85,86,87,527,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,28,112,113,38,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,31,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,34,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,46,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,45,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,40,41,291,292,293,294,528,295,296,297,298,299,300,529,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,42,344,345,346,347,348,349,350,530,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,47,379,381,382,383,384,385,5,531,386,387,388,389,390,391,532,392,393,533,394,395,396,397,6,398,399,400,401,402,534,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,37,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,35,460,36,461,462,463,12,464,13,465,466,467,468,469,470,471,14,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,25,505,15,16,506,507,17,508,18,19,509,20,510,511,512,513,514,515,516,26,517,21,518,519,520,27,22,521,522,9,10,11,523],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[509],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,61,85,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,110,111,28,112,113,38,114,115,116,118,31,153,156,157,185,191,192,193,194,195,201,202,203,204,206,207,208,209,210,211,212,213,218,219,220,255,256,257,258,259,260,261,262,291,292,293,294,295,309,311,312,313,314,318,319,320,321,322,323,329,340,341,342,343,42,344,345,346,366,368,371,372,373,376,377,387,388,389,390,391,392,396,401,402,403,434,439,448,451,453,464,13,467,468,469,470,474,475,482,484,487,488,494,501,502,503,504,520,11,523],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[59,60,61,93,110,28,113,38,114,151,31,153,156,157,158,208,286,40,41,340,343,42,344,363,366,367,368,372,373,374,375,382,392,401,402,403,429,440,442,476,480,481,484,15,516,523],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[385,5,6,535],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[0,1,2,536,3,4,537],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[296,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,536,537,385,5,6,400,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[93,28,112,38,114,145,146,29,538,30,539,540,541,152,31,153,156,157,197,199,200,201,290,40,41,342,42,344,365,366,372,373,542,32,543,524,544,525,526,545,33,546,547],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[93,28,38,541,31,153,156,157,201,40,41,42,366,372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[213,383,17,520],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[380,435,455,458,459],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.UsageTest.argumentsOrdered":373,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":34,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":368,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":318,"org.easymock.tests2.DelegateToTest.testReturnException":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":226,"org.easymock.tests.MockClassControlTest.testToString":257,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":386,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":339,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":509,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":88,"org.easymock.tests2.UsageTest.wrongArguments":366,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":500,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":249,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":484,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":262,"org.easymock.tests2.CaptureTest.testPrimitive":465,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":92,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":430,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":304,"org.easymock.tests.UsageTest.argumentsOrdered":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":546,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":544,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":494,"org.easymock.tests.ReplayStateInvalidUsageTest.times":102,"org.easymock.tests2.DependencyTest.testClassMocking":336,"org.easymock.tests2.AnswerTest.answer":445,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":504,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":246,"org.easymock.tests2.UsageTest.strictResetToDefault":364,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":533,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":288,"org.easymock.tests2.DelegateToTest.testDelegate":463,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":243,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests.LimitationsTest.mockFinalMethod":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":195,"org.easymock.tests2.DependencyTest.testClassMockingSupport":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":145,"org.easymock.tests2.CaptureTest.testCapture1_2446744":466,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":502,"org.easymock.tests.UsageThrowableTest.throwError":117,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":96,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":248,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":527,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":70,"org.easymock.samples.PartialClassMockTest.testGetArea":317,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":97,"org.easymock.tests.MockingTest.testInterfaceMocking":228,"org.easymock.tests2.CompareToTest.testLessOrEqual":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":415,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.UsageTest.niceToStrict":367,"org.easymock.tests2.ThreadingTest.testChangeDefault":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":159,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":395,"org.easymock.tests2.MockBuilderTest.testCreateMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":497,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":275,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":480,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":514,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":513,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":471,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":205,"org.easymock.tests2.EasyMockSupportClassTest.testAll":407,"org.easymock.tests.MockClassControlTest.testEquals":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":85,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":526,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":503,"org.easymock.tests2.CaptureTest.testCaptureAll":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":193,"org.easymock.tests.MockNameTest.defaultName":254,"org.easymock.tests2.UsageConstraintsTest.testMatches":515,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":305,"org.easymock.samples.ExampleTest.voteForRemovals":312,"org.easymock.tests.UsageVarargTest.allKinds":213,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":194,"org.easymock.samples.BasicClassMockTest.testPrintContent":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":123,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":537,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":529,"org.easymock.tests2.UsageConstraintsTest.greaterThan":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":442,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":301,"org.easymock.samples.ExampleTest.voteForRemoval":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":381,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":250,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":530,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":434,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":185,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":363,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":477,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.CaptureTest.testCaptureFirst":474,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":478,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":375,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":473,"org.easymock.tests2.UsageTest.moreThanOneArgument":365,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":176,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":212,"org.easymock.tests.GenericTest.testBridgedEquals":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":60,"org.easymock.tests.UsageExpectAndReturnTest.longType":128,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":191,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":520,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":302,"org.easymock.tests.UsageCallCountTest.tooManyCalls":61,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":538,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":122,"org.easymock.tests.MockingTest.testNiceClassMocking":232,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":355,"org.easymock.tests.MockingTest.testClassMocking":224,"org.easymock.tests2.UsageConstraintsTest.testContains":512,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":43,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":378,"org.easymock.tests2.UsageConstraintsTest.testFind":507,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests.MockTypeTest.fromEasyMockClass":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":453,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":110,"org.easymock.tests.UsageExpectAndReturnTest.object":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":483,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":207,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":220,"org.easymock.tests.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":164,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":148,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":540,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":141,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":202,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":198,"org.easymock.tests.MockClassControlTest.testHashCode":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":325,"org.easymock.tests2.EasyMockSupportTest.testVerify":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":417,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":524,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":51,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":501,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":488,"org.easymock.tests.UsageVarargTest.varargCharAccepted":206,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":528,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":181,"org.easymock.tests2.UsageTest.openCallCountByLastCall":369,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":486,"org.easymock.tests.DefaultClassInstantiatorTest.object":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":50,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":218,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":541,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":440,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":69,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":142,"org.easymock.tests.ReplayStateInvalidCallsTest.times":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":76,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":425,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":258,"org.easymock.tests2.UsageTest.resumeIfFailure":374,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":27,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":174,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":33,"org.easymock.samples.SupportTest.voteForRemovals":323,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":278,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":180,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":446,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":150,"org.easymock.tests.UsageExpectAndThrowTest.object":276,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":518,"org.easymock.tests2.DelegateToTest.testWrongClass":461,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":253,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.samples.ConstructorCalledMockTest.testTax":315,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":352,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":482,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":277,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":404,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":29,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":65,"org.easymock.tests2.CaptureTest.testCaptureNone":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":455,"org.easymock.tests.UsageUnorderedTest.message":93,"org.easymock.tests.UsageVerifyTest.twoReturns":41,"org.easymock.tests.UsageVarargTest.varargByteAccepted":211,"org.easymock.tests2.ThreadingTest.testThreadSafe":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":421,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":58,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":221,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":547,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests2.UsageConstraintsTest.any":510,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":101,"org.easymock.tests2.StubTest.stub":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":100,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":343,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":329,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":144,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":491,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":81,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":345,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":456,"org.easymock.tests2.NameTest.nameForMocksControl":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":493,"org.easymock.tests2.MockedExceptionTest.testMockedException":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":409,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":428,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":398,"org.easymock.tests.MockingTest.testNicePartialClassMocking":227,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":433,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":489,"org.easymock.tests2.CaptureTest.testCaptureLast":469,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":146,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":361,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":519,"org.easymock.tests.MockingTest.testTwoMocks":225,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":274,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":372,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":521,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":459,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":496,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":326,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":458,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":297,"org.easymock.tests2.ConstraintsToStringTest.andToString":545,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":382,"org.easymock.tests2.MockBuilderTest.testCreateMockString":403,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":411,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":448,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":531,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":420,"org.easymock.samples.ExampleTest.voteAgainstRemoval":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":441,"org.easymock.tests.LimitationsTest.privateConstructor":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":376,"org.easymock.tests2.UsageTest.defaultResetToNice":371,"org.easymock.samples.ExampleTest.voteAgainstRemovals":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":490,"org.easymock.tests.UsageVarargTest.differentLength":208,"org.easymock.tests2.CallbackTest.callback":523,"org.easymock.tests2.UsageConstraintsTest.equals":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":437,"org.easymock.tests.UsageTest.openCallCountByLastCall":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":90,"org.easymock.tests.UsageCallCountTest.tooFewCalls":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":457,"org.easymock.tests.UsageThrowableTest.throwCheckedException":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":30,"org.easymock.tests.MockingTest.testStrictClassMocking":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":495,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":359,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":450,"org.easymock.tests.ObjectMethodsTest.testHashCode":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.NameTest.nameForNiceMock":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":384,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":79,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":74,"org.easymock.tests2.DependencyTest.testInterfaceMocking":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.ExampleTest.addDocument":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.DelegateToTest.testStubDelegate":36,"org.easymock.tests2.AnswerTest.stubAnswer":449,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":399,"org.easymock.tests.UsageVarargTest.varargLongAccepted":210,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":143,"org.easymock.tests.UsageExpectAndReturnTest.floatType":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":385,"org.easymock.tests2.ConstraintsToStringTest.orToString":542,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":316,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":517,"org.easymock.tests.UsageThrowableTest.noUpperLimit":118,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":505,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":348,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":467,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":296,"org.easymock.tests2.UsageConstraintsTest.testSame":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":126,"org.easymock.samples.SupportTest.addDocument":322,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":358,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":64,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":412,"org.easymock.tests.GenericTest.testPackageScope":84,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":230,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":62,"org.easymock.tests2.NameTest.nameForMock":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":534,"org.easymock.tests2.UsageStrictMockTest.differentMethods":344,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":438,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":129,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":289,"org.easymock.tests2.MockedExceptionTest.testRealException":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":353,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":539,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":535,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":171,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":89,"org.easymock.tests2.NameTest.nameForStrictMock":388,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":451,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":351,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":392,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":68,"org.easymock.tests2.UsageConstraintsTest.lessThan":522,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":536,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":416,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":454,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":429,"org.easymock.tests.UsageTest.wrongArguments":153,"org.easymock.tests2.MockBuilderTest.testWithConstructor":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":413,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":138,"org.easymock.tests.UsageVarargTest.varargShortAccepted":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":59,"org.easymock.tests2.UsageConstraintsTest.cmpTo":511,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":447,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":162,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":370,"org.easymock.tests2.CaptureTest.testCaptureFromStub":472,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":95,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":78,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":139,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.samples.ExampleTest.addAndChangeDocument":314,"org.easymock.tests2.ConstraintsToStringTest.notToString":543,"org.easymock.tests.UsageStrictMockTest.testVerify":116,"org.easymock.tests2.ConstraintsToStringTest.containsToString":7,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":319,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":192,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":131,"org.easymock.tests.LimitationsTest.abstractClass":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":481,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":39,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":203}}]
