[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return this.java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[19,20,21,22,23,24,25,26,0],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,3,4,5,37,38,39,40,8,9,10,11,15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[45],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,46],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[50,51,52,53,54,55,6,56,8,15,57,16,58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[60,61,61,62,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,50,116,51,117,52,118,119,120,54,121,122,123,124,125,126,127,128,129,130,27,131,36,132,133,28,134,135,136,137,138,139,140,42,141,142,143,43,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,55,6,56,0,1,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,29,40,237,30,238,239,240,241,242,243,244,12,245,246,247,248,249,250,251,31,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,13,14,283,284,285,57,16,58,286,287,288],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,289,83,84,85,86,87,88,89,90,91,92,93,94,290,95,96,97,98,291,104,105,292,106,107,293,294,108,109,110,111,112,113,114,118,53,124,295,140,55,296,12,245,248,249,250,297,298,265,266,267,268,269,270,271,272,273,274,280,281,284,285,15,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[75,292,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[302,303,304,305,306,130,307,308,309,310,311,312,313,314,315,316,317,140,318,319,320,321,322,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[126,127,128,129,146,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,229,249,250,252,253,254,255,256,261,276,277,278,279,280,281,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[324,325],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[196,197,198,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[324,325],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:137","sourceCode":"return java.lang.ClassLoader","type":"CtReturnImpl"},"failures":[60,61,62,63,64,65,66,328,67,329,68,330,331,332,333,334,69,70,19,335,336,337,338,339,340,71,341,72,73,74,75,76,342,77,78,79,80,81,82,289,83,84,85,86,87,88,89,90,91,92,93,94,290,95,96,97,98,291,343,344,345,346,347,99,348,349,350,100,351,101,20,102,352,21,353,103,354,355,104,105,292,106,107,293,294,108,109,110,111,112,113,114,356,47,357,358,48,49,115,50,116,51,117,52,359,360,118,361,362,53,119,120,54,363,364,121,365,122,123,124,125,126,127,128,129,302,303,304,305,306,130,307,308,309,310,311,312,27,131,36,3,132,366,133,28,134,4,5,135,136,367,368,137,138,139,295,313,314,315,316,317,140,318,319,320,321,322,323,42,141,142,143,43,144,369,370,371,372,373,374,145,146,147,148,149,150,375,151,152,153,376,154,155,156,157,158,159,160,161,162,163,164,165,377,378,379,380,166,381,382,167,383,384,385,386,387,388,389,390,391,168,392,393,394,395,396,169,397,398,170,171,172,173,174,175,399,400,55,296,6,56,401,0,1,2,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,402,403,404,219,220,405,221,406,407,408,409,410,411,412,413,414,415,416,417,418,326,419,222,223,224,225,226,420,421,422,423,424,425,426,427,227,428,228,229,429,230,430,431,231,432,232,233,234,235,236,29,40,8,9,237,30,10,11,238,239,240,241,242,243,244,433,434,435,436,437,438,439,440,441,442,299,443,444,445,12,245,246,247,248,249,446,250,251,31,252,253,254,255,256,324,257,447,258,325,259,260,261,448,449,450,451,452,453,454,327,455,456,457,458,459,460,461,462,262,463,464,465,466,467,263,468,469,470,471,472,473,474,475,476,477,478,479,297,298,45,480,481,482,483,484,485,486,487,264,488,265,266,267,268,269,489,490,491,492,270,271,272,273,274,493,275,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,276,277,278,279,280,281,282,13,14,523,524,283,525,526,527,528,529,530,284,285,531,532,15,57,533,16,58,534,59,286,287,288],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[535,32,536,537,538,539,33,540,34,541,35,89,36,3,4,5,55,6,56,428,429,230,430,431,231,37,542,38,543,544,39,7,40,8,9,10,11,12,282,13,14,15,57,16,58],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[60,61,61,62,62,63,64,65,66,328,67,329,68,330,331,332,333,334,69,70,19,337,338,339,340,71,341,72,73,74,75,76,342,77,78,79,80,81,82,289,83,84,85,86,87,88,89,90,91,92,93,94,290,95,96,97,98,291,343,344,345,346,99,348,350,100,351,101,102,21,353,103,355,104,105,292,106,107,293,294,108,109,110,111,112,113,114,115,50,116,51,117,52,359,118,361,362,53,119,120,54,363,364,121,122,123,124,125,126,127,128,129,302,303,304,305,306,130,307,308,309,310,311,312,27,131,36,3,132,366,133,28,134,4,5,135,136,137,138,139,295,313,314,315,316,317,140,318,319,320,321,322,323,42,141,142,143,43,144,369,372,373,374,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,377,378,379,380,166,381,382,167,383,384,385,386,387,388,389,390,391,168,392,393,394,395,396,169,397,398,170,171,172,173,174,175,399,400,55,296,6,56,401,0,1,2,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,402,403,404,219,220,405,221,406,407,408,409,410,411,412,413,414,415,416,417,418,326,419,222,223,224,225,226,420,423,424,425,426,427,227,428,228,229,429,230,430,431,231,432,232,233,234,235,236,29,40,8,9,237,30,10,11,238,239,240,241,242,243,244,433,434,435,436,437,439,440,441,442,299,443,445,12,245,246,247,248,249,446,250,251,31,252,253,254,255,256,324,257,447,258,325,259,260,261,448,449,450,451,452,453,454,327,455,456,457,458,459,460,461,462,262,463,464,465,466,467,263,468,469,470,471,472,473,474,475,476,477,478,479,297,298,45,480,481,482,483,484,485,486,487,264,488,265,266,267,268,269,489,490,491,492,270,271,272,273,274,493,275,494,495,496,497,498,499,500,276,277,278,279,280,281,282,13,14,523,524,283,525,526,527,528,529,530,284,285,531,532,15,57,533,16,58,534,59,286,287,288],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[104,292,106,107,293,294,108,110,17,111,112,114],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[121,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"threadSafe","this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.UsageTest.argumentsOrdered":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":457,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":366,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":277,"org.easymock.tests.MockingTest.testPartialClassMocking":219,"org.easymock.tests.MockClassControlTest.testToString":480,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":167,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":522,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":22,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests2.UsageTest.wrongArguments":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":491,"org.easymock.samples.ExampleTest.answerVsDelegate":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":425,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":269,"org.easymock.tests.UsageTest.moreThanOneArgument":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":224,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":240,"org.easymock.tests.UsageVarargTest.varargIntAccepted":471,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":541,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":26,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":506,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":538,"org.easymock.tests.ReplayStateInvalidUsageTest.times":417,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.DependencyTest.testClassMocking":367,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":345,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":422,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests2.UsageTest.strictResetToDefault":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.DelegateToTest.testDelegate":144,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":244,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests.LimitationsTest.mockFinalMethod":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":437,"org.easymock.tests2.DependencyTest.testClassMockingSupport":368,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":431,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":343,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":411,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":424,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":509,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":412,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":287,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests2.UsageTest.niceToStrict":132,"org.easymock.tests2.ThreadingTest.testChangeDefault":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.MockBuilderTest.testCreateMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":32,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":421,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":523,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":489,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":300,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":110,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests.MockClassControlTest.testEquals":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":447,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":435,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":344,"org.easymock.tests.MockNameTest.defaultName":446,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":225,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":436,"org.easymock.samples.BasicClassMockTest.testPrintContent":332,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":255,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":399,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":308,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":444,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":510,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":445,"org.easymock.samples.ExampleTest.voteForRemoval":65,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":359,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":502,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":276,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":113,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":103,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":479,"org.easymock.tests.GenericTest.testBridgedEquals":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":529,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":433,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":232,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":222,"org.easymock.tests.UsageCallCountTest.tooManyCalls":530,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":542,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":254,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests.MockingTest.testClassMocking":403,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":524,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":423,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":531,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":474,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":23,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":498,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":241,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":469,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":228,"org.easymock.tests.MockClassControlTest.testHashCode":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":303,"org.easymock.tests2.EasyMockSupportTest.testVerify":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":537,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":295,"org.easymock.tests.UsageVarargTest.varargCharAccepted":473,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastCall":133,"org.easymock.tests.DefaultClassInstantiatorTest.object":439,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":245,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":496,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":302,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":508,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.ReplayStateInvalidCallsTest.times":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":196,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":515,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":539,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":169,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":279,"org.easymock.tests2.StubTest.stubWithReturnValue":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":34,"org.easymock.samples.SupportTest.voteForRemovals":69,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":263,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":171,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":494,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":93,"org.easymock.tests2.DelegateToTest.testWrongClass":143,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":512,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":284,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":285,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":373,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":101,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":490,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":37,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":504,"org.easymock.tests2.CaptureTest.testCaptureNone":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":288,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":47,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":478,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":392,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":527,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":499,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":292,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":268,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":416,"org.easymock.tests2.StubTest.stub":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":415,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":315,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":520,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":401,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":357,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":382,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":221,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":102,"org.easymock.tests.MockingTest.testNicePartialClassMocking":220,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.CaptureTest.testCaptureLast":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":231,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":519,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":94,"org.easymock.tests.MockingTest.testTwoMocks":404,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":516,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":49,"org.easymock.samples.ExampleTest.removeNonExistingDocument":329,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":304,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":48,"org.easymock.tests2.ConstraintsToStringTest.andToString":540,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":355,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":298,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":173,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":335,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":168,"org.easymock.samples.ExampleTest.voteAgainstRemoval":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":286,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.LimitationsTest.privateConstructor":487,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":256,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests.UsageVarargTest.differentLength":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":314,"org.easymock.tests2.CallbackTest.callback":139,"org.easymock.tests2.UsageConstraintsTest.equals":342,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":543,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":361,"org.easymock.tests.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":267,"org.easymock.tests.UsageCallCountTest.tooFewCalls":525,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":492,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":358,"org.easymock.tests.UsageThrowableTest.throwCheckedException":253,"org.easymock.tests.MockingTest.testStrictClassMocking":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":38,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":318,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":151,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":175,"org.easymock.tests.ObjectMethodsTest.testHashCode":497,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":25,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":518,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":125,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":513,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":24,"org.easymock.samples.ExampleTest.addDocument":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.DelegateToTest.testStubDelegate":142,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":352,"org.easymock.tests.UsageVarargTest.varargLongAccepted":477,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.tests2.ConstraintsToStringTest.orToString":535,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":369,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":293,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.samples.SupportTest.addDocument":334,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":375,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":503,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":257,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":309,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":501,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":495,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":374,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":544,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":460,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":266,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":350,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":372,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":92,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":99,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":507,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":306,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":356,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.MockBuilderTest.testWithConstructor":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.UsageVarargTest.varargShortAccepted":476,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":443,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":528,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":521,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":172,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":451,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CaptureTest.testCaptureFromStub":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":410,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":517,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":526,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.CaptureTest.testCapture":17,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":533,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":68,"org.easymock.tests2.ConstraintsToStringTest.notToString":536,"org.easymock.tests.UsageStrictMockTest.testVerify":59,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":532,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":434,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.LimitationsTest.abstractClass":486,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160}}]
