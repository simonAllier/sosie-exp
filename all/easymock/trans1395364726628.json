[{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:218","sourceCode":"return ","type":"CtReturnImpl"},"failures":[11,12,13,5,14,15,16,17,18,19,20,21,22,0,23,24,25,26,27,3,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,4,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,1,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,2,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,358,359,359,360],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[76,176],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[5,18,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[361,362],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[363,364,365,366,90,91,97,98,367,368,369,1,237,238,239,242,243],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[81,370,371,372,148,149],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[373,374,375],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[177,376,305,306,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[11,12,13,5,377,14,15,16,17,18,19,378,20,21,22,0,23,24,25,26,27,3,28,29,30,31,32,33,34,379,380,35,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,381,382,383,384,385,56,386,387,388,389,390,391,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,111,112,113,114,115,116,117,118,119,120,121,122,123,4,124,392,393,394,395,396,125,397,398,399,400,401,402,403,130,404,133,134,135,136,137,405,138,141,406,151,152,153,154,407,155,156,157,408,409,167,168,169,170,171,172,173,174,175,176,177,178,410,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,1,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,411,412,413,414,219,415,220,221,222,223,224,225,226,227,228,416,417,418,419,420,421,422,376,423,424,425,426,427,428,429,430,229,431,432,433,434,435,230,436,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,437,438,439,440,264,265,266,441,267,268,269,270,271,272,273,2,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,442,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,344,345,346,347,348,349,350,351,352,353,354,357],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[11,26,31,443],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"defaultValue"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[25,93,143,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[13,25,47,50,51,52,62,66,67,70,80,85,86,87,88,91,92,93,97,98,99,100,124,140,148,150,445,446,198,1,201,202,203,207,208,225,447,448,236,238,239,242,243,244,260,261,262,269,279],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":425,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":93,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":357,"org.easymock.tests2.DelegateToTest.testReturnException":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":192,"org.easymock.tests.MockingTest.testPartialClassMocking":216,"org.easymock.tests.MockClassControlTest.testToString":160,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":406,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":36,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":19,"org.easymock.tests2.UsageTest.wrongArguments":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":220,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":247,"org.easymock.samples.ExampleTest.answerVsDelegate":346,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":413,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":70,"org.easymock.tests2.CaptureTest.testPrimitive":114,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageTest.moreThanOneArgument":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.UsageTest.argumentsOrdered":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":308,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":374,"org.easymock.tests.ReplayStateInvalidUsageTest.times":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.AnswerTest.answer":41,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":136,"org.easymock.tests2.CaptureTest.testAnd":111,"org.easymock.tests2.UsageTest.strictResetToDefault":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":227,"org.easymock.tests2.DelegateToTest.testDelegate":106,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":303,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":134,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":169,"org.easymock.tests.UsageThrowableTest.throwError":333,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":438,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":448,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.samples.PartialClassMockTest.testGetArea":360,"org.easymock.tests.MockingTest.testInterfaceMocking":411,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":170,"org.easymock.tests2.CompareToTest.testLessOrEqual":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":210,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":409,"org.easymock.tests2.UsageTest.niceToStrict":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":10,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":81,"org.easymock.tests2.MockBuilderTest.testCreateMock":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":322,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":363,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":66,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":214,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":245,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":23,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":292,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":37,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":330,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":135,"org.easymock.tests2.CaptureTest.testCaptureAll":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":233,"org.easymock.tests.MockNameTest.defaultName":410,"org.easymock.tests2.UsageConstraintsTest.testMatches":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.samples.ExampleTest.voteForRemovals":350,"org.easymock.tests.UsageVarargTest.allKinds":2,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":234,"org.easymock.samples.BasicClassMockTest.testPrintContent":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":339,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":196,"org.easymock.tests2.UsageConstraintsTest.greaterThan":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":150,"org.easymock.samples.ExampleTest.voteForRemoval":347,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":63,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":191,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":101,"org.easymock.tests2.CaptureTest.testCaptureFirst":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":64,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":190,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":288,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":86,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":261,"org.easymock.tests.UsageExpectAndReturnTest.longType":284,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":331,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":30,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":306,"org.easymock.tests.UsageCallCountTest.tooManyCalls":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":375,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":338,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests2.UsageConstraintsTest.testContains":22,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":255,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests.MockTypeTest.fromEasyMockClass":437,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests.UsageExpectAndReturnTest.object":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":69,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":157,"org.easymock.tests.UsageTest.exactCallCountByLastCall":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":309,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":369,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":186,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":73,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":373,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":213,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":133,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":403,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":8,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":72,"org.easymock.tests.DefaultClassInstantiatorTest.object":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":212,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":155,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":446,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":336,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":372,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":305,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":40,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":194,"org.easymock.tests2.StubTest.stubWithReturnValue":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":109,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":229,"org.easymock.samples.SupportTest.voteForRemovals":354,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":365,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":325,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":42,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":415,"org.easymock.tests.UsageExpectAndThrowTest.object":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":28,"org.easymock.tests2.DelegateToTest.testWrongClass":104,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":302,"org.easymock.tests.UsageStrictMockTest.range":202,"org.easymock.samples.ConstructorCalledMockTest.testTax":358,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":379,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":68,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":324,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":177,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":246,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":367,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":211,"org.easymock.tests.UsageUnorderedTest.message":279,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":447,"org.easymock.tests.UsageVerifyTest.twoReturns":208,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":74,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":259,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":408,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":113,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":223,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":174,"org.easymock.tests2.StubTest.stub":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":193,"org.easymock.tests.UsageExpectAndThrowTest.longType":316,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":173,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":300,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests2.NameTest.nameForMocksControl":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":396,"org.easymock.tests2.MockedExceptionTest.testMockedException":58,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":405,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":304,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":29,"org.easymock.tests.MockingTest.testTwoMocks":215,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":321,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":171,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":362,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests2.MockBuilderTest.testCreateMockString":87,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests.UsageExpectAndThrowTest.floatType":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":44,"org.easymock.tests.UsageVerifyTest.twoThrows":207,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":209,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":149,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":340,"org.easymock.tests2.UsageTest.defaultResetToNice":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":222,"org.easymock.tests.UsageCallCountTest.tooFewCalls":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":248,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":444,"org.easymock.tests.UsageThrowableTest.throwCheckedException":337,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":368,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":46,"org.easymock.tests.ObjectMethodsTest.testHashCode":156,"org.easymock.tests2.NameTest.nameForNiceMock":153,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":35,"org.easymock.samples.ExampleTest.addDocument":349,"org.easymock.tests2.DelegateToTest.testStubDelegate":103,"org.easymock.tests2.AnswerTest.stubAnswer":45,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.floatType":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":116,"org.easymock.tests2.SerializationTest.test":108,"org.easymock.tests2.UsageConstraintsTest.testSame":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":282,"org.easymock.samples.SupportTest.addDocument":353,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":172,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":412,"org.easymock.tests2.NameTest.nameForMock":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":293,"org.easymock.tests2.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":327,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":407,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":228,"org.easymock.tests2.MockedExceptionTest.testRealException":60,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":428,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":221,"org.easymock.tests2.NameTest.nameForStrictMock":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":143,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":80,"org.easymock.tests2.UsageStrictMockTest.range":51,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":62,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":361,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":140,"org.easymock.tests.UsageTest.wrongArguments":239,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":294,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":260,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":168,"org.easymock.tests.UsageTest.unexpectedCallWithArray":238,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":295,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.samples.ExampleTest.addAndChangeDocument":352,"org.easymock.tests.UsageStrictMockTest.testVerify":205,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":344,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":232,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":287,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":67,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265}}]
