[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:224","sourceCode":"return (java.lang.reflect.Field == null) || (((java.lang.reflect.Field.getModifiers()) & ((java.lang.reflect.Modifier.int) + (java.lang.reflect.Modifier.int))) != 0)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:227","sourceCode":"net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,27,86,87,88,89,90,10,11,91,92,12,13,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,18,57,123,124,125,126,127,128,19,20,21,22,23,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[145,146],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[147],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[148,149,150,151,152,153,154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[65,155,66,67,156,157,158,159,68,160,69,161,70,71,162,72,163,164,165,79,166,167,168,169,170,171,172,173,80,174,175,81,176,82,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,99,100,210,101,102,211,212,213,44,44,45,45,214,215,216,217,218,113,114,115,219,220,221,222,223,147,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,139,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"classMockingDisabled"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[247,248,249,250,145,146,64,65,155,66,67,156,157,158,159,68,160,69,251,161,70,71,162,72,252,73,253,74,254,75,76,255,77,78,256,257,258,163,259,164,165,79,260,166,167,168,169,170,171,172,173,80,174,175,81,176,82,177,178,179,0,261,262,263,1,83,84,264,2,3,4,265,266,148,267,149,150,151,85,268,27,86,87,88,89,180,183,269,270,90,271,10,11,91,92,272,273,274,12,13,93,94,275,28,29,95,276,277,30,31,32,33,278,279,280,281,282,34,283,35,36,96,37,38,284,285,286,287,288,39,40,41,289,290,291,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,42,312,313,314,315,316,317,5,318,319,320,6,97,98,321,7,8,9,322,209,99,100,210,323,324,101,102,325,211,212,213,326,327,43,328,103,104,105,106,44,45,329,214,330,331,332,333,152,334,335,336,337,338,339,215,216,107,340,108,109,341,342,110,111,112,46,343,47,48,49,50,51,217,218,113,114,115,219,220,221,344,116,153,345,117,118,119,52,53,54,55,56,222,223,147,224,225,226,346,347,154,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,227,228,229,230,231,400,232,401,402,233,403,404,405,406,407,408,409,410,411,412,413,414,120,121,415,122,416,18,57,123,124,125,126,417,234,235,236,237,238,239,240,241,242,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,127,438,439,440,128,19,20,21,441,442,22,23,129,130,131,443,444,445,58,59,446,447,60,243,244,245,246,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,132,463,464,133,134,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,135,136,137,61,62,480,481,482,483,484,485,486,138,487,488,489,490,491,139,492,493,140,141,142,143,144],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[87,88,272,273,124,125,441,442,479,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[352,459,460,461],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[223,147,224,225,226],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[27,87,88,10,11,12,13,103,104,105,106,494,495,496,18,57,124,125,19,21,22,23,130,135,136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[27,88,10,11,12,13,103,104,105,106,18,57,125,19,21,22,23,130,136,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[301,302,303,304,305,306,307,308,309,310,311,42,312,313,497],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[27,33,281,302,308,309,313,46,343,52,53,54,55,56,57,130,58,59,446,447,60,457,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[299,408,465,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[87,496,124,136,137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[27,88,89,10,103,104,105,106,107,108,109,57,125,126,19,135,136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":276,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":355,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":92,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":329,"org.easymock.tests2.DelegateToTest.testReturnException":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":454,"org.easymock.tests.MockingTest.testPartialClassMocking":230,"org.easymock.tests.MockClassControlTest.testToString":113,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":328,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":372,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":494,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":279,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":470,"org.easymock.samples.ExampleTest.answerVsDelegate":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":142,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":402,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":221,"org.easymock.tests2.CaptureTest.testPrimitive":304,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":391,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":448,"org.easymock.tests.UsageTest.argumentsOrdered":23,"org.easymock.tests.UsageVarargTest.varargIntAccepted":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":52,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":56,"org.easymock.tests.ReplayStateInvalidUsageTest.times":411,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":97,"org.easymock.tests2.DependencyTest.testClassMocking":292,"org.easymock.tests2.AnswerTest.answer":247,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":317,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":493,"org.easymock.tests2.CaptureTest.testAnd":301,"org.easymock.tests2.UsageTest.strictResetToDefault":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":254,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":387,"org.easymock.tests.LimitationsTest.mockFinalMethod":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":120,"org.easymock.tests2.CaptureTest.testCapture1_2446744":305,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":315,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":405,"org.easymock.tests.UsageThrowableTest.throwError":392,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":141,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":208,"org.easymock.samples.PartialClassMockTest.testGetArea":214,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":406,"org.easymock.tests.MockingTest.testInterfaceMocking":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":134,"org.easymock.tests2.UsageTest.niceToStrict":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.MockBuilderTest.testCreateMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":7,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":381,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":492,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":468,"org.easymock.tests.UsageOverloadedMethodTest.overloading":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":345,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":429,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":283,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":310,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":187,"org.easymock.tests.MockClassControlTest.testEquals":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":389,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":316,"org.easymock.tests.MockNameTest.defaultName":127,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":50,"org.easymock.samples.ExampleTest.voteForRemovals":337,"org.easymock.tests.UsageVarargTest.allKinds":491,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":216,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":398,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":458,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":264,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":81,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":242,"org.easymock.samples.ExampleTest.voteForRemoval":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":176,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":169,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":253,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":453,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":266,"org.easymock.tests2.CaptureTest.testCaptureFirst":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":74,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":425,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":299,"org.easymock.tests2.CaptureTest.testCapture2_2446744":312,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":490,"org.easymock.tests.GenericTest.testBridgedEquals":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":111,"org.easymock.tests.UsageExpectAndReturnTest.longType":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":390,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":480,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":388,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":47,"org.easymock.tests.UsageCallCountTest.tooManyCalls":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":426,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testNiceClassMocking":233,"org.easymock.tests.MockingTest.testClassMocking":228,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":213,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":479,"org.easymock.tests.MockTypeTest.fromEasyMockClass":140,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":291,"org.easymock.tests.UsageExpectAndReturnTest.object":428,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":486,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":464,"org.easymock.tests.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":449,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":178,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":434,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests.MockClassControlTest.testHashCode":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":261,"org.easymock.tests2.EasyMockSupportTest.testVerify":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":197,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":314,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":275,"org.easymock.tests.UsageVarargTest.varargCharAccepted":485,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":234,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastCall":272,"org.easymock.tests.DefaultClassInstantiatorTest.object":235,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":369,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":379,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":378,"org.easymock.tests.CapturesMatcherTest.test":497,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":435,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":459,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":206,"org.easymock.tests2.UsageTest.resumeIfFailure":93,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":139,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":456,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":427,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":288,"org.easymock.tests2.SerializationTest.testAllMockedMethod":164,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":361,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":16,"org.easymock.samples.SupportTest.voteForRemovals":332,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":384,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":367,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":248,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":467,"org.easymock.tests.UsageExpectAndThrowTest.object":382,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":285,"org.easymock.tests2.DelegateToTest.testWrongClass":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":62,"org.easymock.tests.UsageStrictMockTest.range":124,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":269,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":383,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":184,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":469,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":440,"org.easymock.tests2.CaptureTest.testCaptureNone":309,"org.easymock.tests.UsageUnorderedTest.message":130,"org.easymock.tests.UsageVerifyTest.twoReturns":137,"org.easymock.tests.UsageVarargTest.varargByteAccepted":489,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":201,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":342,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":133,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":215,"org.easymock.tests2.CaptureTest.testCapture_2617107":303,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageConstraintsTest.any":281,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":410,"org.easymock.tests2.StubTest.stub":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndThrowTest.longType":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":239,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":409,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.SerializationTest.testClass":163,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":83,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":437,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":319,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests2.NameTest.nameForMocksControl":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests2.MockedExceptionTest.testMockedException":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":189,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":442,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":232,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":376,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CompareToTest.testNotComparable":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":5,"org.easymock.tests2.CaptureTest.testCaptureLast":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":278,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":286,"org.easymock.tests.MockingTest.testTwoMocks":229,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":418,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":380,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.samples.ExampleTest.removeNonExistingDocument":338,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":407,"org.easymock.tests.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":262,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":237,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":298,"org.easymock.tests2.MockBuilderTest.testCreateMockString":72,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":191,"org.easymock.tests.UsageExpectAndThrowTest.floatType":374,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":179,"org.easymock.tests.UsageVerifyTest.twoThrows":136,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":335,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":244,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":399,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":211,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.differentLength":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":318,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":172,"org.easymock.tests.UsageTest.openCallCountByLastCall":441,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":446,"org.easymock.tests.UsageCallCountTest.tooFewCalls":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":471,"org.easymock.tests.UsageThrowableTest.throwCheckedException":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":25,"org.easymock.tests.MockingTest.testStrictClassMocking":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":324,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.ObjectMethodsTest.testHashCode":463,"org.easymock.tests2.NameTest.nameForNiceMock":105,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":300,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.samples.ExampleTest.addDocument":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.DelegateToTest.testStubDelegate":267,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":251,"org.easymock.tests.UsageVarargTest.varargLongAccepted":488,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":420,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":177,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":393,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":3,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":180,"org.easymock.tests2.SerializationTest.test":259,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":306,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":419,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":331,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":192,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":2,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":401,"org.easymock.tests2.NameTest.nameForMock":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":162,"org.easymock.tests2.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":386,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":445,"org.easymock.tests2.MockedExceptionTest.testRealException":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":358,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":414,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests2.NameTest.nameForStrictMock":104,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":183,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":238,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":66,"org.easymock.tests2.UsageStrictMockTest.range":87,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":1,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":311,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests2.MockBuilderTest.testWithConstructor":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":193,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":347,"org.easymock.tests.UsageVarargTest.varargShortAccepted":487,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":240,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":110,"org.easymock.tests2.UsageConstraintsTest.cmpTo":282,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests2.CaptureTest.testCaptureFromStub":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":404,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":67,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":432,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.samples.ExampleTest.addAndChangeDocument":339,"org.easymock.tests.UsageStrictMockTest.testVerify":417,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":330,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":416,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":54,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":424,"org.easymock.tests.LimitationsTest.abstractClass":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":496,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76}}]
