[{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[0],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,1,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,2,197,198,3,4,5,6,7,199,200,201,202,203,204,205,206,207,208,209,210,211,212,8,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,9,249,250,251,252,253,254,255,256,257,258,10,259,260,261,11,262,263,264,265,12,266,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,267,268],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[269,270,271,272,273,274,275],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,276,41,42,43,44,45,46,277,278,47,48,49,50,51,52,53,54,55,56,57,279,58,59,60,61,62,280,63,64,65,281,66,67,1,68,269,69,70,71,72,282,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,283,284,285,286,97,98,99,100,287,101,102,103,288,104,289,290,105,106,107,291,292,293,294,295,108,296,297,298,299,300,301,302,303,304,109,305,306,110,307,308,309,310,311,312,313,314,315,111,316,317,318,319,320,112,321,322,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,323,324,132,325,326,327,133,134,135,328,329,136,137,138,139,140,141,142,143,144,145,146,147,330,331,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,332,163,164,165,166,167,333,334,335,336,337,338,339,340,341,168,342,343,344,345,346,347,348,349,169,350,351,170,352,353,171,354,172,173,355,356,174,357,175,358,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,2,197,198,3,4,5,6,7,199,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,200,376,201,202,203,377,204,205,206,207,208,209,210,211,212,378,379,380,8,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,213,214,419,215,216,217,218,219,220,420,421,422,423,424,425,426,427,221,222,428,223,429,430,431,224,225,226,227,432,433,434,435,228,229,230,231,232,436,437,438,439,440,441,233,234,235,236,237,238,239,240,241,242,243,442,244,245,0,443,246,247,248,9,444,249,250,445,446,251,447,252,253,254,255,448,256,257,258,10,259,260,449,261,11,450,262,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,263,264,265,12,266,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,267,268,473,474,475,476,477,478,479,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[481],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[483],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[96,484],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.STRICT","org.easymock.MockType.STRICT":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[47,48,49,50,51,52,53,54,55,56,57,279,58,59,485],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[47,49,57,71,72,74,76,77,79,89,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,279,58,59,61,62,63,64,65,66,67,1,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,104,105,106,107,108,109,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,167,168,348,349,169,350,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,2,197,198,3,4,5,6,7,199,367,200,201,202,203,204,205,206,207,208,209,210,211,212,378,379,380,8,381,388,389,390,391,392,393,394,213,214,215,216,217,218,219,220,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,443,246,247,248,9,249,250,252,253,254,255,256,257,258,10,259,260,261,11,263,264,265,12,266,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,267,268,474,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[116,122,123,145,199,486,419,215,218,219,237,240,10,259],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[33,35,37,38,40,43,47,48,50,51,54,55,56,57,58,59,60,61,64,1,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,110,111,112,113,114,115,117,119,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,143,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,2,198,3,4,5,6,7,200,213,214,216,217,220,221,222,223,224,225,226,227,228,229,230,231,232,233,238,240,241,244,0,247,248,9,258,259,262,263,264,266,267,268],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[404,406,415,416,418,440,452,453,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[1,113,120,2,198,3,4,5,6,7,8,213,217,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[115,116,122,123,143,145,146,163,164,165,166,199,214,215,218,219,237,238,240,241,258,10,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[33,34,35,36,37,38,39,40,276,41,42,43,44,45,46,277,278,47,48,49,50,51,52,53,54,55,56,57,279,58,59,60,61,62,280,63,64,65,281,66,67,1,68,269,488,69,70,71,72,282,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,283,489,490,491,284,285,286,97,98,99,100,287,101,102,103,288,104,289,290,105,106,107,291,292,293,294,295,108,296,297,298,299,300,301,302,303,304,109,305,306,110,307,308,309,310,311,312,313,314,315,111,316,317,318,319,320,112,321,322,113,114,115,116,117,118,119,120,121,122,123,124,125,483,126,127,128,129,130,131,323,324,132,325,326,327,133,134,135,328,329,136,137,138,139,140,141,142,143,144,145,146,147,330,331,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,332,163,164,165,166,167,333,334,335,336,337,338,339,340,341,168,342,343,344,345,346,347,348,349,169,350,351,492,170,352,482,353,171,354,172,275,173,493,355,356,174,494,357,175,358,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,2,197,198,3,4,5,6,7,199,359,360,361,362,363,364,365,366,495,367,368,369,370,371,372,496,373,374,375,200,376,201,202,203,377,204,205,206,207,208,209,210,211,212,378,379,380,8,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,213,214,419,215,216,217,218,219,220,420,421,422,423,424,425,426,427,221,222,428,223,429,430,431,224,225,226,227,432,433,434,435,228,229,230,231,232,436,437,438,497,439,440,441,233,234,235,236,237,238,239,240,241,242,243,442,244,245,0,443,246,247,248,9,444,249,250,445,446,251,447,252,253,254,255,448,256,257,258,10,259,260,449,261,11,450,262,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,263,264,265,12,266,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,267,268,473,474,475,476,477,478,479,480],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,279,58,59,60,61,280,63,64,65,281,66,67,1,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,104,289,290,105,106,107,108,113,114,115,116,117,118,119,120,121,122,123,124,125,128,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,333,334,335,336,168,348,349,169,350,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,2,197,198,3,4,5,6,7,199,367,201,202,203,204,205,206,207,208,209,210,211,212,378,379,380,8,381,382,390,391,392,393,394,411,417,213,214,419,215,216,217,218,219,220,420,421,422,423,424,224,225,226,227,432,433,434,435,228,229,230,231,232,436,437,438,440,233,234,235,236,237,238,239,240,241,242,243,244,247,248,9,444,249,250,445,446,251,252,253,254,255,448,256,257,258,10,259,260,449,261,11,450,262,451,452,453,454,455,456,457,458,459,263,264,265,12,266,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,267,268,473,475],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[47,49,50,51,52,53,54,56,498,57,279,59],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,113,120,2,198,3,4,5,6,7,8,398,213,217,9,10,11,455,456,457,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[280,64,405],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[47,49,57,71,72,74,76,77,79,89,94],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[47,49,51,52,53,56,57,279,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[116,122,123,145,199,486,419,215,218,219,237,240,10,259],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":72,"org.easymock.tests2.UsageTest.argumentsOrdered":123,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":118,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":378,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.tests.MockClassControlTest.testToString":384,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":332,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":270,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":78,"org.easymock.tests2.UsageTest.wrongArguments":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":434,"org.easymock.samples.ExampleTest.answerVsDelegate":36,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":430,"org.easymock.tests2.UsageConstraintsTest.testNull":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":129,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":392,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":444,"org.easymock.tests.UsageTest.argumentsOrdered":219,"org.easymock.tests.UsageVarargTest.varargIntAccepted":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests.ReplayStateInvalidUsageTest.times":469,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.DependencyTest.testClassMocking":330,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":336,"org.easymock.tests2.CaptureTest.testAnd":47,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":361,"org.easymock.tests2.UsageTest.strictResetToDefault":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":446,"org.easymock.tests2.DelegateToTest.testDelegate":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests.LimitationsTest.mockFinalMethod":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":424,"org.easymock.tests2.DependencyTest.testClassMockingSupport":331,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":458,"org.easymock.tests2.CaptureTest.testCapture1_2446744":51,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":334,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":463,"org.easymock.tests.UsageThrowableTest.throwError":2,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":322,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":464,"org.easymock.tests.MockingTest.testInterfaceMocking":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":453,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.UsageTest.niceToStrict":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":432,"org.easymock.tests.UsageOverloadedMethodTest.overloading":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":320,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":247,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":377,"org.easymock.tests.MockClassControlTest.testEquals":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":422,"org.easymock.tests2.CaptureTest.testCaptureAll":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":335,"org.easymock.tests.MockNameTest.defaultName":480,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":461,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":393,"org.easymock.samples.ExampleTest.voteForRemovals":40,"org.easymock.tests.UsageVarargTest.allKinds":211,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":423,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":6,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":381,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":496,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":135,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":323,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":152,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":212,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":153,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":115,"org.easymock.tests2.CaptureTest.testCapture2_2446744":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":174,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":210,"org.easymock.tests.GenericTest.testBridgedEquals":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":256,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":420,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":473,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":390,"org.easymock.tests.UsageCallCountTest.tooManyCalls":257,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":5,"org.easymock.tests.MockingTest.testNiceClassMocking":431,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests.MockingTest.testClassMocking":426,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":447,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":169,"org.easymock.tests2.UsageConstraintsTest.testFind":73,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":9,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests.UsageExpectAndReturnTest.object":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":158,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":271,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":477,"org.easymock.tests.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":193,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests.MockClassControlTest.testHashCode":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":313,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":456,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":333,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":483,"org.easymock.tests.UsageVarargTest.varargCharAccepted":204,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":161,"org.easymock.tests.DefaultClassInstantiatorTest.object":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":455,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":475,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":486,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.tests.CapturesMatcherTest.test":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":436,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests2.UsageTest.resumeIfFailure":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":380,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":62,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":411,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":289,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":441,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":268,"org.easymock.tests.UsageStrictMockTest.range":240,"org.easymock.samples.ConstructorCalledMockTest.testTax":277,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":471,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":454,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":199,"org.easymock.tests.UsageVerifyTest.twoReturns":259,"org.easymock.tests.UsageVarargTest.varargByteAccepted":209,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":316,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":468,"org.easymock.tests2.StubTest.stub":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":379,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":467,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests.LimitationsTest.mockNativeMethod":200,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":293,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests2.NameTest.nameForMocksControl":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":295,"org.easymock.tests2.MockedExceptionTest.testMockedException":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":306,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":358,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":126,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":131,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":459,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":427,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.samples.ExampleTest.removeNonExistingDocument":276,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":465,"org.easymock.tests.UsageStrictMockTest.differentMethods":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":357,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":382,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":307,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":488,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":134,"org.easymock.tests.LimitationsTest.privateConstructor":375,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":348,"org.easymock.tests2.UsageTest.defaultResetToNice":121,"org.easymock.samples.ExampleTest.voteAgainstRemovals":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":192,"org.easymock.tests.UsageVarargTest.differentLength":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":292,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.UsageConstraintsTest.equals":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":325,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":265,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.ConstraintsToStringTest.nullToString":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":435,"org.easymock.tests.UsageThrowableTest.throwCheckedException":4,"org.easymock.tests.MockingTest.testStrictClassMocking":425,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":234,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":296,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":101,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":107,"org.easymock.tests.ObjectMethodsTest.testHashCode":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":273,"org.easymock.tests2.NameTest.nameForNiceMock":165,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.DependencyTest.testInterfaceMocking":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":272,"org.easymock.samples.ExampleTest.addDocument":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":317,"org.easymock.tests2.DelegateToTest.testStubDelegate":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.AnswerTest.stubAnswer":106,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":238,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":493,"org.easymock.tests.UsageVarargTest.varargLongAccepted":208,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":278,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":70,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":283,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":52,"org.easymock.tests2.SerializationTest.test":61,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":75,"org.easymock.samples.SupportTest.addDocument":42,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":287,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":308,"org.easymock.tests.GenericTest.testPackageScope":244,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":344,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":429,"org.easymock.tests2.NameTest.nameForMock":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":494,"org.easymock.tests2.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests2.MockedExceptionTest.testRealException":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":264,"org.easymock.tests2.NameTest.nameForStrictMock":164,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":130,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":284,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.UsageStrictMockTest.range":145,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":151,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":312,"org.easymock.tests2.UsageConstraintsTest.testOr":76,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":127,"org.easymock.tests.UsageTest.wrongArguments":215,"org.easymock.tests2.MockBuilderTest.testWithConstructor":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":309,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":190,"org.easymock.tests.UsageVarargTest.varargShortAccepted":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":448,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":290,"org.easymock.tests2.CompareToTest.testLessThan":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CaptureTest.testCaptureFromStub":279,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":462,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":419,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":191,"org.easymock.tests2.CaptureTest.testCapture":498,"org.easymock.tests2.UsageConstraintsTest.constraints":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":41,"org.easymock.tests2.ConstraintsToStringTest.notToString":487,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":46,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":421,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":183,"org.easymock.tests.LimitationsTest.abstractClass":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":156,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":202}}]
