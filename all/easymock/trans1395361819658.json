[{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16,17],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[19,20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,6,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,22,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,4,107,108,109,110,111,112,113,114,115,116,117,118,119,23,120,24,121,122,25,26,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,27,143,144,145,146,28,29,147,30,31,32,33,34,35,148,149,7,150,151,152,153,36,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,11,12,171,13,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,37,38,39,40,200,201,202,203,204,205,206,207,208,209,41,42,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,8,267,268,269,270,271,272,273,274,43,44,275,276,45,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,2,18,336,46,47,337,338,339,5,6,48,340,341,342,343,344,345,346,347,348,349,350,351,49,50,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,0,1,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,51,407,408,409,410,411,412,413,414,415,416,417,418,419,67,420,421,422,423,424,425,426,52,427,53,54,428,429,55,56,430,57,58,431,59,432,69,433,60,434,435,436,19,20,437,438,439,440,14,441,442,443,444,445,446,447,448,449,15,450,451,3,452,453,454,455,456,457,458,459,16,460,461,462,463,464,465,61,62,63,64,466,467,65,468,469,66,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,17,487,488,489,490,491,492,493,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[77,78,79,81,81,82,82,103,104,105,106,4,107,108,109,110,135,160,161,162,163,164,165,167,168,169,170,11,12,13,174,42,210,211,212,213,214,215,216,229,234,325,495,496,326,329,330,331,395,396,399,401,411,413,414,416,417,418,419,420,422,423,424,426,432,69,440,14,442,443,444,445,447,448,449,15,450,451,3,452,453,454,455,456,457,16,460,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,17,487,488,489,490,491,492,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[160,161,162,163,165,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[81,81,82,82,136,137,138,139,140,148,195,196,197,198,199,221,222,225,257,258,259,44,288,292,293,302,307,333,334,336,46,47,337,340,342,343,345,346,49,50,352,392,463,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":298,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":429,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":80,"org.easymock.tests2.DelegateToTest.testReturnException":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":112,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.tests.MockClassControlTest.testToString":211,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":465,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":477,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":237,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":339,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":221,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":271,"org.easymock.samples.ExampleTest.answerVsDelegate":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":234,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":173,"org.easymock.tests2.UsageConstraintsTest.testNull":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":442,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":321,"org.easymock.tests2.CaptureTest.testPrimitive":384,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":225,"org.easymock.tests.UsageTest.moreThanOneArgument":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":138,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":93,"org.easymock.tests.UsageVarargTest.varargIntAccepted":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":195,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":131,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":374,"org.easymock.tests2.DependencyTest.testClassMocking":395,"org.easymock.tests2.AnswerTest.answer":60,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":410,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":231,"org.easymock.tests2.CaptureTest.testAnd":381,"org.easymock.tests2.UsageTest.strictResetToDefault":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":316,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":97,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":252,"org.easymock.tests.LimitationsTest.mockFinalMethod":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":102,"org.easymock.tests2.DependencyTest.testClassMockingSupport":396,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":226,"org.easymock.tests2.CaptureTest.testCapture1_2446744":385,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":408,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":125,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":233,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.samples.PartialClassMockTest.testGetArea":77,"org.easymock.tests.MockingTest.testInterfaceMocking":171,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":482,"org.easymock.tests2.UsageTest.niceToStrict":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":238,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":417,"org.easymock.tests2.MockBuilderTest.testCreateMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":246,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":269,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":186,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":341,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":390,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":202,"org.easymock.tests2.EasyMockSupportClassTest.testAll":474,"org.easymock.tests.MockClassControlTest.testEquals":215,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":100,"org.easymock.tests2.CaptureTest.testCaptureAll":382,"org.easymock.tests.MockNameTest.defaultName":146,"org.easymock.tests2.UsageConstraintsTest.testMatches":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":123,"org.easymock.samples.ExampleTest.voteForRemovals":90,"org.easymock.tests.UsageVarargTest.allKinds":41,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":101,"org.easymock.samples.BasicClassMockTest.testPrintContent":79,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":466,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":361,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":76,"org.easymock.tests2.UsageConstraintsTest.greaterThan":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":218,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":167,"org.easymock.samples.ExampleTest.voteForRemoval":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":452,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":0,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":445,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":314,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":111,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":402,"org.easymock.tests2.CaptureTest.testCaptureFirst":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":315,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":393,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":367,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":306,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":209,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":122,"org.easymock.tests.UsageExpectAndReturnTest.longType":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":98,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":255,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":267,"org.easymock.tests.UsageCallCountTest.tooManyCalls":25,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":455,"org.easymock.tests.MockingTest.testNiceClassMocking":174,"org.easymock.tests.MockingTest.testClassMocking":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":118,"org.easymock.tests2.UsageConstraintsTest.testContains":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":331,"org.easymock.tests2.UsageConstraintsTest.testFind":336,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":27,"org.easymock.tests.MockTypeTest.fromEasyMockClass":232,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":439,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests.UsageExpectAndReturnTest.object":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":71,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":204,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":285,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":143,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":191,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests.MockClassControlTest.testHashCode":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":150,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":407,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":353,"org.easymock.tests.UsageVarargTest.varargCharAccepted":203,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":159,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastCall":55,"org.easymock.tests.DefaultClassInstantiatorTest.object":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":450,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":492,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":212,"org.easymock.tests2.UsageTest.resumeIfFailure":431,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":229,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":114,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":351,"org.easymock.tests2.SerializationTest.testAllMockedMethod":401,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":9,"org.easymock.samples.SupportTest.voteForRemovals":85,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":249,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":310,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":434,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":145,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":348,"org.easymock.tests2.DelegateToTest.testWrongClass":405,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":259,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.tests.UsageStrictMockTest.range":276,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":327,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":248,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":471,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":133,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":270,"org.easymock.tests2.CaptureTest.testCaptureNone":389,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":281,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":208,"org.easymock.tests2.ThreadingTest.testThreadSafe":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":24,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":78,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":286,"org.easymock.tests2.CaptureTest.testCapture_2617107":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":308,"org.easymock.tests2.UsageConstraintsTest.any":6,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":113,"org.easymock.tests.UsageExpectAndThrowTest.longType":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":309,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":164,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":129,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":468,"org.easymock.tests2.SerializationTest.testClass":399,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":359,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":470,"org.easymock.tests2.NameTest.nameForMocksControl":64,"org.easymock.tests2.MockedExceptionTest.testMockedException":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":476,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":438,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":241,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":440,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":420,"org.easymock.tests.MockingTest.testNicePartialClassMocking":12,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":444,"org.easymock.tests2.CaptureTest.testCaptureLast":388,"org.easymock.tests2.CompareToTest.testCompareEqual":21,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":227,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":460,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":338,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":349,"org.easymock.tests.MockingTest.testTwoMocks":170,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":245,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":50,"org.easymock.samples.ExampleTest.removeNonExistingDocument":91,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":127,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":162,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":426,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":239,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":433,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":17,"org.easymock.samples.ExampleTest.voteAgainstRemoval":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":451,"org.easymock.tests.LimitationsTest.privateConstructor":108,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":430,"org.easymock.samples.ExampleTest.voteAgainstRemovals":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":300,"org.easymock.tests.UsageVarargTest.differentLength":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.CallbackTest.callback":464,"org.easymock.tests2.UsageConstraintsTest.equals":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":448,"org.easymock.tests.UsageTest.openCallCountByLastCall":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":223,"org.easymock.tests.UsageCallCountTest.tooFewCalls":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":149,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":459,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":20,"org.easymock.tests.ObjectMethodsTest.testHashCode":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":74,"org.easymock.tests2.NameTest.nameForNiceMock":63,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":368,"org.easymock.tests2.DependencyTest.testInterfaceMocking":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":72,"org.easymock.samples.ExampleTest.addDocument":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":404,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":421,"org.easymock.tests.UsageVarargTest.varargLongAccepted":207,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":297,"org.easymock.tests.UsageExpectAndReturnTest.floatType":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":432,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests.UsageThrowableTest.noUpperLimit":153,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":334,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":325,"org.easymock.tests2.SerializationTest.test":400,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":386,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":176,"org.easymock.tests2.UsageConstraintsTest.testSame":47,"org.easymock.samples.SupportTest.addDocument":84,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":458,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":479,"org.easymock.tests.GenericTest.testPackageScope":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":362,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":172,"org.easymock.tests2.NameTest.nameForMock":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":251,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":220,"org.easymock.tests2.MockedExceptionTest.testRealException":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":328,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":222,"org.easymock.tests2.NameTest.nameForStrictMock":62,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":437,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":326,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":163,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":413,"org.easymock.tests2.UsageStrictMockTest.range":469,"org.easymock.tests2.UsageConstraintsTest.lessThan":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":483,"org.easymock.tests2.CaptureTest.testCaptureRightOne":391,"org.easymock.tests2.UsageConstraintsTest.testOr":337,"org.easymock.tests.UsageRangeTest.combination":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":480,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":165,"org.easymock.tests.UsageVarargTest.varargShortAccepted":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":291,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests2.CaptureTest.testCaptureFromStub":392,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":124,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":414,"org.easymock.tests.UsageTest.unexpectedCallWithArray":147,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":189,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.UsageConstraintsTest.constraints":335,"org.easymock.samples.ExampleTest.addAndChangeDocument":92,"org.easymock.tests.UsageStrictMockTest.testVerify":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":83,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":181,"org.easymock.tests.LimitationsTest.abstractClass":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":318}}]
