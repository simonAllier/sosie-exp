[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1385","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[56,57,58],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[60,61],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[7,8,9,10,11,12,13,62,14,63,64,15,16,17,19,20,21,23,25,26,27,28,29,65,30,31,32,66,67,33,68,69,70,37,38,39,40,41,43,44,45,47,71,49,50,51,52,54,55],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[72],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[20,25,28,29,69,39,41,44,71,49,50,51,54,55],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[39,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,75,76,77,78,79,31,80,81,82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[11,96,97,98,99,60,100,101,84,85,93],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[103],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[84,85,86,87,88,89,91,92,93],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[104,105,106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[110],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[111,112,113,114,115,116,117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[118,119,120,121,122,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[72,124],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[103],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[128,0],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[13,14,15,129],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[130,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[124],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.UsageTest.argumentsOrdered":29,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":109,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":27,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":122,"org.easymock.tests2.NameTest.nameForNiceMock":5,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests.UsageVarargTest.allKinds":130,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":17,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":42,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":16,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.tests2.UsageTest.wrongArguments":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":116,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ExampleTest.answerVsDelegate":80,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.UsageConstraintsTest.testNull":97,"org.easymock.tests2.SerializationTest.test":57,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":10,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":127,"org.easymock.tests.UsageTest.moreThanOneArgument":48,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":106,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":24,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":14,"org.easymock.tests.UsageTest.argumentsOrdered":51,"org.easymock.tests.GenericTest.testBridgedEquals":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":37,"org.easymock.tests2.NameTest.nameForMock":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":114,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":125,"org.easymock.tests.UsageCallCountTest.tooManyCalls":38,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":19,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests2.AnswerTest.answer":74,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":60,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":107,"org.easymock.tests2.CaptureTest.testAnd":84,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests2.NameTest.nameForMocksControl":6,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":59,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests2.NameTest.nameForStrictMock":4,"org.easymock.tests2.UsageConstraintsTest.testFind":102,"org.easymock.tests2.CompareToTest.testNotComparable":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":118,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":99,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":105,"org.easymock.tests.UsageTest.exactCallCountByLastCall":52,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests2.UsageConstraintsTest.testOr":98,"org.easymock.tests.UsageRangeTest.combination":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":64,"org.easymock.tests.UsageTest.wrongArguments":49,"org.easymock.tests2.MockBuilderTest.testWithConstructor":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":63,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":67,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":12,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":76,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":82,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":70,"org.easymock.tests2.CaptureTest.testCaptureMultiple":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":75,"org.easymock.tests2.UsageTest.niceToStrict":26,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":128,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":108,"org.easymock.tests.UsageVarargTest.differentLength":32,"org.easymock.tests2.CallbackTest.callback":31,"org.easymock.tests.UsageTest.unexpectedCallWithArray":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":115,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":34,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":120,"org.easymock.tests.UsageCallCountTest.tooFewCalls":36,"org.easymock.tests2.CaptureTest.testCapture":92,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":15,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":126,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests2.UsageTest.resumeIfFailure":65,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":89,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":9}}]
