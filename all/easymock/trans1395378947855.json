[{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[19,25,26,20,21,22,27,28,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,25,63,64,65,66,67,68,69,70,71,72,5,73,6,7,8,9,10,11,74,12,14,15,75,16,76,77,78,79,80,81,82,83,84,85,86,17,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,29,120,121,122,123,124,125,126,127,128,129,130,18,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,31,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,25,63,64,65,66,67,68,69,70,71,72,5,73,6,7,8,9,10,11,74,12,14,15,75,16,76,77,78,79,80,81,82,83,84,85,86,17,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,29,120,121,122,123,124,125,126,127,128,129,130,18,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,31,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49,0,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[311,99,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[44,25,313,82,146,314,147,315,148,149,150,151,152,153,316,154,317,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[89,90,91,92,116,155,162,177,184,186,187,188,189,190,191,200,201,202,203,204,205,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,269,270,274,301,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":301,"org.easymock.tests2.UsageTest.argumentsOrdered":165,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":312,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":224,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":138,"org.easymock.tests2.SerializationTest.testAllMockedMethod":64,"org.easymock.tests2.DelegateToTest.testReturnException":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":201,"org.easymock.tests.MockingTest.testPartialClassMocking":293,"org.easymock.samples.SupportTest.voteForRemovals":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":239,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":169,"org.easymock.tests.UsageExpectAndThrowTest.object":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":54,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":20,"org.easymock.tests2.DelegateToTest.testWrongClass":100,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":267,"org.easymock.tests2.UsageTest.wrongArguments":158,"org.easymock.tests.UsageStrictMockTest.range":197,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":35,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests2.UsageConstraintsTest.testNull":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":271,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":307,"org.easymock.tests.UsageTest.moreThanOneArgument":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":258,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":290,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.UsageVerifyTest.twoReturns":178,"org.easymock.tests.UsageVarargTest.varargByteAccepted":283,"org.easymock.tests2.ThreadingTest.testThreadSafe":48,"org.easymock.tests.UsageTest.argumentsOrdered":308,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":45,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":149,"org.easymock.tests2.StubTest.stub":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":202,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":59,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":259,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":234,"org.easymock.tests2.AnswerTest.answer":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":97,"org.easymock.tests2.CaptureTest.testAnd":5,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":84,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests2.MockedExceptionTest.testMockedException":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":306,"org.easymock.tests2.DelegateToTest.testDelegate":101,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":243,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":81,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":266,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":136,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests.UsageStrictMockTest.differentMethods":198,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests.UsageExpectAndThrowTest.floatType":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":131,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests.UsageVerifyTest.twoThrows":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":170,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":240,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.UsageConstraintsTest.testNotNull":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":230,"org.easymock.tests.UsageVarargTest.differentLength":280,"org.easymock.tests2.CallbackTest.callback":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":248,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests.UsageOverloadedMethodTest.overloading":273,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":237,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests2.EasyMockSupportClassTest.testAll":168,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":264,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":310,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":291,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":27,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":51,"org.easymock.tests.UsageVarargTest.allKinds":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":53,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":265,"org.easymock.samples.BasicClassMockTest.testPrintContent":46,"org.easymock.samples.ExampleTest.addDocument":38,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":56,"org.easymock.tests2.AnswerTest.stubAnswer":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":205,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":23,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":1,"org.easymock.tests.UsageVarargTest.varargLongAccepted":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.samples.ExampleTest.voteForRemoval":36,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":233,"org.easymock.tests.UsageExpectAndReturnTest.floatType":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":118,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.SerializationTest.test":63,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":216,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.samples.SupportTest.addDocument":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":200,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":222,"org.easymock.tests.GenericTest.testPackageScope":213,"org.easymock.tests2.CaptureTest.testCapture2_2446744":75,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":262,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":227,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":255,"org.easymock.tests2.UsageStrictMockTest.differentMethods":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":219,"org.easymock.tests.UsageCallCountTest.tooManyCalls":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.MockedExceptionTest.testRealException":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":314,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":91,"org.easymock.tests2.UsageConstraintsTest.testFind":120,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":274,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":88,"org.easymock.tests.UsageExpectAndReturnTest.object":225,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":30,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":21,"org.easymock.tests.UsageTest.exactCallCountByLastCall":309,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":260,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.UsageTest.wrongArguments":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":220,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":228,"org.easymock.tests.UsageVarargTest.varargShortAccepted":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":94,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests.UsageVarargTest.varargCharAccepted":278,"org.easymock.tests2.CaptureTest.testCaptureMultiple":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":57,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":315,"org.easymock.tests.UsageTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":229,"org.easymock.tests2.CaptureTest.testCapture":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":85,"org.easymock.tests2.UsageConstraintsTest.constraints":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.CapturesMatcherTest.test":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":232,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":47,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":263,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108}}]
