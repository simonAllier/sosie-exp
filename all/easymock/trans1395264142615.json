[{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[2,3,4,5,6,7],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[99,100,101,102,103],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[25,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[104,105],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[106,107,108,109,110,111,112,51,52,53,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,114,115,5,116,117,118,119,120,121,122,6,123,7,124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[125,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[126,127,128,129,130,131,132,10,133,134,0,135,136,2,137,138,139,140,141,142,143,116,117,118,17,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,43,44,166,167,168,169,170,171,172,173,174,175,120,176,121,122,177,178,179,180,55,58,63,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:130","sourceCode":"return (((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName()))) && ((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","type":"CtReturnImpl"},"failures":[8,9,10,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[198,126,199,127,128,129,130,9,10,200,201,202,15,136,137,140,141,142,143,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,115,17,224,225,226,227,228,229,230,231,232,233,234,144,145,146,147,148,150,151,152,153,154,21,22,23,107,108,109,110,111,112,235,236,28,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,158,275,159,160,161,162,163,99,100,42,164,165,43,44,166,167,276,277,278,169,170,173,174,175,279,47,48,280,49,281,50,282,283,119,284,176,285,286,51,52,53,113,287,288,289,290,177,178,179,180,54,58,59,60,61,67,69,77,83,84,291,86,87,88,90,92,94,292,293,294,295,296,297,298,299,300,301,181,182,302,183,184,185,186,303,304,187,188,305,306,189,307,308,309,310,311,190,191,192,193,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,195,327,328,329,330,331,332,333,334,335,336,337,197,338,339,105,340,341,98,342],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[343],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[340,341,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[344,345,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[198,106,200,201,133,134,202,0,2,137,224,225,226,227,228,154,111,235,236,170,348,90,296,297,301,181,182,302,349,183,184,185,186,303,304,350,351,187,352,317,318,319,320,321,322,323,324,325,326,194,195,327,328,329,330,331,332,333,334,335,336,337,196,197,338,339,105],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[106,133,134,203,354,355,356,357,358,107,108,109,110,111,112,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,279,359,360,51,52,53,113],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[198,106,361,344,345,126,199,127,128,129,130,362,131,132,9,10,11,200,201,133,134,202,0,363,364,365,366,367,368,369,370,371,372,373,374,15,135,136,2,137,138,139,140,141,142,375,143,203,376,377,378,354,355,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,379,380,381,356,115,5,116,382,357,117,118,383,384,385,386,346,347,17,224,225,226,227,228,229,230,231,232,233,387,388,389,358,390,234,391,144,145,146,147,148,149,150,151,152,153,154,155,392,393,394,395,396,397,20,21,22,23,107,108,109,110,111,112,398,156,157,399,400,235,236,27,28,29,30,31,32,33,34,401,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,35,270,271,272,273,274,158,275,159,160,161,162,402,163,99,99,100,100,42,164,165,43,44,166,167,276,277,278,168,169,170,171,172,173,174,175,279,47,48,280,49,281,50,282,359,283,119,120,284,176,403,360,285,121,122,286,404,51,52,53,113,287,288,125,348,289,290,177,178,179,180,54,55,58,59,60,61,62,63,64,67,69,77,83,84,85,291,86,87,88,89,90,92,93,94,95,292,405,406,293,294,295,296,297,407,298,299,408,409,300,301,181,182,302,349,183,184,185,186,303,304,350,351,187,188,305,306,189,307,308,309,310,311,190,191,192,193,352,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,194,195,327,328,329,330,331,332,333,334,335,336,337,196,197,338,339,105,340,341,98,342],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[9,10,11,15,17,20,21,22,23,25,26,28,99,99,100,100,42,43,44,410,411,412,47,48,280,49,50,282,53,290,54,413,55,56,58,59,60,61,62,63,414,64,67,69,77,83,84,85,86,87,88,89,90,92,93,94,95,340,98],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[415,416,417,418,419,290,420,421,422,340],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,2,139,423,5,116,117,118,391,264,265,172,120,121,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,2,139,423,5,116,117,118,391,264,265,172,120,121,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[424],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[198,106,200,201,133,134,202,0,2,137,224,225,226,227,228,154,111,235,236,170,348,90,296,297,301,181,182,302,349,183,184,185,186,303,304,350,351,187,317,318,319,320,321,322,323,324,325,326,194,195,327,328,329,330,331,332,333,334,335,336,337,196,197,338,339,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[425],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":320,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":356,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":176,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":164,"org.easymock.tests2.DelegateToTest.testReturnException":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":108,"org.easymock.tests.MockingTest.testPartialClassMocking":21,"org.easymock.tests.MockClassControlTest.testToString":29,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":239,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":415,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":326,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":268,"org.easymock.samples.ExampleTest.answerVsDelegate":275,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":26,"org.easymock.tests2.UsageConstraintsTest.testNull":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":34,"org.easymock.tests2.CaptureTest.testPrimitive":302,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":202,"org.easymock.tests.UsageTest.moreThanOneArgument":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":258,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":272,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":398,"org.easymock.tests.UsageTest.argumentsOrdered":118,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":224,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":54,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":228,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests.ReplayStateInvalidUsageTest.times":371,"org.easymock.tests2.AnswerTest.answer":292,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":316,"org.easymock.tests2.CaptureTest.testAnd":301,"org.easymock.tests2.UsageTest.strictResetToDefault":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":400,"org.easymock.tests2.DelegateToTest.testDelegate":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":254,"org.easymock.tests.LimitationsTest.mockFinalMethod":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":314,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":365,"org.easymock.tests.UsageThrowableTest.throwError":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":274,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":240,"org.easymock.tests2.UsageTest.niceToStrict":284,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":424,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":58,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":80,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":248,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":266,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":82,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":330,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":358,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":329,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":303,"org.easymock.tests.MockClassControlTest.testEquals":33,"org.easymock.tests2.EasyMockSupportClassTest.testAll":67,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":10,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":256,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":410,"org.easymock.tests2.CaptureTest.testCaptureAll":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":315,"org.easymock.tests2.UsageConstraintsTest.testMatches":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":363,"org.easymock.samples.ExampleTest.voteForRemovals":162,"org.easymock.tests.UsageVarargTest.allKinds":154,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":263,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":232,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":419,"org.easymock.tests2.UsageConstraintsTest.greaterThan":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.samples.ExampleTest.voteForRemoval":159,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":96,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":306,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":107,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":407,"org.easymock.tests2.CaptureTest.testCaptureFirst":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":189,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":404,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":348,"org.easymock.tests2.CaptureTest.testCapture2_2446744":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":153,"org.easymock.tests.GenericTest.testBridgedEquals":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":131,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":229,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":414,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":257,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":397,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.UsageCallCountTest.tooManyCalls":132,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":378,"org.easymock.tests.MockingTest.testNiceClassMocking":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests.MockingTest.testClassMocking":19,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":413,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":199,"org.easymock.tests2.UsageConstraintsTest.testContains":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":321,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":297,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":311,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":416,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":148,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":396,"org.easymock.tests.UsageTest.exactCallCountByLastCall":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":198,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":156,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":420,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":389,"org.easymock.tests.MockClassControlTest.testHashCode":32,"org.easymock.tests2.EasyMockSupportTest.testVerify":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":75,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":157,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":147,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests2.UsageTest.openCallCountByLastCall":403,"org.easymock.tests.DefaultClassInstantiatorTest.object":35,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":361,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":394,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":376,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":31,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":386,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":83,"org.easymock.tests2.UsageTest.resumeIfFailure":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":110,"org.easymock.tests2.StubTest.stubWithReturnValue":279,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":384,"org.easymock.samples.SupportTest.voteForRemovals":167,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":385,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":405,"org.easymock.tests.UsageExpectAndThrowTest.object":249,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":336,"org.easymock.tests2.DelegateToTest.testWrongClass":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":99,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":393,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":265,"org.easymock.tests.UsageVarargTest.varargByteAccepted":152,"org.easymock.tests2.ThreadingTest.testThreadSafe":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":78,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":130,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":182,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":134,"org.easymock.tests2.UsageConstraintsTest.any":195,"org.easymock.tests2.StubTest.stub":175,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":370,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":109,"org.easymock.tests.UsageExpectAndThrowTest.longType":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":369,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.SerializationTest.testClass":340,"org.easymock.tests.LimitationsTest.mockNativeMethod":15,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":11,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":412,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":180,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":357,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":243,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":22,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":325,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":337,"org.easymock.tests.MockingTest.testTwoMocks":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":247,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":339,"org.easymock.samples.ExampleTest.removeNonExistingDocument":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":367,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":37,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":125,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":70,"org.easymock.tests.UsageExpectAndThrowTest.floatType":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":332,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":293,"org.easymock.tests.UsageVerifyTest.twoThrows":264,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":77,"org.easymock.samples.ExampleTest.voteAgainstRemoval":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":155,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests.LimitationsTest.privateConstructor":14,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":343,"org.easymock.tests2.UsageConstraintsTest.testNotNull":338,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":285,"org.easymock.samples.ExampleTest.voteAgainstRemovals":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.UsageVarargTest.differentLength":149,"org.easymock.tests2.CallbackTest.callback":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":103,"org.easymock.tests.UsageTest.openCallCountByLastCall":382,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":133,"org.easymock.tests.UsageCallCountTest.tooFewCalls":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":269,"org.easymock.tests.UsageThrowableTest.throwCheckedException":377,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.MockingTest.testStrictClassMocking":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":280,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":281,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":295,"org.easymock.tests.ObjectMethodsTest.testHashCode":395,"org.easymock.tests2.NameTest.nameForNiceMock":179,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":289,"org.easymock.tests2.DependencyTest.testInterfaceMocking":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":417,"org.easymock.samples.ExampleTest.addDocument":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":299,"org.easymock.tests2.AnswerTest.stubAnswer":294,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":137,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":425,"org.easymock.tests.UsageVarargTest.varargLongAccepted":151,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":290,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":100,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":318,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.SerializationTest.test":341,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.tests2.UsageConstraintsTest.testSame":323,"org.easymock.samples.SupportTest.addDocument":166,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":71,"org.easymock.tests.GenericTest.testPackageScope":9,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":399,"org.easymock.tests2.NameTest.nameForMock":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":102,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":262,"org.easymock.tests2.MockedExceptionTest.testRealException":113,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":201,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":374,"org.easymock.tests2.NameTest.nameForStrictMock":178,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":57,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":46,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":38,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":1,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":55,"org.easymock.tests2.UsageStrictMockTest.range":172,"org.easymock.tests2.UsageConstraintsTest.lessThan":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":74,"org.easymock.tests2.CaptureTest.testCaptureRightOne":304,"org.easymock.tests2.UsageConstraintsTest.testOr":324,"org.easymock.tests.UsageRangeTest.combination":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageTest.wrongArguments":116,"org.easymock.tests2.MockBuilderTest.testWithConstructor":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":72,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.UsageVarargTest.varargShortAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":40,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":327,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":406,"org.easymock.tests2.CompareToTest.testLessThan":104,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":360,"org.easymock.tests2.CaptureTest.testCaptureFromStub":350,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":364,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":56,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":129,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.UsageConstraintsTest.constraints":319,"org.easymock.samples.ExampleTest.addAndChangeDocument":163,"org.easymock.tests.UsageStrictMockTest.testVerify":142,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":165,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":230,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":226,"org.easymock.tests.LimitationsTest.abstractClass":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":227,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":309}}]
