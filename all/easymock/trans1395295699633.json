[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[6,7,8,9],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[10,11,12,13,14,15,16,17,18,6],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[29],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[35],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[36,37,38],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:36","sourceCode":"return (java.lang.Object != null) && (java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))","type":"CtReturnImpl"},"failures":[0,1,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[39,40,41],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,0,78,79,80,81,82,1,83,84,85,86,87,28,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,10,103,104,105,106,107,108,109,110,111,112,113,39,114,40,115,116,117,2,118,3,119,120,121,122,123,124,125,4,126,127,128,6,7,8,129,42,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,26,224,225,226,227,19,228,20,229,230,231,232,233,234,235,236,237,238,239,240,241,21,22,23,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,24,320,321,322,323,324,5],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[56,325,109,326,110,327,111,112,328,113,329,6,330,179,180,331,184,185,186,220,332,333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[334,335,336,337,338,339,147,167,169,170,340,341,342,274,44,343,294,344,345,306,346,311,313,314,317,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[45,47,48,50,56,58,61,62,63,64,65,72,76,77,0,78,79,80,81,82,1,83,85,86,87,28,88,89,90,91,92,93,94,95,97,98,99,100,101,102,10,107,109,110,111,112,113,40,2,118,119,120,123,124,125,4,127,128,6,7,42,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,149,151,152,153,156,157,158,159,160,161,162,163,164,167,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,193,215,216,217,218,220,221,222,223,26,224,225,226,227,19,228,20,229,230,231,232,233,234,235,236,237,238,239,240,241,21,22,259,261,262,263,264,265,266,268,269,273,274,276,277,280,289,290,293,298,299,300,301,302,306,311,313,314,317,319,24,320,321,322,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[348,349,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[45,46,47,48,49,50,51,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,0,78,79,80,81,82,1,83,85,86,87,28,88,89,90,91,92,93,94,95,97,98,99,100,101,10,351,352,353,354,103,106,107,108,325,110,327,114,40,117,2,118,3,119,121,122,123,124,125,4,128,6,7,8,129,42,143,146,147,149,150,153,156,159,160,163,164,166,167,170,171,172,174,175,176,177,178,355,180,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,26,224,225,226,227,19,228,20,229,230,231,232,233,234,235,236,237,238,239,240,241,21,22,23,242,243,244,245,248,249,250,251,252,254,255,256,257,258,260,261,356,357,27,358,359,360,361,362,363,364,274,281,282,365,283,284,285,286,289,290,293,299,300,301,302,306,309,311,314,315,316,317,318,319,24,320,322,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:907","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[36,37,38],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[103,145,151,152,157,167,273,276,277,280,311,317,319],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[335,366,367,340,368,310],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,72,74,75,76,77,0,78,79,80,81,82,1,83,84,85,86,87,28,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,10,103,106,107,108,109,110,111,112,113,114,40,115,117,2,118,3,119,120,121,122,123,124,125,4,127,128,6,7,8,129,42,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,26,224,225,226,227,19,228,20,229,230,231,232,233,234,235,236,237,238,239,240,241,21,22,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,44,294,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,24,320,321,322,323],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[2,3,119,120,121,122,123,125,369,4,126,128],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[64,370,371,372],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[11,12,13,14,373,374,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":273,"org.easymock.tests2.UsageTest.argumentsOrdered":155,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":41,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":150,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":233,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests2.DelegateToTest.testReturnException":114,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":366,"org.easymock.samples.SupportTest.voteForRemovals":58,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":29,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":207,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":195,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":5,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":184,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":104,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":372,"org.easymock.tests.UsageExpectAndThrowTest.object":205,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":12,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":289,"org.easymock.tests2.UsageTest.wrongArguments":148,"org.easymock.tests.UsageStrictMockTest.range":313,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":363,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":158,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":293,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":278,"org.easymock.tests.UsageTest.moreThanOneArgument":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":362,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests2.CaptureTest.testCaptureNone":124,"org.easymock.tests.UsageUnorderedTest.message":294,"org.easymock.tests.UsageVerifyTest.twoReturns":319,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":61,"org.easymock.tests.UsageTest.argumentsOrdered":279,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":286,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":54,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":292,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":327,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests2.StubTest.stub":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":224,"org.easymock.tests.UsageExpectAndThrowTest.longType":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":22,"org.easymock.tests2.AnswerTest.answer":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":354,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests2.NameTest.nameForMocksControl":69,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":277,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":199,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":112,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":210,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":177,"org.easymock.tests2.CaptureTest.testCaptureLast":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":360,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":44,"org.easymock.tests2.CaptureTest.testCapture1_2446744":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":226,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":203,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":99,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":38,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.UsageStrictMockTest.differentMethods":314,"org.easymock.tests2.ConstraintsToStringTest.andToString":338,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":63,"org.easymock.tests2.MockBuilderTest.testCreateMockString":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":197,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests.ResultTest.createReturnResultToString":31,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":106,"org.easymock.tests.UsageVerifyTest.twoThrows":318,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":185,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.ResultTest.createDelegateResultToString":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":196,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests2.ThreadingTest.testChangeDefault":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":110,"org.easymock.tests2.MockBuilderTest.testCreateMock":328,"org.easymock.tests2.UsageTest.defaultResetToNice":153,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":239,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.CallbackTest.callback":143,"org.easymock.tests2.UsageConstraintsTest.equals":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":276,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":204,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":291,"org.easymock.tests.UsageCallCountTest.tooFewCalls":284,"org.easymock.tests.UsageOverloadedMethodTest.overloading":322,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":305,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":88,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":28,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":364,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests2.EasyMockSupportClassTest.testAll":183,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":219,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":353,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":194,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.testMatches":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":162,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":373,"org.easymock.tests2.NameTest.nameForNiceMock":68,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":65,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":359,"org.easymock.samples.BasicClassMockTest.testPrintContent":55,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.DelegateToTest.testStubDelegate":40,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":165,"org.easymock.tests2.AnswerTest.stubAnswer":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":116,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":16,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":181,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":21,"org.easymock.tests.UsageExpectAndReturnTest.floatType":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.tests2.ConstraintsToStringTest.orToString":334,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":92,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":281,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":121,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":18,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":227,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.samples.SupportTest.addDocument":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":231,"org.easymock.tests.GenericTest.testPackageScope":218,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":64,"org.easymock.tests2.CaptureTest.testCapture2_2446744":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":287,"org.easymock.tests2.NameTest.nameForMock":66,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":357,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":213,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":20,"org.easymock.tests.UsageCallCountTest.tooManyCalls":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":283,"org.easymock.tests2.MockedExceptionTest.testRealException":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":232,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":200,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":365,"org.easymock.tests2.UsageConstraintsTest.testContains":87,"org.easymock.tests2.NameTest.nameForStrictMock":67,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":323,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":176,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":75,"org.easymock.tests.UsageExpectAndReturnTest.object":234,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":178,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":109,"org.easymock.tests2.UsageStrictMockTest.range":169,"org.easymock.tests2.UsageConstraintsTest.lessThan":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":13,"org.easymock.tests.UsageTest.exactCallCountByLastCall":280,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":193,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":246,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":43,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":173,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":304,"org.easymock.tests.UsageTest.wrongArguments":275,"org.easymock.tests.ResultTest.createThrowResultToString":32,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":229,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":237,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":348,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":351,"org.easymock.tests2.UsageConstraintsTest.cmpTo":86,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":105,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":166,"org.easymock.tests2.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":295,"org.easymock.tests2.CaptureTest.testCaptureFromStub":126,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":326,"org.easymock.tests.UsageTest.unexpectedCallWithArray":368,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":202,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":310,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":238,"org.easymock.tests2.CaptureTest.testCapture":369,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":201,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests2.ConstraintsToStringTest.notToString":336,"org.easymock.tests.UsageStrictMockTest.testVerify":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":270,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":53,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":337,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":27,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":122,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":230,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":26,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136}}]
