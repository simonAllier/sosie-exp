[{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,13,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,12,165,166,167,168,169,170,171,172,173,174,175,176,177,14,15,16,17,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,18,198,199,200,201,202,203,19,204,205,206,207,208,209,210,211,212,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,7,236,237,238,239,240,241,242,1,2,243,244,23,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,24,25,289,290,291,292,293,294,295,296,26,297,298,299,300,301,302,303,304,305,306,307,308,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,309,310,311,312,313,314,315,47,316,317,48,49,50,51,52,53,318,319,320,321,322,323,324,325,326,327,328,329,54,330,10,331,332,55,333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[56,57,59,60,61,62,63,64,65,66,67,68,336,73,74,75,76,337,338,77,78,79,339,80,81,83,340,341,342,343,344,86,345,346,347,348,349,350,351,352,353,354,355,87,356,357,358,359,360,361,88,89,90,91,92,93,94,95,96,99,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,362,363,124,125,126,127,128,129,130,131,132,13,133,134,135,136,137,364,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,365,156,157,158,159,160,161,366,162,163,164,12,165,166,167,168,169,170,171,172,173,174,175,176,177,14,15,16,17,191,367,368,18,198,199,200,201,202,203,19,204,205,206,207,208,209,210,211,212,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,11,385,386,387,388,389,390,391,392,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,393,226,227,228,229,230,231,232,233,394,395,396,397,234,235,7,236,237,238,239,240,241,242,243,244,23,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,398,399,400,270,271,272,273,274,401,402,403,275,276,277,287,288,24,25,289,404,405,406,407,408,409,290,291,292,293,294,296,26,297,298,299,300,301,302,303,304,305,410,306,307,308,411,412,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,413,414,415,416,417,418,419,312,313,420,421,422,423,424,314,425,315,47,426,316,317,48,49,50,51,52,53,318,319,320,321,322,323,324,325,326,327,328,329,54,330,10,331,332,55,333,334,335],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[56,57,59,60,61,62,63,64,66,67,68,71,72,77,78,79,80,81,82,83,86,87,89,90,91,92,93,94,95,96,98,101,107,109,110,116,117,119,122,123,124,125,127,128,129,131,132,13,139,140,141,142,143,144,145,147,148,149,150,155,157,159,160,175,180,182,183,18,198,199,201,202,203,19,207,208,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,235,236,237,238,239,240,242,2,243,244,23,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,275,276,277,287,288,24,25,289,290,291,292,293,294,296,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,312,313,314,315,47,48,49,50,51,52,53,54,330,332,55,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,336,73,74,75,76,337,338,77,78,79,339,80,81,82,83,84,85,427,428,340,341,342,343,344,86,345,346,347,348,349,350,351,352,353,354,355,87,356,357,358,359,360,361,88,89,90,91,92,93,94,429,430,95,96,97,98,99,100,101,102,103,431,104,432,433,105,106,107,108,434,435,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,362,363,124,125,126,127,128,129,130,131,132,13,133,134,135,136,137,364,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,365,156,157,158,159,160,161,366,162,163,164,12,165,166,167,168,169,170,171,172,173,174,175,176,177,14,15,16,17,178,436,179,437,438,439,180,181,182,440,183,441,442,184,185,443,186,187,188,189,190,444,191,192,193,445,446,447,448,194,449,450,195,451,452,453,454,455,456,457,458,459,196,460,461,462,463,464,197,465,466,467,468,469,470,471,367,368,18,198,199,200,201,202,203,19,204,205,206,207,208,209,210,211,212,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,11,385,386,387,388,389,390,391,392,472,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,393,226,227,228,229,230,231,232,233,473,474,475,394,395,476,396,397,234,235,7,236,237,238,239,240,241,242,0,1,2,3,4,243,244,23,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,398,399,400,270,271,272,273,274,401,402,403,275,276,277,278,279,280,281,282,283,284,285,477,286,478,479,480,481,482,483,484,287,288,24,25,289,404,405,406,407,408,409,290,291,292,293,294,485,486,295,487,296,26,297,298,299,300,301,302,303,304,305,410,306,307,308,411,412,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,413,488,489,490,309,310,414,311,415,416,491,417,418,419,312,313,420,421,422,423,424,314,425,315,47,426,316,317,48,49,50,51,52,53,318,319,320,321,322,323,324,325,326,327,328,329,54,330,10,331,332,55,333,334,335],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[60,77,79,339,80,372,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"o"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[106,107,492,180,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[495,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62,64,66,68,69,69,70,70,338,77,78,79,339,80,81,82,83,85,86,87,90,92,93,95,96,97,98,99,100,101,102,104,106,107,108,109,110,112,113,116,117,118,119,120,121,122,123,362,363,124,125,126,127,128,129,130,131,132,13,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,12,165,166,167,168,169,170,171,172,174,175,176,177,14,15,16,17,179,180,182,183,185,187,188,189,190,191,192,193,194,195,196,197,18,198,199,201,203,19,204,207,208,369,385,391,213,214,20,215,216,217,21,22,218,219,220,221,222,236,238,239,242,1,3,243,244,23,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,398,399,400,402,275,276,277,287,288,24,25,289,404,405,406,407,408,409,290,291,292,293,294,295,296,26,299,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,309,310,311,417,418,419,312,313,421,422,314,315,47,316,48,49,50,51,52,53,323,54,330,332,55,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[90,92,93,498,499,496,500,6,501,502,199,200,205,206,236,238,239,242,401,402,275,276,277,330,331,333,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:85","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,69,70,70,71,72,73,74,75,76,337,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,13,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,12,165,166,167,168,169,170,171,172,173,174,175,176,177,14,15,16,17,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,18,198,199,200,201,202,203,19,204,205,206,207,208,209,210,211,212,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,7,236,237,238,239,240,241,242,1,2,243,244,23,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,24,25,289,290,291,292,293,294,295,296,26,297,298,299,300,301,302,303,304,305,306,307,308,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,309,310,311,312,313,314,315,47,316,317,48,49,50,51,52,53,318,319,320,321,322,323,324,325,326,327,328,329,54,330,10,331,332,55,333,334,335],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:62","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.add(new org.easymock.internal.matchers.Equals(java.lang.Object))","type":"CtInvocationImpl"},"failures":[56,57,59,60,61,62,63,64,66,67,68,71,72,77,78,79,80,81,82,83,86,87,89,90,91,92,93,94,95,96,98,101,107,119,123,124,125,127,128,129,131,132,13,139,140,141,142,143,144,145,147,148,149,150,180,182,183,18,198,199,200,201,202,203,19,205,206,207,208,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,235,236,237,238,239,240,242,2,243,244,23,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,401,402,275,276,277,287,288,24,25,289,290,291,292,293,294,296,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,312,313,314,425,315,47,426,316,48,49,50,51,52,53,54,330,331,332,55,333,334,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[109,110,111,112,119,120,154,155,156,157,158,159,160,161,366,162,170,171,175,176],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,59,61,62,64,68,78,82,83,85,86,87,90,92,93,95,96,97,98,99,100,101,102,104,106,107,108,109,110,112,113,116,117,118,119,121,122,123,125,127,128,129,130,131,13,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,12,165,166,167,168,169,170,171,172,174,175,176,177,16,179,180,182,183,185,187,188,189,190,191,192,193,194,195,196,197,18,198,199,201,203,19,204,207,208,379,381,389,390,392,213,20,215,216,217,21,22,236,238,239,1,3,243,244,23,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,399,275,277,287,288,289,407,408,409,290,291,292,293,294,295,296,309,310,311,312,313,316,54,330,332,55,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[56,57,59,60,61,62,63,64,66,67,68,71,72,77,78,79,80,81,82,83,86,87,89,90,91,92,93,94,95,96,98,101,107,109,110,116,117,119,122,123,124,125,127,128,129,131,132,13,139,140,141,142,143,144,145,147,148,149,150,155,157,159,160,175,180,182,183,18,198,199,201,202,203,19,207,208,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,235,236,237,238,239,240,242,2,243,244,23,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,275,276,277,287,288,24,25,289,290,291,292,293,294,296,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,312,313,314,315,47,48,49,50,51,52,53,54,330,332,55,335],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[427,440,503,504,505,506],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[69,70,507,508,82,85,427,436,438,440,442,509,443,189,193,445,446,447,448,194,449,450,195,451,452,453,454,455,456,457,458,459,196,460,461,462,463,464,197,465,466],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[399,407,408,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[59,60,61,62,63,64,66,77,78,79,80,81,82,83,84,85,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,13,133,134,135,136,137,138,152,153,154,155,156,157,158,159,160,161,162,163,164,12,165,166,167,168,169,170,171,172,173,174,175,176,177,14,15,16,17,178,180,181,188,189,192,193,18,198,199,200,201,202,203,19,204,205,206,207,208,209,210,211,212,213,214,20,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,235,7,236,237,238,239,240,242,1,2,243,244,23,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,402,275,276,277,287,288,24,25,289,290,291,292,293,294,295,296,26,299,300,301,302,304,305,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,309,310,311,312,313,314,315,47,316,48,49,50,51,52,53,322,54,330,331,332,55,333,334,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[13,14,15,16,17,18,19,213,20,215,216,217,21,22,23,276,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[109,111,119,154,155,157,159,160,366,170,175],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":155,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests2.UsageTest.argumentsOrdered":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":202,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":56,"org.easymock.tests2.DelegateToTest.testReturnException":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":49,"org.easymock.tests.MockingTest.testPartialClassMocking":309,"org.easymock.tests.MockClassControlTest.testToString":280,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":27,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":195,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":161,"org.easymock.tests2.UsageTest.wrongArguments":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":287,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":211,"org.easymock.samples.ExampleTest.answerVsDelegate":60,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":476,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":416,"org.easymock.tests2.UsageConstraintsTest.testNull":157,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":285,"org.easymock.tests2.CaptureTest.testPrimitive":112,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":46,"org.easymock.tests.UsageTest.moreThanOneArgument":330,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":420,"org.easymock.tests.UsageTest.argumentsOrdered":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":290,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":294,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":496,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests.ReplayStateInvalidUsageTest.times":326,"org.easymock.tests2.DependencyTest.testClassMocking":429,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":136,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":475,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":424,"org.easymock.tests2.DelegateToTest.testDelegate":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":42,"org.easymock.tests.LimitationsTest.mockFinalMethod":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.DependencyTest.testClassMockingSupport":430,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":401,"org.easymock.tests2.CaptureTest.testCapture1_2446744":113,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":134,"org.easymock.tests.UsageThrowableTest.throwError":213,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":320,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":472,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":466,"org.easymock.samples.PartialClassMockTest.testGetArea":58,"org.easymock.tests.MockingTest.testInterfaceMocking":414,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":455,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":28,"org.easymock.tests2.UsageTest.niceToStrict":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":36,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":474,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests.UsageOverloadedMethodTest.overloading":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":12,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":194,"org.easymock.tests.MockClassControlTest.testEquals":284,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":44,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":493,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":135,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests.MockNameTest.defaultName":413,"org.easymock.tests2.UsageConstraintsTest.testMatches":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":318,"org.easymock.samples.ExampleTest.voteForRemovals":64,"org.easymock.tests.UsageVarargTest.allKinds":233,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":275,"org.easymock.samples.BasicClassMockTest.testPrintContent":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":21,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":53,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":506,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":483,"org.easymock.tests2.UsageConstraintsTest.greaterThan":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":108,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":484,"org.easymock.samples.ExampleTest.voteForRemoval":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":103,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":48,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":121,"org.easymock.tests2.UsageTest.moreThanOneArgument":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":232,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":304,"org.easymock.tests.UsageExpectAndReturnTest.longType":249,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":45,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":173,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.UsageCallCountTest.tooManyCalls":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":497,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":217,"org.easymock.tests.MockingTest.testNiceClassMocking":491,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests.MockingTest.testClassMocking":489,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":492,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":298,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":156,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":23,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":227,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":421,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":427,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":315,"org.easymock.tests.MockClassControlTest.testHashCode":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.EasyMockSupportTest.testVerify":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":457,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":495,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":133,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":337,"org.easymock.tests.UsageVarargTest.varargCharAccepted":226,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":477,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":392,"org.easymock.tests2.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests.DefaultClassInstantiatorTest.object":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":417,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":458,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":106,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":197,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":281,"org.easymock.tests2.UsageTest.resumeIfFailure":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":51,"org.easymock.tests2.StubTest.stubWithReturnValue":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":440,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":385,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":68,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":39,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":391,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":362,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":400,"org.easymock.tests.UsageExpectAndThrowTest.object":37,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":171,"org.easymock.tests2.DelegateToTest.testWrongClass":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":312,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":313,"org.easymock.samples.ConstructorCalledMockTest.testTax":69,"org.easymock.tests.UsageStrictMockTest.range":238,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":367,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":446,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":328,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":409,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.UsageUnorderedTest.message":242,"org.easymock.tests.UsageVerifyTest.twoReturns":277,"org.easymock.tests.UsageVarargTest.varargByteAccepted":231,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":460,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":302,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":411,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":71,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":502,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndThrowTest.longType":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":50,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":481,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":324,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.tests2.SerializationTest.testClass":82,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":295,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.tests2.NameTest.nameForMocksControl":76,"org.easymock.tests2.MockedExceptionTest.testMockedException":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":450,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":31,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":311,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CaptureTest.testCaptureLast":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":402,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":193,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":172,"org.easymock.tests.MockingTest.testTwoMocks":490,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":35,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":205,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":176,"org.easymock.samples.ExampleTest.removeNonExistingDocument":65,"org.easymock.tests.UsageStrictMockTest.differentMethods":239,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":479,"org.easymock.tests2.ConstraintsToStringTest.andToString":500,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":129,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":451,"org.easymock.tests.UsageExpectAndThrowTest.floatType":29,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":428,"org.easymock.tests.UsageVerifyTest.twoThrows":276,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":196,"org.easymock.samples.ExampleTest.voteAgainstRemoval":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests.LimitationsTest.privateConstructor":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":508,"org.easymock.tests2.UsageConstraintsTest.testNotNull":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":22,"org.easymock.tests2.UsageTest.defaultResetToNice":204,"org.easymock.samples.ExampleTest.voteAgainstRemovals":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.differentLength":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.CallbackTest.callback":81,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":432,"org.easymock.tests.UsageTest.openCallCountByLastCall":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":216,"org.easymock.tests.MockingTest.testStrictClassMocking":488,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":192,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.ObjectMethodsTest.testHashCode":307,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests2.NameTest.nameForNiceMock":75,"org.easymock.tests2.DependencyTest.testInterfaceMocking":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":236,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":441,"org.easymock.tests.UsageVarargTest.varargLongAccepted":230,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":379,"org.easymock.tests.UsageExpectAndReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.tests2.ConstraintsToStringTest.orToString":498,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":70,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":153,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":467,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":114,"org.easymock.tests2.SerializationTest.test":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":478,"org.easymock.tests2.UsageConstraintsTest.testSame":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":247,"org.easymock.samples.SupportTest.addDocument":67,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":444,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":452,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":415,"org.easymock.tests2.NameTest.nameForMock":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":443,"org.easymock.tests2.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":41,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests2.MockedExceptionTest.testRealException":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":368,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":288,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":329,"org.easymock.tests2.NameTest.nameForStrictMock":74,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":471,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":179,"org.easymock.tests2.UsageStrictMockTest.range":92,"org.easymock.tests2.UsageConstraintsTest.lessThan":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":456,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests2.UsageConstraintsTest.testOr":159,"org.easymock.tests.UsageRangeTest.combination":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageTest.wrongArguments":331,"org.easymock.tests2.MockBuilderTest.testWithConstructor":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":453,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":371,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":482,"org.easymock.tests.UsageVarargTest.varargShortAccepted":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":303,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":373,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests2.CaptureTest.testCaptureFromStub":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":319,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":437,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":301,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":509,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests2.UsageConstraintsTest.constraints":154,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests2.ConstraintsToStringTest.notToString":499,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":57,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":292,"org.easymock.tests.LimitationsTest.abstractClass":485,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":293,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":224}}]
