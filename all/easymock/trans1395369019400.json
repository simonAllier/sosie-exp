[{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,0,31,32,33,34,35,36,37,38,4,39,40,41,42,5,43,44,45,1,46,47,48,49,50,51,52,6,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[102,103],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[105,106,107,108,109,83,110,111,111,112,112,84,113,85,86,87,88,90,91,93,114,94,104,95,96,97,2,115,116,117,118,119,120,99,100,101,121,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[122,123,124,125,126,127,128,129,17,24,25,130,131,132,133,134,135,136,137,138,139,34,140,141],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[143,144,145],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[146,147],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[148,149,150,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[81,152,153,154,155,82,156,157,158,159,160,161,122,162,123,163,164,124,125,165,166,167,168,169,170,171,172,173,174,175,176,9,10,11,12,13,14,177,178,179,180,181,182,183,184,15,16,185,186,187,188,189,190,191,192,193,194,195,196,197,126,198,199,200,201,148,202,149,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,77,261,262,263,264,265,266,78,267,268,269,270,105,271,127,128,129,17,18,19,20,272,273,274,275,276,277,278,279,280,281,106,107,282,108,283,284,285,286,287,79,142,288,150,289,290,291,292,293,294,21,22,23,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,24,25,326,130,131,327,328,329,146,330,331,143,147,332,7,333,334,8,335,336,337,338,26,27,28,29,30,339,109,340,83,341,342,343,344,110,345,346,111,112,347,348,349,350,351,352,353,354,355,356,84,357,358,359,360,132,133,361,362,363,364,365,134,135,366,367,368,369,370,371,85,86,87,372,88,89,90,91,373,374,92,93,94,375,376,377,378,379,380,381,382,383,384,104,385,386,387,388,95,389,0,390,391,31,96,97,2,392,98,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,120,408,409,99,410,411,412,413,414,415,416,417,418,100,419,420,421,422,423,101,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,32,121,448,449,450,451,33,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,136,137,138,139,472,473,474,475,476,151,80,477,478,479,34,35,140,141,480,36,37,38,4,481,39,40,41,42,5,43,44,45,1,46,47,48,49,50,51,52,6,53,54,55,56,57,58,59,482,483,484,485,60,486,487,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,3,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[488,374,489,490,491,492,493,121,448,60],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11,14,246,250,251,260,264,268,18,19,20,272,273,274,275,21,25,26,27,28,29,30,111,111,112,112,477,34,36,37,39,40,41,42,46,48,49,51,52,57,58,59,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests2.UsageTest.argumentsOrdered":135,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":256,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":362,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":358,"org.easymock.tests2.DelegateToTest.testReturnException":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":182,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":187,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":471,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":304,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":43,"org.easymock.tests2.UsageTest.wrongArguments":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":10,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":348,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":82,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":466,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":192,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":115,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":14,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":323,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.UsageTest.argumentsOrdered":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":299,"org.easymock.tests.UsageVarargTest.varargIntAccepted":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":26,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":398,"org.easymock.tests.ReplayStateInvalidUsageTest.times":291,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":442,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":441,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":153,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":360,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":319,"org.easymock.tests.LimitationsTest.mockFinalMethod":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":207,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":158,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":317,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":439,"org.easymock.tests.UsageThrowableTest.throwError":7,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":79,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":155,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":425,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":142,"org.easymock.tests.MockingTest.testInterfaceMocking":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":414,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":305,"org.easymock.tests2.UsageTest.niceToStrict":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":313,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":462,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":210,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":23,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":48,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":144,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":169,"org.easymock.tests.MockClassControlTest.testEquals":191,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":321,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":440,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":205,"org.easymock.tests.MockNameTest.defaultName":298,"org.easymock.tests2.UsageConstraintsTest.testMatches":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":286,"org.easymock.samples.ExampleTest.voteForRemovals":352,"org.easymock.tests.UsageVarargTest.allKinds":9,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":206,"org.easymock.samples.BasicClassMockTest.testPrintContent":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":337,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":478,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests2.UsageConstraintsTest.greaterThan":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":332,"org.easymock.samples.ExampleTest.voteForRemoval":349,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":450,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":392,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":95,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":110,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":359,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":459,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":181,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":460,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":367,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.UsageTest.moreThanOneArgument":132,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":33,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":263,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":176,"org.easymock.tests.GenericTest.testBridgedEquals":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":244,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":322,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":55,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":268,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":200,"org.easymock.tests.UsageCallCountTest.tooManyCalls":245,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":336,"org.easymock.tests.MockingTest.testNiceClassMocking":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":376,"org.easymock.tests.MockingTest.testClassMocking":280,"org.easymock.tests2.UsageConstraintsTest.testContains":46,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":238,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":455,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":76,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":171,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":214,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":251,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":148,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":448,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":427,"org.easymock.tests.MockClassControlTest.testHashCode":190,"org.easymock.tests2.EasyMockSupportTest.testVerify":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":416,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":438,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":32,"org.easymock.tests.UsageVarargTest.varargCharAccepted":170,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":267,"org.easymock.tests2.UsageTest.openCallCountByLastCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":468,"org.easymock.tests.DefaultClassInstantiatorTest.object":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":208,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":417,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":311,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":426,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":189,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":310,"org.easymock.tests.CapturesMatcherTest.test":102,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":199,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":101,"org.easymock.tests2.UsageTest.resumeIfFailure":366,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":184,"org.easymock.tests2.StubTest.stubWithReturnValue":477,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":488,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":261,"org.easymock.samples.SupportTest.voteForRemovals":346,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":316,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":78,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":443,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":149,"org.easymock.tests.UsageExpectAndThrowTest.object":314,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":53,"org.easymock.tests2.DelegateToTest.testWrongClass":475,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":18,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":19,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.samples.ConstructorCalledMockTest.testTax":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":464,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":315,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":405,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":344,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":175,"org.easymock.tests2.ThreadingTest.testThreadSafe":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":419,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":242,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":265,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests2.StubTest.stub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":266,"org.easymock.tests.UsageExpectAndThrowTest.longType":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":143,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":289,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":431,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests.LimitationsTest.mockNativeMethod":105,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":395,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":118,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":480,"org.easymock.tests2.NameTest.nameForMocksControl":139,"org.easymock.tests2.MockedExceptionTest.testMockedException":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":409,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":308,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":384,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":393,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":159,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":382,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":54,"org.easymock.tests.MockingTest.testTwoMocks":281,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":312,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.samples.ExampleTest.removeNonExistingDocument":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":428,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":330,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":451,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":410,"org.easymock.tests.UsageExpectAndThrowTest.floatType":306,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":445,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":100,"org.easymock.samples.ExampleTest.voteAgainstRemoval":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":270,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":453,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":338,"org.easymock.tests2.UsageTest.defaultResetToNice":365,"org.easymock.samples.ExampleTest.voteAgainstRemovals":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":394,"org.easymock.tests.UsageVarargTest.differentLength":172,"org.easymock.tests2.CallbackTest.callback":470,"org.easymock.tests2.UsageConstraintsTest.equals":481,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":390,"org.easymock.tests.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests.UsageThrowableTest.throwCheckedException":335,"org.easymock.tests.MockingTest.testStrictClassMocking":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":380,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":447,"org.easymock.tests.ObjectMethodsTest.testHashCode":213,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":452,"org.easymock.tests2.NameTest.nameForNiceMock":138,"org.easymock.tests2.DependencyTest.testInterfaceMocking":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":420,"org.easymock.tests2.DelegateToTest.testStubDelegate":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.AnswerTest.stubAnswer":446,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":373,"org.easymock.tests.UsageVarargTest.varargLongAccepted":174,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":255,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":52,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageThrowableTest.noUpperLimit":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.SerializationTest.test":486,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":145,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":146,"org.easymock.tests2.UsageConstraintsTest.testSame":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":345,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":379,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":411,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":283,"org.easymock.tests2.NameTest.nameForMock":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":318,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests2.MockedExceptionTest.testRealException":456,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":294,"org.easymock.tests2.NameTest.nameForStrictMock":137,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":372,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":331,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":430,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":415,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":412,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":247,"org.easymock.tests.UsageVarargTest.varargShortAccepted":173,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":147,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":243,"org.easymock.tests2.UsageConstraintsTest.cmpTo":1,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":249,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":364,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":287,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests2.CaptureTest.testCapture":103,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":354,"org.easymock.tests.UsageStrictMockTest.testVerify":328,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":357,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":204,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":28,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.LimitationsTest.abstractClass":269,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":463,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":167}}]
