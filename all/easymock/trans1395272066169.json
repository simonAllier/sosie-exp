[{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.NICE","org.easymock.MockType.NICE":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[61,62,63,55,64,65,66,67,68,69,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[74,75,76,61,77,62,78,79,80,81,82,83,84,63,85,86,59,87,88,89,90,73,91,92,93,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,95,11,12,14,15,16,17,20,22,39,43,44,48],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[75,61,77,62,78,79,80,81,82,84,63,85,86,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[96,97,98,99,100,101,102,24,103,104,105,106,107,108,109,110,111,32,112,113,114,115,116,117,33,34,118,35,119,120,121,36,122,37,123,124,125],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[97,98,103,111,112,115,118,120,126,122,127,128,129,123,124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[96,130,74,131,132,133,134,135,136,137,138,139,97,97,98,98,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,100,1,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,3,4,5,6,7,8,9,10,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,11,12,13,228,14,15,229,230,16,17,18,231,232,233,234,235,236,237,238,76,239,240,241,242,19,243,20,244,21,22,23,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,24,315,25,104,105,316,61,77,62,78,79,80,81,82,83,84,63,85,86,59,60,317,318,319,320,321,107,108,109,322,110,323,324,325,87,326,327,88,89,328,111,329,330,331,332,26,333,27,28,334,29,30,335,336,337,338,31,339,340,341,342,343,344,345,346,347,348,349,72,90,73,91,350,92,32,113,117,33,34,35,121,36,37,38,351,352,39,40,41,353,354,42,43,44,355,45,46,356,357,47,48,49,358,50,51,52,53,359,360,361,362,54,363,364,55,64,365,65,366,66,67,367,68,368,369,370,371,372,373,374,375,376,69,377,378,379,380,70,381,382,383,93,94,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[384,385,386,387],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[279,313,41,374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[67,367],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[96,97,98,107,108,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[75,388],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[111,389,390,391,392,393,394,395,118,120,128,123,124],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[396,1,189,208,209,210,227,11,12,101,397,398,102,399,400,13,228,14,15,16,17,18,238,240,241,242,19,20,244,21,22,23,245,253,255,256,259,260,261,270,401,402,298,307,308,310,25,316,106,322,332,333,28,334,30,335,31,403,340,341,344,345,346,347,348,349,32,113,114,34,35,121,36,37,38,352,39,40,41,43,44,355,45,46,357,47,48,49,358,54,404,55,374],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[204,218,219,11,291],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[111,389,390,391,392,394,405,395,118,120,128,129,123,124],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[99,167,168,100,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[407,408,409],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[96,130,131,132,134,138,164,165,166,167,100,169,170,171,172,173,174,177,178,180,181,182,184,185,186,187,188,189,190,191,192,195,222,244,22,23,248,249,250,262,265,266,267,268,285,286,287,288,289,304,305,306,309,310,311,312,313,314,315,104,105,316,319,321,107,108,109,339,340,341,342,343,344,345,73,113,117,34,35,36,357,48,49,359,360,123],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[1,410,95,11,12,14,15,16,17,242,20,22,39,43,44,48],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[411,412,413,414,415,416,417,418,419,420,421,422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[203,204,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[97,98,103,112,122],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":64,"org.easymock.tests2.UsageTest.argumentsOrdered":44,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":71,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":41,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":142,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":232,"org.easymock.tests.MockingTest.testPartialClassMocking":248,"org.easymock.tests.MockClassControlTest.testToString":208,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":143,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":107,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":367,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":222,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":4,"org.easymock.samples.ExampleTest.answerVsDelegate":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":102,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":312,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":213,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":335,"org.easymock.tests2.CaptureTest.testPrimitive":78,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":162,"org.easymock.tests.UsageTest.moreThanOneArgument":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":196,"org.easymock.tests.UsageVarargTest.varargIntAccepted":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":289,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests.ReplayStateInvalidUsageTest.times":281,"org.easymock.tests2.AnswerTest.answer":87,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":53,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":27,"org.easymock.tests2.DelegateToTest.testDelegate":92,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":307,"org.easymock.tests2.CaptureTest.testCapture1_2446744":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":51,"org.easymock.tests.UsageThrowableTest.throwError":214,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":275,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":398,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":269,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":127,"org.easymock.samples.PartialClassMockTest.testGetArea":96,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":286,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":164,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":144,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":56,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":117,"org.easymock.tests2.MockBuilderTest.testCreateMock":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":152,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":2,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":239,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":180,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":408,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":371,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests.MockClassControlTest.testEquals":212,"org.easymock.tests2.EasyMockSupportClassTest.testAll":321,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":52,"org.easymock.tests2.CaptureTest.testCaptureAll":77,"org.easymock.tests.MockNameTest.defaultName":396,"org.easymock.tests2.UsageConstraintsTest.testMatches":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":268,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":273,"org.easymock.samples.ExampleTest.voteForRemovals":134,"org.easymock.tests.UsageVarargTest.allKinds":303,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.samples.BasicClassMockTest.testPrintContent":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":9,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":220,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":395,"org.easymock.tests2.UsageConstraintsTest.greaterThan":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":190,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":316,"org.easymock.samples.ExampleTest.voteForRemoval":131,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":201,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":26,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":231,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":333,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":86,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":319,"org.easymock.tests2.UsageTest.moreThanOneArgument":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":302,"org.easymock.tests.GenericTest.testBridgedEquals":406,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":260,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":6,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":161,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":195,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":265,"org.easymock.tests.UsageCallCountTest.tooManyCalls":261,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":254,"org.easymock.tests2.UsageConstraintsTest.testContains":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":324,"org.easymock.tests2.UsageConstraintsTest.testFind":365,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":397,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageExpectAndReturnTest.object":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":391,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":297,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":272,"org.easymock.tests.UsageTest.exactCallCountByLastCall":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":193,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":185,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":417,"org.easymock.tests.MockClassControlTest.testHashCode":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":338,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":291,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":383,"org.easymock.tests.UsageVarargTest.varargCharAccepted":296,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests2.UsageTest.openCallCountByLastCall":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":57,"org.easymock.tests.DefaultClassInstantiatorTest.object":202,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":290,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":270,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":104,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":149,"org.easymock.tests.CapturesMatcherTest.test":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":209,"org.easymock.tests2.UsageTest.resumeIfFailure":355,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":234,"org.easymock.tests2.StubTest.stubWithReturnValue":362,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":380,"org.easymock.tests2.SerializationTest.testAllMockedMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":251,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":129,"org.easymock.samples.SupportTest.voteForRemovals":138,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":155,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":252,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":326,"org.easymock.tests.UsageExpectAndThrowTest.object":153,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":377,"org.easymock.tests2.DelegateToTest.testWrongClass":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":305,"org.easymock.samples.ConstructorCalledMockTest.testTax":97,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":165,"org.easymock.tests2.CaptureTest.testCaptureNone":83,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":385,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":301,"org.easymock.tests2.ThreadingTest.testThreadSafe":60,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":401,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":140,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":225,"org.easymock.tests2.UsageConstraintsTest.any":368,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":280,"org.easymock.tests2.StubTest.stub":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":205,"org.easymock.tests.UsageExpectAndThrowTest.longType":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":279,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.SerializationTest.testClass":111,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":306,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":412,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":358,"org.easymock.tests2.NameTest.nameForMocksControl":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockedExceptionTest.testMockedException":323,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":147,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":0,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":309,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":249,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":389,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":378,"org.easymock.tests.MockingTest.testTwoMocks":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":151,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":381,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":387,"org.easymock.samples.ExampleTest.removeNonExistingDocument":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":418,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":318,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":206,"org.easymock.tests.UsageExpectAndThrowTest.floatType":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":125,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":221,"org.easymock.tests2.UsageTest.defaultResetToNice":42,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":411,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":103,"org.easymock.tests.UsageTest.openCallCountByLastCall":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":363,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":224,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":5,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":386,"org.easymock.tests.UsageThrowableTest.throwCheckedException":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":194,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":343,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":328,"org.easymock.tests.ObjectMethodsTest.testHashCode":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":394,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":320,"org.easymock.tests2.NameTest.nameForNiceMock":348,"org.easymock.tests2.DependencyTest.testInterfaceMocking":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":392,"org.easymock.samples.ExampleTest.addDocument":133,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests2.AnswerTest.stubAnswer":89,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":244,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":119,"org.easymock.tests.UsageVarargTest.varargLongAccepted":300,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":187,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":98,"org.easymock.tests.UsageThrowableTest.noUpperLimit":215,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":364,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":80,"org.easymock.tests2.SerializationTest.test":329,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":170,"org.easymock.tests2.UsageConstraintsTest.testSame":366,"org.easymock.samples.SupportTest.addDocument":137,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":278,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":199,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests2.NameTest.nameForMock":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":122,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests2.MockedExceptionTest.testRealException":325,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":400,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":128,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":223,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":284,"org.easymock.tests2.NameTest.nameForStrictMock":347,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":313,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":332,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":384,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":310,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.MockBuilderTest.testWithConstructor":112,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":182,"org.easymock.tests.UsageVarargTest.varargShortAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":259,"org.easymock.tests2.UsageConstraintsTest.cmpTo":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":327,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CaptureTest.testCaptureFromStub":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":274,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":114,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":183,"org.easymock.tests2.CaptureTest.testCapture":388,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.UsageConstraintsTest.constraints":55,"org.easymock.samples.ExampleTest.addAndChangeDocument":136,"org.easymock.tests.UsageStrictMockTest.testVerify":246,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":139,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":7,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":288,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":334}}]
