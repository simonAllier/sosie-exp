[{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1832","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[41,42,43,2,4,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,21,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[42,43,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[84,85,5,11,86,87],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[88,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,41,42,43,112,113,114,115,116,117,0,118,119,120,121,122,123,124,125,2,3,4,126,5,6,127,44,7,8,9,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,10,169,11,170,12,13,171,172,173,83,174,175,176,177,178,179,180,181,182,183,45,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,46,204,205,14,206,207,208,209,210,47,211,212,213,214,215,216,217,218,219,220,221,222,81,82,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,239,240,241,242,243,244,15,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,69,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,70,311,71,72,73,74,75,76,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,77,330,16,331,332,333,17,18,334,335,19,336,337,338,339,340,341,342,20,21,343,344,22,23,24,345,78,346,25,26,347,27,28,348,349,29,30,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,38,39,40,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,88,418,419,420,421,422,423,31,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,32,439,36,94,440,441,442,443,444,445,446,447,33,448,449,450,451,452,89,453,454,455,456,34,457,35,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,79,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,80,508,90,509,510,91,92,511,512,513,514],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[302,515,516],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.LastControl:48","failures":[96,96,97,97,99,100,102,103,104,105,107,109,41,42,43,124,125,2,3,4,126,127,44,9,129,142,143,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,13,171,83,174,175,177,179,180,181,182,183,45,184,201,203,46,205,206,207,208,209,210,47,211,212,213,214,215,216,222,81,82,225,233,235,237,238,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,241,243,244,15,290,296,70,311,71,72,73,74,75,76,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,77,330,16,331,332,333,17,18,334,335,19,336,337,341,342,20,21,343,344,23,345,78,346,347,27,349,30,350,352,359,360,361,362,363,364,38,39,372,375,385,391,395,398,400,401,405,408,409,410,411,413,414,415,417,418,419,420,421,422,423,31,424,426,427,428,429,430,431,433,434,435,436,437,438,32,439,36,94,440,441,443,444,445,446,447,33,448,449,450,451,453,34,457,35,465,478,479,79,481,484,485,486,487,488,489,490,496,503,504,505,506,507,80,511,512,513,514],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[194,418,419],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[131,401],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[118,2,3,126,8,128,171,173,14,224,226,231,245,323,331,18,19,21,22,24,345,26,28,350,352,356,358,398,406,424,439,457,35],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[95,101,460,466,491,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":424,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":37,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":284,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":24,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":101,"org.easymock.tests2.DelegateToTest.testReturnException":504,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":208,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests.MockClassControlTest.testToString":247,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":354,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":375,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":342,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":502,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":199,"org.easymock.samples.ExampleTest.answerVsDelegate":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":136,"org.easymock.tests2.UsageConstraintsTest.testNull":427,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":252,"org.easymock.tests2.CaptureTest.testPrimitive":79,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageTest.moreThanOneArgument":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":68,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":312,"org.easymock.tests.UsageVarargTest.varargIntAccepted":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":212,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":470,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":216,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":258,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":496,"org.easymock.tests.ReplayStateInvalidUsageTest.times":193,"org.easymock.tests2.DependencyTest.testClassMocking":339,"org.easymock.tests2.AnswerTest.answer":359,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":368,"org.easymock.tests2.CaptureTest.testAnd":478,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":133,"org.easymock.tests2.UsageTest.strictResetToDefault":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":333,"org.easymock.tests2.DelegateToTest.testDelegate":80,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":64,"org.easymock.tests.LimitationsTest.mockFinalMethod":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":221,"org.easymock.tests2.DependencyTest.testClassMockingSupport":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":128,"org.easymock.tests2.CaptureTest.testCapture1_2446744":481,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":366,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":187,"org.easymock.tests.UsageThrowableTest.throwError":70,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":135,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":261,"org.easymock.samples.PartialClassMockTest.testGetArea":100,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":188,"org.easymock.tests.MockingTest.testInterfaceMocking":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":213,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":174,"org.easymock.tests2.UsageTest.niceToStrict":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":50,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests2.ThreadingTest.testChangeDefault":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":398,"org.easymock.tests2.MockBuilderTest.testCreateMock":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":86,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":197,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":437,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":160,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":515,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":436,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":486,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":115,"org.easymock.tests.MockClassControlTest.testEquals":251,"org.easymock.tests2.EasyMockSupportClassTest.testAll":372,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":66,"org.easymock.tests2.CaptureTest.testCaptureAll":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":367,"org.easymock.tests.MockNameTest.defaultName":123,"org.easymock.tests2.UsageConstraintsTest.testMatches":438,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":107,"org.easymock.tests.UsageVarargTest.allKinds":122,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.samples.BasicClassMockTest.testPrintContent":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":220,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":75,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":28,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":507,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests2.UsageConstraintsTest.greaterThan":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":262,"org.easymock.samples.ExampleTest.voteForRemoval":104,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":458,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":452,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":254,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":206,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":331,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":207,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":503,"org.easymock.tests2.CaptureTest.testCaptureFirst":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":332,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":156,"org.easymock.tests2.CaptureTest.testCapture2_2446744":489,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":420,"org.easymock.tests2.UsageTest.moreThanOneArgument":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":292,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":121,"org.easymock.tests.GenericTest.testBridgedEquals":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":230,"org.easymock.tests.UsageExpectAndReturnTest.longType":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":217,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":67,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":442,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":231,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":501,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":409,"org.easymock.tests.MockingTest.testNiceClassMocking":148,"org.easymock.tests.MockingTest.testClassMocking":140,"org.easymock.tests2.UsageConstraintsTest.testContains":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":224,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":513,"org.easymock.tests2.UsageConstraintsTest.testFind":426,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":48,"org.easymock.tests.MockTypeTest.fromEasyMockClass":134,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageExpectAndReturnTest.object":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":500,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":335,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":117,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":176,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":165,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.MockClassControlTest.testHashCode":250,"org.easymock.tests2.EasyMockSupportTest.testVerify":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":42,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":365,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":407,"org.easymock.tests.UsageVarargTest.varargCharAccepted":116,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":297,"org.easymock.tests2.UsageTest.openCallCountByLastCall":345,"org.easymock.tests.DefaultClassInstantiatorTest.object":298,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":41,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":306,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":249,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":166,"org.easymock.tests.ReplayStateInvalidCallsTest.times":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":222,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":391,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":248,"org.easymock.tests2.UsageTest.resumeIfFailure":347,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":131,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":210,"org.easymock.tests2.StubTest.stubWithReturnValue":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":158,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":290,"org.easymock.samples.SupportTest.voteForRemovals":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":87,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":61,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":296,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":360,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":178,"org.easymock.tests.UsageExpectAndThrowTest.object":59,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":440,"org.easymock.tests2.DelegateToTest.testWrongClass":506,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":243,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":244,"org.easymock.samples.ConstructorCalledMockTest.testTax":96,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":476,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":400,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":84,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":256,"org.easymock.tests2.CaptureTest.testCaptureNone":485,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":175,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":90,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":120,"org.easymock.tests2.ThreadingTest.testThreadSafe":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":228,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":110,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":294,"org.easymock.tests2.UsageConstraintsTest.any":433,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":192,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":82,"org.easymock.tests.UsageExpectAndThrowTest.longType":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":295,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":302,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":191,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":465,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":272,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":351,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":509,"org.easymock.tests2.NameTest.nameForMocksControl":358,"org.easymock.tests2.MockedExceptionTest.testMockedException":512,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":374,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":53,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":327,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":447,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":401,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":491,"org.easymock.tests2.CaptureTest.testCaptureLast":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":129,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":415,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":271,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":441,"org.easymock.tests.MockingTest.testTwoMocks":141,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":268,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":445,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":92,"org.easymock.samples.ExampleTest.removeNonExistingDocument":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":498,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":91,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":300,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":419,"org.easymock.tests2.MockBuilderTest.testCreateMockString":406,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":362,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":385,"org.easymock.samples.ExampleTest.voteAgainstRemoval":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":457,"org.easymock.tests.LimitationsTest.privateConstructor":240,"org.easymock.tests2.UsageConstraintsTest.testNotNull":444,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":511,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":76,"org.easymock.tests2.UsageTest.defaultResetToNice":346,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":492,"org.easymock.tests.UsageVarargTest.differentLength":0,"org.easymock.tests2.CallbackTest.callback":20,"org.easymock.tests2.UsageConstraintsTest.equals":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":454,"org.easymock.tests.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":411,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":200,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":73,"org.easymock.tests.MockingTest.testStrictClassMocking":139,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":414,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":497,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":413,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":364,"org.easymock.tests.ObjectMethodsTest.testHashCode":307,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":421,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":270,"org.easymock.tests2.NameTest.nameForNiceMock":357,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":265,"org.easymock.tests2.DependencyTest.testInterfaceMocking":341,"org.easymock.samples.ExampleTest.addDocument":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.DelegateToTest.testStubDelegate":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.AnswerTest.stubAnswer":363,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":402,"org.easymock.tests.UsageVarargTest.varargLongAccepted":119,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":167,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":352,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":469,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageThrowableTest.noUpperLimit":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":423,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":472,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":482,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":516,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":299,"org.easymock.tests2.UsageConstraintsTest.testSame":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":150,"org.easymock.samples.SupportTest.addDocument":98,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":412,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":255,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":233,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":468,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":146,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":253,"org.easymock.tests2.NameTest.nameForMock":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":161,"org.easymock.tests2.UsageStrictMockTest.differentMethods":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":63,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests2.MockedExceptionTest.testRealException":514,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":287,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":196,"org.easymock.tests2.NameTest.nameForStrictMock":356,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":475,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":301,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":395,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":259,"org.easymock.tests2.UsageConstraintsTest.lessThan":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":282,"org.easymock.tests2.CaptureTest.testCaptureRightOne":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":429,"org.easymock.tests.UsageRangeTest.combination":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":276,"org.easymock.tests.UsageVarargTest.varargShortAccepted":118,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":229,"org.easymock.tests2.UsageConstraintsTest.cmpTo":434,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":273,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":361,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":69,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.CaptureTest.testCaptureFromStub":488,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":186,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":396,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":12,"org.easymock.samples.ExampleTest.addAndChangeDocument":109,"org.easymock.tests.UsageStrictMockTest.testVerify":173,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":95,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":218,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":155,"org.easymock.tests.LimitationsTest.abstractClass":239,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":215,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":18}}]
