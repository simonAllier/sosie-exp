[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,49,50,51,52,53,54,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[90,91],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[92,93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,49,50,51,52,53,54,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.RecordState:183","failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,0,1,119,120,3,4,121,49,8,122,123,124,125,10,126,12,127,128,129,130,131,132,133,134,135,98,99,100,136,137,138,139,140,141,142,143,16,144,145,146,147,148,149,150,151,152,153,154,155,156,17,157,158,97,159,160,161,162,163,164,165,166,167,168,169,52,170,171,19,20,21,172,173,93,174,175,176,177,178,179,54,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,91,27,195,196,61,32,33,197,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,198,199,83,200,201,202,84,85,203,204,205,86,206,207,40,41,42,208,209,210,43,44,211,212,213,214,46,47,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,48,243,244,245,246,88,89,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:83","failures":[95],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[108,110,111,264,112,113,114,116,265,117,266,118],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[101,102,104,106,267,268,269,270,132,271,272,273,274,275,276,277,133,278,279,280,281,282,134,283,284,100,138,13,140,285,141,286,287,288,289,14,290,15,291,292,142,50,51,52,293,22,294,295,176,296,177,178,23,24,25,297,298,203,299,300,301,204,302,303,304,305,306,307,308,309,209,310,311,312,313,314,220,221,222,315,316,317,318,319,320,321,322,260,261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[132,14,292,22,24],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[323],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[324,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[101,102,103,104,105,106,107,108,109,111,264,114,115,116,117,266,326,118,0,1,119,120,3,121,49,327,7,8,122,9,123,124,125,10,11,328,126,12,127,128,130,131,269,132,133,134,135,98,99,136,137,138,13,139,140,285,141,287,14,290,15,142,143,16,144,145,146,147,148,149,150,151,152,153,154,155,156,17,157,158,97,159,160,162,163,164,165,166,329,330,167,168,169,50,51,52,53,171,20,21,92,173,93,174,331,175,22,176,177,178,24,179,54,180,181,332,182,183,184,185,55,56,57,58,59,60,27,195,196,61,32,33,197,62,333,334,335,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,198,199,83,200,201,202,84,85,336,337,338,339,340,298,299,341,204,342,343,344,345,346,347,348,349,205,86,207,41,42,209,210,43,44,211,350,351,352,323,353,215,216,217,218,219,354,355,356,357,358,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,359,360,87,361,48,362,243,244,245,246,88,89,247,248,249,250,251,252,253,255,256,258,262,363,363,364,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[146,365,97,163],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":144,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":94,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":4,"org.easymock.tests2.StubTest.stubWithReturnValue":54,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":162,"org.easymock.tests2.SerializationTest.testAllMockedMethod":100,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":56,"org.easymock.tests.MockingTest.testPartialClassMocking":220,"org.easymock.samples.SupportTest.voteForRemovals":258,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":297,"org.easymock.tests.MockClassControlTest.testToString":304,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":75,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":63,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":329,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":335,"org.easymock.tests.UsageExpectAndThrowTest.object":73,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":131,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":363,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.samples.ExampleTest.answerVsDelegate":251,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":101,"org.easymock.tests2.UsageConstraintsTest.testNull":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":309,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":177,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":267,"org.easymock.tests.UsageTest.moreThanOneArgument":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":82,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":338,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests2.CaptureTest.testCaptureNone":115,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":34,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":193,"org.easymock.tests2.ThreadingTest.testThreadSafe":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageVarargTest.varargIntAccepted":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":278,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":214,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":215,"org.easymock.tests2.CaptureTest.testCapture_2617107":110,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":296,"org.easymock.tests2.UsageConstraintsTest.any":151,"org.easymock.tests2.StubTest.stub":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests.UsageExpectAndThrowTest.longType":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":19,"org.easymock.tests2.SerializationTest.testClass":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.LimitationsTest.mockNativeMethod":204,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":242,"org.easymock.tests2.AnswerTest.answer":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":365,"org.easymock.tests2.CaptureTest.testAnd":108,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":289,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":125,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":61,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":353,"org.easymock.tests2.DelegateToTest.testDelegate":175,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":67,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":96,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":178,"org.easymock.tests.MockingTest.testNicePartialClassMocking":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":78,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.CaptureTest.testCaptureLast":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":341,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":71,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":164,"org.easymock.tests.UsageThrowableTest.throwError":198,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":182,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":271,"org.easymock.tests.UsageExpectAndThrowTest.floatType":65,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":167,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":133,"org.easymock.samples.PartialClassMockTest.testGetArea":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":216,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":64,"org.easymock.tests2.UsageTest.niceToStrict":3,"org.easymock.tests2.UsageConstraintsTest.testNotNull":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":85,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":50,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":176,"org.easymock.tests2.UsageTest.defaultResetToNice":327,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":280,"org.easymock.tests.UsageVarargTest.differentLength":26,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.UsageConstraintsTest.equals":90,"org.easymock.tests.UsageTest.openCallCountByLastCall":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":72,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":88,"org.easymock.tests.UsageCallCountTest.tooFewCalls":212,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":282,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":116,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests.MockClassControlTest.testEquals":308,"org.easymock.tests2.EasyMockSupportClassTest.testAll":269,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":203,"org.easymock.tests.MockingTest.testStrictClassMocking":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":80,"org.easymock.tests2.CaptureTest.testCaptureAll":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":105,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":339,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":184,"org.easymock.tests.UsageVarargTest.allKinds":91,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":210,"org.easymock.tests2.DependencyTest.testInterfaceMocking":130,"org.easymock.samples.BasicClassMockTest.testPrintContent":261,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":279,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":84,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests2.AnswerTest.stubAnswer":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":207,"org.easymock.tests2.UsageConstraintsTest.greaterThan":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":362,"org.easymock.tests.UsageVarargTest.varargLongAccepted":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":15,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":322,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":241,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":364,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":158,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":209,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":283,"org.easymock.tests2.SerializationTest.test":99,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":112,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":123,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.tests2.UsageConstraintsTest.testSame":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":268,"org.easymock.samples.SupportTest.addDocument":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":92,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":124,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":272,"org.easymock.tests.GenericTest.testPackageScope":298,"org.easymock.tests2.CaptureTest.testCapture2_2446744":326,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":183,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":194,"org.easymock.tests.GenericTest.testBridgedEquals":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":46,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":81,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":79,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageCallCountTest.tooManyCalls":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":244,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":281,"org.easymock.tests2.MockedExceptionTest.testRealException":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests.MockingTest.testNiceClassMocking":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testClassMocking":313,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":52,"org.easymock.tests2.UsageConstraintsTest.testFind":145,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":295,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":285,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":137,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":319,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":126,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":190,"org.easymock.tests.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":275,"org.easymock.tests2.CaptureTest.testCaptureRightOne":117,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":333,"org.easymock.tests2.UsageConstraintsTest.testOr":148,"org.easymock.tests.UsageRangeTest.combination":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":360,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests.MockClassControlTest.testHashCode":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":273,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests2.EasyMockSupportTest.testVerify":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":276,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":321,"org.easymock.tests.UsageVarargTest.varargShortAccepted":191,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":36,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":45,"org.easymock.tests2.UsageConstraintsTest.cmpTo":152,"org.easymock.tests.UsageVarargTest.varargCharAccepted":189,"org.easymock.tests2.CaptureTest.testCaptureMultiple":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":330,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests2.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests.DefaultClassInstantiatorTest.object":316,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":354,"org.easymock.tests2.CaptureTest.testCaptureFromStub":266,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":324,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":294,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":277,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests2.CaptureTest.testCapture":265,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":306,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":14,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":305,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":134,"org.easymock.tests2.UsageTest.resumeIfFailure":7,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":310,"org.easymock.tests.LimitationsTest.abstractClass":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":11,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":187}}]
