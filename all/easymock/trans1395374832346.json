[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"failures":[220,221],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[61,62,63,64,85,123,128,152,156,157,164,165,166,167,168,169,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,225,228,229,233,254,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[38,259,45,88,89,91,93,94,260,105,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[25,27,261,125,140,141,142,262,158,160,263,196,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,67,69,70,71,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[6,7,9,10,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,63,65,68,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,140,142,143,144,145,146,147,148,150,152,153,154,155,156,157,158,159,160,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,218,224,226,227,230,231,232,233,234,235,241,242,243,265,266,267,268,269,250,251,252,253,254,255,256,257,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[89,94,105],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[8,59,270,60,112,115,116],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[271],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[26,272,273,274,141,142,275,4,159,276,217,5,277,278,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[280,6,7,8,9,10,281,11,282,12,13,13,14,14,283,15,284,285,286,16,17,18,19,20,21,22,23,24,287,288,25,289,26,27,261,28,29,290,30,31,32,33,34,35,36,37,38,39,259,40,41,291,292,42,43,44,45,46,47,48,49,50,51,52,53,54,293,55,294,56,57,58,59,60,61,62,63,64,65,295,296,297,298,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,299,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,300,108,109,110,111,301,302,303,304,112,115,116,117,305,118,119,306,120,121,307,122,308,123,124,125,272,126,309,127,128,129,273,274,130,131,132,133,134,135,310,311,312,313,140,141,142,143,144,145,146,147,150,151,152,153,154,155,156,157,314,315,4,158,316,159,160,263,317,318,319,320,321,164,165,166,167,168,169,322,323,170,324,325,326,327,328,329,171,330,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,331,332,333,334,335,336,337,338,339,340,341,342,193,194,195,196,276,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,224,225,343,344,345,346,347,226,227,228,229,230,231,232,233,348,349,350,351,352,353,354,355,356,357,358,234,235,236,237,238,239,240,241,242,243,359,360,361,362,363,364,365,366,244,250,251,252,253,254,255,5,277,256,257,278,279,258],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[280,6,7,8,9,10,281,11,282,12,13,13,14,14,283,15,284,285,286,16,17,18,19,20,21,22,23,24,287,288,25,289,26,27,261,28,29,290,30,31,32,33,34,35,36,37,38,39,259,40,41,291,292,42,43,44,45,46,47,48,49,50,51,52,53,54,293,55,294,56,57,58,59,60,61,62,63,64,65,295,296,297,298,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,299,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,300,108,109,110,111,301,302,303,304,112,115,116,117,305,118,119,306,120,121,307,122,308,123,124,125,272,126,309,127,128,129,273,274,130,131,132,133,134,135,310,311,312,313,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,314,315,4,158,316,159,160,263,317,318,319,320,321,164,165,166,167,168,169,322,323,170,324,325,326,327,328,329,171,330,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,331,332,333,334,335,336,337,338,339,340,341,342,193,367,194,195,196,276,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,224,225,343,344,345,346,347,226,227,228,229,230,231,232,233,348,349,350,351,352,353,354,355,356,357,358,234,235,236,237,238,239,240,241,242,243,359,360,361,362,363,364,365,366,244,250,251,252,253,254,255,5,277,256,257,278,279,258],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests2.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":167,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":309,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":290,"org.easymock.tests2.DelegateToTest.testReturnException":67,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":165,"org.easymock.tests.MockingTest.testPartialClassMocking":241,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.MockClassControlTest.testToString":361,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":209,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":197,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":113,"org.easymock.tests.UsageExpectAndThrowTest.object":207,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DelegateToTest.testWrongClass":69,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":234,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests2.UsageTest.wrongArguments":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":226,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":159,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":366,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":230,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":278,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":139,"org.easymock.tests.UsageUnorderedTest.message":217,"org.easymock.tests.UsageVerifyTest.twoReturns":142,"org.easymock.tests.UsageVarargTest.varargByteAccepted":356,"org.easymock.tests2.ThreadingTest.testThreadSafe":16,"org.easymock.tests.UsageTest.argumentsOrdered":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":219,"org.easymock.tests.UsageVarargTest.varargIntAccepted":350,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":326,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":166,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":337,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":289,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests.LimitationsTest.mockNativeMethod":218,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":172,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":298,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":261,"org.easymock.tests2.NameTest.nameForMocksControl":304,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":76,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":223,"org.easymock.tests2.DelegateToTest.testDelegate":71,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":270,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":201,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":212,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":347,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":205,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":333,"org.easymock.tests.UsageThrowableTest.throwError":150,"org.easymock.samples.ExampleTest.removeNonExistingDocument":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":335,"org.easymock.tests.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests2.MockBuilderTest.testCreateMockString":308,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests.UsageExpectAndThrowTest.floatType":199,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":115,"org.easymock.tests.UsageVerifyTest.twoThrows":141,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":138,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":198,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":157,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":307,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests.UsageVarargTest.differentLength":353,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":206,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":228,"org.easymock.tests.UsageCallCountTest.tooFewCalls":324,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":195,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":184,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests.UsageThrowableTest.throwCheckedException":154,"org.easymock.tests.MockClassControlTest.testEquals":365,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":214,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":297,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":225,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":35,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.tests.ObjectMethodsTest.testHashCode":320,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests2.NameTest.nameForNiceMock":303,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":20,"org.easymock.tests.UsageVarargTest.allKinds":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":346,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.samples.ExampleTest.addDocument":281,"org.easymock.tests2.DelegateToTest.testStubDelegate":68,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":156,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests2.AnswerTest.stubAnswer":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":169,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":251,"org.easymock.tests.UsageVarargTest.varargLongAccepted":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":265,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":17,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests.UsageThrowableTest.noUpperLimit":151,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":74,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":152,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.samples.SupportTest.addDocument":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":164,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":66,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":75,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":336,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests.GenericTest.testPackageScope":171,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":19,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":357,"org.easymock.tests.GenericTest.testBridgedEquals":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests2.NameTest.nameForMock":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":343,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":300,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":136,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":253,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":170,"org.easymock.tests2.MockedExceptionTest.testRealException":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":202,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.NameTest.nameForStrictMock":302,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":60,"org.easymock.tests.UsageExpectAndReturnTest.object":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":80,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":321,"org.easymock.tests.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":224,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":220,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.UsageTest.wrongArguments":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":194,"org.easymock.tests.MockClassControlTest.testHashCode":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":186,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":221,"org.easymock.tests.UsageVarargTest.varargShortAccepted":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":193,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":295,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":351,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":114,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":269,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests.DefaultClassInstantiatorTest.object":318,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":245,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":332,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":319,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":204,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":363,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":203,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":317,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":362,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":344,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":78}}]
