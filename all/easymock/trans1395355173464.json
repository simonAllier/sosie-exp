[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,22,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[42,25,43,44,26,27,45,46,47,48,49,50,51,52,28,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,29,76,30,31,77,78,79,80,81,32,82,83,84,85,86,87,88,89,33,34,35,90,91,92,40,93,94,95,96,97,98,99,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[102,103,104,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[107,108,109,110,111,13,112,113,114,115,116,117,118,119,120],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[122,123,124,125,126,127,128,42,25,43,44,26,27,45,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,46,144,145,146,147,148,149,47,150,151,152,153,154,155,156,157,158,159,160,161,162,163,48,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,121,192,193,194,49,195,196,197,50,198,199,51,200,201,202,107,108,109,110,203,204,205,206,207,208,209,210,52,28,53,211,54,212,213,214,55,56,215,216,57,217,218,9,219,220,221,10,69,222,223,70,71,224,225,226,227,228,229,72,73,230,231,232,233,234,234,235,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,12,111,13,112,113,114,115,252,253,254,255,256,257,74,75,29,258,76,30,31,77,259,260,261,262,263,264,265,266,267,116,117,118,268,269,78,79,80,81,32,270,271,272,14,273,274,119,275,276,33,34,35,277,15,278,279,280,281,282,283,284,285,286,287,288,289,290,90,291,292,293,294,295,296,297,298,17,299,300,301,302,303,18,304,305,306,307,308,309,19,20,310,311,91,92,312,313,21,36,314,315,316,37,22,317,38,318,319,39,320,23,24,321,322,323,40,93,94,95,324,96,97,325,98,326,327,328,329,99,100,101,330,331,332,333,334,335,336,337,338,339,120,340,341,342,343,344,345,346,347,348,349,350,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[47,154,165],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[353,98,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[154,179,181,189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[260,270,272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[122,125,126,127,42,25,43,44,26,27,45,129,130,132,133,134,135,136,141,142,143,147,148,149,47,150,151,152,153,154,155,157,158,159,160,161,162,163,48,164,165,166,167,168,169,170,171,172,173,175,354,179,180,181,182,183,184,185,186,187,188,189,190,191,121,107,108,109,110,204,205,206,208,209,355,356,357,210,52,28,53,211,54,212,213,214,55,56,215,216,57,218,9,221,10,69,222,223,70,71,224,225,226,358,227,228,72,230,239,240,241,242,243,244,245,248,249,250,251,12,111,13,112,113,114,115,252,253,254,74,75,29,258,76,30,31,359,360,361,362,259,261,263,264,363,268,269,79,80,32,273,274,119,275,276,33,34,35,277,15,278,279,280,281,364,365,366,16,282,283,285,286,287,288,289,90,291,292,293,294,296,297,298,17,299,300,301,302,303,18,304,305,306,307,308,309,19,20,310,311,91,92,312,313,21,36,314,315,316,37,22,317,38,318,319,39,320,23,24,321,322,323,40,94,95,324,96,97,325,100,101,330,331,332,333,334,335,336,337,338,339,120,341,342,343,346,347,348,349,350,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[214],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":323,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":54,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":130,"org.easymock.tests2.DelegateToTest.testReturnException":204,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":13,"org.easymock.tests.MockingTest.testPartialClassMocking":341,"org.easymock.samples.SupportTest.voteForRemovals":237,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":66,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":318,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":92,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":138,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":123,"org.easymock.tests.UsageExpectAndThrowTest.object":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.DelegateToTest.testWrongClass":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests2.UsageTest.wrongArguments":53,"org.easymock.samples.ConstructorCalledMockTest.testTax":234,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":361,"org.easymock.samples.ExampleTest.answerVsDelegate":240,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":217,"org.easymock.tests2.UsageConstraintsTest.testNull":151,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":176,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":322,"org.easymock.tests.UsageTest.moreThanOneArgument":40,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":360,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":14,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests.UsageUnorderedTest.message":91,"org.easymock.tests.UsageVerifyTest.twoReturns":35,"org.easymock.tests.UsageVarargTest.varargByteAccepted":292,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests.UsageTest.argumentsOrdered":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":98,"org.easymock.tests.UsageVarargTest.varargIntAccepted":287,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":349,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":246,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":354,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.StubTest.stub":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":12,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":118,"org.easymock.tests.UsageExpectAndThrowTest.longType":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":62,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests.LimitationsTest.mockNativeMethod":268,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":284,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests2.CaptureTest.testAnd":179,"org.easymock.tests2.UsageTest.strictResetToDefault":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":4,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":27,"org.easymock.tests2.NameTest.nameForMocksControl":146,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":15,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests2.DelegateToTest.testDelegate":208,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":36,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":177,"org.easymock.tests.MockingTest.testNicePartialClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":320,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":226,"org.easymock.tests2.CompareToTest.testCompareEqual":104,"org.easymock.tests2.CaptureTest.testCaptureLast":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":10,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":99,"org.easymock.tests2.CaptureTest.testCapture1_2446744":183,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":171,"org.easymock.tests.UsageThrowableTest.throwError":331,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.ConstraintsToStringTest.andToString":65,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests.UsageExpectAndThrowTest.floatType":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":280,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":163,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":125,"org.easymock.tests.UsageVerifyTest.twoThrows":34,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":139,"org.easymock.samples.PartialClassMockTest.testGetArea":232,"org.easymock.tests2.CompareToTest.testLessOrEqual":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.samples.ExampleTest.voteAgainstRemoval":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":312,"org.easymock.tests2.UsageTest.niceToStrict":211,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":1,"org.easymock.tests2.UsageConstraintsTest.testNotNull":170,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":338,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.tests2.UsageTest.defaultResetToNice":214,"org.easymock.samples.ExampleTest.voteAgainstRemovals":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":309,"org.easymock.tests.UsageVarargTest.differentLength":290,"org.easymock.tests2.CallbackTest.callback":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":86,"org.easymock.tests.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":119,"org.easymock.tests.UsageCallCountTest.tooFewCalls":347,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":305,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":219,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":160,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":362,"org.easymock.tests.UsageThrowableTest.throwCheckedException":335,"org.easymock.tests2.EasyMockSupportClassTest.testAll":137,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":283,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":85,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests2.CaptureTest.testCaptureAll":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":9,"org.easymock.tests2.UsageConstraintsTest.testMatches":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":220,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":279,"org.easymock.tests2.CompareToTest.testGreateOrEqual":105,"org.easymock.samples.ExampleTest.voteForRemovals":244,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests2.NameTest.nameForNiceMock":145,"org.easymock.tests.UsageVarargTest.allKinds":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.samples.BasicClassMockTest.testPrintContent":247,"org.easymock.samples.ExampleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testStubDelegate":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":337,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":128,"org.easymock.tests2.AnswerTest.stubAnswer":126,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":29,"org.easymock.tests2.UsageConstraintsTest.greaterThan":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":262,"org.easymock.tests.UsageVarargTest.varargLongAccepted":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.samples.ExampleTest.voteForRemoval":241,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests.UsageExpectAndReturnTest.floatType":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":235,"org.easymock.tests2.ConstraintsToStringTest.orToString":58,"org.easymock.tests.UsageThrowableTest.noUpperLimit":332,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":49,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":297,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.samples.SupportTest.addDocument":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":111,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":203,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":82,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":302,"org.easymock.tests.GenericTest.testPackageScope":282,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":178,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":293,"org.easymock.tests.GenericTest.testBridgedEquals":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":2,"org.easymock.tests2.NameTest.nameForMock":46,"org.easymock.tests.UsageExpectAndReturnTest.longType":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":281,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":306,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":260,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":299,"org.easymock.tests.UsageCallCountTest.tooManyCalls":351,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":264,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":346,"org.easymock.tests2.MockedExceptionTest.testRealException":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":303,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":314,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":345,"org.easymock.tests2.NameTest.nameForStrictMock":144,"org.easymock.tests2.UsageConstraintsTest.testContains":159,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":142,"org.easymock.tests.UsageExpectAndReturnTest.object":304,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":174,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":199,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":289,"org.easymock.tests.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":194,"org.easymock.tests2.CaptureTest.testCaptureRightOne":189,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":326,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":88,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":19,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":79,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":300,"org.easymock.tests2.EasyMockSupportTest.testVerify":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":307,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":61,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":266,"org.easymock.tests.UsageVarargTest.varargShortAccepted":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":209,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests.UsageVarargTest.varargCharAccepted":288,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":124,"org.easymock.tests2.CompareToTest.testLessThan":102,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests2.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":265,"org.easymock.tests2.CaptureTest.testCaptureFromStub":190,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":295,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":334,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":348,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":308,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":229,"org.easymock.tests2.UsageConstraintsTest.constraints":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":315,"org.easymock.samples.ExampleTest.addAndChangeDocument":245,"org.easymock.tests2.ConstraintsToStringTest.notToString":60,"org.easymock.tests.UsageStrictMockTest.testVerify":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":116,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":238,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CompareToTest.testGreateThan":103,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":50}}]
