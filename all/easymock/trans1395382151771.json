[{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[77,78,79,80,81,82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[83,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,0,97,98,99,100,58,101,102,59,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,13,14,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,15,150,60,61,62,63,64,65,66,67,151,68,69,70,71,72,152,153,154,155,156,157,158,159,160,161,162,18,19,163,20,21,22,164,23,25,165,39,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,41,182,81,183,184,185,186,187,188,74,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,75,76,292,293,53,54,294,295,296,297,298,299,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,0,97,98,99,100,58,101,102,59,104,105,106,107,108,109,110,111,112,113,114,117,118,119,120,121,13,14,122,123,124,127,128,129,130,132,133,135,136,139,142,144,145,147,148,149,15,150,60,61,62,63,65,66,67,151,68,69,72,152,153,154,155,156,157,158,159,160,161,162,18,163,20,21,22,23,25,165,301,302,303,304,30,39,167,170,171,175,176,177,178,179,180,181,41,182,183,186,187,305,188,74,189,190,191,192,193,194,197,198,306,199,200,201,202,203,204,205,207,214,215,216,217,218,219,220,221,222,307,308,223,224,225,226,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,309,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,53,54,294,295,296,297,298,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[46,47,51],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[132],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[84,85,86,87,310,88,89,90,91,92,93,311,94,95,96,0,97,98,99,100,58,101,102,59,103,104,105,106,107,1,312,313,314,2,315,316,317,318,108,319,3,320,321,4,322,5,323,6,7,324,325,8,326,327,9,328,329,10,11,330,331,12,332,333,334,109,335,336,110,111,112,337,113,114,115,116,117,118,119,120,338,339,340,341,342,343,344,345,346,347,348,349,121,13,14,122,350,351,352,353,354,355,356,357,358,359,360,361,362,123,124,125,126,127,128,363,364,365,366,367,129,130,368,369,370,371,372,373,374,375,376,131,132,133,134,135,136,137,138,139,140,141,142,143,377,144,145,146,378,147,148,149,15,150,379,380,60,61,62,63,64,65,66,67,151,68,69,70,71,72,152,381,382,383,384,385,386,387,388,389,390,391,392,83,16,153,154,17,393,394,155,156,395,157,158,159,160,161,396,162,18,19,163,20,21,22,164,397,23,398,24,25,399,165,26,27,28,400,301,302,303,304,401,402,403,404,405,406,29,30,31,32,33,34,35,36,37,38,39,40,407,408,409,410,166,411,412,413,414,415,416,417,418,167,168,169,170,171,172,419,173,174,420,175,421,176,177,178,179,180,181,41,422,182,81,183,184,185,186,187,305,188,74,189,423,424,425,426,427,428,42,43,44,190,191,429,192,430,431,45,432,433,434,193,194,195,196,197,198,306,199,200,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,201,202,203,204,205,459,206,207,82,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,307,308,223,224,225,226,460,227,228,461,462,463,464,465,466,467,468,469,229,230,231,470,232,233,471,234,235,236,237,238,239,240,241,242,243,244,472,46,47,48,49,50,51,473,52,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,474,267,309,475,476,477,478,479,480,481,482,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,75,76,292,293,483,53,54,484,55,485,294,295,296,297,298,299,486,300,487,488,56,57,489,490,491,492],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":87,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":489,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests.MockClassControlTest.testToString":31,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":268,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":323,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":319,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":93,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":193,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":216,"org.easymock.samples.ExampleTest.answerVsDelegate":295,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":467,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":431,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":359,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":197,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":287,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":478,"org.easymock.tests.UsageTest.argumentsOrdered":212,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.ReplayStateInvalidUsageTest.times":414,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":386,"org.easymock.tests2.DependencyTest.testClassMocking":317,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":160,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":464,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":354,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":482,"org.easymock.tests2.DelegateToTest.testDelegate":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":283,"org.easymock.tests.LimitationsTest.mockFinalMethod":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":205,"org.easymock.tests2.DependencyTest.testClassMockingSupport":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":474,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":158,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":409,"org.easymock.tests.UsageThrowableTest.throwError":288,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":466,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":459,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":334,"org.easymock.samples.PartialClassMockTest.testGetArea":492,"org.easymock.tests.MockingTest.testInterfaceMocking":429,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":424,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":406,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":129,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":277,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":463,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":428,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":214,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":470,"org.easymock.tests.MockClassControlTest.testEquals":35,"org.easymock.tests2.EasyMockSupportClassTest.testAll":4,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":159,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":203,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.samples.ExampleTest.voteForRemovals":299,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":204,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":292,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":378,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":473,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":52,"org.easymock.samples.ExampleTest.voteForRemoval":296,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":27,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":164,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":352,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":353,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":453,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":227,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":201,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":286,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":461,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.UsageCallCountTest.tooManyCalls":228,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":76,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testNiceClassMocking":45,"org.easymock.tests.MockingTest.testClassMocking":43,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests.MockTypeTest.fromEasyMockClass":465,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":422,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":358,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":404,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":479,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":379,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":173,"org.easymock.tests.MockClassControlTest.testHashCode":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":327,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":427,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":157,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":83,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":472,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests.DefaultClassInstantiatorTest.object":46,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":426,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":399,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":274,"org.easymock.tests.CapturesMatcherTest.test":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":475,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":332,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":369,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":451,"org.easymock.samples.SupportTest.voteForRemovals":488,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":78,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":280,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":457,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":434,"org.easymock.tests.UsageExpectAndThrowTest.object":278,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.samples.ConstructorCalledMockTest.testTax":490,"org.easymock.tests.UsageStrictMockTest.range":185,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":315,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":368,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":3,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":215,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":79,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":425,"org.easymock.tests2.CaptureTest.testCaptureNone":151,"org.easymock.tests.UsageUnorderedTest.message":244,"org.easymock.tests.UsageVerifyTest.twoReturns":189,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":10,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":226,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":405,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":196,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":413,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":271,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":50,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":412,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.SerializationTest.testClass":148,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":484,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests2.NameTest.nameForMocksControl":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":5,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":396,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":370,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.MockingTest.testTwoMocks":44,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":276,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":186,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":48,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":125,"org.easymock.tests2.MockBuilderTest.testCreateMockString":376,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":6,"org.easymock.tests.UsageExpectAndThrowTest.floatType":270,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":110,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":380,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":329,"org.easymock.samples.ExampleTest.voteAgainstRemoval":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":423,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":293,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.UsageVarargTest.differentLength":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.CallbackTest.callback":152,"org.easymock.tests2.UsageConstraintsTest.equals":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":398,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":217,"org.easymock.tests.UsageThrowableTest.throwCheckedException":75,"org.easymock.tests.MockingTest.testStrictClassMocking":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":415,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":394,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":112,"org.easymock.tests.ObjectMethodsTest.testHashCode":403,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":127,"org.easymock.tests2.NameTest.nameForNiceMock":303,"org.easymock.tests2.DependencyTest.testInterfaceMocking":108,"org.easymock.samples.ExampleTest.addDocument":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":11,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.stubAnswer":111,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":183,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":371,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":491,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":58,"org.easymock.tests.UsageThrowableTest.noUpperLimit":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":1,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":47,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.samples.SupportTest.addDocument":487,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":393,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":7,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests2.NameTest.nameForMock":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":282,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":401,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":200,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":194,"org.easymock.tests2.NameTest.nameForStrictMock":302,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":367,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":2,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":364,"org.easymock.tests2.UsageStrictMockTest.range":116,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":351,"org.easymock.tests2.CaptureTest.testCaptureRightOne":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":326,"org.easymock.tests2.UsageConstraintsTest.testOr":91,"org.easymock.tests.UsageRangeTest.combination":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":208,"org.easymock.tests2.MockBuilderTest.testWithConstructor":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":324,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":51,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":460,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":408,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":225,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests2.UsageConstraintsTest.constraints":86,"org.easymock.samples.ExampleTest.addAndChangeDocument":300,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":485,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":202,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.LimitationsTest.abstractClass":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":356}}]
