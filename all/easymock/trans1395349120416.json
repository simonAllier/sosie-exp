[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[17,18,19,20,21,22],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[36,20,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:197","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,17,162,18,163,164,165,166,6,167,168,169,7,170,171,172,173,19,174,175,21,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,22,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,23,245,246,25,247,248,28,29,30,31,249,250,251],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[43,252,253,254,88,89,90,255,256,129,257,130,258,259,260,155,261,262,263,264,265,37,266,213,267,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[188,189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[272,273,274,275,276,277,268,278,42,43,279,252,44,45,253,254,46,280,281,282,283,284,285,286,287,288,289,290,47,48,49,50,51,52,291,292,293,53,54,55,56,57,58,294,295,296,297,298,299,300,301,59,302,60,61,303,304,62,63,64,65,66,305,306,307,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,308,309,310,311,312,313,314,315,316,87,88,89,90,255,91,92,93,94,95,96,97,98,99,100,317,318,101,102,319,103,320,321,322,323,324,325,326,269,327,328,329,330,331,332,333,104,105,334,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,335,336,256,129,337,257,130,338,339,340,131,341,132,133,134,135,136,137,138,139,140,141,142,143,342,343,147,148,149,150,344,151,345,346,153,154,155,261,156,0,157,158,159,262,263,160,161,39,40,41,347,348,17,349,350,351,162,18,352,353,354,166,6,169,7,170,355,171,172,356,173,19,357,358,36,359,360,361,362,363,179,180,181,182,183,184,185,364,186,187,188,189,190,191,22,192,193,194,207,264,265,37,266,208,209,210,211,365,212,366,367,213,368,267,214,369,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,370,237,238,239,240,241,243,244,371,23,245,24,246,25,26,27,247,248,28,29,30,31,249,250,251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:47","sourceCode":"throw new java.lang.IllegalStateException((((((((((\"\" + (org.easymock.internal.Invocation.getArguments().int)) + \" matchers expected, \") + (java.util.List<org.easymock.IArgumentMatcher>.size())) + \" recorded.\\n\") + \"This exception usually occurs when matchers are mixed with raw values when recording a method:\\n\") + \"\\tfoo(5, eq(6));\\t// wrong\\n\") + \"You need to use no matcher at all or a matcher for every single param:\\n\") + \"\\tfoo(eq(5), eq(6));\\t// right\\n\") + \"\\tfoo(5, 6);\\t// also right\"))","type":"CtThrowImpl"},"failures":[372],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[270,23,245,24,246,25,26,27,247,248,28,29,30,31,249],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[373,268,43,302,374,303,304,375,376,377,88,89,90,255,129,257,130,155,378,379,380,381,382,383,213,267,214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[245,31],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[384],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.LastControl:61","failures":[290,47,48,49,50,51,57,255,91,92,104,105,256,129,138,139,140,141,142,357,364,190,213,215,216,217,218,219,220,221,222,223,224,372,225,226,227,228,229,230,231,232,233,234,235,236,370,237,238,239,240,23,245,24,246,25,26,27,247,248,28,29,30,31,249,250,251],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[184,185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[385],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[236],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[279,252,44,45,253,254,46,280,386,375,387,256,129,379,388,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49,53,54,55,56,57,58,389,390,391,392,105,22,192,193,194,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":218,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.UsageTest.argumentsOrdered":263,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":205,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":0,"org.easymock.tests2.DelegateToTest.testReturnException":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":54,"org.easymock.tests.MockingTest.testPartialClassMocking":101,"org.easymock.tests.MockClassControlTest.testToString":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":109,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":258,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":47,"org.easymock.tests2.UsageTest.wrongArguments":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":107,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":275,"org.easymock.tests2.UsageConstraintsTest.testNull":220,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":172,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":204,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":301,"org.easymock.tests2.CaptureTest.testPrimitive":246,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":128,"org.easymock.tests.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":95,"org.easymock.tests.UsageTest.argumentsOrdered":254,"org.easymock.tests.UsageVarargTest.varargIntAccepted":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":142,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests.ReplayStateInvalidUsageTest.times":330,"org.easymock.tests2.AnswerTest.answer":182,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":181,"org.easymock.tests2.CaptureTest.testAnd":23,"org.easymock.tests2.UsageTest.strictResetToDefault":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":292,"org.easymock.tests2.DelegateToTest.testDelegate":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":179,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":325,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":9,"org.easymock.samples.PartialClassMockTest.testGetArea":152,"org.easymock.tests.MockingTest.testInterfaceMocking":319,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":139,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":110,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":162,"org.easymock.tests2.MockBuilderTest.testCreateMock":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":118,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":379,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":334,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":12,"org.easymock.tests.UsageOverloadedMethodTest.overloading":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":61,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":34,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":228,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests2.EasyMockSupportClassTest.testAll":175,"org.easymock.tests.MockClassControlTest.testEquals":300,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":64,"org.easymock.tests2.CaptureTest.testCaptureAll":245,"org.easymock.tests2.UsageConstraintsTest.testMatches":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":323,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests.UsageVarargTest.allKinds":290,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":65,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":136,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":58,"org.easymock.tests2.UsageConstraintsTest.greaterThan":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":361,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":188,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":19,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":53,"org.easymock.tests2.CaptureTest.testCaptureFirst":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":74,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":353,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":384,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":62,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":127,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":93,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":166,"org.easymock.tests.MockingTest.testNiceClassMocking":322,"org.easymock.tests.MockingTest.testClassMocking":318,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":309,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":193,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":100,"org.easymock.tests.MockTypeTest.fromEasyMockClass":273,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests.UsageExpectAndReturnTest.object":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":203,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":284,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":46,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":83,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":60,"org.easymock.tests.MockClassControlTest.testHashCode":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":363,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":283,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":367,"org.easymock.tests2.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":340,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":133,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":115,"org.easymock.tests.CapturesMatcherTest.test":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":297,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":381,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":56,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":237,"org.easymock.tests2.SerializationTest.testAllMockedMethod":371,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":388,"org.easymock.samples.SupportTest.voteForRemovals":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.object":119,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":235,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":92,"org.easymock.samples.ConstructorCalledMockTest.testTax":145,"org.easymock.tests.UsageStrictMockTest.range":257,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":165,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":386,"org.easymock.tests2.CaptureTest.testCaptureNone":248,"org.easymock.tests.UsageUnorderedTest.message":255,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":187,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":313,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":329,"org.easymock.tests2.StubTest.stub":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.UsageExpectAndThrowTest.longType":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":55,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":328,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":368,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.SerializationTest.testClass":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":369,"org.easymock.tests2.NameTest.nameForMocksControl":266,"org.easymock.tests2.MockedExceptionTest.testMockedException":192,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":113,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":103,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.CaptureTest.testCaptureLast":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":7,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":223,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":236,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":117,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":239,"org.easymock.samples.ExampleTest.removeNonExistingDocument":345,"org.easymock.tests.UsageStrictMockTest.differentMethods":130,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":269,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":189,"org.easymock.tests2.ConstraintsToStringTest.andToString":382,"org.easymock.tests2.MockBuilderTest.testCreateMockString":354,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.floatType":111,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":231,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":183,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":10,"org.easymock.tests2.UsageConstraintsTest.testNotNull":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":137,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":22,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":82,"org.easymock.tests.UsageVarargTest.differentLength":285,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests.UsageTest.openCallCountByLastCall":44,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":49,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":167,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":108,"org.easymock.tests.UsageThrowableTest.throwCheckedException":134,"org.easymock.tests.MockingTest.testStrictClassMocking":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":168,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":185,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":191,"org.easymock.tests2.NameTest.nameForNiceMock":37,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.samples.ExampleTest.addDocument":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests2.AnswerTest.stubAnswer":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":129,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.floatType":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":186,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":146,"org.easymock.tests2.ConstraintsToStringTest.orToString":378,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":233,"org.easymock.tests.UsageThrowableTest.noUpperLimit":341,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":216,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":26,"org.easymock.tests2.SerializationTest.test":244,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":68,"org.easymock.tests2.UsageConstraintsTest.testSame":221,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":327,"org.easymock.tests.GenericTest.testPackageScope":143,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":320,"org.easymock.tests2.NameTest.nameForMock":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":5,"org.easymock.tests2.UsageStrictMockTest.differentMethods":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":358,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":293,"org.easymock.tests2.MockedExceptionTest.testRealException":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":348,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":376,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":333,"org.easymock.tests2.NameTest.nameForStrictMock":265,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":16,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":347,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":234,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":349,"org.easymock.tests2.UsageStrictMockTest.range":267,"org.easymock.tests2.UsageConstraintsTest.lessThan":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.UsageConstraintsTest.testOr":222,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":355,"org.easymock.tests.UsageTest.wrongArguments":252,"org.easymock.tests2.MockBuilderTest.testWithConstructor":1,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":80,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":314,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":324,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":279,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":312,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":81,"org.easymock.tests2.CaptureTest.testCapture":271,"org.easymock.tests2.UsageConstraintsTest.constraints":217,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":337,"org.easymock.samples.ExampleTest.addAndChangeDocument":346,"org.easymock.tests2.ConstraintsToStringTest.notToString":380,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":63,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":141,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":260,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":281}}]
