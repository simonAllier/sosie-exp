[{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[15,16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[25,26,27,28,29,30],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (this.java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[39,40,41,42,31,17,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[26,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[99,100,101],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[17,43,102,103],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[104,105],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,39,126,127,128,129,40,130,131,132,133,134,14,135,136,137,104,138,139,140,141,142,143,144,145,146,147,148,41,149,42,31,150,151,152,17,43,102,153,44,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,11,173,12,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,55,190,191,192,193,56,57,58,59,60,23,194,195,196,197,198,199,200,201,202,203,204,205,61,206,207,208,209,210,211,62,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,236,237,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,63,253,254,255,64,65,256,257,258,259,260,261,262,263,45,66,264,46,47,48,49,265,50,51,52,53,266,34,35,36,267,268,269,270,54,67,271,272,68,69,273,274,275,276,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,7,330,331,332,333,334,335,336,90,337,8,338,339,91,340,341,342,343,344,345,92,93,94,95,96,97,346,347,348,349,25,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,98,387,388,389],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[390,391,392],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[123,124,125,39,126,127,128,129,40,130,131,132,133,134,14,135,136,137,104,138,139,140,141,142,143,144,145,146,147,159,160,171,11,177,178,179,180,181,182,183,184,185,186,187,188,189,55,190,193,196,197,224,225,226,256,257,258,259,260,266,54,67,271,272,68,69,273,294,295,322,323,7,330,96,97],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[15,17,393,18,19,20,394,395,22,24],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[15,396,17,393,394,24],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[36],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[17,43,102,103],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[108,160,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[123,135,104,146,168,169,170,176,178,184,185,55,207,226,66,70,76,82,86,88,398,322,337,350,356,362,366,368],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests2.UsageTest.argumentsOrdered":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":13,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":210,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":238,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":93,"org.easymock.tests.MockingTest.testPartialClassMocking":381,"org.easymock.tests.MockClassControlTest.testToString":279,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":397,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":70,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":202,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":130,"org.easymock.tests2.UsageTest.wrongArguments":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":348,"org.easymock.samples.ExampleTest.answerVsDelegate":244,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":284,"org.easymock.tests2.CaptureTest.testPrimitive":180,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":89,"org.easymock.tests.UsageTest.moreThanOneArgument":337,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":377,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":296,"org.easymock.tests.UsageTest.argumentsOrdered":341,"org.easymock.tests.UsageVarargTest.varargIntAccepted":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":395,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":1,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.ReplayStateInvalidUsageTest.times":309,"org.easymock.tests2.AnswerTest.answer":217,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":167,"org.easymock.tests2.CaptureTest.testAnd":177,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":269,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":370,"org.easymock.tests2.CaptureTest.testCapture1_2446744":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":165,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":379,"org.easymock.samples.PartialClassMockTest.testGetArea":239,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":71,"org.easymock.tests2.UsageTest.niceToStrict":209,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":99,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":41,"org.easymock.tests2.MockBuilderTest.testCreateMock":150,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":79,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":115,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":346,"org.easymock.tests.UsageOverloadedMethodTest.overloading":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":391,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":14,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":186,"org.easymock.tests2.EasyMockSupportClassTest.testAll":201,"org.easymock.tests.MockClassControlTest.testEquals":283,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":35,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":87,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":325,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":378,"org.easymock.samples.ExampleTest.voteForRemovals":248,"org.easymock.tests.UsageVarargTest.allKinds":266,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":372,"org.easymock.samples.BasicClassMockTest.testPrintContent":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":326,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":97,"org.easymock.tests2.UsageConstraintsTest.greaterThan":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":30,"org.easymock.samples.ExampleTest.voteForRemoval":245,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":158,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":336,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":112,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":11,"org.easymock.tests2.CaptureTest.testCaptureFirst":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":113,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":357,"org.easymock.tests2.CaptureTest.testCapture2_2446744":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.UsageTest.moreThanOneArgument":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":53,"org.easymock.tests.GenericTest.testBridgedEquals":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":292,"org.easymock.tests.UsageExpectAndReturnTest.longType":353,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":88,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":2,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":255,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":286,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":328,"org.easymock.tests.UsageExpectAndReturnTest.object":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":19,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":49,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":276,"org.easymock.tests.UsageTest.exactCallCountByLastCall":342,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":366,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":386,"org.easymock.tests.MockClassControlTest.testHashCode":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":122,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":384,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":164,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":190,"org.easymock.tests.UsageVarargTest.varargCharAccepted":48,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests2.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":100,"org.easymock.tests.DefaultClassInstantiatorTest.object":25,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":319,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":161,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":76,"org.easymock.tests.CapturesMatcherTest.test":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":204,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":280,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":95,"org.easymock.tests2.StubTest.stubWithReturnValue":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":359,"org.easymock.tests2.SerializationTest.testAllMockedMethod":102,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":317,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":4,"org.easymock.samples.SupportTest.voteForRemovals":242,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":103,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":318,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":218,"org.easymock.tests.UsageExpectAndThrowTest.object":80,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":295,"org.easymock.samples.ConstructorCalledMockTest.testTax":236,"org.easymock.tests.UsageStrictMockTest.range":332,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":311,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests2.CaptureTest.testCaptureNone":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":316,"org.easymock.tests.UsageUnorderedTest.message":322,"org.easymock.tests.UsageVerifyTest.twoReturns":374,"org.easymock.tests.UsageVarargTest.varargByteAccepted":52,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":290,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests2.StubTest.stub":193,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageExpectAndThrowTest.longType":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":94,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":307,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":313,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":369,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.NameTest.nameForMocksControl":109,"org.easymock.tests2.MockedExceptionTest.testMockedException":58,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":74,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":31,"org.easymock.tests.MockingTest.testNicePartialClassMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":393,"org.easymock.tests2.CaptureTest.testCaptureLast":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":371,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":40,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":78,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.samples.ExampleTest.removeNonExistingDocument":249,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":305,"org.easymock.tests.UsageStrictMockTest.differentMethods":333,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":27,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":152,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":72,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":137,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests.UsageVerifyTest.twoThrows":373,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":203,"org.easymock.samples.ExampleTest.voteAgainstRemoval":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.UsageTest.defaultResetToNice":212,"org.easymock.samples.ExampleTest.voteAgainstRemovals":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":365,"org.easymock.tests.UsageVarargTest.differentLength":265,"org.easymock.tests2.CallbackTest.callback":226,"org.easymock.tests.UsageTest.openCallCountByLastCall":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":123,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":222,"org.easymock.tests.ObjectMethodsTest.testHashCode":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":394,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":108,"org.easymock.tests2.DependencyTest.testInterfaceMocking":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":20,"org.easymock.samples.ExampleTest.addDocument":247,"org.easymock.tests2.DelegateToTest.testStubDelegate":12,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":330,"org.easymock.tests.UsageVarargTest.varargLongAccepted":51,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.floatType":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":237,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":124,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":182,"org.easymock.tests2.SerializationTest.test":43,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":392,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":26,"org.easymock.tests2.UsageConstraintsTest.testSame":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":351,"org.easymock.samples.SupportTest.addDocument":241,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":306,"org.easymock.tests.GenericTest.testPackageScope":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":299,"org.easymock.tests2.NameTest.nameForMock":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":362,"org.easymock.tests2.UsageStrictMockTest.differentMethods":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":270,"org.easymock.tests2.MockedExceptionTest.testRealException":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":272,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":312,"org.easymock.tests2.NameTest.nameForStrictMock":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":156,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":198,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":21,"org.easymock.tests2.CaptureTest.testCaptureRightOne":187,"org.easymock.tests2.UsageConstraintsTest.testOr":129,"org.easymock.tests.UsageRangeTest.combination":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageTest.wrongArguments":338,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":363,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":29,"org.easymock.tests.UsageVarargTest.varargShortAccepted":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":291,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":219,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CaptureTest.testCaptureFromStub":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":302,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":364,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.samples.ExampleTest.addAndChangeDocument":250,"org.easymock.tests.UsageStrictMockTest.testVerify":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":240,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":329,"org.easymock.tests2.CompareToTest.testGreateThan":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":324,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":356,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":116,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":46}}]
