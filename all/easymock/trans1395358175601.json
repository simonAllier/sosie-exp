[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,12,13,14,15,16,17,1,18],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[21,22,23,24,25,26,27,28,17,29,30,31,1,3,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,88,89,89,90,91,92,93,94,95,96,97,98,99,100,101,0,102,103,104,105,106,107,108,109,110,19,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[125,126,127,21,128,22,23,25,26,27,28,29,30,129,31,1,3,32,33,34,35,36,37,38,41,42,43,44,47,55,58,68,74,79,80,81,82,83,84,87,88,88,89,89,90,91,92,94,101,102,103,104,108,109,110,19,121,123,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[34,36,130,131,132,7,133,134,135,136],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[38,130,137,138,139,140,141,142,143,144,145,20,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,7,133,188,189,190,191,192,193,194,195,196,197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[198,199,200,201,202,203,204,21,205,22,23,206,24,25,26,27,16,28,207,17,29,30,208,31,209,210,211,212,213,214,215,216,217,218,219,220,221,1,2,3,32,33,222,34,35,36,37,223,38,39,40,41,42,43,44,45,46,47,18,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,130,245,131,132,246,48,51,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,137,138,139,140,141,262,142,143,144,145,20,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,263,166,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,264,265,266,267,268,269,270,167,168,169,170,171,172,173,174,175,176,177,178,179,180,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,79,80,81,82,287,288,83,84,289,85,86,87,290,291,292,293,294,295,296,297,88,89,298,90,299,300,301,302,303,304,305,306,307,308,309,91,92,310,311,312,313,314,315,316,317,318,181,182,319,320,321,322,323,93,94,95,96,97,98,99,100,324,325,326,327,328,329,330,183,184,185,186,187,101,0,102,103,104,105,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,106,107,108,109,110,386,19,387,388,111,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,7,133,406,134,135,407,136,408,112,113,114,115,116,117,409,118,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,8,436,437,438,439,440,441,188,442,443,444,445,189,190,191,192,193,119,120,121,122,446,447,448,449,450,451,452,453,454,194,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,195,196,483,484,485,486,487,488,489,490,491,492,493,494,197,123,495,496,497,498,124,499,500],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[11,12,13,14,15,16,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[268],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[399],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[49,50,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[167,169,170,171,172,173,174,176,502,177],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[198,199,200,201,202,203,204,21,22,25,26,27,28,29,30,31,209,210,211,212,213,214,215,216,217,218,219,220,221,1,2,3,32,33,222,34,35,36,37,38,41,42,43,44,47,230,237,238,239,240,241,242,243,244,130,245,131,132,246,249,250,251,252,253,254,255,256,257,258,259,260,261,137,138,139,140,141,142,143,144,145,20,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,55,58,68,74,264,265,266,267,268,269,270,167,168,169,170,171,172,173,174,175,176,177,178,179,180,271,272,273,274,280,79,80,81,82,288,83,84,85,86,87,290,291,292,294,295,296,297,88,88,89,89,298,90,299,300,301,302,303,304,305,306,307,308,309,91,92,310,311,312,313,314,315,316,317,318,181,182,319,320,321,322,323,93,94,95,96,97,98,99,100,324,325,326,327,328,329,330,183,184,185,186,187,101,102,103,104,347,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,108,109,110,19,389,390,391,392,393,394,395,396,397,398,399,400,401,402,404,405,7,133,406,134,135,407,136,112,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,435,8,436,437,438,439,440,441,188,442,443,444,445,189,190,191,192,193,121,446,447,448,449,450,451,452,453,454,194,455,456,457,458,460,461,462,466,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,195,196,483,484,485,486,488,489,490,491,492,493,494,197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[21,22,23,25,26,27,28,29,30,31,1,3,32,33,34,35,36,37,38,41,42,43,44,46,47,55,58,68,74,79,80,81,82,83,84,87,88,88,89,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,19,121,464,123,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":434,"org.easymock.tests2.UsageTest.argumentsOrdered":259,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":341,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":298,"org.easymock.tests2.DelegateToTest.testReturnException":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":452,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.tests.MockClassControlTest.testToString":95,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":293,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":358,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":189,"org.easymock.tests2.UsageTest.wrongArguments":252,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":470,"org.easymock.samples.ExampleTest.answerVsDelegate":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":124,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":388,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":34,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":100,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":218,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":193,"org.easymock.tests.UsageTest.moreThanOneArgument":435,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":377,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":446,"org.easymock.tests.UsageTest.argumentsOrdered":440,"org.easymock.tests.UsageVarargTest.varargIntAccepted":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":187,"org.easymock.tests.ReplayStateInvalidUsageTest.times":397,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests2.DependencyTest.testClassMocking":77,"org.easymock.tests2.AnswerTest.answer":198,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":274,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":496,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":213,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":450,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":373,"org.easymock.tests.LimitationsTest.mockFinalMethod":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":401,"org.easymock.tests2.CaptureTest.testCapture1_2446744":171,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":272,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":391,"org.easymock.tests.UsageThrowableTest.throwError":378,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":76,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.MockingTest.testInterfaceMocking":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":432,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":63,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":25,"org.easymock.tests2.MockBuilderTest.testCreateMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":367,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":214,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":495,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":468,"org.easymock.tests.UsageOverloadedMethodTest.overloading":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":327,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":421,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":176,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":487,"org.easymock.tests.MockClassControlTest.testEquals":99,"org.easymock.tests2.EasyMockSupportClassTest.testAll":55,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":375,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":273,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":322,"org.easymock.samples.ExampleTest.voteForRemovals":307,"org.easymock.tests.UsageVarargTest.allKinds":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":92,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":384,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":232,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":241,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":409,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":118,"org.easymock.samples.ExampleTest.voteForRemoval":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":45,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":499,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":501,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":211,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":451,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":212,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":417,"org.easymock.tests2.CaptureTest.testCapture2_2446744":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":494,"org.easymock.tests.GenericTest.testBridgedEquals":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":317,"org.easymock.tests.UsageExpectAndReturnTest.longType":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":209,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":376,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":483,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":318,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":383,"org.easymock.tests.MockingTest.testNiceClassMocking":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testClassMocking":107,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":311,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":142,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":479,"org.easymock.tests.MockTypeTest.fromEasyMockClass":497,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":404,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":166,"org.easymock.tests.UsageExpectAndReturnTest.object":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":217,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":489,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":12,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":462,"org.easymock.tests.UsageTest.exactCallCountByLastCall":441,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":447,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":426,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":326,"org.easymock.tests.MockClassControlTest.testHashCode":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":226,"org.easymock.tests2.EasyMockSupportTest.testVerify":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":65,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":448,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":271,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":488,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":408,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.object":112,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":225,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":97,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":364,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":427,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":456,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests2.UsageTest.resumeIfFailure":260,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":454,"org.easymock.tests2.StubTest.stubWithReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":419,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":301,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":370,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":353,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":199,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":467,"org.easymock.tests.UsageExpectAndThrowTest.object":368,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":196,"org.easymock.tests.UsageStrictMockTest.range":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":247,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":369,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":439,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":469,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":433,"org.easymock.tests2.CaptureTest.testCaptureNone":175,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":482,"org.easymock.tests.UsageVarargTest.varargByteAccepted":493,"org.easymock.tests2.ThreadingTest.testThreadSafe":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":69,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":315,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":463,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":91,"org.easymock.tests2.CaptureTest.testCapture_2617107":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":396,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndThrowTest.longType":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":116,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":395,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests.LimitationsTest.mockNativeMethod":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":429,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":57,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":438,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":19,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":362,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":36,"org.easymock.tests2.CaptureTest.testCaptureLast":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":402,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":108,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":366,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":163,"org.easymock.samples.ExampleTest.removeNonExistingDocument":308,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":227,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":114,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":59,"org.easymock.tests.UsageExpectAndThrowTest.floatType":360,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":224,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":68,"org.easymock.samples.ExampleTest.voteAgainstRemoval":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests.LimitationsTest.privateConstructor":120,"org.easymock.tests2.UsageConstraintsTest.testNotNull":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":385,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests2.UsageTest.defaultResetToNice":257,"org.easymock.samples.ExampleTest.voteAgainstRemovals":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.differentLength":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.CallbackTest.callback":204,"org.easymock.tests2.UsageConstraintsTest.equals":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":39,"org.easymock.tests.UsageTest.openCallCountByLastCall":437,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":471,"org.easymock.tests.UsageThrowableTest.throwCheckedException":382,"org.easymock.tests.MockingTest.testStrictClassMocking":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":288,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests.ObjectMethodsTest.testHashCode":461,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":270,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":13,"org.easymock.samples.ExampleTest.addDocument":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.DelegateToTest.testStubDelegate":239,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":133,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":207,"org.easymock.tests.UsageVarargTest.varargLongAccepted":492,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":428,"org.easymock.tests.UsageExpectAndReturnTest.floatType":412,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":47,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":89,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":234,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageThrowableTest.noUpperLimit":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":139,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":48,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":172,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":411,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.samples.SupportTest.addDocument":300,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":287,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":60,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":233,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":387,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":422,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":414,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":372,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":445,"org.easymock.tests2.MockedExceptionTest.testRealException":290,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":500,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":344,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":51,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.UsageConstraintsTest.lessThan":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":229,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":339,"org.easymock.tests2.CaptureTest.testCaptureRightOne":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":64,"org.easymock.tests2.UsageConstraintsTest.testOr":145,"org.easymock.tests.UsageRangeTest.combination":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":436,"org.easymock.tests2.MockBuilderTest.testWithConstructor":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":61,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":491,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":117,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":316,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":334,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CaptureTest.testCaptureFromStub":178,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":390,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":424,"org.easymock.tests2.CaptureTest.testCapture":502,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":406,"org.easymock.tests2.UsageConstraintsTest.constraints":140,"org.easymock.samples.ExampleTest.addAndChangeDocument":309,"org.easymock.tests.UsageStrictMockTest.testVerify":136,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":299,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":185,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":416,"org.easymock.tests.LimitationsTest.abstractClass":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":186,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":215}}]
