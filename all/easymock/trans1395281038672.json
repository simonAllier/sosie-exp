[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[40],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[41,0,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[45,3,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,4,69,70,71,72,73,74,75,76,77,78,79,80,81,5,82,6,7,8,9,10,11,83,84,85,12,86,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,87,88,89,34,90,91,92,93,94,95,96,97,98,99,100,101,102,103,35,104,105,36,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,41,146,147,148,149,150,0,1,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,37,193,194,195,196,197,198,38,199,200,201,202,203,204,205,42,206,43,207,208,209,210,211,212,213,44,214,215,216,39,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[232,252,253,254,255,233,256,257,258,259,260,261,238,239,262,262,263,263,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[264,188],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[45,3,46,265,266,267,47,48,268,49,269,270,271,272,50,51,273,274,52,275,53,54,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,55,312,313,314,315,56,57,58,59,316,60,61,317,62,63,64,65,66,67,68,4,318,319,320,321,322,323,324,325,69,70,71,72,73,74,75,326,76,77,78,79,80,327,328,329,330,331,81,5,82,6,7,8,9,10,11,83,84,85,12,86,332,333,334,335,336,337,338,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,33,87,361,88,89,34,90,91,92,362,363,93,94,95,96,364,97,98,2,99,100,365,366,367,368,369,370,371,264,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,101,102,390,391,103,392,393,394,395,396,35,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,104,412,105,36,413,106,414,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,415,416,417,418,419,127,420,421,422,423,424,425,426,128,129,130,427,131,428,429,430,431,432,132,433,133,434,435,436,437,438,134,439,440,441,442,443,444,445,135,136,137,138,139,140,141,142,143,144,145,41,146,446,147,148,149,150,0,1,447,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,448,175,176,177,178,179,180,181,182,183,449,184,185,186,450,451,452,453,454,455,456,457,458,187,459,188,189,460,461,462,463,464,465,466,190,467,468,191,469,192,37,193,194,195,196,197,198,38,470,199,200,201,202,203,471,472,204,205,473,474,475,476,477,478,42,206,43,207,208,209,210,211,212,213,44,479,214,215,216,39,217,480,218,219,220,221,481,482,483,222,484,485,223,486,487,488,489,490,491,492,493,494,224,495,496,497,498,499,225,500,501,226,227,228,229,230,231,502,503,232,252,253,254,255,233,256,257,258,250,251,234,235,259,260,504,261,505,506,236,237,238,239,240,262,263,241,242,243,244,245,246,247,507,248,249],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[294],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[3,46,56,508,70,73,361,88,90,91,414,138,195,199,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[509,510,511,512,513,514,515,516,132,433,517,141,518,461,519,520],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[510,511,512,513,516,132,433,141,518,461],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[146,150],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[105,128,130,131,243],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[45,3,46,267,47,48,49,272,50,51,273,274,52,275,53,54,297,303,55,312,313,314,315,56,57,58,59,60,61,317,62,63,64,65,66,67,68,4,318,320,325,69,70,71,72,73,74,75,326,76,77,78,79,80,327,328,329,330,331,81,5,82,6,7,8,9,10,11,83,84,85,12,86,333,334,335,336,337,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,87,361,88,89,34,90,91,92,362,93,94,95,96,97,98,99,100,365,101,102,103,393,394,395,396,35,397,398,399,400,410,104,412,105,36,413,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,426,128,129,130,427,131,132,133,134,445,135,136,137,138,139,140,141,142,143,144,145,41,146,147,148,149,150,0,1,447,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,448,175,176,177,178,179,180,181,182,183,184,185,186,451,456,187,188,189,463,465,466,190,467,191,192,37,193,194,195,196,197,198,38,470,199,200,201,202,203,471,472,204,205,473,475,476,477,478,42,206,43,207,208,209,210,211,212,213,44,479,214,215,216,39,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,502,232,254,255,233,256,234,235,236,237,238,239,240,262,262,263,263,241,242,243,244,245,246,247,248,249],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[447,151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[3,46,47,48,49,276,277,278,279,280,305,57,58,59,60,61,62,63,64,65,66,67,68,320,321,322,69,70,72,75,326,81,5,82,6,7,8,9,10,11,12,337,15,16,18,23,28,361,88,90,91,92,363,95,96,364,97,98,99,100,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,103,401,402,403,404,405,406,407,408,104,105,36,106,414,109,110,112,117,122,127,128,130,132,134,135,137,140,141,142,143,146,0,1,151,152,154,157,160,161,162,163,164,168,169,170,171,172,173,174,448,175,176,177,178,179,180,181,182,183,184,185,186,451,452,453,454,455,187,459,188,189,462,464,465,466,190,191,37,193,195,196,197,470,199,200,202,203,204,42,206,43,207,209,210,211,212,213,44,215,220,221,222,223,224,225,226,227,228,229,230,231,502,232,254,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,507,249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[521],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[306,310],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[47,48,49,77,103,129,132,180,181,182,183,184,185,186,456,187,188,189,463,220,222,223,224,225,226,228,229,231,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[522],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[309,523,522],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[432,480,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[524,141,142,143],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[516],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:153","failures":[312,85,393,394,395,396,35,397,465,466,190,467],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[525,526,527,528,529],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[468,191],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[428,431],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[45,3,46,47,48,49,52,275,53,54,276,277,278,279,280,305,55,312,56,57,58,59,60,61,317,62,63,64,65,66,67,68,4,320,321,322,325,69,70,71,72,73,74,75,326,76,77,78,79,80,327,328,329,330,331,81,5,82,6,7,8,9,10,11,83,84,85,12,86,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,87,361,88,89,34,90,91,92,362,363,93,94,95,96,364,97,98,99,100,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,101,102,103,393,394,395,396,35,397,401,402,403,404,405,406,407,408,104,105,36,106,414,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,445,135,136,137,138,139,140,141,142,143,144,145,41,146,147,148,149,150,0,1,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,448,175,176,177,178,179,180,181,182,183,184,185,186,451,452,453,454,455,456,187,459,188,189,462,463,464,465,466,190,467,191,192,37,193,194,195,196,197,198,38,470,199,200,201,202,203,204,205,473,475,476,477,478,42,206,43,207,208,209,210,211,212,213,44,479,214,215,216,39,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,502,232,254,255,233,256,234,235,236,237,238,239,240,262,263,241,242,243,244,245,246,247,507,248,249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[529,144,41,158,164],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[129],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[45,3,46,71,74,75,338,87,106,136,139,140,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[45,3,46,70,71,73,74,87,88,90,91,530,136,138,139,194,195,199,200,475,476,477,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":146,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.UsageTest.argumentsOrdered":200,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":291,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":240,"org.easymock.tests2.DelegateToTest.testReturnException":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":394,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests.MockClassControlTest.testToString":403,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":474,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":223,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":530,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":83,"org.easymock.tests2.UsageTest.wrongArguments":195,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":444,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":264,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":229,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":176,"org.easymock.tests2.CaptureTest.testPrimitive":207,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.moreThanOneArgument":87,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":329,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":504,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":424,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":80,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":344,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests2.DependencyTest.testClassMocking":250,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":454,"org.easymock.tests2.CaptureTest.testAnd":42,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":369,"org.easymock.tests2.UsageTest.strictResetToDefault":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":53,"org.easymock.tests2.DelegateToTest.testDelegate":131,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":274,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests.LimitationsTest.mockFinalMethod":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":280,"org.easymock.tests2.DependencyTest.testClassMockingSupport":251,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":336,"org.easymock.tests2.CaptureTest.testCapture1_2446744":208,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":452,"org.easymock.tests.UsageThrowableTest.throwError":5,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":501,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":347,"org.easymock.samples.PartialClassMockTest.testGetArea":241,"org.easymock.tests.MockingTest.testInterfaceMocking":268,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests2.CompareToTest.testLessOrEqual":529,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":490,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":324,"org.easymock.tests2.ThreadingTest.testChangeDefault":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":441,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":118,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":67,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":523,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":213,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":316,"org.easymock.tests.MockClassControlTest.testEquals":407,"org.easymock.tests2.EasyMockSupportClassTest.testAll":222,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":453,"org.easymock.tests2.CaptureTest.testCaptureAll":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":278,"org.easymock.tests.MockNameTest.defaultName":332,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests.UsageVarargTest.allKinds":66,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":45,"org.easymock.samples.BasicClassMockTest.testPrintContent":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":10,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":445,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":516,"org.easymock.tests2.UsageConstraintsTest.greaterThan":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":256,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":348,"org.easymock.samples.ExampleTest.voteForRemoval":244,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":311,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":502,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":340,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":170,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":393,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":426,"org.easymock.tests2.CaptureTest.testCaptureFirst":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":114,"org.easymock.tests2.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.CaptureTest.testCapture2_2446744":214,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":220,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":65,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":110,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":163,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.UsageCallCountTest.tooManyCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":181,"org.easymock.tests.MockingTest.testNiceClassMocking":271,"org.easymock.tests.MockingTest.testClassMocking":266,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":147,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":4,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":511,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":61,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":322,"org.easymock.tests.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":433,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":123,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":57,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":416,"org.easymock.tests.MockClassControlTest.testHashCode":406,"org.easymock.tests2.EasyMockSupportTest.testVerify":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":492,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":399,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":451,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":468,"org.easymock.tests.UsageVarargTest.varargCharAccepted":60,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests.DefaultClassInstantiatorTest.object":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":398,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":320,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":415,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":405,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":255,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":124,"org.easymock.tests.ReplayStateInvalidCallsTest.times":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":333,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":353,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":225,"org.easymock.tests2.UsageTest.resumeIfFailure":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":396,"org.easymock.tests2.StubTest.stubWithReturnValue":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":518,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":116,"org.easymock.tests2.SerializationTest.testAllMockedMethod":143,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":520,"org.easymock.samples.SupportTest.voteForRemovals":237,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":524,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":303,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":471,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":411,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":350,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":102,"org.easymock.tests.UsageStrictMockTest.range":73,"org.easymock.samples.ConstructorCalledMockTest.testTax":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":505,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":448,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":481,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":342,"org.easymock.tests2.CaptureTest.testCaptureNone":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":315,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":429,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":64,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":495,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":96,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":238,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":323,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageConstraintsTest.any":151,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":395,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":309,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":137,"org.easymock.tests2.SerializationTest.testClass":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":126,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":365,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":358,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests2.NameTest.nameForMocksControl":478,"org.easymock.tests2.MockedExceptionTest.testMockedException":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":485,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":231,"org.easymock.tests2.CompareToTest.testCompareEqual":527,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":509,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.CaptureTest.testCaptureLast":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":186,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":357,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests.MockingTest.testTwoMocks":267,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":354,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":199,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":166,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":432,"org.easymock.samples.ExampleTest.removeNonExistingDocument":507,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":440,"org.easymock.tests.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":417,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":431,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":307,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":219,"org.easymock.tests2.MockBuilderTest.testCreateMockString":464,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":486,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":517,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":224,"org.easymock.samples.ExampleTest.voteAgainstRemoval":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":233,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":465,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":11,"org.easymock.tests2.UsageTest.defaultResetToNice":470,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.UsageVarargTest.differentLength":317,"org.easymock.tests2.CallbackTest.callback":133,"org.easymock.tests2.UsageConstraintsTest.equals":446,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":252,"org.easymock.tests.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":521,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":85,"org.easymock.tests.UsageCallCountTest.tooFewCalls":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":430,"org.easymock.tests.UsageThrowableTest.throwCheckedException":8,"org.easymock.tests.MockingTest.testStrictClassMocking":265,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":439,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":182,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":184,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":473,"org.easymock.tests2.CompareToTest.testGreateOrEqual":528,"org.easymock.tests.ObjectMethodsTest.testHashCode":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.NameTest.nameForNiceMock":477,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":356,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":351,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":512,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":500,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests2.AnswerTest.stubAnswer":205,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":71,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":460,"org.easymock.tests.UsageVarargTest.varargLongAccepted":63,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":125,"org.easymock.tests.UsageExpectAndReturnTest.floatType":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":132,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":423,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests.UsageThrowableTest.noUpperLimit":82,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":259,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":209,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":522,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testSame":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":108,"org.easymock.samples.SupportTest.addDocument":236,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":449,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":341,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":487,"org.easymock.tests.GenericTest.testPackageScope":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":422,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":269,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":339,"org.easymock.tests2.NameTest.nameForMock":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":119,"org.easymock.tests2.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":54,"org.easymock.tests2.MockedExceptionTest.testRealException":467,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":519,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":294,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":84,"org.easymock.tests2.NameTest.nameForStrictMock":476,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":458,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":261,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":160,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":456,"org.easymock.tests2.UsageStrictMockTest.range":138,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":345,"org.easymock.tests2.UsageConstraintsTest.lessThan":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":513,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":491,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":428,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageTest.wrongArguments":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":488,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":62,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":364,"org.easymock.tests2.UsageConstraintsTest.cmpTo":152,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":359,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":472,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":349,"org.easymock.tests2.CompareToTest.testLessThan":525,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.CaptureTest.testCaptureFromStub":479,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":457,"org.easymock.tests.UsageTest.unexpectedCallWithArray":361,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":355,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":121,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests2.ConstraintsToStringTest.containsToString":40,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":249,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests2.CompareToTest.testGreateThan":526,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":277,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":78,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":113,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":174,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":58}}]
