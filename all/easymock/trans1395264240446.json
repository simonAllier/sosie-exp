[{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[40],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,14,46,47,48,49,50,16,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[4,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,5,6,92,93,7,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,8,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,41,129,42,130,131,132,133,134,135,136,137,138,139,140,141,142,43,44,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,9,10,11,12,13,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,45,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,14,15,248,249,250,251,252,253,254,255,256,257,258,259,260,261,46,262,47,263,264,265,266,267,268,269,270,271,272,273,274,275,48,49,276,277,278,279,280,281,282,283,50,284,285,286,287,288,289,290,291,292,16,17,18,19,20,293,294,295,296,297,298,299,300,21,22,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,23,326,327,328,329,330,24,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,40,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,25,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,51,491,492,26,27,493,494,495,28,29,30,31,496,497,498,499,500,32,501,33,34,502,35,36,503,504,505,506,507,37,38,39,508,509,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[171,511],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[4,52,53,54,55,56,57,58,59,60,61,62,63,64,87,88,89,90,91,5,6,92,93,7,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,8,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,41,129,42,130,131,132,133,134,135,136,137,138,139,140,141,142,43,44,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,9,10,11,12,13,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,45,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,14,15,248,249,250,251,252,253,254,255,256,257,258,259,260,261,46,262,47,263,264,265,266,267,268,269,270,271,272,273,274,275,48,49,276,277,278,279,280,281,282,283,50,284,285,286,287,288,289,290,291,292,16,17,18,19,20,293,294,295,296,297,298,299,300,21,22,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,23,326,327,328,329,330,24,331,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,40,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,25,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,51,491,492,26,27,493,494,495,28,29,30,31,496,497,498,499,500,32,501,33,34,502,35,36,503,504,505,506,507,37,38,39,508,509,510,511],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[286,287,288,289,291,292],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[508,509,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.Capture:82","failures":[451,453,454,455,456,457,458,460,512,461,25,463],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[451,453,454,455,456,457,458,460,512,461,25,463],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[87],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[350],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[4,56,58,59,60,61,63,64,88,89,5,6,92,93,7,94,109,111,112,113,8,114,115,116,117,120,121,127,128,41,129,42,130,131,132,133,134,135,136,137,138,139,140,141,142,43,44,149,150,152,155,156,157,185,9,10,11,12,13,196,198,199,200,202,203,204,205,206,207,208,209,223,224,226,233,14,15,258,259,260,261,46,262,47,263,264,265,266,267,268,269,270,271,272,273,274,275,48,49,276,277,278,279,280,281,282,293,294,295,296,297,298,300,301,302,303,304,305,306,307,313,322,323,324,325,23,326,327,328,329,330,24,337,338,339,340,342,343,344,346,347,348,349,350,351,355,356,357,358,361,363,365,367,368,371,372,373,374,376,379,381,382,386,391,394,404,410,413,414,415,416,417,418,421,425,426,427,430,433,434,435,436,438,446,447,450,451,452,453,454,456,457,458,459,460,461,463,464,465,466,467,468,469,470,472,473,474,475,476,483,26,27,493,494,28,29,30,31,496,497,499,500,32,501,33,34,502,35,36,503,504,505,507,37,38,39,508,509,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[94,113,115,513,151,152,155,156,281,282,327,349,355,356],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[309,310,312,315,316,317,318,319,479,480,482,485,486,487,488,489],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[115,116,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[239],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[90,240,245,301,375,376,377,379,380,381,382,385,386,387,394,404,410,419,425,426,429,508],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[58,115,116,120,259,276,277,278,279,280,327,328,330,357,27,493,28,30,31,32,34,36,38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[8,121,157,281,282,23,346,358,430],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[8,116,117,145,150,196,47,266,267,269,272,280,281,282,23,328,329,348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[290,514,515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:317","failures":[54,55,183,184],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[8,116,117,145,150,196,47,266,267,269,272,280,281,282,23,328,329,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:60","failures":[339,344,345,369,516,517,518,519,520,521,522],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[94,113,115,513,151,152,155,156,197,281,282,327,349,355,356],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[147,211,219],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":494,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.UsageTest.argumentsOrdered":356,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":168,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":351,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":302,"org.easymock.tests2.DelegateToTest.testReturnException":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":230,"org.easymock.tests.MockingTest.testPartialClassMocking":223,"org.easymock.tests.MockClassControlTest.testToString":251,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":323,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":497,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.UsageTest.wrongArguments":349,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":284,"org.easymock.samples.ExampleTest.answerVsDelegate":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":245,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":473,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":256,"org.easymock.tests2.CaptureTest.testPrimitive":454,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":7,"org.easymock.tests.UsageTest.moreThanOneArgument":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":49,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":18,"org.easymock.tests.UsageTest.argumentsOrdered":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":235,"org.easymock.tests.UsageVarargTest.varargIntAccepted":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":333,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":13,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":70,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":483,"org.easymock.tests.ReplayStateInvalidUsageTest.times":103,"org.easymock.tests2.DependencyTest.testClassMocking":320,"org.easymock.tests2.AnswerTest.answer":430,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":492,"org.easymock.tests2.CaptureTest.testAnd":451,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":242,"org.easymock.tests2.UsageTest.strictResetToDefault":347,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":278,"org.easymock.tests2.DelegateToTest.testDelegate":450,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":239,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":273,"org.easymock.tests.LimitationsTest.mockFinalMethod":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":190,"org.easymock.tests2.DependencyTest.testClassMockingSupport":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":143,"org.easymock.tests2.CaptureTest.testCapture1_2446744":455,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":51,"org.easymock.tests.UsageThrowableTest.throwError":119,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":97,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":244,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":73,"org.easymock.samples.PartialClassMockTest.testGetArea":301,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":98,"org.easymock.tests.MockingTest.testInterfaceMocking":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":399,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.UsageTest.niceToStrict":350,"org.easymock.tests2.ThreadingTest.testChangeDefault":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":379,"org.easymock.tests2.MockBuilderTest.testCreateMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":267,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":469,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":283,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":33,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":514,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":501,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":460,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":391,"org.easymock.tests.MockClassControlTest.testEquals":255,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":89,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":491,"org.easymock.tests2.CaptureTest.testCaptureAll":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":188,"org.easymock.tests.MockNameTest.defaultName":248,"org.easymock.tests2.UsageConstraintsTest.testMatches":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":95,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":189,"org.easymock.samples.BasicClassMockTest.testPrintContent":305,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":125,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":315,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":427,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":74,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":292,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":428,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":419,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":185,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":346,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":466,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":45,"org.easymock.tests2.CaptureTest.testCaptureFirst":463,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":467,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":462,"org.easymock.tests2.UsageTest.moreThanOneArgument":348,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":176,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.GenericTest.testBridgedEquals":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":63,"org.easymock.tests.UsageExpectAndReturnTest.longType":129,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":48,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":506,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":16,"org.easymock.tests.UsageCallCountTest.tooManyCalls":64,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":124,"org.easymock.tests.MockingTest.testNiceClassMocking":229,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":338,"org.easymock.tests.MockingTest.testClassMocking":221,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":57,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":361,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.MockTypeTest.fromEasyMockClass":243,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":438,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":111,"org.easymock.tests.UsageExpectAndReturnTest.object":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":472,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":203,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":216,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":163,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":146,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":141,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":193,"org.easymock.tests.MockClassControlTest.testHashCode":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":309,"org.easymock.tests2.EasyMockSupportTest.testVerify":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":401,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":490,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":477,"org.easymock.tests.UsageVarargTest.varargCharAccepted":202,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":181,"org.easymock.tests2.UsageTest.openCallCountByLastCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":475,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":0,"org.easymock.tests.DefaultClassInstantiatorTest.object":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":53,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":214,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":402,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":425,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":72,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":142,"org.easymock.tests.ReplayStateInvalidCallsTest.times":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":410,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":252,"org.easymock.tests2.UsageTest.resumeIfFailure":357,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":240,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":232,"org.easymock.tests2.StubTest.stubWithReturnValue":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":518,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":134,"org.easymock.tests2.SerializationTest.testAllMockedMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":174,"org.easymock.samples.SupportTest.voteForRemovals":307,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":270,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":180,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":431,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":148,"org.easymock.tests.UsageExpectAndThrowTest.object":268,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":504,"org.easymock.tests2.DelegateToTest.testWrongClass":448,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":76,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":335,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":471,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":269,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":50,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":68,"org.easymock.tests2.CaptureTest.testCaptureNone":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":212,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":440,"org.easymock.tests.UsageUnorderedTest.message":94,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":405,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":61,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":304,"org.easymock.tests2.CaptureTest.testCapture_2617107":453,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":93,"org.easymock.tests2.UsageConstraintsTest.any":499,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":102,"org.easymock.tests2.StubTest.stub":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":231,"org.easymock.tests.UsageExpectAndThrowTest.longType":262,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":290,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":101,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.SerializationTest.testClass":508,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":313,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":44,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":480,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":84,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":441,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests2.MockedExceptionTest.testMockedException":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":413,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":382,"org.easymock.tests.MockingTest.testNicePartialClassMocking":224,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":478,"org.easymock.tests2.CaptureTest.testCaptureLast":458,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":144,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":496,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":83,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":344,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":505,"org.easymock.tests.MockingTest.testTwoMocks":222,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":80,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":266,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":38,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":444,"org.easymock.samples.ExampleTest.removeNonExistingDocument":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.UsageStrictMockTest.differentMethods":116,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":310,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":443,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":288,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":40,"org.easymock.tests2.MockBuilderTest.testCreateMockString":387,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":395,"org.easymock.tests.UsageExpectAndThrowTest.floatType":46,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":433,"org.easymock.tests.UsageVerifyTest.twoThrows":281,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":404,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":426,"org.easymock.tests.LimitationsTest.privateConstructor":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":522,"org.easymock.tests2.UsageConstraintsTest.testNotNull":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":126,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":359,"org.easymock.tests2.UsageTest.defaultResetToNice":354,"org.easymock.samples.ExampleTest.voteAgainstRemovals":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":479,"org.easymock.tests.UsageVarargTest.differentLength":204,"org.easymock.tests2.CallbackTest.callback":511,"org.easymock.tests2.UsageConstraintsTest.equals":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":422,"org.easymock.tests.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":92,"org.easymock.tests.UsageCallCountTest.tooFewCalls":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":285,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":442,"org.easymock.tests.UsageThrowableTest.throwCheckedException":123,"org.easymock.tests.MockingTest.testStrictClassMocking":220,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":52,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":343,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":342,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":435,"org.easymock.tests.ObjectMethodsTest.testHashCode":215,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":82,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":367,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":77,"org.easymock.tests2.DependencyTest.testInterfaceMocking":322,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.DelegateToTest.testStubDelegate":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.AnswerTest.stubAnswer":434,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":383,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":43,"org.easymock.tests.UsageExpectAndReturnTest.floatType":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":368,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests.UsageThrowableTest.noUpperLimit":120,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":317,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":331,"org.easymock.tests2.SerializationTest.test":509,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":456,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":515,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":128,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.samples.SupportTest.addDocument":306,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":341,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":67,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":396,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":162,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":316,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":227,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":65,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":520,"org.easymock.tests2.UsageStrictMockTest.differentMethods":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":423,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":272,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":279,"org.easymock.tests2.MockedExceptionTest.testRealException":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":171,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":378,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":334,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":503,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":289,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":376,"org.easymock.tests2.UsageStrictMockTest.range":327,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":71,"org.easymock.tests2.UsageConstraintsTest.lessThan":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":312,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":166,"org.easymock.tests2.CaptureTest.testCaptureRightOne":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":400,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":439,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":414,"org.easymock.tests.UsageTest.wrongArguments":152,"org.easymock.tests2.MockBuilderTest.testWithConstructor":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":397,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":138,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":62,"org.easymock.tests2.UsageConstraintsTest.cmpTo":500,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":85,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":432,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":353,"org.easymock.tests2.CaptureTest.testCaptureFromStub":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":96,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":377,"org.easymock.tests.UsageTest.unexpectedCallWithArray":151,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":81,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":60,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":519,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":139,"org.easymock.tests2.CaptureTest.testCapture":512,"org.easymock.tests2.UsageConstraintsTest.constraints":493,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.samples.ExampleTest.addAndChangeDocument":300,"org.easymock.tests.UsageStrictMockTest.testVerify":118,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":303,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":187,"org.easymock.tests2.CompareToTest.testGreateThan":3,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":131,"org.easymock.tests.LimitationsTest.abstractClass":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":12,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":470,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":199}}]
