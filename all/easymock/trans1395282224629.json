[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[39,148,179],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[14,15,16,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[490,491,289,492,493,467],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[316,320],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[319,494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[7,14,15,16,17,18,19,20,21,24,25,26,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,83,86,96,102,106,107,108,109,110,111,112,114,118,119,120,122,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,155,156,157,158,161,162,163,164,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,198,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,235,236,236,237,238,239,243,244,245,246,247,248,249,250,251,253,254,255,256,257,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,324,325,326,327,328,329,330,331,332,333,334,335,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,363,364,365,366,367,368,369,370,371,372,401,402,403,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,425,426,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,450,451,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,477,478,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[130,132,140,163,164,167,169,170,172,182,187],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[7,8,15,17,18,19,20,21,22,23,24,25,26,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,106,107,108,109,110,111,497,498,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,198,199,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,315,323,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,389,395,398,400,401,402,403,404,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,425,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,484,485,486,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[2,3,4,10,13,193,194,195,201,204,225,234],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[205,207,383],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[37,43,44,220,289,290,293,294,313,438,439,451,499,467,470],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[500,130,131,132,133,134,135,136,137,138,139,501,140,141,142,143,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[36,37,43,44,503,490,496,504,505,506,507,508,491,509,510,179,218,220,221,288,289,290,293,294,313,360,361,437,438,439,446,449,450,451,492,511,493,512,513,514,499,467,468,470,471],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[500,130,132,133,134,135,136,137,139,501,140,141,143],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[224,226,228,229,231,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[22,25,26],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:189","failures":[7,17,18,19,20,34,37,38,39,42,43,44,46,56,58,59,61,62,112,119,120,122,126,128,150,155,163,198,216,219,220,221,248,249,250,251,287,289,290,293,294,295,313,438,439,456,457,458,459,460,465,467,469,470,471],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[14,16,47,51,68,69,70,71,74,75,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,112,515,114,115,117,118,119,120,122,124,125,126,516,128,517,144,145,147,148,149,150,152,153,154,155,156,157,158,159,160,189,190,191,235,235,236,236,237,238,239,258,263,286,315,316,317,318,319,320,322,336,337,338,339,405,424,425,426,427,428,429,430,431,432,433,434,435,436,474,475,476,477,478,480,483],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[36,218,220,221,288,313,518,519,520,521,437,438,439,468,470,471],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[495],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[70,76,145,155,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[490,491,289,492,493,467],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[424],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[179],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[7,14,15,16,21,24,25,26,29,30,31,33,34,35,36,38,39,40,41,46,54,56,57,58,59,62,63,64,65,66,67,68,69,70,71,73,74,75,77,86,96,102,110,111,118,120,122,130,131,132,133,135,136,137,138,139,140,143,144,146,147,149,161,162,163,164,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,1,191,198,206,207,208,210,211,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,237,238,239,243,246,247,253,254,255,256,257,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,292,295,301,302,303,304,306,307,308,309,310,311,312,313,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,363,364,365,366,367,368,369,370,371,372,412,413,414,416,417,419,420,421,422,423,426,437,438,439,461,463,464,466,468,469,470,471,472,477,478,480],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":164,"org.easymock.tests2.UsageTest.argumentsOrdered":44,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":383,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":39,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":225,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":407,"org.easymock.tests.MockingTest.testPartialClassMocking":477,"org.easymock.tests.MockClassControlTest.testToString":431,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":105,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":340,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":518,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":30,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests2.UsageTest.wrongArguments":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":253,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":263,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":167,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":63,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.UsageTest.moreThanOneArgument":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":359,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":442,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageVarargTest.varargIntAccepted":414,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":498,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":203,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":312,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests.ReplayStateInvalidUsageTest.times":332,"org.easymock.tests2.DependencyTest.testClassMocking":27,"org.easymock.tests2.AnswerTest.answer":21,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":20,"org.easymock.tests2.CaptureTest.testAnd":130,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":260,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":58,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":488,"org.easymock.tests2.DelegateToTest.testDelegate":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":355,"org.easymock.tests.LimitationsTest.mockFinalMethod":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":460,"org.easymock.tests2.DependencyTest.testClassMockingSupport":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":360,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":18,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":326,"org.easymock.tests.UsageThrowableTest.throwError":363,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":262,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":455,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":104,"org.easymock.samples.PartialClassMockTest.testGetArea":237,"org.easymock.tests.MockingTest.testInterfaceMocking":479,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":241,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests2.UsageTest.niceToStrict":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":349,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":454,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":177,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":494,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":176,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":139,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":415,"org.easymock.tests.MockClassControlTest.testEquals":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":426,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":357,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":458,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":19,"org.easymock.tests.MockNameTest.defaultName":323,"org.easymock.tests2.UsageConstraintsTest.testMatches":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":443,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":324,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests.UsageVarargTest.allKinds":423,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":459,"org.easymock.samples.BasicClassMockTest.testPrintContent":239,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":369,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":200,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":209,"org.easymock.tests2.UsageConstraintsTest.greaterThan":180,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":462,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":158,"org.easymock.samples.ExampleTest.voteForRemoval":228,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":159,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":56,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":143,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":57,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":46,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":273,"org.easymock.tests2.CaptureTest.testCapture2_2446744":142,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":391,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":422,"org.easymock.tests.GenericTest.testBridgedEquals":428,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":306,"org.easymock.tests.UsageExpectAndReturnTest.longType":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":456,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":54,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":516,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":358,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":185,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":440,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":511,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":368,"org.easymock.tests.MockingTest.testNiceClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests.MockingTest.testClassMocking":475,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":515,"org.easymock.tests2.UsageConstraintsTest.testContains":175,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":300,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":166,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":247,"org.easymock.tests.MockTypeTest.fromEasyMockClass":261,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageExpectAndReturnTest.object":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":62,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":417,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":397,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":514,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":78,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":447,"org.easymock.tests.MockClassControlTest.testHashCode":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":194,"org.easymock.tests2.EasyMockSupportTest.testVerify":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":93,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":453,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":17,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":129,"org.easymock.tests.UsageVarargTest.varargCharAccepted":416,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":497,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":314,"org.easymock.tests2.CaptureTest.testCaptureMultiple":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":65,"org.easymock.tests.DefaultClassInstantiatorTest.object":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":452,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":193,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":346,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":506,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":102,"org.easymock.tests2.UsageTest.resumeIfFailure":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":409,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":389,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":224,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":352,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":395,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":22,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":399,"org.easymock.tests.UsageExpectAndThrowTest.object":350,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":183,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":371,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":372,"org.easymock.tests.UsageStrictMockTest.range":470,"org.easymock.samples.ConstructorCalledMockTest.testTax":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":52,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":351,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":80,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":492,"org.easymock.tests2.CaptureTest.testCaptureNone":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":242,"org.easymock.tests.UsageUnorderedTest.message":313,"org.easymock.tests.UsageVerifyTest.twoReturns":439,"org.easymock.tests.UsageVarargTest.varargByteAccepted":421,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":97,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":304,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":238,"org.easymock.tests2.CaptureTest.testCapture_2617107":132,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":510,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":256,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndThrowTest.longType":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":319,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":330,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.LimitationsTest.mockNativeMethod":338,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests2.NameTest.nameForMocksControl":109,"org.easymock.tests2.MockedExceptionTest.testMockedException":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":85,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":480,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":344,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":122,"org.easymock.tests.MockingTest.testNicePartialClassMocking":478,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.CaptureTest.testCaptureLast":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":361,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":75,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":184,"org.easymock.tests.MockingTest.testTwoMocks":476,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":348,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":188,"org.easymock.samples.ExampleTest.removeNonExistingDocument":232,"org.easymock.tests.UsageStrictMockTest.differentMethods":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":195,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":317,"org.easymock.tests2.ConstraintsToStringTest.andToString":508,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":87,"org.easymock.tests.UsageExpectAndThrowTest.floatType":342,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":24,"org.easymock.tests.UsageVerifyTest.twoThrows":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":79,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":157,"org.easymock.tests.LimitationsTest.privateConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testNotNull":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":370,"org.easymock.tests2.UsageTest.defaultResetToNice":42,"org.easymock.samples.ExampleTest.voteAgainstRemovals":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":281,"org.easymock.tests.UsageVarargTest.differentLength":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests2.CallbackTest.callback":67,"org.easymock.tests2.UsageConstraintsTest.equals":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":153,"org.easymock.tests.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":493,"org.easymock.tests.MockingTest.testStrictClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":70,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":73,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":26,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.NameTest.nameForNiceMock":108,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":29,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":103,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.AnswerTest.stubAnswer":25,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":468,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":123,"org.easymock.tests.UsageVarargTest.varargLongAccepted":420,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":382,"org.easymock.tests.UsageExpectAndReturnTest.floatType":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.tests2.ConstraintsToStringTest.orToString":503,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":202,"org.easymock.tests.UsageThrowableTest.noUpperLimit":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":162,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":135,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":316,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":267,"org.easymock.samples.SupportTest.addDocument":223,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":72,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":88,"org.easymock.tests.GenericTest.testPackageScope":425,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":201,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":278,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":221,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":354,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":464,"org.easymock.tests2.MockedExceptionTest.testRealException":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":53,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":335,"org.easymock.tests2.NameTest.nameForStrictMock":107,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":117,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":51,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":519,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":182,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":318,"org.easymock.tests.ErrorMessageTest.testGetters":520,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":114,"org.easymock.tests2.UsageStrictMockTest.range":220,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":381,"org.easymock.tests2.CaptureTest.testCaptureRightOne":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":92,"org.easymock.tests2.UsageConstraintsTest.testOr":169,"org.easymock.tests.UsageRangeTest.combination":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":290,"org.easymock.tests2.MockBuilderTest.testWithConstructor":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":89,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargShortAccepted":419,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":320,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":305,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":23,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":376,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":325,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":115,"org.easymock.tests.UsageTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":467,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":280,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":469,"org.easymock.tests2.UsageConstraintsTest.constraints":163,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests2.ConstraintsToStringTest.notToString":496,"org.easymock.tests.UsageStrictMockTest.testVerify":473,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":234,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":457,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":136,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":517,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":310,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.LimitationsTest.abstractClass":336,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":311,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":521,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":60}}]
