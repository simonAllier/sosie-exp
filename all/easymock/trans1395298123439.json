[{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[7],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[14,15,16],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[17,18,19,20,21],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[8,24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[29],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[30],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[31,32,33,34,35,36,37,38],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[56,57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:54","sourceCode":"return new org.easymock.internal.Result(new ThrowingAnswer() , true)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[29],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[31,32,24,25,60,61,62,63,64,65,66,67,68,69,70,71,72,73,33,34,74,35,75,76,77,78,79,36,80,81,82,39,83,40,41,84,85,18,86,87,88,89,90,91,92,56,57,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,58,30,119,120,121,122,123,124,125,126,127,21,128,42,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,7,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,3,47,188,48,49,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,50,254,255,256,257,258,259,260,51,261,262,263,264,265,266,37,267,268,269,270,271,272,273,52,53,54,274,275,276,277,278,279,280,38,281,282,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[286,287,288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[60,62,70,87,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[291,97,104,109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[292],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[39,40,41,113,115,3,47,48,49,190],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[8,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,24,25,26],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[8,17,293,294,9,295,296,297,298,299,290,300,301],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[302,303,304,305,306,31,59,32,307,308,309,310,8,24,25,291,60,61,62,63,64,65,66,67,68,69,70,71,72,73,33,311,312,34,74,35,313,314,315,316,317,75,318,319,320,321,322,323,76,77,78,79,36,324,325,326,327,328,80,329,330,331,332,333,334,81,82,39,83,40,41,84,335,336,337,85,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,17,293,359,360,361,362,363,364,365,366,18,86,87,88,367,89,90,91,92,56,57,368,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,286,369,116,370,371,372,373,0,117,374,287,118,58,30,119,120,121,375,376,122,377,123,378,379,380,124,125,381,382,126,127,288,383,384,385,386,387,388,289,389,294,390,391,9,19,392,393,20,21,128,42,129,130,131,132,133,394,134,135,136,137,138,139,140,141,142,143,144,395,145,146,147,148,149,396,150,7,151,397,152,398,399,400,401,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,402,403,404,405,174,175,406,407,176,177,178,408,179,180,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,14,15,426,427,22,16,428,429,181,182,183,184,185,430,431,432,433,186,187,3,47,188,48,49,189,190,191,192,193,194,195,196,197,198,434,435,436,437,438,439,199,200,29,201,202,440,203,204,205,206,207,208,441,442,443,444,445,446,447,448,449,450,451,452,453,209,210,211,212,213,214,454,455,456,457,458,459,460,461,462,463,464,465,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,466,240,241,242,243,244,245,246,247,467,468,248,249,250,251,469,252,253,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,50,254,255,256,257,258,494,495,259,496,260,51,6,261,262,263,264,265,266,37,497,267,268,498,499,500,269,270,271,501,502,503,504,505,272,506,507,273,508,509,52,53,54,274,275,276,277,278,510,279,511,512,280,38,281,282,283,284,513,285],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":88,"org.easymock.tests2.UsageTest.argumentsOrdered":135,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":480,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":278,"org.easymock.tests2.DelegateToTest.testReturnException":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":210,"org.easymock.tests.MockingTest.testPartialClassMocking":447,"org.easymock.tests.MockClassControlTest.testToString":436,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":302,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":340,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":297,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":400,"org.easymock.samples.ExampleTest.answerVsDelegate":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":459,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":200,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":172,"org.easymock.tests.UsageTest.moreThanOneArgument":51,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageVarargTest.varargIntAccepted":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":254,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":258,"org.easymock.tests.ReplayStateInvalidUsageTest.times":421,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests2.DependencyTest.testClassMocking":381,"org.easymock.tests2.AnswerTest.answer":33,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":310,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":456,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":407,"org.easymock.tests2.DelegateToTest.testDelegate":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":168,"org.easymock.tests.LimitationsTest.mockFinalMethod":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":505,"org.easymock.tests2.DependencyTest.testClassMockingSupport":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":441,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":308,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":415,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":458,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":409,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":358,"org.easymock.samples.PartialClassMockTest.testGetArea":510,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":255,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":403,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":509,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":154,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":11,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":388,"org.easymock.tests2.MockBuilderTest.testCreateMock":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":162,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":398,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests2.EasyMockSupportClassTest.testAll":85,"org.easymock.tests.MockClassControlTest.testEquals":199,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":503,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":309,"org.easymock.tests.MockNameTest.defaultName":462,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.samples.ExampleTest.voteForRemovals":284,"org.easymock.tests.UsageVarargTest.allKinds":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":504,"org.easymock.samples.BasicClassMockTest.testPrintContent":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":197,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":81,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":330,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":428,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":429,"org.easymock.samples.ExampleTest.voteForRemoval":281,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":209,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":396,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":119,"org.easymock.tests2.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.CaptureTest.testCapture2_2446744":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":488,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":392,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":246,"org.easymock.tests.GenericTest.testBridgedEquals":203,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":252,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":501,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":171,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":430,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests.UsageCallCountTest.tooManyCalls":253,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests.MockingTest.testNiceClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":375,"org.easymock.tests.MockingTest.testClassMocking":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":468,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":78,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":271,"org.easymock.tests.MockTypeTest.fromEasyMockClass":457,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":32,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":298,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":27,"org.easymock.tests.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":237,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests.MockClassControlTest.testHashCode":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":325,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":347,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":464,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":307,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":291,"org.easymock.tests.UsageVarargTest.varargCharAccepted":240,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":425,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":493,"org.easymock.tests2.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":12,"org.easymock.tests.DefaultClassInstantiatorTest.object":14,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":463,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":506,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":324,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":159,"org.easymock.tests.CapturesMatcherTest.test":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":431,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":356,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":212,"org.easymock.tests2.StubTest.stubWithReturnValue":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":486,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.samples.SupportTest.voteForRemovals":275,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":165,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":26,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":492,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":311,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":412,"org.easymock.tests.UsageExpectAndThrowTest.object":163,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":511,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":365,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":389,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":423,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":399,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":404,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests.UsageVarargTest.varargByteAccepted":245,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":351,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":251,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":508,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":276,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":490,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":184,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":420,"org.easymock.tests2.StubTest.stub":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndThrowTest.longType":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":211,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":22,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":419,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":83,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests.LimitationsTest.mockNativeMethod":259,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":440,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":315,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":84,"org.easymock.tests2.NameTest.nameForMocksControl":306,"org.easymock.tests2.MockedExceptionTest.testMockedException":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":339,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":263,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":390,"org.easymock.tests.MockingTest.testNicePartialClassMocking":448,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":442,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":379,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":446,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":161,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.samples.ExampleTest.removeNonExistingDocument":513,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":326,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":426,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":30,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests.UsageExpectAndThrowTest.floatType":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":341,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":34,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":359,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":350,"org.easymock.samples.ExampleTest.voteAgainstRemoval":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":402,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":0,"org.easymock.tests.LimitationsTest.privateConstructor":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":198,"org.easymock.tests2.UsageTest.defaultResetToNice":394,"org.easymock.samples.ExampleTest.voteAgainstRemovals":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":314,"org.easymock.tests2.CallbackTest.callback":36,"org.easymock.tests2.UsageConstraintsTest.equals":367,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":262,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":401,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests.MockingTest.testStrictClassMocking":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":216,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":378,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":318,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":35,"org.easymock.tests.ObjectMethodsTest.testHashCode":507,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":300,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.NameTest.nameForNiceMock":305,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":299,"org.easymock.samples.ExampleTest.addDocument":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":352,"org.easymock.tests2.DelegateToTest.testStubDelegate":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":391,"org.easymock.tests.UsageVarargTest.varargLongAccepted":244,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":512,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":332,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.SerializationTest.test":24,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":15,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":274,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":377,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":342,"org.easymock.tests.GenericTest.testPackageScope":201,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":331,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":393,"org.easymock.tests2.UsageStrictMockTest.differentMethods":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":167,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests2.MockedExceptionTest.testRealException":79,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":366,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":483,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":39,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests2.NameTest.nameForStrictMock":304,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":13,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":364,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":427,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":44,"org.easymock.tests.ErrorMessageTest.testGetters":45,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":384,"org.easymock.tests2.UsageStrictMockTest.range":40,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":290,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":346,"org.easymock.tests2.UsageConstraintsTest.testOr":92,"org.easymock.tests.UsageRangeTest.combination":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":261,"org.easymock.tests2.MockBuilderTest.testWithConstructor":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":343,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":16,"org.easymock.tests.UsageVarargTest.varargShortAccepted":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":469,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":414,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":385,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.UsageConstraintsTest.constraints":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests2.ConstraintsToStringTest.notToString":28,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":279,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":502,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":256,"org.easymock.tests.LimitationsTest.abstractClass":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":144,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":46,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":238}}]
