[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,53,54,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[55,56,57,58,59,60,61,62,63,64,65,66,0,67,1,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,2,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,3,127,128,4,129,130,131,132,133,134,135,136,137,5,138,139,140,141,142,6,143,144,7,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,8,9,183,10,11,12,13,184,14,185,186,15,16,17,18,187,188,189,190,191,192,193,19,20,21,22,194,195,23,24,196,197,198,199,200,201,202,25,203,27,28,204,205,29,30,31,206,32,207,208,33,34,209,36,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,38,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,39,332,333,334,335,336,337,338,40,41,42,339,340,341,342,343,344,345,346,347,348,349,43,44,45,350,46,351,352,353,354,355,356,357,358,359,47,360,361,362,363,48,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,49,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,50,51,481,52,482,53,54,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[60,62,63,64,65,66,0,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,95,101,102,2,103,104,110,111,117,119,120,121,122,123,3,4,5,6,7,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,8,9,183,10,11,12,13,14,15,16,17,18,188,189,190,191,192,193,19,20,21,22,195,23,24,197,198,201,202,25,27,28,29,30,31,32,33,34,36,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,38,266,267,268,269,270,271,272,273,274,275,276,277,278,279,282,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,40,42,339,340,341,342,343,344,345,346,43,44,45,46,354,355,356,357,358,359,47,362,363,48,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,403,406,429,435,437,438,439,440,441,442,49,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,52,53,53,54,54,483,484,485,486,488,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[338,339],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[104,117,119,120,121,122,123,16,18,491,492,493,494,495,496,497,210,212,213,214,215,219,220,222,224,228,229,232,314,317,318,319,320,321,345,346,398,437,446,447,449,452,453,454,456,459,460,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,498,499,500,501,502,503,124,125,126,3,127,128,4,129,130,131,132,133,134,135,136,137,5,138,139,140,141,142,6,143,144,504,505,208],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[56,57,58,59,119,122,123,212,317,320,321,404,406,407,447,476,477,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[506,507,145,21,24,196,203,204,206,508,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,62,63,64,65,66,0,67,1,69,70,71,72,74,75,76,77,78,79,82,83,86,87,88,94,101,102,2,103,104,110,118,119,122,123,3,4,5,6,7,154,155,156,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,8,183,10,11,12,14,15,17,189,190,193,19,20,21,22,195,23,24,197,198,201,202,25,29,30,31,32,211,212,214,215,218,221,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,38,274,275,276,277,278,279,305,306,309,315,317,320,321,322,324,325,39,40,41,340,341,342,343,344,347,44,45,46,354,355,356,357,358,359,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,399,400,401,402,403,404,405,406,407,408,409,438,439,440,441,442,49,447,460,463,464,465,466,467,468,469,476,477,478,479,480,50,51,481,52,482,53,54,483,484,485,486,487,488,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:222","failures":[345,346,456,459],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,67,1,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[0,498,499,500,501,502,503,124,125,126,3,127,128,4,129,130,131,132,133,134,135,136,137,5,138,139,140,141,142,6,143,144,504,505,208],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[236,238,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[164,170,182,510],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[198,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,308,323,326,327,328,329,330,358,458,464,477],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[145,206,511,512,513,514,515],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[121,122,270,271,319,320,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"position":"org.easymock.internal.RecordState:315","failures":[101,102,2,103,198,210,217,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,307,308,325,329,330,354,355,356,357,358,359,371,446,451,458,464],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[101,13,16,17,20,21,23,24,338,44,45,46,52,53,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[69,72,74,76,516,79,81,83],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[503,504,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[0,1,101,102,2,124,125,126,3,127,128,4,129,130,131,132,133,134,135,136,137,5,138,139,140,141,142,6,143,144,7,145,147,148,149,151,8,9,10,11,12,13,14,185,186,15,16,17,18,187,188,19,20,21,22,23,24,199,200,25,27,28,205,29,30,31,32,208,33,34,36,38,297,298,299,300,301,302,304,331,39,332,333,334,335,336,337,338,40,41,42,339,348,349,43,44,45,46,353,47,48,443,444,49,445,50,51,52,53,53,54,54],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[185,203,209,53,54],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[84,419],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,0,67,1,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,2,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,3,127,128,4,129,130,131,132,133,134,135,136,137,5,138,139,140,141,142,6,143,144,7,145,147,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,8,9,183,10,11,12,13,184,14,185,186,15,16,17,18,187,188,189,190,191,192,193,19,20,21,22,194,195,23,24,196,197,198,199,200,201,202,25,27,28,205,29,30,31,32,207,208,33,34,36,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,38,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,39,332,333,334,335,336,337,338,40,41,42,339,340,341,342,343,344,345,346,347,348,349,43,44,45,350,46,351,352,353,354,355,356,357,358,359,47,360,361,362,363,48,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,49,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,50,51,481,52,482,53,54,483,484,485,486,487,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[211,223],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[267,282,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":157,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":446,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":215,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":481,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":355,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests.MockClassControlTest.testToString":332,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":55,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":246,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":164,"org.easymock.tests2.UsageTest.wrongArguments":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":305,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":484,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":160,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":352,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":10,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":232,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":337,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageTest.moreThanOneArgument":447,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":265,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":342,"org.easymock.tests.UsageTest.argumentsOrdered":453,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":269,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":115,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":493,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.ReplayStateInvalidUsageTest.times":292,"org.easymock.tests2.DependencyTest.testClassMocking":199,"org.easymock.tests2.AnswerTest.answer":83,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":66,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":361,"org.easymock.tests2.UsageTest.strictResetToDefault":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":278,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":261,"org.easymock.tests.LimitationsTest.mockFinalMethod":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":345,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":64,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":286,"org.easymock.tests.UsageThrowableTest.throwError":323,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":363,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":116,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":344,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":144,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":287,"org.easymock.tests.MockingTest.testInterfaceMocking":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":267,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":133,"org.easymock.tests2.UsageTest.niceToStrict":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":255,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":404,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":500,"org.easymock.tests.UsageOverloadedMethodTest.overloading":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":137,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":458,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":383,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":169,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":3,"org.easymock.tests.MockClassControlTest.testEquals":336,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":65,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests.MockNameTest.defaultName":366,"org.easymock.tests2.UsageConstraintsTest.testMatches":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":343,"org.easymock.samples.ExampleTest.voteForRemovals":488,"org.easymock.tests.UsageVarargTest.allKinds":403,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":51,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":329,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":112,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":359,"org.easymock.tests2.UsageConstraintsTest.greaterThan":173,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.samples.ExampleTest.voteForRemoval":485,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":304,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":190,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":13,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":38,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":225,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":354,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":226,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":379,"org.easymock.tests2.CaptureTest.testCapture2_2446744":81,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":402,"org.easymock.tests.GenericTest.testBridgedEquals":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":501,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":411,"org.easymock.tests.UsageExpectAndReturnTest.longType":375,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":223,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":264,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":178,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":340,"org.easymock.tests.UsageCallCountTest.tooManyCalls":412,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":328,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests.MockingTest.testNiceClassMocking":353,"org.easymock.tests.MockingTest.testClassMocking":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":405,"org.easymock.tests2.UsageConstraintsTest.testContains":168,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":26,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":159,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":464,"org.easymock.tests.MockTypeTest.fromEasyMockClass":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests.UsageExpectAndReturnTest.object":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":397,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":473,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":502,"org.easymock.tests.UsageTest.exactCallCountByLastCall":454,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":270,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":145,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":388,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":106,"org.easymock.tests.MockClassControlTest.testHashCode":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":135,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":68,"org.easymock.tests.UsageVarargTest.varargCharAccepted":396,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":296,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":504,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":234,"org.easymock.tests.DefaultClassInstantiatorTest.object":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":16,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":6,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":333,"org.easymock.tests2.UsageTest.resumeIfFailure":221,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":357,"org.easymock.tests2.StubTest.stubWithReturnValue":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":429,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":495,"org.easymock.samples.SupportTest.voteForRemovals":480,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":258,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":435,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":84,"org.easymock.tests.UsageExpectAndThrowTest.object":256,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":275,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.tests.UsageStrictMockTest.range":319,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":152,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":19,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":257,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":268,"org.easymock.tests.UsageUnorderedTest.message":437,"org.easymock.tests.UsageVerifyTest.twoReturns":478,"org.easymock.tests.UsageVarargTest.varargByteAccepted":401,"org.easymock.tests2.ThreadingTest.testThreadSafe":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":138,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":409,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":474,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":50,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":497,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":308,"org.easymock.tests2.UsageConstraintsTest.any":166,"org.easymock.tests2.StubTest.stub":197,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndThrowTest.longType":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":301,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":290,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":391,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":91,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests2.NameTest.nameForMocksControl":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":128,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":451,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":250,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":8,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":12,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":346,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":43,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":254,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":181,"org.easymock.samples.ExampleTest.removeNonExistingDocument":489,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":96,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":288,"org.easymock.tests.UsageStrictMockTest.differentMethods":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":107,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":299,"org.easymock.tests2.ConstraintsToStringTest.andToString":494,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":191,"org.easymock.tests2.MockBuilderTest.testCreateMockString":36,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":129,"org.easymock.tests.UsageExpectAndThrowTest.floatType":248,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":126,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":86,"org.easymock.tests.UsageVerifyTest.twoThrows":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":146,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":17,"org.easymock.tests.LimitationsTest.privateConstructor":444,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":507,"org.easymock.tests2.UsageConstraintsTest.testNotNull":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":330,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.samples.ExampleTest.voteAgainstRemovals":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":387,"org.easymock.tests.UsageVarargTest.differentLength":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":90,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":185,"org.easymock.tests.UsageTest.openCallCountByLastCall":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":307,"org.easymock.tests.UsageCallCountTest.tooFewCalls":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests.UsageThrowableTest.throwCheckedException":327,"org.easymock.tests.MockingTest.testStrictClassMocking":348,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":23,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":195,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests2.CompareToTest.testGreateOrEqual":510,"org.easymock.tests.ObjectMethodsTest.testHashCode":472,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.NameTest.nameForNiceMock":58,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests2.DependencyTest.testInterfaceMocking":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests2.AnswerTest.stubAnswer":87,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":317,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":207,"org.easymock.tests.UsageVarargTest.varargLongAccepted":400,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":390,"org.easymock.tests.UsageExpectAndReturnTest.floatType":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.tests2.ConstraintsToStringTest.orToString":491,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":155,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":147,"org.easymock.tests2.SerializationTest.test":67,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":298,"org.easymock.tests2.UsageConstraintsTest.testSame":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":373,"org.easymock.samples.SupportTest.addDocument":479,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":194,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":130,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":113,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":351,"org.easymock.tests2.NameTest.nameForMock":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":384,"org.easymock.tests2.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":260,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":279,"org.easymock.tests2.MockedExceptionTest.testRealException":103,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":306,"org.easymock.tests2.NameTest.nameForStrictMock":57,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":505,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":151,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":121,"org.easymock.tests2.UsageConstraintsTest.lessThan":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.UsageConstraintsTest.testOr":162,"org.easymock.tests.UsageRangeTest.combination":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":9,"org.easymock.tests.UsageTest.wrongArguments":449,"org.easymock.tests2.MockBuilderTest.testWithConstructor":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":131,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":385,"org.easymock.tests.UsageVarargTest.varargShortAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":302,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":410,"org.easymock.tests2.UsageConstraintsTest.cmpTo":167,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":285,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests.UsageTest.unexpectedCallWithArray":448,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":408,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":508,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":386,"org.easymock.tests2.CaptureTest.testCapture":516,"org.easymock.tests2.UsageConstraintsTest.constraints":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.samples.ExampleTest.addAndChangeDocument":490,"org.easymock.tests2.ConstraintsToStringTest.notToString":492,"org.easymock.tests.UsageStrictMockTest.testVerify":322,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":482,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":440,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":37,"org.easymock.tests.LimitationsTest.abstractClass":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":441,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":229}}]
