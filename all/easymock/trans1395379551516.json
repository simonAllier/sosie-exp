[{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[19,20,3,21,22,23,24,25,26,27,28,29,30,31,32,33,34,17,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,11,12,65,66,67,18,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,65,107,108,67,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[140,141,11,142,143,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[4,5,144,97,13,14,145,109,146,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[147,148,149,150,151,152,153,154,155,155,156,156,82,157,83,158,159,160,161,162,163,164,165,166,167,168,169,19,170,20,171,172,3,173,4,5,174,175,176,177,178,84,85,86,179,180,87,181,182,88,183,184,89,21,22,23,24,185,25,26,27,28,29,30,31,32,33,34,17,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,186,187,188,189,190,191,62,192,6,193,7,194,8,195,196,63,197,198,9,199,200,10,201,202,203,204,205,206,207,208,64,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,96,81,239,240,241,242,144,97,243,244,245,246,247,98,99,100,101,90,91,92,248,249,93,250,251,94,252,253,95,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,102,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,11,12,327,13,14,328,15,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,103,104,105,106,65,107,349,350,351,352,353,354,355,145,108,356,66,67,357,358,2,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,109,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,110,446,16,447,146,111,448,449,450,451,452,453,454,455,456,457,458,459,460,461,18,68,69,70,71,72,462,463,464,73,74,75,76,77,78,79,465,466,467,468,469,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,80,132,470,133,134,135,136,137,138,471,472,473,474,475,476,477,478,479,480,481,139,482,483,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[3,4,5,11,12,13,14,15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[301],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[171,173,4,5,23,37,6,199,10,211,215,216,219,225,235,236,238,96,240,241,242,244,245,246,247,300,325,11,327,13,14,349,108,356,485,486,420,421,422,487,488,110,16,447,448,449,450,457,80],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[140,141,11,142,143],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[26,43,64,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests2.UsageTest.argumentsOrdered":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":369,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":242,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":83,"org.easymock.tests2.DelegateToTest.testReturnException":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":104,"org.easymock.tests.MockingTest.testPartialClassMocking":386,"org.easymock.tests.MockClassControlTest.testToString":437,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":289,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":112,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":73,"org.easymock.tests2.UsageTest.wrongArguments":240,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":304,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":407,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":7,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":77,"org.easymock.tests.UsageTest.moreThanOneArgument":446,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":131,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":313,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":471,"org.easymock.tests.UsageTest.argumentsOrdered":449,"org.easymock.tests.UsageVarargTest.varargIntAccepted":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":72,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests2.DependencyTest.testClassMocking":162,"org.easymock.tests2.AnswerTest.answer":186,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":178,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":475,"org.easymock.tests2.DelegateToTest.testDelegate":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":127,"org.easymock.tests.LimitationsTest.mockFinalMethod":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":176,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":132,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":288,"org.easymock.samples.PartialClassMockTest.testGetArea":157,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests.MockingTest.testInterfaceMocking":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":394,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":113,"org.easymock.tests2.UsageTest.niceToStrict":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":275,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":88,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":140,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":121,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":285,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":340,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":17,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests.MockClassControlTest.testEquals":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":267,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":177,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.MockNameTest.defaultName":463,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":314,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":18,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":161,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":251,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":298,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":10,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":201,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":464,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":103,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":336,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":461,"org.easymock.tests.GenericTest.testBridgedEquals":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":421,"org.easymock.tests.UsageExpectAndReturnTest.longType":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":130,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":422,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":255,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":109,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":20,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":456,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":401,"org.easymock.tests.UsageTest.exactCallCountByLastCall":450,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":472,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":451,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":481,"org.easymock.tests.MockClassControlTest.testHashCode":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":91,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":277,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":473,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":477,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":175,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":62,"org.easymock.tests.UsageVarargTest.varargCharAccepted":455,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":316,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.DefaultClassInstantiatorTest.object":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":476,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":399,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":90,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":118,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":443,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":286,"org.easymock.tests2.UsageTest.resumeIfFailure":246,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":106,"org.easymock.tests2.StubTest.stubWithReturnValue":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":338,"org.easymock.tests2.SerializationTest.testAllMockedMethod":263,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":375,"org.easymock.samples.SupportTest.voteForRemovals":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":141,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":124,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":381,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":187,"org.easymock.tests.UsageExpectAndThrowTest.object":122,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":78,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":79,"org.easymock.samples.ConstructorCalledMockTest.testTax":155,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":168,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":231,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":395,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.UsageUnorderedTest.message":80,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":485,"org.easymock.tests.UsageVerifyTest.twoReturns":356,"org.easymock.tests.UsageVarargTest.varargByteAccepted":460,"org.easymock.tests2.ThreadingTest.testThreadSafe":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":281,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":419,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":402,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":160,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageExpectAndThrowTest.longType":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests2.SerializationTest.testClass":261,"org.easymock.tests.LimitationsTest.mockNativeMethod":412,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":180,"org.easymock.tests2.MockedExceptionTest.testMockedException":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":269,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":389,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":116,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":233,"org.easymock.tests.MockingTest.testNicePartialClassMocking":387,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":8,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":358,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":120,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":244,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.samples.ExampleTest.removeNonExistingDocument":153,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":182,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":92,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":319,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":208,"org.easymock.tests2.MockBuilderTest.testCreateMockString":238,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":435,"org.easymock.tests.UsageExpectAndThrowTest.floatType":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":271,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":189,"org.easymock.tests.UsageVerifyTest.twoThrows":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":205,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":280,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":200,"org.easymock.tests.LimitationsTest.privateConstructor":411,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":98,"org.easymock.tests2.UsageTest.defaultResetToNice":243,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.differentLength":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":85,"org.easymock.tests2.CallbackTest.callback":300,"org.easymock.tests2.UsageConstraintsTest.equals":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":197,"org.easymock.tests.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":75,"org.easymock.tests.UsageCallCountTest.tooFewCalls":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":305,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":143,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":400,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":209,"org.easymock.tests2.NameTest.nameForNiceMock":292,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":287,"org.easymock.tests2.DelegateToTest.testStubDelegate":296,"org.easymock.tests2.AnswerTest.stubAnswer":190,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests.UsageVarargTest.varargLongAccepted":459,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":368,"org.easymock.tests.UsageExpectAndReturnTest.floatType":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":203,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":156,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests.UsageThrowableTest.noUpperLimit":470,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":262,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":318,"org.easymock.tests2.UsageConstraintsTest.testSame":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":330,"org.easymock.samples.SupportTest.addDocument":158,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":272,"org.easymock.tests.GenericTest.testPackageScope":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":94,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests2.NameTest.nameForMock":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":341,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":126,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":352,"org.easymock.tests2.MockedExceptionTest.testRealException":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":372,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":74,"org.easymock.tests2.NameTest.nameForStrictMock":291,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":167,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":225,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":249,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":367,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":276,"org.easymock.tests2.UsageConstraintsTest.testOr":28,"org.easymock.tests.UsageRangeTest.combination":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":447,"org.easymock.tests2.MockBuilderTest.testWithConstructor":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":273,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":360,"org.easymock.tests.UsageVarargTest.varargShortAccepted":458,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":420,"org.easymock.tests2.UsageConstraintsTest.cmpTo":33,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":362,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":226,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":343,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.samples.ExampleTest.addAndChangeDocument":154,"org.easymock.tests.UsageStrictMockTest.testVerify":15,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":82,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":70,"org.easymock.tests.LimitationsTest.abstractClass":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":335,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":71,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216}}]
