[{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[59,60,61,62,63,64,65,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[67,68,69,70,71],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[72,73],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[74,75,76,77,78,79],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[80,81,82,83,83,84,84,18,59,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[4,137,13,138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[140,141,142,143,144,145,146,147,148,80,81,82,149,150,83,83,84,84,151,152,153,154,155,156,157,158,159,16,17,18,19,160,161,67,162,68,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,69,178,179,180,181,182,70,183,184,185,186,187,59,188,189,190,191,192,193,90,92,94,95,97,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,100,214,101,215,20,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,21,231,232,1,233,234,235,22,236,2,3,237,238,102,103,104,105,239,106,107,240,241,242,243,4,137,244,108,109,245,110,111,112,114,116,117,118,246,119,120,121,122,23,24,25,26,27,28,247,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,123,124,125,126,127,128,129,248,249,250,251,252,130,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,72,294,50,73,295,296,51,52,297,298,299,300,301,302,53,303,7,304,54,8,9,305,134,306,307,308,309,310,311,312,313,314,55,56,315,316,317,10,318,319,320,321,322,323,324,325,326,327,328,57,329,330,331,332,333,12,334,335,13,138,336,337,139,14,15,338,339,340,341,58,342,343],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[165,170,179,183],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[21,22,50,53,54,14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[83,84,67,162,164,165,166,167,173,175,176,69,178,183,184,185,211,20,242,247,248,249,250,251,252,273,274,275,276,277,313,314,315,334,338,339],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[344,345,346,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[350,351,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[140,141,142,143,144,145,146,147,148,80,81,82,149,150,154,155,156,157,158,159,18,163,164,165,166,168,169,170,171,172,174,175,177,69,179,180,181,182,70,183,186,187,59,188,191,193,90,92,94,95,97,195,197,199,200,201,202,203,204,205,206,207,208,209,210,213,100,214,101,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,21,231,1,233,234,236,2,3,238,102,103,104,105,239,106,107,240,241,242,243,4,137,244,108,109,245,110,111,112,114,116,117,118,246,119,120,121,122,27,247,29,32,33,35,40,45,124,125,126,127,128,248,249,250,251,252,130,255,256,258,263,268,283,284,285,286,287,288,289,290,291,292,293,72,294,50,73,295,296,51,52,7,8,9,305,134,306,308,309,310,311,312,313,314,55,56,315,316,317,10,322,326,327,328,57,329,330,332,333,12,334,335,13,138,336,337,14,15,338,339,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[75,78],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[80,81,82,83,83,84,84,18,59,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[174],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[353,354,355,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[141,195,197,199,328],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[183],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":163,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":26,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":234,"org.easymock.tests2.StubTest.stubWithReturnValue":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":70,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":101,"org.easymock.tests2.DelegateToTest.testReturnException":195,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":24,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":345,"org.easymock.samples.SupportTest.voteForRemovals":150,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":42,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":30,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":120,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":189,"org.easymock.tests.UsageExpectAndThrowTest.object":40,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":180,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests2.DelegateToTest.testWrongClass":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ExampleTest.answerVsDelegate":141,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":133,"org.easymock.tests2.UsageConstraintsTest.testNull":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":94,"org.easymock.tests2.CaptureTest.testPrimitive":203,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":315,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":49,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":299,"org.easymock.tests2.CaptureTest.testCaptureNone":208,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":278,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":310,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":93,"org.easymock.tests2.UsageConstraintsTest.any":171,"org.easymock.tests2.StubTest.stub":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":25,"org.easymock.tests.UsageExpectAndThrowTest.longType":33,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests2.SerializationTest.testClass":100,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":272,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":129,"org.easymock.tests2.AnswerTest.answer":188,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":170,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests2.CaptureTest.testAnd":200,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":87,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":115,"org.easymock.tests2.NameTest.nameForMocksControl":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":361,"org.easymock.tests2.MockedExceptionTest.testMockedException":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":220,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":282,"org.easymock.tests2.DelegateToTest.testDelegate":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":34,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":95,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.CaptureTest.testCaptureLast":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":60,"org.easymock.tests2.CompareToTest.testCompareEqual":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":317,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":168,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":181,"org.easymock.tests.MockingTest.testTwoMocks":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":316,"org.easymock.tests2.CaptureTest.testCapture1_2446744":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":38,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":184,"org.easymock.tests.UsageThrowableTest.throwError":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":153,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.tests2.MockBuilderTest.testCreateMockString":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":32,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":177,"org.easymock.tests.ResultTest.createReturnResultToString":351,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":191,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":121,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":136,"org.easymock.tests2.CompareToTest.testLessOrEqual":71,"org.easymock.tests.ResultTest.createDelegateResultToString":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.samples.ExampleTest.voteAgainstRemoval":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":298,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests2.UsageTest.niceToStrict":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":31,"org.easymock.tests2.UsageConstraintsTest.testNotNull":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":52,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.tests2.MockBuilderTest.testCreateMock":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.CallbackTest.callback":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":347,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":39,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":55,"org.easymock.tests.UsageCallCountTest.tooFewCalls":308,"org.easymock.tests.UsageOverloadedMethodTest.overloading":341,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":57,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":175,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":174,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":209,"org.easymock.tests.UsageThrowableTest.throwCheckedException":295,"org.easymock.tests2.EasyMockSupportClassTest.testAll":119,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":47,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":85,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":365,"org.easymock.tests2.CaptureTest.testCaptureAll":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":29,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.UsageConstraintsTest.testMatches":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.samples.ExampleTest.voteForRemovals":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":64,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":155,"org.easymock.tests2.NameTest.nameForNiceMock":158,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":63,"org.easymock.samples.BasicClassMockTest.testPrintContent":81,"org.easymock.samples.ExampleTest.addDocument":144,"org.easymock.tests2.DelegateToTest.testStubDelegate":196,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":51,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":240,"org.easymock.tests2.AnswerTest.stubAnswer":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":28,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":334,"org.easymock.tests2.UsageConstraintsTest.greaterThan":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":323,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":79,"org.easymock.samples.ExampleTest.voteForRemoval":142,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":271,"org.easymock.tests.UsageExpectAndReturnTest.floatType":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":113,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":178,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":134,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":162,"org.easymock.tests2.SerializationTest.test":214,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":205,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":218,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":75,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":254,"org.easymock.tests2.UsageConstraintsTest.testSame":166,"org.easymock.samples.SupportTest.addDocument":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":23,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":219,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":260,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":154,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":357,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests2.NameTest.nameForMock":156,"org.easymock.tests.UsageExpectAndReturnTest.longType":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":48,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":98,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":46,"org.easymock.tests2.UsageStrictMockTest.differentMethods":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":257,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":307,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":261,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":296,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":89,"org.easymock.tests2.NameTest.nameForStrictMock":157,"org.easymock.tests2.UsageConstraintsTest.testContains":173,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":18,"org.easymock.tests2.UsageConstraintsTest.testFind":164,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":161,"org.easymock.tests.UsageExpectAndReturnTest.object":263,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":77,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":90,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":224,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":247,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":217,"org.easymock.tests2.CaptureTest.testCaptureRightOne":210,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.UsageConstraintsTest.testOr":167,"org.easymock.tests.UsageRangeTest.combination":322,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":328,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests.ResultTest.createThrowResultToString":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":258,"org.easymock.tests2.EasyMockSupportTest.testVerify":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":266,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":78,"org.easymock.tests2.UsageConstraintsTest.cmpTo":172,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":190,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests2.UsageTest.openCallCountByLastCall":235,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":22,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":227,"org.easymock.tests.DefaultClassInstantiatorTest.object":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":318,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":91,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":267,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.tests2.UsageConstraintsTest.constraints":68,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":36,"org.easymock.samples.ExampleTest.addAndChangeDocument":146,"org.easymock.tests.UsageStrictMockTest.testVerify":337,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":148,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":122,"org.easymock.tests2.UsageTest.resumeIfFailure":237,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":132,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":222}}]
