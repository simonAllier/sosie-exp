[{"position":"org.easymock.internal.matchers.Compare:52","failures":[0],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[9],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[18,0,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[26,66,48,67,68,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[70,71,72,73,49,62],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[74,75,76],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[18,77,78,79,80,81,82,83,84,21,22,85,86,87,26,27,28,29,88,30,31,33,89,90,91,36,92,93,39,40,41,42,48,49,50,51,52,53,94,95,96,97,98,54,99,100,101,102,56,57,61,62,63,64,65],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[18,103,104,105,16,106,107,108,109,110,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[112,81,19,113,114,82,83,84,20,21,22,85,24,115,116,117,118,119,120,121,122,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[124,125,126,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[18,103,127,104,128,105,16,17,106,69,107,129,108,130,109,131,110,132,111,133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[112,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,1,151,152,153,154,155,156,157,158,159,160,161,18,103,162,127,104,128,105,16,17,106,69,163,164,13,12,165,0,166,167,107,129,168,169,170,108,130,171,77,78,79,80,81,172,19,113,173,174,114,82,83,2,84,175,176,20,21,177,22,109,131,110,132,178,179,180,181,182,183,111,133,184,185,186,23,187,188,189,190,85,191,192,193,194,86,24,115,25,195,116,196,197,198,199,200,201,202,203,204,205,206,207,208,209,87,210,211,212,213,214,215,26,216,217,27,28,29,218,66,88,30,31,32,33,219,220,221,222,34,223,224,225,226,227,228,89,229,230,231,232,233,234,8,235,9,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,35,90,258,91,36,37,92,93,38,259,260,261,262,263,264,265,266,267,117,268,269,270,271,272,273,274,275,276,118,277,278,279,280,281,119,282,283,284,285,286,287,288,289,39,290,291,40,41,42,292,120,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,44,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,121,365,366,367,368,122,369,370,371,372,373,374,375,376,377,74,75,378,379,47,380,381,382,48,383,49,50,384,67,51,52,53,385,386,387,388,389,390,94,95,96,97,98,391,392,393,394,395,396,397,398,399,54,400,401,402,403,404,405,406,407,68,408,409,410,411,412,413,414,415,123,416,417,418,419,420,421,422,423,424,425,426,427,428,429,10,430,431,432,433,434,76,435,436,437,438,439,440,441,442,443,444,445,446,447,55,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,99,100,101,102,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,56,57,491,492,493,494,495,496,58,59,60,497,498,61,499,62,500,63,64,65,501,502,503,504,505],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[506,166],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[120,293,294,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[69,403,404,466,469,488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[120,293,294],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":29,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":144,"org.easymock.tests2.DelegateToTest.testReturnException":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":485,"org.easymock.tests.MockingTest.testPartialClassMocking":341,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":152,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":295,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":465,"org.easymock.tests2.UsageTest.wrongArguments":27,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":101,"org.easymock.samples.ExampleTest.answerVsDelegate":137,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":122,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":38,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":314,"org.easymock.tests.UsageTest.moreThanOneArgument":383,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":386,"org.easymock.tests.UsageTest.argumentsOrdered":52,"org.easymock.tests.UsageVarargTest.varargIntAccepted":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":7,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":214,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":474,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.DependencyTest.testClassMocking":219,"org.easymock.tests2.AnswerTest.answer":284,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":435,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":80,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":366,"org.easymock.tests2.UsageTest.strictResetToDefault":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":381,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":390,"org.easymock.tests2.DelegateToTest.testDelegate":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":310,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":98,"org.easymock.tests2.DependencyTest.testClassMockingSupport":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":74,"org.easymock.tests2.CaptureTest.testCapture1_2446744":178,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":78,"org.easymock.tests.UsageThrowableTest.throwError":406,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":368,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":44,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":283,"org.easymock.samples.PartialClassMockTest.testGetArea":112,"org.easymock.tests.MockingTest.testInterfaceMocking":343,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":471,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":504,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":483,"org.easymock.tests2.UsageTest.niceToStrict":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":231,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":304,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":491,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":99,"org.easymock.tests.UsageOverloadedMethodTest.overloading":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":12,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":374,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":329,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":13,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":183,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":445,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":265,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":312,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":79,"org.easymock.tests.MockNameTest.defaultName":405,"org.easymock.tests2.UsageConstraintsTest.testMatches":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.samples.ExampleTest.voteForRemovals":141,"org.easymock.tests.UsageVarargTest.allKinds":452,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":490,"org.easymock.samples.BasicClassMockTest.testPrintContent":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":97,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":411,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":211,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":237,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":398,"org.easymock.tests2.UsageConstraintsTest.greaterThan":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":399,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":195,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":385,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":90,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":484,"org.easymock.tests2.CaptureTest.testCaptureFirst":185,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":258,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":325,"org.easymock.tests2.CaptureTest.testCapture2_2446744":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":451,"org.easymock.tests.GenericTest.testBridgedEquals":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":59,"org.easymock.tests.UsageExpectAndReturnTest.longType":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":94,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":313,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":60,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":410,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":249,"org.easymock.tests.MockingTest.testNiceClassMocking":347,"org.easymock.tests.MockingTest.testClassMocking":339,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":127,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":419,"org.easymock.tests.MockTypeTest.fromEasyMockClass":367,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":159,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests.UsageExpectAndReturnTest.object":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":93,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":481,"org.easymock.tests.UsageTest.exactCallCountByLastCall":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":387,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":373,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":206,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":274,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":371,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":77,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":446,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":391,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastCall":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":392,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":400,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":479,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":205,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":315,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":119,"org.easymock.tests2.UsageTest.resumeIfFailure":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":487,"org.easymock.tests2.StubTest.stubWithReturnValue":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":327,"org.easymock.tests2.SerializationTest.testAllMockedMethod":294,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":125,"org.easymock.samples.SupportTest.voteForRemovals":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":307,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":440,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":285,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":305,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":497,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":498,"org.easymock.samples.ConstructorCalledMockTest.testTax":134,"org.easymock.tests.UsageStrictMockTest.range":64,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":244,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":306,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":262,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":100,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":505,"org.easymock.tests2.CaptureTest.testCaptureNone":182,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":43,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":450,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":496,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":482,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":145,"org.easymock.tests2.CaptureTest.testCapture_2617107":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":438,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests2.StubTest.stub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndThrowTest.longType":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":396,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.tests2.SerializationTest.testClass":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":463,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":226,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests2.NameTest.nameForMocksControl":156,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":267,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":299,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":344,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":190,"org.easymock.tests2.CaptureTest.testCaptureLast":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":340,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":303,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":130,"org.easymock.samples.ExampleTest.removeNonExistingDocument":142,"org.easymock.tests.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":230,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":207,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":394,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":15,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":268,"org.easymock.tests.UsageExpectAndThrowTest.floatType":297,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":151,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.LimitationsTest.privateConstructor":462,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":412,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests2.UsageTest.defaultResetToNice":88,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":333,"org.easymock.tests.UsageVarargTest.differentLength":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":225,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.UsageConstraintsTest.equals":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":193,"org.easymock.tests.UsageTest.openCallCountByLastCall":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":467,"org.easymock.tests.UsageCallCountTest.tooFewCalls":494,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":102,"org.easymock.tests.UsageThrowableTest.throwCheckedException":409,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":73,"org.easymock.tests.MockingTest.testStrictClassMocking":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":404,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":229,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":253,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":480,"org.easymock.tests2.CompareToTest.testGreateOrEqual":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":6,"org.easymock.tests2.NameTest.nameForNiceMock":155,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests2.DependencyTest.testInterfaceMocking":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":278,"org.easymock.tests2.DelegateToTest.testStubDelegate":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.AnswerTest.stubAnswer":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":500,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":175,"org.easymock.tests.UsageVarargTest.varargLongAccepted":449,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.floatType":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":150,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":213,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":161,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":239,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":179,"org.easymock.tests2.SerializationTest.test":293,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":393,"org.easymock.tests2.UsageConstraintsTest.testSame":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":319,"org.easymock.samples.SupportTest.addDocument":148,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":252,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":269,"org.easymock.tests.GenericTest.testPackageScope":414,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":212,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":345,"org.easymock.tests2.NameTest.nameForMock":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":177,"org.easymock.tests2.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":309,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":382,"org.easymock.tests2.MockedExceptionTest.testRealException":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":466,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests2.NameTest.nameForStrictMock":154,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":174,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":243,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":41,"org.easymock.tests2.UsageConstraintsTest.lessThan":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":35,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":273,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":14,"org.easymock.tests2.UsageConstraintsTest.testOr":105,"org.easymock.tests.UsageRangeTest.combination":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":50,"org.easymock.tests2.MockBuilderTest.testWithConstructor":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":270,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":397,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":58,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CaptureTest.testCaptureFromStub":133,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":113,"org.easymock.tests.UsageTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":332,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.samples.ExampleTest.addAndChangeDocument":143,"org.easymock.tests.UsageStrictMockTest.testVerify":502,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":147,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":499,"org.easymock.tests2.CompareToTest.testGreateThan":506,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":95,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":472,"org.easymock.tests.LimitationsTest.abstractClass":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":473,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":37}}]
