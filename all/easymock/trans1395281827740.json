[{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[29,233,70,71,234,74,77,78,91,94,185,190,191,197],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[69,71,72,75,76,79,92,166,182,188,189,193,195],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[143,145,149,150,151,155],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[236,0,1,2,3,4,5,237,6,238,239,240,241,241,242,242,243,244,245,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,246,247,248,249,250,251,252,27,28,253,254,255,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,256,51,52,53,54,257,258,259,260,261,262,55,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,290,291,292,72,73,234,74,75,76,77,78,79,80,81,82,83,84,85,86,293,87,88,294,89,295,296,90,91,92,93,94,95,96,297,298,299,300,97,98,301,99,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,100,101,102,103,331,104,105,106,107,108,109,110,111,112,113,332,333,334,335,336,337,338,339,340,341,114,342,343,344,345,346,347,348,115,116,117,118,119,349,350,351,120,121,122,352,123,124,353,125,126,127,128,129,130,131,354,355,132,356,357,133,358,134,135,136,137,138,139,359,140,360,361,362,363,141,364,365,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,161,162,163,164,165,166,382,383,167,168,169,170,171,172,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,174,406,407,175,408,409,177,178,179,410,180,411,412,181,413,414,415,416,417,418,419,420,182,183,184,185,186,187,188,189,421,190,191,192,193,422,194,195,196,197,198,199,423,424,425,426,200,427,201,202,428,429,430,431,432,433,434,435,436,437,438,439,203,204,205,206,440,207,208,209,210,211,212,441,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,442,230,443,231,232,444],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[264,268],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[142,144,152,205,206,208,210,211,441,222,227],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[445,170,171,172],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[445,170,171,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[202],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[446],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[447,448,234,91,449,450],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[451,452,453],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[129,159,208,225],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[170,454,455,456,457,458,459,460,461,462,415,463,464,232,444,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[236,0,1,2,3,5,6,239,241,241,242,242,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,246,247,248,250,27,253,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,256,51,52,53,54,257,258,259,260,261,262,55,270,271,272,274,275,276,277,278,279,280,281,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,234,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,296,91,92,93,94,95,96,97,98,99,321,327,100,106,107,108,109,110,111,112,113,115,116,117,118,119,349,350,351,129,130,131,132,357,133,134,135,136,137,138,139,140,363,141,364,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,367,369,376,379,161,162,163,164,165,166,382,383,167,168,169,170,171,384,385,386,466,387,388,467,389,468,390,391,392,399,469,173,174,406,407,175,176,409,177,178,179,410,180,411,181,414,470,471,472,182,183,184,185,186,187,188,189,421,190,191,192,193,422,195,196,197,198,199,423,424,425,200,427,201,202,433,203,204,205,206,207,208,209,210,211,212,441,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.ConstructorArgs:54","failures":[241,242,366,473,474,367,475,368,369,476,370,371,477,478,372,373,374,375,376,479,377,480,481,378,379,380,381,170,174,176,482,483,484,485,486,462,415,487,488,232,444],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[206,210,441],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[489,490,491,492,493],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[29,69,70,71,73,74,77,78,91,92,94,95,494,495,496,497,184,185,190,191,195,197,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[241,242,360,485,487,498,488],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[53,213],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[264,268],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[445,170,171,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,233,70,71,234,74,77,78,295,91,94,185,190,191,197],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[502],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[54,279,280,281,80,81,82,83,84,85,312,162,163,164,165,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":206,"org.easymock.tests2.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":245,"org.easymock.tests2.DelegateToTest.testReturnException":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":81,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.tests.MockClassControlTest.testToString":284,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":408,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":369,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":455,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":212,"org.easymock.tests2.UsageTest.wrongArguments":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":64,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":272,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":291,"org.easymock.tests2.UsageConstraintsTest.testNull":208,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":390,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":289,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":111,"org.easymock.tests.UsageTest.argumentsOrdered":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":119,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":453,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":399,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.AnswerTest.answer":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":426,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":51,"org.easymock.tests2.DelegateToTest.testDelegate":180,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":424,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":340,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":113,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":381,"org.easymock.samples.PartialClassMockTest.testGetArea":236,"org.easymock.tests.MockingTest.testInterfaceMocking":301,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests2.CompareToTest.testLessOrEqual":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":478,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.MockBuilderTest.testCreateMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":480,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":449,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":351,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":270,"org.easymock.tests.UsageOverloadedMethodTest.overloading":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":378,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":217,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":41,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":151,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":352,"org.easymock.tests.MockClassControlTest.testEquals":288,"org.easymock.tests2.EasyMockSupportClassTest.testAll":367,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":498,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":425,"org.easymock.tests2.CaptureTest.testCaptureAll":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests.MockNameTest.defaultName":255,"org.easymock.tests2.UsageConstraintsTest.testMatches":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":129,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":69,"org.easymock.samples.BasicClassMockTest.testPrintContent":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":62,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":461,"org.easymock.tests2.UsageConstraintsTest.greaterThan":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":364,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":269,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":157,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":359,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":386,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":80,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":409,"org.easymock.tests2.CaptureTest.testCaptureFirst":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":466,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":159,"org.easymock.tests2.CaptureTest.testCapture2_2446744":154,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":128,"org.easymock.tests.GenericTest.testBridgedEquals":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":104,"org.easymock.tests.UsageExpectAndReturnTest.longType":33,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":225,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":451,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":173,"org.easymock.tests.MockingTest.testNiceClassMocking":304,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests2.UsageConstraintsTest.testContains":215,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":164,"org.easymock.tests2.UsageConstraintsTest.testFind":207,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":108,"org.easymock.tests.MockTypeTest.fromEasyMockClass":290,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.object":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":456,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":124,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":249,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":444,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":87,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.MockClassControlTest.testHashCode":287,"org.easymock.tests2.EasyMockSupportTest.testVerify":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":373,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":452,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":423,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":442,"org.easymock.tests.UsageVarargTest.varargCharAccepted":123,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":392,"org.easymock.tests.DefaultClassInstantiatorTest.object":263,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":349,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":379,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":83,"org.easymock.tests2.StubTest.stubWithReturnValue":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":172,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":464,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":450,"org.easymock.samples.SupportTest.voteForRemovals":239,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":445,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":327,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":382,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":223,"org.easymock.tests2.DelegateToTest.testWrongClass":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":131,"org.easymock.tests.UsageStrictMockTest.range":94,"org.easymock.samples.ConstructorCalledMockTest.testTax":241,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":419,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":447,"org.easymock.tests2.CaptureTest.testCaptureNone":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":248,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":502,"org.easymock.tests.UsageVerifyTest.twoReturns":71,"org.easymock.tests.UsageVarargTest.varargByteAccepted":127,"org.easymock.tests2.ThreadingTest.testThreadSafe":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":479,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":103,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":243,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":325,"org.easymock.tests2.UsageConstraintsTest.any":213,"org.easymock.tests2.StubTest.stub":201,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":326,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":267,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":433,"org.easymock.tests2.SerializationTest.testClass":170,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests2.NameTest.nameForMocksControl":497,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests2.MockedExceptionTest.testMockedException":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":368,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":470,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CompareToTest.testCompareEqual":491,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":454,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.CaptureTest.testCaptureLast":149,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":211,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":224,"org.easymock.tests.MockingTest.testTwoMocks":300,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":228,"org.easymock.samples.ExampleTest.removeNonExistingDocument":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":114,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":265,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":158,"org.easymock.tests2.MockBuilderTest.testCreateMockString":472,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":476,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":465,"org.easymock.tests.UsageVerifyTest.twoThrows":70,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":376,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":141,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":484,"org.easymock.tests2.UsageConstraintsTest.testNotNull":227,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":63,"org.easymock.tests2.UsageTest.defaultResetToNice":421,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.UsageVarargTest.differentLength":353,"org.easymock.tests2.CallbackTest.callback":161,"org.easymock.tests2.UsageConstraintsTest.equals":440,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":360,"org.easymock.tests.UsageTest.openCallCountByLastCall":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":273,"org.easymock.tests.UsageThrowableTest.throwCheckedException":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":448,"org.easymock.tests.MockingTest.testStrictClassMocking":298,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":400,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":174,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":407,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":169,"org.easymock.tests2.CompareToTest.testGreateOrEqual":492,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":459,"org.easymock.tests2.NameTest.nameForNiceMock":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":160,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":457,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":377,"org.easymock.tests2.DelegateToTest.testStubDelegate":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.stubAnswer":168,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":92,"org.easymock.tests.UsageVarargTest.varargLongAccepted":126,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageExpectAndReturnTest.floatType":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":232,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests.UsageThrowableTest.noUpperLimit":57,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":221,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.SerializationTest.test":171,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":147,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":446,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":31,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.samples.SupportTest.addDocument":238,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":302,"org.easymock.tests2.NameTest.nameForMock":494,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":488,"org.easymock.tests2.UsageStrictMockTest.differentMethods":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":52,"org.easymock.tests2.MockedExceptionTest.testRealException":165,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":292,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":495,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":412,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":418,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":222,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":266,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":411,"org.easymock.tests2.UsageStrictMockTest.range":197,"org.easymock.tests2.UsageConstraintsTest.lessThan":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":372,"org.easymock.tests2.UsageConstraintsTest.testOr":210,"org.easymock.tests.UsageRangeTest.combination":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":371,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":306,"org.easymock.tests.UsageVarargTest.varargShortAccepted":125,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":331,"org.easymock.tests2.UsageConstraintsTest.cmpTo":214,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":383,"org.easymock.tests2.CompareToTest.testLessThan":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":308,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":153,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":102,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":44,"org.easymock.tests2.CaptureTest.testCapture":235,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":93,"org.easymock.tests2.UsageConstraintsTest.constraints":205,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":297,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":240,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":90,"org.easymock.tests2.CompareToTest.testGreateThan":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":36,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":118,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":467,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":121}}]
