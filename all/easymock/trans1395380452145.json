[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[7,8,9,10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,7,253,254,255,8,256,257,258,259,260,261,0,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,9,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[305,306,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[308,309,310,311,1,1,2,2,312,313,314,12,13,14,15,16,17,19,315,316,317,318,319,25,26,320,27,28,29,30,31,32,33,34,36,37,38,39,41,42,43,44,56,57,58,59,60,61,62,63,64,321,65,66,68,69,70,71,72,73,74,75,322,323,324,76,77,78,79,80,81,82,83,84,325,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,135,136,137,138,139,140,141,142,143,326,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,327,165,166,167,168,169,170,328,171,172,329,330,331,177,178,179,180,181,182,183,184,185,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,189,190,191,192,193,194,195,196,197,198,199,200,201,202,350,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,351,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,352,241,242,243,353,244,245,246,354,247,248,7,253,355,356,8,257,258,259,260,261,0,262,263,264,265,266,267,268,269,270,357,358,271,272,273,274,275,276,277,278,279,280,281,282,283,284,9,285,286,359,287,288,360,361,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,362,363,364,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[308,309,310,311,1,2,312,313,314,12,13,14,15,16,17,18,19,315,316,317,318,319,20,21,22,23,24,366,25,26,320,367,368,369,27,370,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,371,56,57,58,59,60,61,62,63,64,372,321,373,374,65,66,67,68,69,70,71,72,73,74,75,322,323,324,76,77,78,79,80,81,82,83,375,84,376,377,378,379,380,381,382,383,384,325,85,86,385,87,386,387,388,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,389,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,326,144,390,391,392,393,394,395,396,397,398,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,327,165,166,167,168,169,170,328,171,172,329,330,331,173,174,175,176,177,178,179,180,181,182,183,184,185,332,333,334,399,186,187,188,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,11,335,417,418,419,420,421,336,422,337,338,339,340,341,342,343,344,345,346,347,348,349,423,305,306,307,424,425,426,189,190,191,192,193,194,195,196,427,197,198,199,200,201,202,350,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,428,429,430,431,432,433,220,434,435,436,437,438,439,221,222,223,224,225,440,441,442,443,444,351,445,446,447,448,449,450,226,227,228,229,230,231,232,233,234,235,236,237,238,239,451,452,240,352,241,242,243,353,244,245,246,354,247,248,249,250,251,252,3,7,453,454,455,253,254,355,456,356,457,458,255,8,5,256,257,258,259,260,261,0,262,263,264,265,266,267,268,269,459,460,270,357,358,271,272,273,274,461,275,276,277,278,279,280,281,282,462,283,6,463,284,9,285,286,464,10,359,287,288,360,465,361,289,290,466,291,292,293,467,294,295,296,297,298,299,300,301,302,303,304,468,469,470,362,471,472,363,473,474,475,476,477,478,479,480,481,364,482,483,484,485,486,365,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[195,201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:157","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[201,202],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[308,1,1,2,2,314,12,13,14,15,17,19,315,316,317,318,319,20,21,22,23,24,25,320,27,28,29,30,31,32,33,36,43,56,57,58,59,60,61,62,63,64,321,374,65,66,67,68,69,70,71,72,73,74,75,322,323,324,76,77,78,79,80,81,82,83,325,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,126,129,130,131,135,136,137,138,139,140,141,142,143,326,144,391,394,395,396,397,398,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,327,165,166,167,168,169,170,328,171,172,329,330,331,173,174,175,176,177,179,180,181,182,183,184,332,333,334,186,400,401,335,336,337,338,339,340,341,342,343,344,345,346,347,348,189,190,191,192,193,194,195,196,197,198,199,200,201,202,350,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,434,221,222,223,224,225,351,445,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,352,241,242,353,244,245,246,354,247,248,249,250,251,252,7,453,253,254,355,356,255,8,256,257,258,259,260,261,0,262,263,264,265,266,267,268,269,270,357,358,271,272,273,274,275,276,277,278,279,280,281,282,283,284,9,285,286,10,359,287,288,360,361,289,290,291,292,293,298,300,301,302,303,304,362,363,364,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[308,309,310,311,1,2,312,313,314,12,13,14,15,16,17,18,19,315,316,317,318,319,20,21,22,23,24,366,25,26,320,367,368,369,27,370,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,372,321,373,374,65,66,67,68,69,70,71,72,73,74,75,322,323,324,76,77,78,79,80,81,82,83,84,376,377,378,379,380,382,383,384,325,85,86,385,87,386,387,388,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,389,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,326,144,390,391,392,393,394,395,396,397,398,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,327,165,166,167,168,169,170,328,171,172,329,330,331,173,174,175,176,177,178,179,180,181,182,183,184,185,332,333,334,399,186,187,188,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,11,335,417,418,419,420,421,336,422,337,338,339,340,341,342,343,344,345,346,347,348,349,423,305,306,424,425,426,189,190,191,192,193,194,195,196,427,197,198,199,200,201,202,350,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,429,430,431,432,433,220,434,435,436,437,438,439,221,512,222,223,224,225,440,441,442,443,444,351,445,446,447,448,449,450,226,227,228,229,230,231,232,233,234,235,236,237,238,239,451,452,240,352,241,242,243,353,244,245,246,354,247,248,249,250,251,252,7,453,455,253,254,355,356,458,255,8,256,257,258,259,260,261,0,262,263,264,265,266,267,268,269,459,270,357,358,271,272,273,274,461,275,276,277,278,279,280,281,282,462,283,6,463,284,9,285,286,464,10,359,287,288,360,465,361,289,290,466,291,292,293,467,294,295,296,297,298,299,300,301,302,303,304,513,514,515,516,517,518,468,469,470,362,471,472,363,473,474,475,476,477,478,479,480,481,364,482,483,484,485,486,365,487,488],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[308,1,1,2,2,314,12,13,14,15,17,19,315,316,317,318,319,25,320,27,28,29,30,31,32,33,36,43,56,57,58,59,60,61,62,63,64,321,65,66,69,70,73,74,75,322,323,324,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,327,165,166,167,169,170,171,329,330,331,180,182,183,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,351,226,227,229,230,233,234,235,236,237,238,239,240,352,241,242,353,244,245,246,354,247,7,253,355,356,8,257,258,259,261,262,263,264,267,268,269,270,357,358,271,272,273,274,275,276,277,278,279,280,281,283,9,285,286,359,287,288,360,361,289,290,291,292,293,300,302,303,362,363,364,365],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[13,169,244,246,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[308,309,310,1,1,2,2,366,25,26,320,367,368,369,27,370,56,84,376,377,378,379,380,382,383,384,325,85,86,87,388,127,128,129,130,131,132,133,134,391,396,401,423,424,189,190,191,241,243,252,519,7,453,455,253,254,355,356,458,255,8,520,256,269,459,521,522,523,524,525,276,277,279,280,281,282,283,6,463,284,9,285,286,464,10,359,287,288,360,289,290,468,469,470,362,471,472,363,473,474,475,476,477,478,479,480,481,364,482,483,484,485,486,365,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[308,309,310,311,1,2,312,313,314,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,56,57,58,59,60,61,63,64,66,74,77,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,128,135,136,137,138,139,140,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,173,174,175,176,178,180,183,184,185,337,338,339,340,341,342,343,344,345,346,347,348,349,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,225,351,226,227,228,229,231,232,233,234,235,236,239,240,352,241,242,243,244,245,247,248,249,250,251,252,253,254,355,356,258,259,261,0,264,267,269,270,271,272,273,274,275,276,278,279,280,281,283,284,285,359,287,288,360,361,289,290,291,292,293,294,295,296,297,299,300,303,304,362,363,364,365],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[526,527,67,179,528,529],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[308,309,310,1,1,2,2,366,25,26,320,367,368,369,27,370,56,84,376,377,378,379,380,382,383,384,325,85,86,87,388,127,128,129,130,131,132,133,134,391,396,401,423,424,189,190,191,241,243,252,7,453,455,253,254,355,356,458,255,8,256,269,459,276,277,279,280,281,282,283,6,463,284,9,285,286,464,10,359,287,288,360,289,290,468,469,470,362,471,472,363,473,474,475,476,477,478,479,480,481,364,482,483,484,485,486,365,487,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[201],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[66,113,114,115,390,171,180,183,184,259,300,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[530,531,532,43,66,68,71,72,113,114,115,179,180,182,183,259,260,265,266,294,295,296,297,300,302,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[323,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[308,309,310,311,1,2,312,313,314,12,13,14,15,16,17,18,19,315,316,317,318,319,20,21,22,23,24,366,25,26,320,367,368,369,27,370,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,372,321,373,374,65,66,67,68,69,70,71,72,73,74,75,322,323,324,76,77,78,79,80,81,82,83,84,376,377,378,379,380,382,383,384,325,85,86,385,87,386,387,388,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,389,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,326,144,390,391,392,393,394,395,396,397,398,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,327,165,166,167,168,169,170,328,171,172,329,330,331,173,174,175,176,177,178,179,180,181,182,183,184,185,332,333,334,399,186,187,188,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,11,335,417,418,419,420,421,336,422,337,338,339,340,341,342,343,344,345,346,347,348,349,423,305,306,424,425,426,189,190,191,192,193,194,195,196,427,197,198,199,200,201,202,350,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,429,430,431,432,433,220,434,435,436,437,438,439,221,512,222,223,224,225,440,441,442,443,444,351,445,446,447,448,449,450,226,227,228,229,230,231,232,233,234,235,236,237,238,239,451,452,240,352,241,242,243,353,244,245,246,354,247,248,249,250,251,252,7,453,455,253,254,355,356,458,255,8,256,257,258,259,260,261,0,262,263,264,265,266,267,268,269,459,270,357,358,271,272,273,274,461,275,276,277,278,279,280,281,282,462,283,6,463,284,9,285,286,464,10,359,287,288,360,465,361,289,290,466,291,292,293,467,294,295,296,297,298,299,300,301,302,303,304,513,514,515,516,517,518,468,469,470,362,471,472,363,473,474,475,476,477,478,479,480,481,364,482,483,484,485,486,365,487,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[336,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[308,309,310,311,1,2,312,313,314,12,13,14,15,16,17,18,19,315,316,317,318,319,20,21,22,23,24,366,25,26,320,367,368,369,27,370,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,372,321,373,374,65,66,67,68,69,70,71,72,73,74,75,322,323,324,76,77,78,79,80,81,82,83,84,376,377,378,379,380,382,383,384,325,85,86,385,87,386,387,388,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,389,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,326,144,390,391,392,393,394,395,396,397,398,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,327,165,166,167,168,169,170,328,171,172,329,330,331,173,174,175,176,177,178,179,180,181,182,183,184,185,332,333,334,399,186,187,188,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,11,335,417,418,419,420,421,336,422,337,338,339,340,341,342,343,344,345,346,347,348,349,423,305,306,424,425,426,189,190,191,192,193,194,195,196,427,197,198,199,200,201,202,350,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,428,429,430,431,432,433,220,434,435,436,437,438,439,221,512,222,223,224,225,440,441,442,443,444,351,445,446,447,448,449,450,226,227,228,229,230,231,232,233,234,235,236,237,238,239,451,452,240,352,241,242,243,353,244,245,246,354,247,248,249,250,251,252,7,453,455,253,254,355,356,457,458,255,8,256,257,258,259,260,261,0,262,263,264,265,266,267,268,269,459,270,357,358,271,272,273,274,461,275,276,277,278,279,280,281,282,462,283,6,463,284,9,285,286,464,10,359,287,288,360,465,361,289,290,466,291,292,293,467,294,295,296,297,298,299,300,301,302,303,304,513,514,515,516,517,518,468,469,470,362,471,472,363,473,474,475,476,477,478,479,480,481,364,482,483,484,485,486,365,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":196,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.UsageTest.argumentsOrdered":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":412,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":0,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":311,"org.easymock.tests2.DelegateToTest.testReturnException":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":29,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":129,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":467,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":145,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":363,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":530,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":352,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":139,"org.easymock.tests2.UsageTest.wrongArguments":260,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":396,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":387,"org.easymock.tests2.UsageConstraintsTest.testNull":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":279,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":134,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":346,"org.easymock.tests2.CaptureTest.testPrimitive":229,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":164,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":59,"org.easymock.tests.UsageTest.argumentsOrdered":72,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":306,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":495,"org.easymock.tests.ReplayStateInvalidUsageTest.times":52,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":351,"org.easymock.tests2.DependencyTest.testClassMocking":451,"org.easymock.tests2.AnswerTest.answer":270,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":251,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":393,"org.easymock.tests2.CaptureTest.testAnd":226,"org.easymock.tests2.UsageTest.strictResetToDefault":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":454,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":341,"org.easymock.tests2.DelegateToTest.testDelegate":247,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":319,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":494,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":160,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":24,"org.easymock.tests2.DependencyTest.testClassMockingSupport":452,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":326,"org.easymock.tests2.CaptureTest.testCapture1_2446744":230,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":249,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":46,"org.easymock.tests.UsageThrowableTest.throwError":76,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":498,"org.easymock.samples.PartialClassMockTest.testGetArea":308,"org.easymock.tests.MockingTest.testInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":477,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":146,"org.easymock.tests2.UsageTest.niceToStrict":261,"org.easymock.tests2.ThreadingTest.testChangeDefault":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":253,"org.easymock.tests2.MockBuilderTest.testCreateMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":528,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":154,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":99,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":62,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":235,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":389,"org.easymock.tests.MockClassControlTest.testEquals":133,"org.easymock.tests2.EasyMockSupportClassTest.testAll":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":521,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":22,"org.easymock.tests2.CaptureTest.testCaptureAll":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":250,"org.easymock.tests.MockNameTest.defaultName":374,"org.easymock.tests2.UsageConstraintsTest.testMatches":208,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":60,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":126,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":23,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":82,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":33,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":354,"org.easymock.tests2.UsageConstraintsTest.greaterThan":210,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":286,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":499,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":464,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":282,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":491,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":339,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":28,"org.easymock.tests2.CaptureTest.testCaptureFirst":239,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":340,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":95,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":238,"org.easymock.tests2.UsageTest.moreThanOneArgument":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":418,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":8,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":125,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":489,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":41,"org.easymock.tests.UsageExpectAndReturnTest.longType":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":20,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":337,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":520,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":163,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.UsageCallCountTest.tooManyCalls":42,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":81,"org.easymock.tests.MockingTest.testNiceClassMocking":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":287,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":519,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":35,"org.easymock.tests2.UsageConstraintsTest.testContains":205,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":197,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":64,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":275,"org.easymock.tests.UsageExpectAndReturnTest.object":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":345,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":120,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":188,"org.easymock.tests.UsageTest.exactCallCountByLastCall":73,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":459,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":104,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":430,"org.easymock.tests.MockClassControlTest.testHashCode":132,"org.easymock.tests2.EasyMockSupportTest.testVerify":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":479,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":248,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":428,"org.easymock.tests.UsageVarargTest.varargCharAccepted":119,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":375,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastCall":262,"org.easymock.tests.DefaultClassInstantiatorTest.object":84,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":322,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":480,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":152,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":525,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":429,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":497,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":151,"org.easymock.tests.ReplayStateInvalidCallsTest.times":503,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":504,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":365,"org.easymock.tests2.UsageTest.resumeIfFailure":267,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":31,"org.easymock.tests2.StubTest.stubWithReturnValue":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":456,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":243,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":335,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":529,"org.easymock.samples.SupportTest.voteForRemovals":314,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":157,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":336,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.UsageExpectAndThrowTest.object":155,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":213,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":501,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":166,"org.easymock.tests.UsageStrictMockTest.range":182,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":425,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":468,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":54,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":526,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":493,"org.easymock.tests2.CaptureTest.testCaptureNone":234,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":334,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":514,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":115,"org.easymock.tests.UsageVarargTest.varargByteAccepted":124,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":482,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":39,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":142,"org.easymock.tests2.UsageConstraintsTest.any":203,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":51,"org.easymock.tests2.StubTest.stub":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndThrowTest.longType":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":30,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":50,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests2.SerializationTest.testClass":241,"org.easymock.tests.LimitationsTest.mockNativeMethod":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":320,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":524,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":509,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":515,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests2.MockedExceptionTest.testMockedException":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":472,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":461,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":149,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":356,"org.easymock.tests.MockingTest.testNicePartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests2.CaptureTest.testCaptureLast":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":508,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":201,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":290,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":505,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":153,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":265,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":518,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":183,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":431,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":517,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":256,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":473,"org.easymock.tests.UsageExpectAndThrowTest.floatType":147,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":460,"org.easymock.tests.UsageVerifyTest.twoThrows":114,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":364,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":285,"org.easymock.tests.LimitationsTest.privateConstructor":369,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":83,"org.easymock.tests2.UsageTest.defaultResetToNice":264,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.UsageVarargTest.differentLength":121,"org.easymock.tests2.CallbackTest.callback":293,"org.easymock.tests2.UsageConstraintsTest.equals":427,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":6,"org.easymock.tests.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":141,"org.easymock.tests.UsageCallCountTest.tooFewCalls":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":516,"org.easymock.tests.UsageThrowableTest.throwCheckedException":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":527,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":445,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":288,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":361,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.ObjectMethodsTest.testHashCode":187,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":507,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":502,"org.easymock.tests2.DependencyTest.testInterfaceMocking":240,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.DelegateToTest.testStubDelegate":245,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":180,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":457,"org.easymock.tests.UsageVarargTest.varargLongAccepted":123,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":106,"org.easymock.tests.UsageExpectAndReturnTest.floatType":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":269,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests.UsageThrowableTest.noUpperLimit":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":211,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":194,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":423,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":231,"org.easymock.tests2.SerializationTest.test":242,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":89,"org.easymock.tests2.UsageConstraintsTest.testSame":199,"org.easymock.samples.SupportTest.addDocument":313,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":492,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":474,"org.easymock.tests.GenericTest.testPackageScope":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":490,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":5,"org.easymock.tests2.UsageStrictMockTest.differentMethods":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":159,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":138,"org.easymock.tests2.MockedExceptionTest.testRealException":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":55,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":424,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":531,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":7,"org.easymock.tests2.UsageStrictMockTest.range":302,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":496,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":522,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":478,"org.easymock.tests2.CaptureTest.testCaptureRightOne":236,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":513,"org.easymock.tests2.UsageConstraintsTest.testOr":200,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":277,"org.easymock.tests.UsageTest.wrongArguments":68,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":475,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":101,"org.easymock.tests.UsageVarargTest.varargShortAccepted":122,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":40,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":510,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":263,"org.easymock.tests2.CaptureTest.testCaptureFromStub":237,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":45,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":453,"org.easymock.tests.UsageTest.unexpectedCallWithArray":67,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":506,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":38,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":102,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests2.UsageConstraintsTest.constraints":195,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":185,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":312,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":21,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":523,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":94,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":532,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":343}}]
