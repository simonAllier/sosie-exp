[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[28],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,2,147,148,149,150,151,152,153,154,155,156,157,158,3,3,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,4,176,177,178,179,180,181,5,6,7,8,9,10,11,12,13,14,15,16,17,18,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,28,229,230,231,232,233,234,235,236,237,238,19,20,21,22,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,23,24,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,25,26,27,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[297,298,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[203,300,301,302,303,304,305,306,307,260,308,309,310],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[203,301,302,303,304,306,311,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[312,260,261,262],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[52,53,55,56,313,314,315,316,317,318,319,320,321,120,121,122,125,126,322,323,324,148,149,155,156,157,198,200,201,28,325,326,327,328,329,330,331,332,333,334,335,265,266,272,273],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,2,147,148,149,150,151,152,153,154,155,156,157,158,3,3,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,4,176,177,178,179,180,181,5,6,7,8,9,10,11,12,13,14,15,16,17,18,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,28,229,230,231,232,233,234,235,236,237,238,19,20,21,22,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,23,24,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,25,26,27,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,2,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,4,176,177,178,179,180,181,5,6,7,8,9,10,11,12,13,14,15,16,17,18,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,28,229,230,231,232,233,234,235,236,237,238,19,20,21,22,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,23,24,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,25,26,27,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:195","failures":[336,337,338,339,183,190,193,340,341,342,343,344,345,346,347,348,349,208,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,246,370,371,372,373,374,375,250,253,255,276,277,282,283,376,288,290,291],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[231,232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[3,5,6,7,8,9,10,11,12,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[377,378,29,379,380,381,382,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,336,383,337,384,338,385,50,51,52,53,54,55,56,57,386,387,388,389,390,391,392,393,58,59,60,61,62,63,64,65,66,67,68,69,313,314,394,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,395,396,397,0,95,96,398,1,97,399,98,99,400,401,402,403,404,405,406,407,408,409,410,411,412,413,100,101,102,103,104,105,106,107,108,109,110,111,112,414,113,114,115,116,117,118,415,416,417,119,120,121,122,123,124,125,126,127,418,419,420,128,129,421,130,422,423,424,131,132,133,134,425,426,427,428,429,430,431,135,136,137,432,138,139,140,141,142,143,144,145,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,146,322,2,147,323,324,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,470,471,472,166,167,168,169,169,170,170,171,172,173,174,175,4,176,177,178,179,473,180,181,5,6,7,8,9,10,11,12,13,14,15,16,17,18,182,183,184,185,186,187,188,474,189,475,476,190,191,192,193,477,340,194,195,478,341,342,343,344,196,197,198,199,200,201,202,203,300,204,205,206,207,345,346,347,348,349,208,350,351,352,353,354,355,479,356,357,209,358,480,210,359,481,482,360,361,483,484,485,486,211,362,487,363,364,488,212,489,490,213,214,215,216,491,217,218,219,220,221,222,492,223,224,225,226,227,228,28,229,230,231,232,233,234,235,236,237,238,493,19,20,21,494,22,495,496,239,240,241,242,243,244,245,365,366,367,368,369,246,370,371,372,373,374,375,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,23,497,24,498,499,500,501,276,277,278,279,280,281,282,283,284,376,502,285,286,287,288,309,289,290,291,292,293,294,295,25,503,504,26,27,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[222,227,238,505],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[231],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[384,405,408,409,410,339,498,278,281,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[381,396,414],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,454,456],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[312,260,261,262],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[506],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[238,507],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[52,315,317,121,326,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,392,58,59,60,61,63,64,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,399,98,99,101,102,104,105,111,117,119,120,122,125,126,127,128,129,130,135,136,137,138,139,140,141,142,143,144,145,324,149,155,156,157,158,159,160,161,162,163,164,165,166,167,168,171,172,173,174,175,4,176,177,178,179,180,181,5,6,7,8,10,11,12,13,14,15,18,182,183,184,185,186,187,189,191,192,193,194,195,341,342,343,344,196,197,198,199,200,201,202,203,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,28,229,230,231,232,233,235,236,237,238,19,20,22,239,240,241,242,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,272,273,274,275,23,24,276,277,278,279,280,281,282,284,285,287,288,290,294,25,26,27,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[507,508,509,505,510],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[426,430],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":216,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests2.UsageTest.argumentsOrdered":273,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":443,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":268,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":172,"org.easymock.tests2.DelegateToTest.testReturnException":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":114,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.tests.MockClassControlTest.testToString":408,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":478,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":75,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":210,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageTest.wrongArguments":266,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":133,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":384,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":423,"org.easymock.tests2.UsageConstraintsTest.testNull":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":185,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":256,"org.easymock.tests2.CaptureTest.testPrimitive":8,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":74,"org.easymock.tests.UsageTest.moreThanOneArgument":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":94,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":387,"org.easymock.tests.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageVarargTest.varargIntAccepted":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":329,"org.easymock.tests.ReplayStateInvalidUsageTest.times":465,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests2.DependencyTest.testClassMocking":495,"org.easymock.tests2.AnswerTest.answer":25,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests2.CaptureTest.testAnd":5,"org.easymock.tests2.UsageTest.strictResetToDefault":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":251,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":391,"org.easymock.tests2.DelegateToTest.testDelegate":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":90,"org.easymock.tests.LimitationsTest.mockFinalMethod":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":69,"org.easymock.tests2.DependencyTest.testClassMockingSupport":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":313,"org.easymock.tests2.CaptureTest.testCapture1_2446744":9,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":459,"org.easymock.tests.UsageThrowableTest.throwError":103,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":337,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":339,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":490,"org.easymock.samples.PartialClassMockTest.testGetArea":166,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":460,"org.easymock.tests.MockingTest.testInterfaceMocking":421,"org.easymock.tests2.CompareToTest.testLessOrEqual":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":396,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":76,"org.easymock.tests2.UsageTest.niceToStrict":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":299,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":285,"org.easymock.tests2.MockBuilderTest.testCreateMock":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":84,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":326,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":131,"org.easymock.tests.UsageOverloadedMethodTest.overloading":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":41,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":226,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":14,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests.MockClassControlTest.testEquals":412,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":92,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":331,"org.easymock.tests2.CaptureTest.testCaptureAll":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests.MockNameTest.defaultName":469,"org.easymock.tests2.UsageConstraintsTest.testMatches":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":153,"org.easymock.samples.ExampleTest.voteForRemovals":179,"org.easymock.tests.UsageVarargTest.allKinds":145,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":68,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":109,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":399,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":193,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":477,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":188,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":158,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":249,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":113,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":493,"org.easymock.tests2.CaptureTest.testCaptureFirst":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":250,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":37,"org.easymock.tests2.CaptureTest.testCapture2_2446744":17,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":244,"org.easymock.tests2.UsageTest.moreThanOneArgument":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":144,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":63,"org.easymock.tests.UsageExpectAndReturnTest.longType":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":65,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":91,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":150,"org.easymock.tests.UsageCallCountTest.tooManyCalls":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":316,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":108,"org.easymock.tests.MockingTest.testNiceClassMocking":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":277,"org.easymock.tests.MockingTest.testClassMocking":419,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":393,"org.easymock.tests2.UsageConstraintsTest.testContains":225,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":294,"org.easymock.tests2.UsageConstraintsTest.testFind":217,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":102,"org.easymock.tests.MockTypeTest.fromEasyMockClass":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests.UsageExpectAndReturnTest.object":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":255,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":303,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":388,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":380,"org.easymock.tests2.ConstraintsToStringTest.findToString":506,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":300,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":2,"org.easymock.tests.MockClassControlTest.testHashCode":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":366,"org.easymock.tests2.EasyMockSupportTest.testVerify":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":484,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":328,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageVarargTest.varargCharAccepted":138,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastCall":269,"org.easymock.tests.DefaultClassInstantiatorTest.object":425,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":415,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":365,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":81,"org.easymock.tests.CapturesMatcherTest.test":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":212,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":330,"org.easymock.tests2.UsageTest.resumeIfFailure":274,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":116,"org.easymock.tests2.StubTest.stubWithReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":235,"org.easymock.tests2.SerializationTest.testAllMockedMethod":262,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":449,"org.easymock.samples.SupportTest.voteForRemovals":174,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":333,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":87,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":312,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":455,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":503,"org.easymock.tests.UsageExpectAndThrowTest.object":85,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":382,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":232,"org.easymock.tests2.DelegateToTest.testWrongClass":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.samples.ConstructorCalledMockTest.testTax":169,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":500,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":467,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":397,"org.easymock.tests2.CaptureTest.testCaptureNone":13,"org.easymock.tests.UsageUnorderedTest.message":149,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":143,"org.easymock.tests2.ThreadingTest.testThreadSafe":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":362,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":61,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":167,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":73,"org.easymock.tests2.UsageConstraintsTest.any":223,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":464,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":115,"org.easymock.tests.UsageExpectAndThrowTest.longType":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":429,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":463,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests2.SerializationTest.testClass":260,"org.easymock.tests.LimitationsTest.mockNativeMethod":29,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":398,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":347,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests2.NameTest.nameForMocksControl":344,"org.easymock.tests2.MockedExceptionTest.testMockedException":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":480,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":497,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":79,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":182,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":288,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":187,"org.easymock.tests2.CompareToTest.testCompareEqual":509,"org.easymock.tests2.CaptureTest.testCaptureLast":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":221,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":282,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":233,"org.easymock.tests.MockingTest.testTwoMocks":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":83,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":237,"org.easymock.samples.ExampleTest.removeNonExistingDocument":473,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":461,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":367,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":427,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":243,"org.easymock.tests2.ConstraintsToStringTest.andToString":332,"org.easymock.tests2.MockBuilderTest.testCreateMockString":291,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":406,"org.easymock.tests.UsageExpectAndThrowTest.floatType":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":26,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":211,"org.easymock.samples.ExampleTest.voteAgainstRemoval":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":395,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":192,"org.easymock.tests.LimitationsTest.privateConstructor":378,"org.easymock.tests2.UsageConstraintsTest.testNotNull":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":110,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":292,"org.easymock.tests2.UsageTest.defaultResetToNice":271,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":45,"org.easymock.tests.UsageVarargTest.differentLength":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":346,"org.easymock.tests2.CallbackTest.callback":181,"org.easymock.tests2.UsageConstraintsTest.equals":491,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":475,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":134,"org.easymock.tests.UsageThrowableTest.throwCheckedException":107,"org.easymock.tests.MockingTest.testStrictClassMocking":418,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":317,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":280,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":296,"org.easymock.tests2.CompareToTest.testGreateOrEqual":505,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":245,"org.easymock.tests2.NameTest.nameForNiceMock":343,"org.easymock.tests2.DependencyTest.testInterfaceMocking":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":304,"org.easymock.samples.ExampleTest.addDocument":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.DelegateToTest.testStubDelegate":20,"org.easymock.tests2.AnswerTest.stubAnswer":27,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests.UsageVarargTest.varargLongAccepted":142,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.floatType":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":203,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":170,"org.easymock.tests2.ConstraintsToStringTest.orToString":325,"org.easymock.tests.UsageThrowableTest.noUpperLimit":104,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":230,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":214,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":498,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":10,"org.easymock.tests2.SerializationTest.test":261,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":31,"org.easymock.tests2.UsageConstraintsTest.testSame":219,"org.easymock.samples.SupportTest.addDocument":173,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":481,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":422,"org.easymock.tests2.NameTest.nameForMock":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":42,"org.easymock.tests2.UsageStrictMockTest.differentMethods":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":476,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":89,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":99,"org.easymock.tests2.MockedExceptionTest.testRealException":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":319,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":446,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":198,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":71,"org.easymock.tests2.NameTest.nameForStrictMock":342,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":186,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":231,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":284,"org.easymock.tests2.UsageStrictMockTest.range":200,"org.easymock.tests2.UsageConstraintsTest.lessThan":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":483,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.UsageConstraintsTest.testOr":220,"org.easymock.tests.UsageRangeTest.combination":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":183,"org.easymock.tests.UsageTest.wrongArguments":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":482,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":43,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":430,"org.easymock.tests.UsageVarargTest.varargShortAccepted":141,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":62,"org.easymock.tests2.UsageConstraintsTest.cmpTo":224,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":504,"org.easymock.tests2.CompareToTest.testLessThan":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CaptureTest.testCaptureFromStub":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":458,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":44,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.UsageConstraintsTest.constraints":215,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests2.ConstraintsToStringTest.notToString":327,"org.easymock.tests.UsageStrictMockTest.testVerify":386,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":171,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":51,"org.easymock.tests2.CompareToTest.testGreateThan":508,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":66,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":36,"org.easymock.tests.LimitationsTest.abstractClass":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":253}}]
