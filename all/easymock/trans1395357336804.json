[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,69,70,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"failures":[111,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.RecordState:173","failures":[132],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[133,134,135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[136,137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[141,142,143,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[141,146,147,108,109,1,148,149,150,151,152,153,154,6,9,19,25,155,110,111,156,112,157,113,114,0,158,159,160,115,161,162,116,163,164,117,165,166,167,168,169,170,118,171,29,32,34,35,38,172,173,174,175,176,177,178,179,129,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,42,132,195,196,197,198,119,120,107,199,200,45,47,48,49,50,201,51,52,202,53,54,203,55,56,57,59,63,64,65,204,205,68,206,207,208,209,210,211,212,213,214,215,216,217,121,218,219,220,221,222,223,122,123,124,224,225,226,83,227,228,229,230,231,232,233,234,125,235,88,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,126,127,258,259,260,261,262,263,264,265,266,267,268,269,95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[270,271,272,273,274,275,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[277,132,278],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[156,0,165],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[87,91],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[279,111,158,162,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1445","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[165,166],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[1,270,271,272,282,283,275,36,45,46],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":278,"org.easymock.tests2.StubTest.stubWithReturnValue":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.MockingTest.testPartialClassMocking":95,"org.easymock.samples.SupportTest.voteForRemovals":206,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":87,"org.easymock.tests.MockClassControlTest.testToString":101,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":138,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":135,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":205,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":270,"org.easymock.tests2.DelegateToTest.testWrongClass":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":260,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.samples.ConstructorCalledMockTest.testTax":69,"org.easymock.tests.UsageStrictMockTest.range":122,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":190,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":47,"org.easymock.tests2.UsageConstraintsTest.testNull":157,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":106,"org.easymock.tests2.CaptureTest.testPrimitive":175,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":234,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":3,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":231,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.UsageVerifyTest.twoReturns":235,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":20,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":33,"org.easymock.tests2.UsageConstraintsTest.any":159,"org.easymock.tests2.StubTest.stub":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":78,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":255,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":90,"org.easymock.tests2.AnswerTest.answer":141,"org.easymock.tests2.CaptureTest.testAnd":172,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":62,"org.easymock.tests2.MockedExceptionTest.testMockedException":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":96,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests.LimitationsTest.mockFinalMethod":84,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":94,"org.easymock.tests2.CaptureTest.testCapture1_2446744":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":236,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":139,"org.easymock.tests.UsageStrictMockTest.differentMethods":123,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":39,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":10,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":230,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":219,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests2.UsageTest.niceToStrict":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":14,"org.easymock.tests.LimitationsTest.privateConstructor":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":170,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":40,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.UsageTest.defaultResetToNice":107,"org.easymock.samples.ExampleTest.voteAgainstRemovals":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":60,"org.easymock.tests.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":155,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":247,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.MockClassControlTest.testEquals":105,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":89,"org.easymock.tests.MockingTest.testStrictClassMocking":92,"org.easymock.tests2.CaptureTest.testCaptureAll":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":269,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.testMatches":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.CompareToTest.testGreateOrEqual":279,"org.easymock.samples.ExampleTest.voteForRemovals":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":273,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.DependencyTest.testInterfaceMocking":204,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":272,"org.easymock.samples.BasicClassMockTest.testPrintContent":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.AnswerTest.stubAnswer":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":283,"org.easymock.tests2.UsageConstraintsTest.greaterThan":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":218,"org.easymock.samples.ExampleTest.voteForRemoval":208,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":80,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":66,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":254,"org.easymock.tests.UsageExpectAndReturnTest.floatType":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":70,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":43,"org.easymock.tests2.SerializationTest.test":148,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":36,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":237,"org.easymock.tests2.UsageConstraintsTest.testSame":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":4,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests2.CaptureTest.testCaptureFirst":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":11,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":180,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.GenericTest.testBridgedEquals":91,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":131,"org.easymock.tests.UsageExpectAndReturnTest.longType":239,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":248,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":244,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":48,"org.easymock.tests.MockingTest.testNiceClassMocking":98,"org.easymock.tests.MockingTest.testClassMocking":93,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":121,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests.UsageExpectAndReturnTest.object":246,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":77,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":271,"org.easymock.tests.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":281,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":282,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":15,"org.easymock.tests2.CaptureTest.testCaptureRightOne":129,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":134,"org.easymock.tests2.UsageConstraintsTest.testOr":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":145,"org.easymock.tests.MockClassControlTest.testHashCode":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":12,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":16,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":79,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":194,"org.easymock.tests.DefaultClassInstantiatorTest.object":74,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":250,"org.easymock.tests2.CaptureTest.testCapture":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":63,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":103,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":102,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":85,"org.easymock.tests.LimitationsTest.abstractClass":81,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189}}]
