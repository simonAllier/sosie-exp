[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,1,2,25,26,27,3,4,28,29,30,31,5,32,6,7,33,34,35,36,37,38,39,40,41,42,43,44,45,8,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,9,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,10,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,0,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,242,243,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,11,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[504,505,383,424,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[508],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[19,22,23,24,34,36,43,44,45,46,49,54,56,57,58,59,60,61,62,63,64,65,66,67,68,9,69,70,71,72,73,74,75,76,78,81,83,87,94,102,0,103,105,106,107,108,109,110,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,162,166,169,179,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,218,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,242,243,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,268,269,270,271,272,273,274,276,288,290,291,292,293,294,295,297,298,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,359,360,362,367,369,370,372,375,377,381,382,383,384,385,386,387,388,389,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,443,450,451,452,453,454,455,468,469,470,471,472,473,474,475,476,478,479,480,481,482,483,484,486,487,488,490,491,493,494,495,496,497],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,34,39,43,45,46,49,56,57,58,59,60,61,62,63,64,65,66,67,68,9,69,70,71,72,73,74,75,76,78,81,82,83,84,87,94,101,102,0,103,104,105,106,107,108,109,110,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,169,179,185,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,218,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,242,243,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,261,262,263,264,266,267,268,269,270,271,272,273,274,275,283,284,285,286,287,288,290,291,292,293,294,295,297,298,299,317,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,358,359,360,362,378,379,381,382,383,384,385,386,387,388,389,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,466,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,494,495,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[271,294,401,407,414,415],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[19,22,34,43,45,46,56,57,58,59,60,61,62,64,65,66,67,68,9,69,70,71,72,73,74,75,76,78,83,87,94,102,103,105,107,108,109,110,111,112,117,118,120,121,122,126,127,129,134,137,140,141,143,144,146,149,152,153,154,155,156,157,166,169,179,185,188,189,193,194,195,196,197,198,200,201,202,203,204,205,208,218,225,226,227,228,229,230,231,234,244,245,246,247,248,249,250,251,252,253,254,256,257,258,262,263,264,266,267,283,285,286,288,295,297,298,330,331,333,338,343,348,349,350,351,352,353,354,355,359,360,362,382,383,384,385,386,387,388,400,401,403,408,413,425,428,429,430,431,432,436,437,438,439,443,477,478,481,482,486,487,488,490,491,493,494,495,496,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[191,192],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[108,110,111,119,509,510,511,512,384,386,387,423,431,480,481,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"state","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[513],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[80,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[101,102,0,103,104,105,250,285],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[105],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[2,3,4,28,7,8,47,9,87,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":422,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":311,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":244,"org.easymock.tests2.DelegateToTest.testReturnException":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":451,"org.easymock.tests.MockingTest.testPartialClassMocking":359,"org.easymock.tests.MockClassControlTest.testToString":277,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":509,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":436,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":470,"org.easymock.samples.ExampleTest.answerVsDelegate":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":501,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":282,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":26,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":440,"org.easymock.tests.UsageTest.moreThanOneArgument":423,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":347,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":272,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":445,"org.easymock.tests.UsageTest.argumentsOrdered":429,"org.easymock.tests.UsageVarargTest.varargIntAccepted":488,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":290,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":294,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests.ReplayStateInvalidUsageTest.times":374,"org.easymock.tests2.AnswerTest.answer":19,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":212,"org.easymock.tests2.CaptureTest.testAnd":195,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":60,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":449,"org.easymock.tests2.DelegateToTest.testDelegate":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":343,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":378,"org.easymock.tests2.CaptureTest.testCapture1_2446744":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":210,"org.easymock.tests.UsageThrowableTest.throwError":348,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":368,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":500,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":187,"org.easymock.samples.PartialClassMockTest.testGetArea":245,"org.easymock.tests.MockingTest.testInterfaceMocking":361,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":420,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":174,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":329,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":182,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":221,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":337,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":468,"org.easymock.tests.UsageOverloadedMethodTest.overloading":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":409,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":146,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":12,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":204,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":489,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.MockClassControlTest.testEquals":281,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":345,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":211,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":366,"org.easymock.samples.ExampleTest.voteForRemovals":254,"org.easymock.tests.UsageVarargTest.allKinds":497,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":96,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":396,"org.easymock.tests2.UsageConstraintsTest.greaterThan":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":397,"org.easymock.samples.ExampleTest.voteForRemoval":251,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":85,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":77,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":58,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":450,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":101,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":59,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":405,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":193,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":496,"org.easymock.tests.GenericTest.testBridgedEquals":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":266,"org.easymock.tests.UsageExpectAndReturnTest.longType":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":56,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":346,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":485,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":270,"org.easymock.tests.UsageCallCountTest.tooManyCalls":267,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":353,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":226,"org.easymock.tests.MockingTest.testNiceClassMocking":365,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests2.UsageConstraintsTest.testContains":145,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":260,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":234,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":479,"org.easymock.tests.MockTypeTest.fromEasyMockClass":499,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":381,"org.easymock.tests.UsageExpectAndReturnTest.object":408,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":64,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":491,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":462,"org.easymock.tests.UsageTest.exactCallCountByLastCall":430,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":446,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":90,"org.easymock.tests.MockClassControlTest.testHashCode":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":176,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":209,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":130,"org.easymock.tests.UsageVarargTest.varargCharAccepted":490,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":390,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":25,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":391,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":325,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":335,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":216,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":82,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":415,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":185,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":278,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":453,"org.easymock.tests2.StubTest.stubWithReturnValue":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":407,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":70,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":317,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":248,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":340,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":323,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":20,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":467,"org.easymock.tests.UsageExpectAndThrowTest.object":338,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DelegateToTest.testWrongClass":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":483,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":484,"org.easymock.tests.UsageStrictMockTest.range":386,"org.easymock.samples.ConstructorCalledMockTest.testTax":242,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":115,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":339,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":469,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":421,"org.easymock.tests2.CaptureTest.testCaptureNone":203,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":15,"org.easymock.tests.UsageUnorderedTest.message":431,"org.easymock.tests.UsageVerifyTest.twoReturns":482,"org.easymock.tests.UsageVarargTest.varargByteAccepted":495,"org.easymock.tests2.ThreadingTest.testThreadSafe":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":180,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":264,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":463,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":321,"org.easymock.tests2.UsageConstraintsTest.any":143,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":373,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndThrowTest.longType":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":11,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":372,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":109,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":417,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":299,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":215,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests2.NameTest.nameForMocksControl":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":217,"org.easymock.tests2.MockedExceptionTest.testMockedException":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":168,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":427,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":332,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":362,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":360,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":1,"org.easymock.tests2.CaptureTest.testCaptureLast":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":213,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":379,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":231,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.MockingTest.testTwoMocks":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":336,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":17,"org.easymock.samples.ExampleTest.removeNonExistingDocument":255,"org.easymock.tests.UsageStrictMockTest.differentMethods":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":220,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":91,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":393,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":192,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":170,"org.easymock.tests.UsageExpectAndThrowTest.floatType":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":22,"org.easymock.tests.UsageVerifyTest.twoThrows":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":88,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.ExampleTest.voteAgainstRemoval":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests.LimitationsTest.privateConstructor":442,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.differentLength":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":214,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.UsageConstraintsTest.equals":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":79,"org.easymock.tests.UsageTest.openCallCountByLastCall":426,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":438,"org.easymock.tests.UsageCallCountTest.tooFewCalls":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":471,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":16,"org.easymock.tests.UsageThrowableTest.throwCheckedException":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":230,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":227,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":229,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":24,"org.easymock.tests.ObjectMethodsTest.testHashCode":461,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":194,"org.easymock.tests2.NameTest.nameForNiceMock":240,"org.easymock.tests2.DependencyTest.testInterfaceMocking":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.AnswerTest.stubAnswer":23,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":384,"org.easymock.tests.UsageVarargTest.varargLongAccepted":494,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":416,"org.easymock.tests.UsageExpectAndReturnTest.floatType":400,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":87,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":243,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":98,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageThrowableTest.noUpperLimit":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":132,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":113,"org.easymock.tests2.SerializationTest.test":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":399,"org.easymock.tests2.UsageConstraintsTest.testSame":138,"org.easymock.samples.SupportTest.addDocument":247,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":171,"org.easymock.tests.GenericTest.testPackageScope":297,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":97,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":363,"org.easymock.tests2.NameTest.nameForMock":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":410,"org.easymock.tests2.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":402,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":342,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":435,"org.easymock.tests2.MockedExceptionTest.testRealException":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":503,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":53,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":437,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":377,"org.easymock.tests2.NameTest.nameForStrictMock":239,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":42,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":114,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":394,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":152,"org.easymock.tests.ErrorMessageTest.testGetters":511,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":110,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":93,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":14,"org.easymock.tests2.UsageConstraintsTest.testOr":139,"org.easymock.tests.UsageRangeTest.combination":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":72,"org.easymock.tests.UsageTest.wrongArguments":425,"org.easymock.tests2.MockBuilderTest.testWithConstructor":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":172,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":302,"org.easymock.tests.UsageVarargTest.varargShortAccepted":493,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":265,"org.easymock.tests2.UsageConstraintsTest.cmpTo":144,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":21,"org.easymock.tests2.CompareToTest.testLessThan":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":367,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":424,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":412,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":385,"org.easymock.tests2.UsageConstraintsTest.constraints":133,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageStrictMockTest.testVerify":389,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":246,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":382,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CompareToTest.testGreateThan":18,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":292,"org.easymock.tests.LimitationsTest.abstractClass":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":404,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":293,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":512,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":62}}]
