[{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[5,6,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,1,2,3,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,4,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10,54,57,164,167,332,342,348,351,352,353,354,355,356,357,358,360,361,362,411,417,418,420,469],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[255],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[6,6,7,7,10,20,21,54,57,62,63,64,66,135,165,166,167,194,200,309,1,3,329,332,342,348,351,473,352,353,355,356,357,358,360,361,474,362,364,365,366,367,369,370,405,406,408,409,410,411,413,416,417,418,4,475,471],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[10,355,357,358,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[5,6,6,7,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,62,63,64,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,106,107,108,109,110,111,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,196,197,198,223,229,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,312,313,314,315,316,317,318,319,320,321,322,323,324,325,1,2,3,329,332,342,348,351,352,355,356,357,358,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,416,417,418,4,426,437,438,439,440,441,442,443,444,445,446,447,448,449,450,456,463,464,465,466,467,468,469,470,471,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[39,40,41,43,53,93,96,97,133,176,180,181,183,186,291,304,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[477,478,479,39,40,41,43,45,48,49,92,93,95,96,198,291,292,298,299,304,306,307,312,313,314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[6,6,7,7,9,10,12,14,15,17,38,39,41,42,43,46,47,50,51,52,63,64,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,96,100,101,103,105,107,108,111,133,142,143,144,145,146,165,167,169,170,171,194,196,197,223,229,244,246,247,248,249,250,251,257,258,259,260,261,262,263,264,265,270,271,272,273,274,275,276,277,278,279,280,281,282,286,287,289,290,291,293,295,296,297,300,301,304,306,307,309,316,320,1,2,329,332,342,348,352,355,357,358,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,417,418,4,426,437,438,440,441,444,445,446,447,448,449,450,456,465,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"returnType","throwableClass":"returnType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[391],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[309,310,1,480,359,481,482,483,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[5,8,9,11,12,14,15,16,17,19,20,21,25,26,27,29,30,32,33,34,35,36,45,48,49,51,52,91,92,94,95,96,97,109,135,158,159,160,162,163,166,198,245,274,280,281,282,283,292,294,298,299,303,305,306,307,308,3,355,400,438,439,442,443,444,445,450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":379,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":217,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":137,"org.easymock.tests.MockingTest.testPartialClassMocking":63,"org.easymock.tests.MockClassControlTest.testToString":201,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":311,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":332,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":477,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":481,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":126,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":57,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":68,"org.easymock.tests2.UsageConstraintsTest.testNull":382,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":408,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":280,"org.easymock.tests2.CaptureTest.testPrimitive":440,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":191,"org.easymock.tests.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":259,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":142,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":146,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":456,"org.easymock.tests.ReplayStateInvalidUsageTest.times":120,"org.easymock.tests2.DependencyTest.testClassMocking":284,"org.easymock.tests2.AnswerTest.answer":316,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":325,"org.easymock.tests2.CaptureTest.testAnd":437,"org.easymock.tests2.UsageTest.strictResetToDefault":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":275,"org.easymock.tests2.DelegateToTest.testDelegate":468,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests.LimitationsTest.mockFinalMethod":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":151,"org.easymock.tests2.DependencyTest.testClassMockingSupport":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":441,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":323,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":114,"org.easymock.tests.UsageThrowableTest.throwError":244,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":56,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":261,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":350,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":115,"org.easymock.tests.MockingTest.testInterfaceMocking":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":243,"org.easymock.tests2.UsageTest.niceToStrict":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":355,"org.easymock.tests2.MockBuilderTest.testCreateMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":181,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":124,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":392,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":81,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":391,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":446,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":28,"org.easymock.tests.MockClassControlTest.testEquals":205,"org.easymock.tests2.EasyMockSupportClassTest.testAll":329,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":166,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests2.CaptureTest.testCaptureAll":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":324,"org.easymock.tests.MockNameTest.defaultName":37,"org.easymock.tests2.UsageConstraintsTest.testMatches":393,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":260,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":36,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":150,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":4,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":237,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":419,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":372,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":411,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":273,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":136,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":463,"org.easymock.tests2.CaptureTest.testCaptureFirst":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":274,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":77,"org.easymock.tests2.CaptureTest.testCapture2_2446744":449,"org.easymock.tests2.UsageTest.moreThanOneArgument":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":225,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":35,"org.easymock.tests.GenericTest.testBridgedEquals":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":162,"org.easymock.tests.UsageExpectAndReturnTest.longType":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":147,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":271,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":474,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":400,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":257,"org.easymock.tests.UsageCallCountTest.tooManyCalls":163,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests.MockingTest.testNiceClassMocking":69,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":365,"org.easymock.tests.MockingTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":473,"org.easymock.tests2.UsageConstraintsTest.testContains":390,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":471,"org.easymock.tests2.UsageConstraintsTest.testFind":381,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests.MockTypeTest.fromEasyMockClass":55,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":268,"org.easymock.tests.UsageExpectAndReturnTest.object":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":482,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":30,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":241,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":102,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":310,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":86,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":422,"org.easymock.tests.MockClassControlTest.testHashCode":204,"org.easymock.tests2.EasyMockSupportTest.testVerify":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":339,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":322,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":29,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests.DefaultClassInstantiatorTest.object":231,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":22,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":417,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":152,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":348,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":139,"org.easymock.tests2.StubTest.stubWithReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":480,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":184,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":317,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":104,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":398,"org.easymock.tests2.DelegateToTest.testWrongClass":466,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":197,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":435,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":357,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":122,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":125,"org.easymock.tests2.CaptureTest.testCaptureNone":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":101,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":476,"org.easymock.tests.UsageUnorderedTest.message":198,"org.easymock.tests.UsageVerifyTest.twoReturns":41,"org.easymock.tests.UsageVarargTest.varargByteAccepted":34,"org.easymock.tests2.ThreadingTest.testThreadSafe":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":343,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":160,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":242,"org.easymock.tests2.CaptureTest.testCapture_2617107":439,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageConstraintsTest.any":388,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":119,"org.easymock.tests2.StubTest.stub":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":154,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":118,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":426,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":194,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests2.NameTest.nameForMocksControl":315,"org.easymock.tests2.MockedExceptionTest.testMockedException":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":331,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":176,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":267,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":405,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":358,"org.easymock.tests.MockingTest.testNicePartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests2.CaptureTest.testCaptureLast":444,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":370,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":399,"org.easymock.tests.MockingTest.testTwoMocks":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":403,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":116,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":423,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":233,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":373,"org.easymock.tests2.MockBuilderTest.testCreateMockString":362,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":199,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":319,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":342,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":418,"org.easymock.tests.LimitationsTest.privateConstructor":193,"org.easymock.tests2.UsageConstraintsTest.testNotNull":402,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":469,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.UsageVarargTest.differentLength":31,"org.easymock.tests2.CallbackTest.callback":288,"org.easymock.tests2.UsageConstraintsTest.equals":380,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":414,"org.easymock.tests.UsageTest.openCallCountByLastCall":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.UsageCallCountTest.tooFewCalls":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":127,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests.MockingTest.testStrictClassMocking":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":368,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":321,"org.easymock.tests.ObjectMethodsTest.testHashCode":240,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":375,"org.easymock.tests2.DependencyTest.testInterfaceMocking":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":483,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.stubAnswer":320,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests.UsageVarargTest.varargLongAccepted":33,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":309,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":396,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageThrowableTest.noUpperLimit":245,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":377,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":433,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":442,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":71,"org.easymock.tests2.UsageConstraintsTest.testSame":383,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":334,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":429,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":67,"org.easymock.tests2.NameTest.nameForMock":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":82,"org.easymock.tests2.UsageStrictMockTest.differentMethods":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":265,"org.easymock.tests2.MockedExceptionTest.testRealException":472,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":220,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":304,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests2.NameTest.nameForStrictMock":313,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":434,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":397,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":352,"org.easymock.tests2.UsageStrictMockTest.range":306,"org.easymock.tests2.UsageConstraintsTest.lessThan":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":272,"org.easymock.tests2.CaptureTest.testCaptureRightOne":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":338,"org.easymock.tests2.UsageConstraintsTest.testOr":384,"org.easymock.tests.UsageRangeTest.combination":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":406,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":335,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":208,"org.easymock.tests.UsageVarargTest.varargShortAccepted":32,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":236,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":161,"org.easymock.tests2.UsageConstraintsTest.cmpTo":389,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":448,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":113,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":353,"org.easymock.tests.UsageTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":84,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.UsageConstraintsTest.constraints":378,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":98,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":5,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":148,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":443,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":76,"org.easymock.tests.LimitationsTest.abstractClass":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":479,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":277}}]
