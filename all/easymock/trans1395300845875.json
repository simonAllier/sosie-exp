[{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[14,15,19,20,170,31,40,171,47],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[172,173,174,175,176,177],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[178,179,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[181,39,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[183,184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[186,12,13,14,15,16,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,36,37,39,40,41,171,42,43,187,188,44,46,47,189,48,49,190,59,191,192,193,66,67,68,69,70,71,73,74,75,76,81,194,105,106,107,108,109,133,140,195,196,197,198,149,199,153,200,155,156,157,158,159,201,202,167,168,169],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[14,203,204,205,206,56,190,59,191,62,192,193,64,67,69,70,72,73,207,208,79,80,81,209,210,178,101,103,194,211,106,107,212,213,214,215,143,216,196,197,198,147,199,152,217,218,219,220,221,222,201,202,223,168,169],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[29,224],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,105,107,225,226,144,151,199,152,161,167,169,227],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[28,191,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[6,228,229,230,231,232,233,234,102,235],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[236,237,238,239,216,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[240,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[242],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[243,244],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[245,245,246,246,0,247,1,2,248,3,249,250,251,252,253,4,254,5,186,6,7,255,8,9,10,11,256,257,12,13,14,15,16,17,18,19,20,21,170,22,23,24,25,26,27,28,29,30,31,32,33,258,34,35,36,37,38,181,259,260,39,261,203,204,205,206,40,41,171,42,43,187,188,44,45,46,47,189,48,49,50,51,52,53,54,262,263,55,264,265,266,56,57,58,190,59,191,60,61,62,192,193,63,64,65,66,67,68,69,70,71,72,73,74,75,76,267,207,77,78,208,79,80,268,81,209,82,83,84,85,86,87,210,88,178,89,90,91,92,93,94,95,96,97,98,99,100,101,269,270,180,271,102,103,272,273,104,243,194,274,105,211,106,107,225,275,108,212,213,214,215,109,276,277,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,278,279,133,134,135,136,137,280,281,282,283,284,285,286,287,288,289,290,291,292,293,138,139,294,295,140,141,296,195,142,143,144,216,196,145,146,197,198,147,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,148,149,150,151,199,152,317,318,319,320,321,322,153,200,154,155,156,157,158,159,160,323,324,325,244,326,161,327,162,163,164,165,166,242,328,217,218,219,220,221,329,330,331,222,201,332,202,167,223,168,169,227,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[6,7,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[358,359,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[6,7,255,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[173,176],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[62,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:122","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,247,1,2,248,3,249,186,6,7,255,256,257,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,260,39,261,203,204,205,206,40,41,171,42,43,187,188,44,45,46,47,189,48,49,50,51,52,53,54,263,55,264,266,56,57,58,190,59,191,60,61,62,192,193,63,64,363,207,78,208,81,209,82,83,84,85,86,87,88,178,90,93,94,97,98,99,269,270,180,271,102,272,273,104,243,194,274,105,211,106,107,225,275,108,212,213,214,215,109,276,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,279,133,134,135,136,364,137,280,283,284,285,286,287,289,290,291,292,293,138,139,295,365,140,141,296,195,142,143,144,216,196,145,146,197,198,147,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,149,150,151,199,152,153,200,154,155,156,157,158,159,160,161,162,163,164,165,166,217,218,219,220,221,222,201,332,202,167,223,168,169,227,333,334,335,336,337,338,339,345,346,347,348,349,350,366,351,352,353,354],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[245,245,246,246,250,251,4,6,255,8,9,10,11,207,77,367,78,208,79,80,268,81,209,82,83,85,86,87,210,88,178,89,90,91,179,92,93,94,95,97,98,102,104,277,110,111,112,368,364,369,370,371,137,280,281,295,372,373,160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[245,245,246,246,250,251,4,6,255,8,9,10,11,207,374,77,367,78,208,79,80,268,81,375,209,82,83,85,86,87,210,88,178,89,90,91,92,93,94,95,97,98,376,102,104,277,110,111,112,364,137,280,281,295,372,373,160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[173,176],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[245,245,246,246,250,251,4,6,255,8,9,10,11,207,77,367,78,208,79,80,268,81,209,82,83,85,86,87,210,88,178,89,90,91,179,92,93,94,95,97,98,102,104,277,110,111,112,368,364,369,370,371,137,280,281,295,372,373,160],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests2.UsageTest.argumentsOrdered":193,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":337,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":228,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":255,"org.easymock.tests2.DelegateToTest.testReturnException":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":335,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":242,"org.easymock.tests.MockingTest.testPartialClassMocking":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":237,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":240,"org.easymock.tests.MockClassControlTest.testToString":369,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":179,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":361,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":297,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":181,"org.easymock.tests.UsageExpectAndThrowTest.object":307,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":32,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":100,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":140,"org.easymock.tests2.UsageTest.wrongArguments":190,"org.easymock.samples.ConstructorCalledMockTest.testTax":245,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":214,"org.easymock.samples.ExampleTest.answerVsDelegate":247,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":72,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":92,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":308,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":74,"org.easymock.tests2.CaptureTest.testPrimitive":42,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":316,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests.UsageTest.moreThanOneArgument":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":238,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":319,"org.easymock.tests2.CaptureTest.testCaptureNone":45,"org.easymock.tests.UsageUnorderedTest.message":222,"org.easymock.tests.UsageVerifyTest.twoReturns":152,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":50,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":340,"org.easymock.tests.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":354,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":195,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":208,"org.easymock.tests2.UsageConstraintsTest.any":22,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":336,"org.easymock.tests.UsageExpectAndThrowTest.longType":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":101,"org.easymock.tests.LimitationsTest.mockNativeMethod":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":281,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":132,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":57,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":178,"org.easymock.tests2.NameTest.nameForMocksControl":271,"org.easymock.tests2.MockedExceptionTest.testMockedException":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":69,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":344,"org.easymock.tests2.DelegateToTest.testDelegate":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":301,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":312,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":87,"org.easymock.tests2.CaptureTest.testCaptureLast":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":279,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":221,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":33,"org.easymock.tests.MockingTest.testTwoMocks":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":278,"org.easymock.tests2.CaptureTest.testCapture1_2446744":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":36,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":174,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":52,"org.easymock.tests2.MockBuilderTest.testCreateMockString":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests.UsageExpectAndThrowTest.floatType":299,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":28,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests.UsageVerifyTest.twoThrows":199,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":10,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.samples.ExampleTest.voteAgainstRemoval":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":298,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":268,"org.easymock.tests2.UsageTest.defaultResetToNice":62,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":128,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests.UsageTest.openCallCountByLastCall":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":306,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":212,"org.easymock.tests.UsageCallCountTest.tooFewCalls":352,"org.easymock.tests.UsageOverloadedMethodTest.overloading":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":26,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":124,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":25,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":215,"org.easymock.tests.UsageThrowableTest.throwCheckedException":156,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":239,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests2.CaptureTest.testCaptureAll":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.testMatches":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":96,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":54,"org.easymock.tests2.NameTest.nameForNiceMock":180,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests2.DependencyTest.testInterfaceMocking":99,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":232,"org.easymock.samples.BasicClassMockTest.testPrintContent":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":220,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.DelegateToTest.testStubDelegate":55,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":158,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.AnswerTest.stubAnswer":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":339,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":265,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":234,"org.easymock.tests2.UsageConstraintsTest.greaterThan":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":134,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.samples.ExampleTest.voteForRemoval":1,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":177,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":51,"org.easymock.tests.UsageExpectAndReturnTest.floatType":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":102,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":295,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":13,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":187,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":173,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.testSame":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":114,"org.easymock.samples.SupportTest.addDocument":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":334,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":262,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":120,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests2.CaptureTest.testCapture2_2446744":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":343,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":356,"org.easymock.tests2.NameTest.nameForMock":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":217,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":65,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":125,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":313,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":321,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":117,"org.easymock.tests.UsageCallCountTest.tooManyCalls":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":136,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":351,"org.easymock.tests2.MockedExceptionTest.testRealException":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":302,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":93,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.NameTest.nameForStrictMock":270,"org.easymock.tests2.UsageConstraintsTest.testContains":24,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":16,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests.UsageExpectAndReturnTest.object":123,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":73,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":231,"org.easymock.tests.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":233,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":66,"org.easymock.tests2.CaptureTest.testCaptureRightOne":47,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":341,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":235,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests.UsageTest.wrongArguments":196,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":126,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":183,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":176,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests2.UsageConstraintsTest.cmpTo":23,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":259,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests2.UsageTest.openCallCountByLastCall":60,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":359,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":76,"org.easymock.tests.DefaultClassInstantiatorTest.object":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":329,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":304,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":127,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":371,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":303,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests.UsageStrictMockTest.testVerify":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":320,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":252,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":370,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":11,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":184,"org.easymock.tests2.CompareToTest.testGreateThan":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":218,"org.easymock.tests2.UsageTest.resumeIfFailure":63,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":119,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":71}}]
