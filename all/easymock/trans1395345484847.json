[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,6,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,0,38,39,40,41,1,42,43,44,45,46,47,48,49,50,2,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[43,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:60","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[11,12,13,14,15,16,17,18,6,19,20,21,22,23,24,25,26,27,28,29,30,31,72,33,34,35,36,37,0,38,39,40,41,1,42,43,44,45,46,47,48,49,50,2,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[35,40,58,60,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[74,75,76,77,78,79,13,80,81,82,83,31,84],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[86,48,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[89,90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,11,117,118,74,119,75,76,120,121,122,77,78,123,124,79,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,12,13,153,154,155,156,157,158,159,160,161,14,15,16,17,18,6,19,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,20,178,21,22,23,24,25,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,26,27,28,218,219,9,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,29,30,10,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,80,264,265,266,267,86,81,82,85,268,269,270,83,271,272,31,273,274,275,276,277,278,279,280,281,84,282,283,284,285,286,287,288,289,290,291,292,293,294,295,72,296,33,34,35,36,37,0,38,39,40,41,1,42,43,44,45,46,47,48,49,50,2,51,52,53,54,3,55,56,297,298,299,300,58,59,60,61,62,63,64,65,66,67,68,69,70,71,301,302,303,304,305,306,307,308,309,310,311,312,313,314],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[46,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[36,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[35,36,37,0,38,39,40,41,1,42,2,51,3,55,58,59,60,61,68,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[318,319,121,12,320,321],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests2.UsageTest.argumentsOrdered":269,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.tests2.StubTest.stubWithReturnValue":247,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":54,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":96,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.DelegateToTest.testReturnException":306,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":321,"org.easymock.samples.SupportTest.voteForRemovals":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":89,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":9,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":282,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":262,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":51,"org.easymock.tests2.DelegateToTest.testWrongClass":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":41,"org.easymock.tests2.UsageTest.wrongArguments":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests.UsageStrictMockTest.range":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":165,"org.easymock.samples.ExampleTest.answerVsDelegate":98,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":255,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":257,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests.UsageTest.moreThanOneArgument":120,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":240,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":160,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":316,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.UsageVerifyTest.twoReturns":75,"org.easymock.tests.UsageVarargTest.varargByteAccepted":115,"org.easymock.tests2.ThreadingTest.testThreadSafe":293,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":233,"org.easymock.tests.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageVarargTest.varargIntAccepted":109,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":191,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":302,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":8,"org.easymock.tests2.CaptureTest.testCapture_2617107":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests2.UsageConstraintsTest.any":42,"org.easymock.tests2.StubTest.stub":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":186,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":299,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests2.AnswerTest.answer":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":290,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":264,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.NameTest.nameForMocksControl":281,"org.easymock.tests2.MockedExceptionTest.testMockedException":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":245,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.DelegateToTest.testDelegate":310,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":237,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":297,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":40,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":183,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":125,"org.easymock.tests2.CaptureTest.testCapture1_2446744":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.tests.UsageThrowableTest.throwError":225,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":155,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":128,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":295,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":242,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":48,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":284,"org.easymock.tests.UsageVerifyTest.twoThrows":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":4,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":159,"org.easymock.tests2.UsageTest.niceToStrict":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":311,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":232,"org.easymock.tests2.UsageTest.defaultResetToNice":85,"org.easymock.samples.ExampleTest.voteAgainstRemovals":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.CallbackTest.callback":263,"org.easymock.tests2.UsageConstraintsTest.equals":91,"org.easymock.tests.UsageTest.openCallCountByLastCall":77,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":106,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":163,"org.easymock.tests.UsageCallCountTest.tooFewCalls":189,"org.easymock.tests.UsageOverloadedMethodTest.overloading":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":46,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":45,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":289,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":304,"org.easymock.tests.MockNameTest.defaultName":117,"org.easymock.tests2.UsageConstraintsTest.testMatches":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":292,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":241,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":162,"org.easymock.tests2.CompareToTest.testGreateOrEqual":315,"org.easymock.tests.ObjectMethodsTest.testHashCode":222,"org.easymock.samples.ExampleTest.voteForRemovals":102,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":296,"org.easymock.tests2.NameTest.nameForNiceMock":280,"org.easymock.tests.UsageVarargTest.allKinds":11,"org.easymock.tests2.DependencyTest.testInterfaceMocking":261,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":182,"org.easymock.samples.ExampleTest.addDocument":101,"org.easymock.tests2.DelegateToTest.testStubDelegate":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":231,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.AnswerTest.stubAnswer":285,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":178,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.UsageConstraintsTest.greaterThan":49,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.samples.ExampleTest.voteForRemoval":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":294,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":277,"org.easymock.tests.UsageThrowableTest.noUpperLimit":226,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":50,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.SerializationTest.test":291,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":250,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests2.UsageConstraintsTest.testSame":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.samples.SupportTest.addDocument":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":251,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests2.UsageTest.moreThanOneArgument":265,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":70,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":236,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":116,"org.easymock.tests2.NameTest.nameForMock":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":193,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":53,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageCallCountTest.tooManyCalls":194,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":246,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":188,"org.easymock.tests2.MockedExceptionTest.testRealException":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests2.NameTest.nameForStrictMock":279,"org.easymock.tests2.UsageConstraintsTest.testContains":44,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":313,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":197,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests.MockTypeTest.fromEasyMockClass":127,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.UsageStrictMockTest.range":274,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":256,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":14,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":249,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":234,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":73,"org.easymock.tests2.UsageConstraintsTest.testOr":39,"org.easymock.tests.UsageRangeTest.combination":243,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.UsageTest.wrongArguments":122,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":169,"org.easymock.tests2.EasyMockSupportTest.testVerify":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":105,"org.easymock.tests.UsageVarargTest.varargShortAccepted":113,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":192,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":32,"org.easymock.tests2.UsageConstraintsTest.cmpTo":43,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":301,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":283,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":104,"org.easymock.tests2.CaptureTest.testCaptureFromStub":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":121,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":228,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.samples.ExampleTest.addAndChangeDocument":103,"org.easymock.tests.CapturesMatcherTest.test":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.UsageStrictMockTest.testVerify":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":184,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":93,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":180,"org.easymock.tests2.UsageTest.resumeIfFailure":270,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":24,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":254,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":108}}]
