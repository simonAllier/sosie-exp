[{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.Range:40","failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,29,30,31,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,2,3,123,4,5,6,7,8,9,10,11,124,125,126,127,128,129,130,131,12,13,132,133,134,14,15,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,0,150,151,152,16,17,18,19,153,154,155,156,157,158,20,21,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,28,222,223,224,225,226,22,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,23,303,304,305,306,307,308,24,309,310,311,25,1,312,313,314,26,27,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[99,101,133,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[191],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[51,52,53,490,491,492,493,494,495,496,497,29,196,199,498,499],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[35,116,118,120,419],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[34,35,36,37,38,39,41,42,43,44,45,46,50,54,55,56,58,59,60,61,65,66,68,69,29,30,102,103,104,105,106,107,108,110,111,112,113,116,117,118,120,3,5,7,8,14,137,138,139,140,141,142,148,150,151,16,17,156,157,20,160,165,171,193,195,197,206,207,216,219,22,235,242,243,244,246,264,265,266,267,268,271,272,275,276,277,278,279,280,281,292,293,296,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,409,411,412,413,414,415,417,419,420,424,425,426,436,437,438,439,440,441,442,443,444,445,446,463,464,465,467,468,470,471,472,473,474],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[48,49,51,52,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,500,501,29,180,185,186,188,191,196,199,502,202],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[151,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[63,123,273],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[388],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[432,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,3,5,7,8,10,12,14,16,18,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,116,118,119,120,303,419],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[505,506],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","sourceCode":"return (((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","type":"CtReturnImpl"},"failures":[131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,29,30,31,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,2,3,123,4,5,6,7,8,9,10,11,124,125,126,127,128,129,130,131,12,13,132,133,134,14,15,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,0,150,151,152,16,17,18,19,153,154,155,156,157,158,20,21,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,28,222,223,224,225,226,22,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,23,303,304,305,306,307,308,24,309,310,311,25,1,312,313,314,26,27,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[45,46,47,48,48,49,49,51,52,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,29,31,178,179,180,181,184,185,187,189,190,192,193,194,195,197,199,200,201,203,204,205,208,209,210,212,215,216,218,219,220,221,222,223,224,225,226,22,227,228,229,247,248,249,250,251,282,283,284,285,286,288,291,294,295,296,297,298,388,393,428,429,430,431,432,433,435,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[33],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":310,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":59,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":44,"org.easymock.tests2.DelegateToTest.testReturnException":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":437,"org.easymock.tests.MockingTest.testPartialClassMocking":285,"org.easymock.tests.MockClassControlTest.testToString":483,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":143,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":368,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":491,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":276,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":254,"org.easymock.samples.ExampleTest.answerVsDelegate":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":393,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":218,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":488,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.CaptureTest.testPrimitive":19,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":387,"org.easymock.tests.UsageTest.moreThanOneArgument":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":458,"org.easymock.tests.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageVarargTest.varargIntAccepted":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":176,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":446,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.ReplayStateInvalidUsageTest.times":348,"org.easymock.tests2.DependencyTest.testClassMocking":204,"org.easymock.tests2.AnswerTest.answer":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":164,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":390,"org.easymock.tests2.CaptureTest.testAnd":16,"org.easymock.tests2.UsageTest.strictResetToDefault":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":462,"org.easymock.tests2.DelegateToTest.testDelegate":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":383,"org.easymock.tests.LimitationsTest.mockFinalMethod":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":263,"org.easymock.tests2.DependencyTest.testClassMockingSupport":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":153,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":162,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":342,"org.easymock.tests.UsageThrowableTest.throwError":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":392,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":94,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.MockingTest.testInterfaceMocking":287,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":455,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests2.UsageTest.niceToStrict":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":193,"org.easymock.tests2.MockBuilderTest.testCreateMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":399,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":252,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":420,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":158,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests.MockClassControlTest.testEquals":487,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":163,"org.easymock.tests2.CaptureTest.testCaptureAll":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":261,"org.easymock.tests.MockNameTest.defaultName":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":474,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":424,"org.easymock.samples.BasicClassMockTest.testPrintContent":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":358,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":173,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":497,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":434,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":227,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":435,"org.easymock.samples.ExampleTest.voteForRemoval":36,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":228,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":221,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":247,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":436,"org.easymock.tests2.CaptureTest.testCaptureFirst":160,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":66,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":327,"org.easymock.tests2.CaptureTest.testCapture2_2446744":159,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":201,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":473,"org.easymock.tests.GenericTest.testBridgedEquals":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":406,"org.easymock.tests.UsageExpectAndReturnTest.longType":323,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":386,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":457,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":384,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":407,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":328,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":357,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":179,"org.easymock.tests.MockingTest.testNiceClassMocking":291,"org.easymock.tests.MockingTest.testClassMocking":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":400,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":266,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":101,"org.easymock.tests.UsageExpectAndReturnTest.object":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":492,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":468,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":419,"org.easymock.tests.MockClassControlTest.testHashCode":486,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":167,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":83,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":460,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":417,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":161,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":67,"org.easymock.tests.UsageVarargTest.varargCharAccepted":467,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":427,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastCall":60,"org.easymock.tests.DefaultClassInstantiatorTest.object":428,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":166,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":485,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":374,"org.easymock.tests.CapturesMatcherTest.test":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":451,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":92,"org.easymock.tests2.UsageTest.resumeIfFailure":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":388,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":439,"org.easymock.tests2.StubTest.stubWithReturnValue":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":329,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":499,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":380,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":318,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":149,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":258,"org.easymock.tests.UsageExpectAndThrowTest.object":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":13,"org.easymock.tests2.DelegateToTest.testWrongClass":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":293,"org.easymock.tests.UsageStrictMockTest.range":413,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":213,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":70,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":456,"org.easymock.tests2.CaptureTest.testCaptureNone":157,"org.easymock.tests.UsageUnorderedTest.message":281,"org.easymock.tests.UsageVerifyTest.twoReturns":426,"org.easymock.tests.UsageVarargTest.varargByteAccepted":472,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":87,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":404,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":45,"org.easymock.tests2.CaptureTest.testCapture_2617107":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":316,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests2.StubTest.stub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndThrowTest.longType":371,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":346,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":297,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":339,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":147,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":75,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":100,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":197,"org.easymock.tests.MockingTest.testNicePartialClassMocking":286,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":490,"org.easymock.tests2.CaptureTest.testCaptureLast":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":300,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":185,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":132,"org.easymock.tests.MockingTest.testTwoMocks":284,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":376,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":15,"org.easymock.samples.ExampleTest.removeNonExistingDocument":40,"org.easymock.tests.UsageStrictMockTest.differentMethods":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":168,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":77,"org.easymock.tests.UsageExpectAndThrowTest.floatType":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":150,"org.easymock.tests.UsageVerifyTest.twoThrows":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":22,"org.easymock.tests.LimitationsTest.privateConstructor":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":359,"org.easymock.tests2.UsageTest.defaultResetToNice":62,"org.easymock.samples.ExampleTest.voteAgainstRemovals":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":335,"org.easymock.tests.UsageVarargTest.differentLength":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests2.CallbackTest.callback":165,"org.easymock.tests2.UsageConstraintsTest.equals":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":223,"org.easymock.tests.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":278,"org.easymock.tests.UsageCallCountTest.tooFewCalls":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":356,"org.easymock.tests.MockingTest.testStrictClassMocking":282,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":152,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.NameTest.nameForNiceMock":146,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":493,"org.easymock.samples.ExampleTest.addDocument":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":88,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.AnswerTest.stubAnswer":151,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":411,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":198,"org.easymock.tests.UsageVarargTest.varargLongAccepted":471,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndReturnTest.floatType":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":175,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.UsageThrowableTest.noUpperLimit":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":122,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":208,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":154,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":429,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":321,"org.easymock.samples.SupportTest.addDocument":42,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":182,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":78,"org.easymock.tests.GenericTest.testPackageScope":295,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":174,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":289,"org.easymock.tests2.NameTest.nameForMock":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":332,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":202,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":382,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":450,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":498,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":351,"org.easymock.tests2.NameTest.nameForStrictMock":145,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":189,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":494,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":24,"org.easymock.tests2.CaptureTest.testCaptureRightOne":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":82,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":33,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":216,"org.easymock.tests.UsageTest.wrongArguments":270,"org.easymock.tests2.MockBuilderTest.testWithConstructor":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":79,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":482,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":333,"org.easymock.tests.UsageVarargTest.varargShortAccepted":470,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":405,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":61,"org.easymock.tests2.CaptureTest.testCaptureFromStub":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":190,"org.easymock.tests.UsageTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":403,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":334,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":412,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.samples.ExampleTest.addAndChangeDocument":41,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":260,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":444,"org.easymock.tests.LimitationsTest.abstractClass":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":445,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108}}]
