[{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:380","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,1,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,3,95,4,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,5,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,289,290,290,291,292,293,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,0,1,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,63,64,65,66,67,68,71,72,73,75,76,78,79,82,85,87,88,89,90,91,92,93,94,3,95,4,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,296,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,5,205,206,207,208,209,210,211,212,213,214,215,216,217,225,226,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,260,261,262,263,265,267,270,271,272,273,274,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,35,36,37,38,39,40,43,44,45,46,47,48,50,51,52,53,55,56,57,58,59,60,63,64,65,66,72,73,75,76,78,79,82,85,87,88,89,90,91,92,93,94,3,95,4,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,116,117,119,120,123,124,125,126,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,5,205,206,207,208,209,210,211,212,213,214,215,216,217,225,226,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,260,261,262,263,265,267,270,271,272,273,274,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.Capture:82","failures":[50,52,53,54,55,56,57,59,297,60,61,63],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,298,22,0,29,34,44,45,64,66,299,70,71,82,111,300,140,301,302,303,304,305,306,307,308,309,170,171,172,173,213,214,215,216,217,310,218,311,219,220,312,221,313,314,222,315,223,316,246,317,253,272,318,319],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[15,16,18,19,20,298,21,320,321,22,322,23,323,324,325,44,45,46,326,64,327,328,329,330,65,66,67,68,331,299,69,332,333,70,111,112,113,114,116,117,334,335,336,337,338,339,340,341,342,343,344,127,345,346,128,347,2,348,349,350,351,352,353,354,129,355,356,357,358,359,130,360,361,131,133,134,362,300,140,301,302,303,304,305,306,363,364,365,161,366,367,162,163,368,369,370,371,372,373,374,260,261,262,375,263,318,376,377,378,379,380,381,287,288,289,289,290,290,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"failures":[50,60,92,3,108],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[376,380],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[382,331,383,384,385,386,387,131,134,362],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[382,331,383,384,385,387,131,134,362],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[77,83,84,122,388,169,211,212,253,254,257,258,266,269],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[16,322,323,1,27,28,31,328,299,69,70,74,77,78,79,83,84,85,86,89,101,118,121,122,123,135,390,388,169,391,211,212,392,393,232,317,394,395,251,253,254,257,258,259,264,266,268,269,270],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[50,51,52,57,58,60,63,89,90,92,94,3,108,203,274,275,276],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[396,397,398,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[400],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[298,325,44,64,66,128],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[382,401,383,384,385,386,402,403,387,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[131,132,133,404],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[405,6,7,8,9,10,11,12,13,406,407,408,409,410,14,411,412,413,414,415,416,15,16,17,18,19,20,298,417,21,320,321,22,322,23,323,324,325,0,1,24,25,26,27,28,29,30,31,32,33,34,35,418,419,36,37,38,39,40,41,42,43,44,45,46,47,420,421,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,422,328,329,423,330,65,66,67,382,68,424,331,299,69,425,70,426,427,428,429,430,71,431,432,433,434,435,436,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,437,91,92,93,94,3,95,438,4,96,97,98,99,100,101,102,103,104,105,106,439,107,108,109,110,440,111,112,113,114,441,115,116,117,442,118,119,120,121,122,123,124,125,443,126,340,444,445,446,341,447,448,342,343,344,127,345,346,128,347,2,348,349,350,351,352,353,354,129,355,356,357,358,359,130,360,361,131,132,133,134,362,449,135,450,136,137,138,451,139,452,453,296,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,300,140,301,302,303,304,305,306,478,307,308,309,479,363,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,480,364,365,161,366,367,162,163,368,369,164,165,166,167,168,370,481,482,483,484,371,485,486,487,488,489,169,170,171,172,173,490,491,492,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,493,197,198,391,199,200,201,202,203,5,204,205,206,207,208,209,494,495,496,497,498,210,211,212,213,214,215,216,217,310,218,311,219,220,312,221,313,314,222,315,223,224,225,226,227,228,229,230,231,393,232,233,234,235,499,500,501,502,503,504,236,316,237,238,239,240,241,242,243,244,245,246,247,248,249,250,317,394,395,251,252,253,254,255,256,257,258,259,372,373,374,260,261,505,262,506,507,375,263,264,265,266,267,268,269,270,271,272,508,509,510,511,512,513,273,274,275,276,277,514,318,376,377,378,379,380,515,381,516,278,279,280,281,282,283,284,285,319,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[50,52,53,54,55,56,57,59,297,60,61,63],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[50,52,53,54,55,56,57,59,297,60,61,63],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[405,6,7,8,9,10,11,12,13,406,407,408,409,410,14,411,412,413,414,415,416,15,16,17,18,19,20,298,417,21,320,321,22,322,23,323,324,325,0,1,24,25,26,27,28,29,30,31,32,33,34,35,418,419,36,37,38,39,40,41,42,43,44,45,46,47,420,421,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,422,328,329,423,330,65,66,67,382,68,424,331,299,69,425,70,426,427,428,429,430,71,431,432,433,434,435,436,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,437,91,92,93,94,3,95,438,4,96,97,98,99,100,101,102,103,104,105,106,439,107,108,109,110,440,111,112,113,114,441,115,116,117,442,118,119,120,121,122,123,124,125,443,126,340,444,445,446,341,447,448,342,343,344,127,345,346,128,347,2,348,349,350,351,352,353,354,129,355,356,357,358,359,130,360,361,131,132,133,134,362,449,135,450,136,137,138,451,139,452,453,296,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,300,140,301,302,303,304,305,306,478,307,308,309,479,363,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,480,364,365,161,366,367,162,163,368,369,164,165,166,167,168,370,481,482,483,484,371,485,486,487,488,489,169,170,171,172,173,490,491,492,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,493,197,198,391,199,200,201,202,203,5,204,205,206,207,208,209,494,495,496,497,498,210,211,212,213,214,215,216,217,310,218,311,219,220,312,221,313,314,222,315,223,224,225,226,227,228,229,230,231,393,232,233,234,235,499,500,501,502,503,504,236,316,237,238,239,240,241,242,243,244,245,246,247,248,249,250,317,394,395,251,252,253,254,255,256,257,258,259,372,373,374,260,261,505,262,506,507,375,263,264,265,266,267,268,269,270,271,272,508,509,510,511,512,513,273,274,275,276,277,514,318,376,377,378,379,380,515,381,516,278,279,280,281,282,283,284,285,319,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests2.UsageTest.argumentsOrdered":84,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":464,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":238,"org.easymock.tests.MockingTest.testPartialClassMocking":260,"org.easymock.tests.MockClassControlTest.testToString":301,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":405,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":128,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests2.UsageTest.wrongArguments":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":436,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":507,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":334,"org.easymock.tests2.CaptureTest.testPrimitive":53,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":207,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":494,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":415,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.ReplayStateInvalidUsageTest.times":314,"org.easymock.tests2.DependencyTest.testClassMocking":420,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":13,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":482,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":498,"org.easymock.tests2.DelegateToTest.testDelegate":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":217,"org.easymock.tests2.DependencyTest.testClassMockingSupport":421,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":452,"org.easymock.tests2.CaptureTest.testCapture1_2446744":54,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":11,"org.easymock.tests.UsageThrowableTest.throwError":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":311,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":361,"org.easymock.samples.PartialClassMockTest.testGetArea":291,"org.easymock.tests.MockingTest.testInterfaceMocking":505,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":488,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests2.UsageTest.niceToStrict":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":433,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":27,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":396,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":359,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":516,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":59,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":493,"org.easymock.tests2.EasyMockSupportClassTest.testAll":127,"org.easymock.tests.MockClassControlTest.testEquals":305,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":12,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":215,"org.easymock.tests.MockNameTest.defaultName":480,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":208,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":310,"org.easymock.samples.ExampleTest.voteForRemovals":285,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":216,"org.easymock.samples.BasicClassMockTest.testPrintContent":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":230,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":451,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":242,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":515,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":387,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":323,"org.easymock.samples.ExampleTest.voteForRemoval":282,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":381,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":40,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":324,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":298,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":24,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":237,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":450,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":25,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":148,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":42,"org.easymock.tests2.CaptureTest.testCapture2_2446744":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":202,"org.easymock.tests.GenericTest.testBridgedEquals":369,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":397,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":394,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":333,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":499,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":439,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":509,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":205,"org.easymock.tests.UsageCallCountTest.tooManyCalls":395,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":229,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":246,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":327,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests.MockTypeTest.fromEasyMockClass":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":126,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":384,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":198,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":398,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":511,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":157,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":194,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":502,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.MockClassControlTest.testHashCode":304,"org.easymock.tests2.EasyMockSupportTest.testVerify":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":352,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":496,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":500,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":10,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":440,"org.easymock.tests.UsageVarargTest.varargCharAccepted":197,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":514,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastCall":80,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":490,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":307,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":227,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":130,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":302,"org.easymock.tests2.UsageTest.resumeIfFailure":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":240,"org.easymock.tests2.StubTest.stubWithReturnValue":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":382,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests2.SerializationTest.testAllMockedMethod":133,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":470,"org.easymock.samples.SupportTest.voteForRemovals":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":404,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":476,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":418,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":513,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":244,"org.easymock.tests.UsageStrictMockTest.range":269,"org.easymock.samples.ConstructorCalledMockTest.testTax":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":447,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":489,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests.UsageUnorderedTest.message":169,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":392,"org.easymock.tests.UsageVerifyTest.twoReturns":212,"org.easymock.tests.UsageVarargTest.varargByteAccepted":201,"org.easymock.tests2.ThreadingTest.testThreadSafe":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":355,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":250,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":287,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":276,"org.easymock.tests2.UsageConstraintsTest.any":4,"org.easymock.tests2.StubTest.stub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":239,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":221,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":121,"org.easymock.tests2.SerializationTest.testClass":131,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":14,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":428,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":338,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.tests2.NameTest.nameForMocksControl":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":430,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":261,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":426,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":117,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":374,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.samples.ExampleTest.removeNonExistingDocument":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":432,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":220,"org.easymock.tests.UsageStrictMockTest.differentMethods":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":41,"org.easymock.tests2.MockBuilderTest.testCreateMockString":70,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":449,"org.easymock.tests.UsageVerifyTest.twoThrows":211,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":129,"org.easymock.tests.ResultTest.createDelegateResultToString":389,"org.easymock.samples.ExampleTest.voteAgainstRemoval":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests.LimitationsTest.privateConstructor":365,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":231,"org.easymock.tests2.UsageTest.defaultResetToNice":82,"org.easymock.samples.ExampleTest.voteAgainstRemovals":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":427,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.CallbackTest.callback":135,"org.easymock.tests2.UsageConstraintsTest.equals":437,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":320,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":228,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":431,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":115,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":38,"org.easymock.tests.ObjectMethodsTest.testHashCode":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":402,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":43,"org.easymock.tests2.NameTest.nameForNiceMock":8,"org.easymock.tests2.DependencyTest.testInterfaceMocking":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":385,"org.easymock.samples.ExampleTest.addDocument":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":356,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":267,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":424,"org.easymock.tests.UsageVarargTest.varargLongAccepted":200,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":159,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":290,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":504,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests.UsageThrowableTest.noUpperLimit":225,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":340,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":55,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":441,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":2,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":413,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":506,"org.easymock.tests2.NameTest.nameForMock":6,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":448,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.NameTest.nameForStrictMock":7,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":341,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":328,"org.easymock.tests2.UsageStrictMockTest.range":122,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":462,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":1,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":351,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":254,"org.easymock.tests2.MockBuilderTest.testWithConstructor":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":154,"org.easymock.tests.UsageVarargTest.varargShortAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":317,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":218,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":329,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests2.CaptureTest.testCapture":297,"org.easymock.tests2.UsageConstraintsTest.constraints":89,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":286,"org.easymock.tests.UsageStrictMockTest.testVerify":272,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":292,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":214,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.LimitationsTest.abstractClass":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":28,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":195}}]
