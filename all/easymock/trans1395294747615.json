[{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,248,249,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[12,13,14,20,25,27,41,53,54,57,58,117,118,132,156,158,159,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,228,237,238,241,242,245,247,250,252,253,255,262,265,272,275,285,291,298,299,306,318,325,326,327,328,329,332,333,334,335,337,338,339,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,368,372,374,376,379,382,383,384,385,386,387,390,394,395,396,401,403,404,409,411,414,415,416,417,418,421,431,435,437,438,439,440,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,472,473,474,477,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[40],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[325,326,327,328,335,336,439,440,442,443,444,445,446,447,448,449,458,459,463,464],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[260,261,301,302,303,305,307,308,309,312,313,314,315,317,319,320,321,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[463],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[40],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[479,480,481,482,483],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[298,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[12,13,14,15,17,18,20,23,25,26,27,28,35,36,37,38,39,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,103,109,111,112,113,114,115,116,117,118,125,127,128,129,132,146,156,158,159,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,225,226,228,236,237,238,241,242,245,247,248,248,249,249,250,251,252,253,255,257,262,263,264,265,266,267,268,272,275,285,291,298,299,306,318,325,326,328,329,332,333,334,335,336,337,338,339,341,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,368,372,374,376,379,382,383,384,385,386,387,390,394,395,396,401,403,404,407,408,409,410,411,414,415,416,417,418,419,420,421,431,432,433,434,435,436,437,438,439,440,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,466,467,468,470,472,473,474,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,26,27,484,86,155,158,239,240,243,244,403,469,475,476],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[26,27,485,158,403],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[16,19,20,21,22,23,25,26,27,486,487,488,489,490,491,484,86,155,156,158,159,238,239,240,243,244,492,493,494,495,496,497,498,499,500,501,502,401,403,404,468,469,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[117,449],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[503,504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,505,506,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,507,350,351,352,508,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,371,372,373,374,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[510,298,299,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[510,298,299,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,248,249,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,371,372,373,374,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,511,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,505,506,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,507,350,351,352,508,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,512,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,513,514,515,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[444],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[325,327,335,439,440,443,445,446,448,458,463],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[226,393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[124,126,417],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[26,27,516,511,517,484,86,150,151,152,153,155,157,158,159,162,187,237,239,240,243,244,245,354,358,359,362,368,378,379,381,383,394,396,399,402,403,404,419,439,455,466,469,470,471,475,476,477,478],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":440,"org.easymock.tests2.UsageTest.argumentsOrdered":476,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":237,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":97,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":471,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testReturnException":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":112,"org.easymock.tests.MockingTest.testPartialClassMocking":225,"org.easymock.tests.MockClassControlTest.testToString":60,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":426,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":275,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":447,"org.easymock.tests2.UsageTest.wrongArguments":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":53,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":219,"org.easymock.tests2.UsageConstraintsTest.testNull":443,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":385,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":362,"org.easymock.tests2.CaptureTest.testPrimitive":328,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":85,"org.easymock.tests.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":48,"org.easymock.tests.UsageTest.argumentsOrdered":244,"org.easymock.tests.UsageVarargTest.varargIntAccepted":183,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":514,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":496,"org.easymock.tests.ReplayStateInvalidUsageTest.times":8,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":318,"org.easymock.tests2.DependencyTest.testClassMocking":342,"org.easymock.tests2.AnswerTest.answer":431,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":297,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":506,"org.easymock.tests2.CaptureTest.testAnd":325,"org.easymock.tests2.UsageTest.strictResetToDefault":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":393,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":357,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":52,"org.easymock.tests2.DelegateToTest.testDelegate":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":81,"org.easymock.tests.LimitationsTest.mockFinalMethod":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":123,"org.easymock.tests2.DependencyTest.testClassMockingSupport":343,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":22,"org.easymock.tests2.CaptureTest.testCapture1_2446744":329,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":295,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":2,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":218,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":511,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":293,"org.easymock.samples.PartialClassMockTest.testGetArea":262,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":3,"org.easymock.tests.MockingTest.testInterfaceMocking":227,"org.easymock.tests2.CompareToTest.testLessOrEqual":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":46,"org.easymock.tests2.UsageTest.niceToStrict":470,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":87,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":372,"org.easymock.tests2.MockBuilderTest.testCreateMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":453,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":18,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":452,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":334,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":184,"org.easymock.tests.MockClassControlTest.testEquals":64,"org.easymock.tests2.EasyMockSupportClassTest.testAll":272,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":42,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":296,"org.easymock.tests2.CaptureTest.testCaptureAll":326,"org.easymock.tests.MockNameTest.defaultName":143,"org.easymock.tests2.UsageConstraintsTest.testMatches":454,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":0,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":122,"org.easymock.samples.BasicClassMockTest.testPrintContent":259,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":308,"org.easymock.tests2.UsageConstraintsTest.greaterThan":456,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":396,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":142,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":415,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":515,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":388,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":466,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":28,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":355,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":111,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":263,"org.easymock.tests2.CaptureTest.testCaptureFirst":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":356,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":478,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.UsageTest.moreThanOneArgument":468,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":417,"org.easymock.tests2.CaptureTest.testCapture2_2446744":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":379,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":191,"org.easymock.tests.GenericTest.testBridgedEquals":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":151,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":119,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":84,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":461,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":194,"org.easymock.tests.UsageCallCountTest.tooManyCalls":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":487,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests.MockingTest.testNiceClassMocking":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":347,"org.easymock.tests.MockingTest.testClassMocking":223,"org.easymock.tests2.UsageConstraintsTest.testContains":451,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":145,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":409,"org.easymock.tests2.UsageConstraintsTest.testFind":442,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":14,"org.easymock.tests.MockTypeTest.fromEasyMockClass":217,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":341,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":361,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":186,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":32,"org.easymock.tests.UsageTest.exactCallCountByLastCall":245,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":92,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":124,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":49,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":491,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":412,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":17,"org.easymock.tests.MockClassControlTest.testHashCode":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":302,"org.easymock.tests2.EasyMockSupportTest.testVerify":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":282,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":495,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":15,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":517,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":294,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":406,"org.easymock.tests.UsageVarargTest.varargCharAccepted":185,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":134,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":110,"org.easymock.tests2.UsageTest.openCallCountByLastCall":472,"org.easymock.tests.DefaultClassInstantiatorTest.object":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":127,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":30,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":484,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":301,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":394,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":72,"org.easymock.tests.CapturesMatcherTest.test":503,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":193,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":497,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":291,"org.easymock.tests2.UsageTest.resumeIfFailure":477,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":216,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":513,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":114,"org.easymock.tests2.StubTest.stubWithReturnValue":421,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":375,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":103,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":78,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":109,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":432,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":126,"org.easymock.tests.UsageExpectAndThrowTest.object":76,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":459,"org.easymock.tests2.DelegateToTest.testWrongClass":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":166,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":167,"org.easymock.tests.UsageStrictMockTest.range":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":424,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":10,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":47,"org.easymock.tests2.CaptureTest.testCaptureNone":333,"org.easymock.tests.UsageUnorderedTest.message":86,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":516,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":190,"org.easymock.tests2.ThreadingTest.testThreadSafe":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":286,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":149,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":33,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":258,"org.easymock.tests2.CaptureTest.testCapture_2617107":327,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":502,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests2.UsageConstraintsTest.any":449,"org.easymock.tests2.StubTest.stub":420,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":108,"org.easymock.tests.UsageExpectAndThrowTest.longType":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":139,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":6,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":402,"org.easymock.tests2.SerializationTest.testClass":298,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":315,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":405,"org.easymock.tests2.NameTest.nameForMocksControl":430,"org.easymock.tests2.MockedExceptionTest.testMockedException":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":274,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":70,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":228,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":340,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":382,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":376,"org.easymock.tests.MockingTest.testNicePartialClassMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":387,"org.easymock.tests2.CompareToTest.testNotComparable":509,"org.easymock.tests2.CompareToTest.testCompareEqual":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":313,"org.easymock.tests2.CaptureTest.testCaptureLast":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":23,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":352,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":460,"org.easymock.tests.MockingTest.testTwoMocks":224,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":475,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":464,"org.easymock.samples.ExampleTest.removeNonExistingDocument":256,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":303,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":137,"org.easymock.tests2.ConstraintsToStringTest.andToString":499,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":416,"org.easymock.tests2.MockBuilderTest.testCreateMockString":381,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":58,"org.easymock.tests.UsageExpectAndThrowTest.floatType":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":276,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":413,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":285,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":45,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":395,"org.easymock.tests.LimitationsTest.privateConstructor":131,"org.easymock.tests2.UsageConstraintsTest.testNotNull":463,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":407,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests2.UsageTest.defaultResetToNice":474,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.UsageVarargTest.differentLength":187,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":314,"org.easymock.tests2.CallbackTest.callback":419,"org.easymock.tests2.UsageConstraintsTest.equals":441,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":489,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":391,"org.easymock.tests.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":55,"org.easymock.tests.UsageCallCountTest.tooFewCalls":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":488,"org.easymock.tests.MockingTest.testStrictClassMocking":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":350,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":436,"org.easymock.tests2.CompareToTest.testGreateOrEqual":482,"org.easymock.tests.ObjectMethodsTest.testHashCode":31,"org.easymock.tests2.NameTest.nameForNiceMock":429,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":418,"org.easymock.tests2.DependencyTest.testInterfaceMocking":344,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":287,"org.easymock.tests2.DelegateToTest.testStubDelegate":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":292,"org.easymock.tests2.AnswerTest.stubAnswer":435,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":156,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":512,"org.easymock.tests.UsageVarargTest.varargLongAccepted":189,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":96,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":411,"org.easymock.tests2.ConstraintsToStringTest.orToString":492,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":249,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":457,"org.easymock.tests.UsageThrowableTest.noUpperLimit":174,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":438,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":422,"org.easymock.tests2.SerializationTest.test":299,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":330,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":136,"org.easymock.tests2.UsageConstraintsTest.testSame":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":507,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":277,"org.easymock.tests.GenericTest.testPackageScope":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":91,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":309,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":229,"org.easymock.tests2.NameTest.nameForMock":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.UsageStrictMockTest.differentMethods":404,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":80,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests2.MockedExceptionTest.testRealException":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":101,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":490,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":54,"org.easymock.tests2.NameTest.nameForStrictMock":428,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":458,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":368,"org.easymock.tests2.UsageStrictMockTest.range":403,"org.easymock.tests2.UsageConstraintsTest.lessThan":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":281,"org.easymock.tests2.CaptureTest.testCaptureRightOne":335,"org.easymock.tests2.UsageConstraintsTest.testOr":445,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":383,"org.easymock.tests.UsageTest.wrongArguments":240,"org.easymock.tests2.MockBuilderTest.testWithConstructor":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":278,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":188,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":140,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":150,"org.easymock.tests2.UsageConstraintsTest.cmpTo":450,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":433,"org.easymock.tests2.CompareToTest.testLessThan":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":90,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":473,"org.easymock.tests2.CaptureTest.testCaptureFromStub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":1,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":369,"org.easymock.tests.UsageTest.unexpectedCallWithArray":239,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests2.UsageConstraintsTest.constraints":439,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.samples.ExampleTest.addAndChangeDocument":257,"org.easymock.tests2.ConstraintsToStringTest.notToString":494,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests2.CompareToTest.testGreateThan":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":120,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":170,"org.easymock.tests.LimitationsTest.abstractClass":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":171,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":485,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":359}}]
