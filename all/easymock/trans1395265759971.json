[{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,51,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,10,11,66,67,68,69,70,71,72,73,13,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,14,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[5,6,7,118,119,11,12],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[47,120,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.Capture:82","failures":[122,123,124,125,126,127,128,129,130,131,132,133],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[66,71,107,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,63,182,183,184,2,185,3,4,1,186,187,188,189,103,190,113,114,191,192,193,0,194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,208,16,17,18,19,20,209,210,211,212,213,134,135,214,215,216,217,218,219,220,221,222,223,224,21,22,23,24,225,136,137,138,226,139,140,141,142,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,143,144,255,256,257,258,259,152,153,154,155,260,156,157,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,158,278,279,280,281,282,283,284,285,286,287,25,288,289,290,291,292,293,294,295,296,297,298,159,160,161,162,163,164,299,300,301,302,303,304,305,165,306,307,308,309,310,311,312,313,314,315,316,317,318,319,26,27,28,29,30,320,31,321,322,32,323,324,325,326,327,328,329,330,331,332,333,33,334,335,34,336,337,338,339,340,35,36,37,38,39,40,41,42,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,166,167,168,368,369,370,371,43,44,45,46,47,48,49,372,373,374,375,376,377,378,379,380,381,382,383,384,50,50,51,51,52,385,386,53,54,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,169,170,171,172,173,174,175,404,55,56,405,406,57,58,59,60,407,61,62,408,176,177,178,409,179,410,411,412,180,181,413,414,63,64,65,415,416,417,418,419,420,10,11,189,421,422,423,66,67,68,69,70,71,72,73,13,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,190,104,105,106,107,108,109,110,111,112,113,114,115,116,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,122,439,123,124,125,126,127,128,440,129,131,132,441,133,442,443,191,444,445,446,192,447,448,193,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,0,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,194,487,488,489,490,491,492,493,494,495,14,496,117,497],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[59,62,498,11,499,500,12,501,502,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[505],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[47,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[231,232,167],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[256,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[133],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,208,16,17,18,19,20,209,210,211,212,213,134,135,214,215,216,217,218,219,220,221,222,223,224,21,22,23,24,225,136,137,138,226,139,140,141,142,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,143,144,255,256,257,258,259,152,153,154,155,260,156,157,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,158,278,279,280,281,282,283,284,285,286,287,25,288,289,290,291,292,293,294,295,296,297,298,159,160,161,162,163,164,299,300,301,302,303,304,305,165,306,307,308,309,310,311,312,313,314,315,316,317,318,319,26,27,28,29,30,320,31,321,322,32,323,324,325,326,327,328,329,330,331,332,333,334,34,337,338,339,340,35,36,37,38,39,40,41,42,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,166,167,168,368,369,370,371,43,44,45,46,47,48,49,372,373,374,375,376,377,378,379,380,381,382,383,384,50,50,51,51,52,385,386,53,54,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,169,170,171,172,173,174,175,404,55,56,405,406,59,60,407,61,408,176,177,178,409,179,410,411,412,180,181,413,414,63,64,65,415,416,417,418,419,420,10,11,67,69,70,71,72,13,74,77,80,82,83,85,86,89,90,91,92,93,95,98,99,100,101,102,103,190,104,105,106,107,108,109,110,111,112,113,114,115,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,122,439,123,124,125,126,127,128,440,129,131,132,441,133,442,443,191,445,446,447,193,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,0,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,194,487,488,489,490,491,492,493,494,495,14,496,117,497],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[134,138,139,140,143,144,152,154,156,157,166,167,168,170,172,173,177,178,180,181,182,184,185,1,186,187,188],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[506,469,194,492],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[225,139,140,364,403,172,173,409,75,443,446,192,193,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":259,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":272,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":179,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":385,"org.easymock.tests2.DelegateToTest.testReturnException":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":324,"org.easymock.tests.MockingTest.testPartialClassMocking":29,"org.easymock.tests.MockClassControlTest.testToString":37,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":344,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":478,"org.easymock.tests2.UsageTest.wrongArguments":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":209,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":370,"org.easymock.samples.ExampleTest.answerVsDelegate":378,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":34,"org.easymock.tests2.UsageConstraintsTest.testNull":474,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":42,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests2.CaptureTest.testPrimitive":124,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":213,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":363,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":374,"org.easymock.tests.UsageTest.argumentsOrdered":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":329,"org.easymock.tests.UsageVarargTest.varargIntAccepted":301,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":292,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":185,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":458,"org.easymock.tests.ReplayStateInvalidUsageTest.times":221,"org.easymock.tests2.AnswerTest.answer":424,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":468,"org.easymock.tests2.CaptureTest.testAnd":122,"org.easymock.tests2.UsageTest.strictResetToDefault":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":366,"org.easymock.tests2.DelegateToTest.testDelegate":438,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":359,"org.easymock.tests.LimitationsTest.mockFinalMethod":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":143,"org.easymock.tests2.CaptureTest.testCapture1_2446744":125,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":466,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":215,"org.easymock.tests.UsageThrowableTest.throwError":227,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":335,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":376,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":101,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":216,"org.easymock.tests.MockingTest.testInterfaceMocking":320,"org.easymock.tests2.CompareToTest.testLessOrEqual":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":311,"org.easymock.tests2.UsageTest.niceToStrict":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":70,"org.easymock.tests2.MockBuilderTest.testCreateMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":183,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":368,"org.easymock.tests.UsageOverloadedMethodTest.overloading":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":484,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":246,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":483,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":129,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":302,"org.easymock.tests.MockClassControlTest.testEquals":41,"org.easymock.tests2.EasyMockSupportClassTest.testAll":80,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":18,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":467,"org.easymock.tests2.CaptureTest.testCaptureAll":439,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests.MockNameTest.defaultName":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":485,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":375,"org.easymock.samples.ExampleTest.voteForRemovals":382,"org.easymock.tests.UsageVarargTest.allKinds":309,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":233,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":403,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":365,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":114,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":49,"org.easymock.samples.ExampleTest.voteForRemoval":379,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":417,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":107,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":408,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":25,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":191,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":323,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":433,"org.easymock.tests2.CaptureTest.testCaptureFirst":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":444,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":414,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":441,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":419,"org.easymock.tests2.UsageTest.moreThanOneArgument":177,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":279,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":308,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":207,"org.easymock.tests.UsageExpectAndReturnTest.longType":238,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":362,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":491,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":146,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":232,"org.easymock.tests.MockingTest.testNiceClassMocking":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":58,"org.easymock.tests.MockingTest.testClassMocking":27,"org.easymock.tests2.UsageConstraintsTest.testContains":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":201,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":65,"org.easymock.tests2.UsageConstraintsTest.testFind":473,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":343,"org.easymock.tests.MockTypeTest.fromEasyMockClass":334,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":432,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":304,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":316,"org.easymock.tests.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":256,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":251,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":160,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":390,"org.easymock.tests.MockClassControlTest.testHashCode":40,"org.easymock.tests2.EasyMockSupportTest.testVerify":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":90,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":2,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":465,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":452,"org.easymock.tests.UsageVarargTest.varargCharAccepted":303,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":450,"org.easymock.tests.DefaultClassInstantiatorTest.object":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":197,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":38,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":3,"org.easymock.tests2.UsageTest.resumeIfFailure":413,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":326,"org.easymock.tests2.StubTest.stubWithReturnValue":404,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":244,"org.easymock.tests2.SerializationTest.testAllMockedMethod":117,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":158,"org.easymock.samples.SupportTest.voteForRemovals":388,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":186,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":356,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":425,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":258,"org.easymock.tests.UsageExpectAndThrowTest.object":354,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":489,"org.easymock.tests2.DelegateToTest.testWrongClass":436,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":339,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":355,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":72,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":369,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":145,"org.easymock.tests2.CaptureTest.testCaptureNone":440,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":312,"org.easymock.tests.UsageUnorderedTest.message":134,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":505,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":307,"org.easymock.tests2.ThreadingTest.testThreadSafe":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":94,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":205,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":317,"org.easymock.tests2.CaptureTest.testCapture_2617107":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":188,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":281,"org.easymock.tests2.UsageConstraintsTest.any":480,"org.easymock.tests2.StubTest.stub":175,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":325,"org.easymock.tests.UsageExpectAndThrowTest.longType":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":219,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":394,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":82,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":431,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":128,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":144,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":62,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":490,"org.easymock.tests.MockingTest.testTwoMocks":28,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":352,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":494,"org.easymock.samples.ExampleTest.removeNonExistingDocument":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":217,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":391,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":45,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":418,"org.easymock.tests2.ConstraintsToStringTest.andToString":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":76,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":84,"org.easymock.tests.UsageExpectAndThrowTest.floatType":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":427,"org.easymock.tests.UsageVerifyTest.twoThrows":167,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.ExampleTest.voteAgainstRemoval":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests.LimitationsTest.privateConstructor":22,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":504,"org.easymock.tests2.UsageConstraintsTest.testNotNull":493,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":234,"org.easymock.tests2.UsageTest.defaultResetToNice":412,"org.easymock.samples.ExampleTest.voteAgainstRemovals":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":305,"org.easymock.tests2.CallbackTest.callback":497,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":109,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":211,"org.easymock.tests.UsageCallCountTest.tooFewCalls":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":371,"org.easymock.tests.UsageThrowableTest.throwCheckedException":231,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":147,"org.easymock.tests.MockingTest.testStrictClassMocking":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":59,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":407,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":429,"org.easymock.tests.ObjectMethodsTest.testHashCode":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":118,"org.easymock.tests2.NameTest.nameForNiceMock":422,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":420,"org.easymock.tests2.DependencyTest.testInterfaceMocking":401,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":95,"org.easymock.tests2.DelegateToTest.testStubDelegate":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.AnswerTest.stubAnswer":428,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests.UsageVarargTest.varargLongAccepted":306,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageExpectAndReturnTest.floatType":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.tests2.ConstraintsToStringTest.orToString":182,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":51,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageThrowableTest.noUpperLimit":228,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":470,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":55,"org.easymock.tests2.SerializationTest.test":496,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":126,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":121,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":44,"org.easymock.tests2.UsageConstraintsTest.testSame":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":236,"org.easymock.samples.SupportTest.addDocument":387,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":85,"org.easymock.tests.GenericTest.testPackageScope":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":397,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":321,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":502,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":358,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":367,"org.easymock.tests2.MockedExceptionTest.testRealException":415,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":149,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":224,"org.easymock.tests2.NameTest.nameForStrictMock":421,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":69,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":488,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":67,"org.easymock.tests2.UsageStrictMockTest.range":172,"org.easymock.tests2.UsageConstraintsTest.lessThan":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":270,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":89,"org.easymock.tests2.UsageConstraintsTest.testOr":476,"org.easymock.tests.UsageRangeTest.combination":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":154,"org.easymock.tests2.MockBuilderTest.testWithConstructor":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":86,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":263,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":48,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":206,"org.easymock.tests2.UsageConstraintsTest.cmpTo":481,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":265,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":411,"org.easymock.tests2.CaptureTest.testCaptureFromStub":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":214,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":68,"org.easymock.tests.UsageTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":204,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":249,"org.easymock.tests2.CaptureTest.testCapture":130,"org.easymock.tests2.UsageConstraintsTest.constraints":471,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.samples.ExampleTest.addAndChangeDocument":384,"org.easymock.tests2.ConstraintsToStringTest.notToString":184,"org.easymock.tests.UsageStrictMockTest.testVerify":142,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":386,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":290,"org.easymock.tests.LimitationsTest.abstractClass":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":241,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":300}}]
