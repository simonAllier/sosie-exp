[{"position":"org.easymock.ConstructorArgs:50","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[32,100,101,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[104,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[106,107,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return this.java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,54,33,130,131,132,57,133,134,61,135,136,71,137,138,139,140,141,142,143,144,145,146,147,148,149,150,85,151,152,153,154,155,156,157,158,159,160,161,162,87,163,164,165,166,167,89,168,169,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"name"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[171,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[173,174,175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[32,100,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[177,178,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.Range:52","failures":[180,109,110,111,181,182,114,115,117,183,184,185,186,187,188,189,124,126,127,190,191,192,193,194,195,135,136,137,196,197,138,139,140,141,198,150,199,152,154,155,157,158,163,164,165,200,201,202,203,89],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[180,206,207,208,183,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[211,180,212,213,214,215,42,216,217,218,219,220,221,222,0,1,223,224,2,3,109,225,110,111,112,113,181,182,43,114,115,116,117,226,44,227,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,45,46,228,229,230,231,232,32,100,101,47,118,233,234,235,119,236,48,237,120,238,239,49,240,206,241,207,208,183,242,243,121,244,245,246,184,185,247,103,248,249,186,187,250,251,252,253,122,254,255,256,257,258,259,260,188,189,261,123,262,124,125,126,127,128,263,190,191,192,193,194,264,265,266,204,205,267,268,269,270,271,272,273,274,275,276,277,278,279,280,50,51,52,53,129,281,282,283,284,285,54,171,286,287,288,289,290,291,292,33,293,294,295,130,34,35,55,131,296,297,298,56,132,299,300,39,57,301,58,302,303,304,305,306,307,308,309,310,311,312,133,313,314,315,316,59,317,318,319,320,60,321,322,134,323,324,325,326,327,328,329,61,172,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,62,63,64,65,346,347,348,66,67,68,69,70,349,350,195,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,135,136,71,137,196,197,138,139,140,373,374,375,376,377,141,378,379,380,381,382,383,384,385,386,387,388,389,170,390,391,392,393,142,143,394,395,396,209,397,398,399,400,401,173,402,403,404,405,406,407,106,108,408,409,410,411,412,107,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,72,73,74,75,76,77,78,79,80,81,82,83,104,434,198,105,435,436,437,438,439,440,441,442,443,444,445,144,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,145,469,146,470,147,471,472,473,148,84,149,150,474,199,85,151,152,153,475,154,155,156,157,158,159,86,476,160,210,477,161,162,87,163,164,165,88,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,166,495,496,497,498,499,500,501,502,503,504,174,200,201,175,176,202,505,506,507,508,509,167,510,511,512,513,203,514,89,90,91,168,169,92,93,94,95,96,97,98,99],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[402,404,411,412,413],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:274","sourceCode":"net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[435,436,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[2,3,515,516,517,518,519,32,38,39],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[32,100,101,102],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"obj"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[184,249,256,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[435,436,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[401],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[403],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[122,315],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[32,100,101,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[211,180,212,213,214,215,42,216,217,218,219,220,221,222,223,109,225,110,111,112,113,181,182,43,114,115,116,117,226,44,227,4,5,7,9,10,11,12,15,18,20,21,22,23,24,25,26,45,46,228,229,230,231,232,100,101,47,118,233,234,235,119,236,48,237,120,238,239,49,240,206,241,207,208,183,242,243,121,244,245,246,184,185,247,103,248,249,186,187,250,251,252,253,122,254,255,256,257,258,259,260,188,189,261,123,262,124,125,126,127,128,263,190,191,192,193,194,264,265,266,204,205,267,268,269,270,271,272,273,274,275,276,277,278,279,280,50,51,52,53,129,281,282,283,284,285,54,171,286,287,288,289,290,291,292,293,295,35,55,131,296,297,298,56,132,299,57,301,58,302,303,304,305,306,309,310,311,312,133,313,314,315,316,59,317,318,320,60,321,322,134,323,324,325,326,327,328,329,61,172,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,62,63,64,65,346,347,348,66,67,68,69,70,349,350,195,135,136,71,137,196,197,138,139,140,373,374,375,376,377,141,378,379,380,383,385,386,387,388,389,170,390,391,392,393,142,143,394,395,396,209,397,398,399,400,401,173,402,403,404,405,406,407,106,108,408,409,410,411,412,107,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,72,73,74,75,76,77,78,79,80,81,82,83,104,434,198,105,435,436,437,438,439,440,441,442,443,444,445,144,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,145,469,146,470,147,471,472,473,148,84,149,150,474,199,85,151,152,153,475,154,155,156,157,158,159,86,476,160,210,477,161,162,87,163,164,165,520,88,478,479,480,481,482,521,483,484,485,486,487,488,489,490,491,492,493,494,166,495,496,497,498,499,500,501,502,503,504,174,200,201,175,176,202,505,506,507,508,509,167,510,511,512,513,203,514,89,90,91,168,169,92,93,94,95,96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[241],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":244,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.UsageTest.argumentsOrdered":115,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":113,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":219,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":485,"org.easymock.tests.MockingTest.testPartialClassMocking":381,"org.easymock.tests.MockClassControlTest.testToString":94,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":263,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":446,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":305,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":248,"org.easymock.tests2.UsageTest.wrongArguments":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":373,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":64,"org.easymock.samples.ExampleTest.answerVsDelegate":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":146,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":386,"org.easymock.tests2.UsageConstraintsTest.testNull":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":314,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":99,"org.easymock.tests2.CaptureTest.testPrimitive":270,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":465,"org.easymock.tests.UsageTest.moreThanOneArgument":136,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":441,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":174,"org.easymock.tests.UsageTest.argumentsOrdered":139,"org.easymock.tests.UsageVarargTest.varargIntAccepted":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":490,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":494,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":356,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":178,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests.ReplayStateInvalidUsageTest.times":80,"org.easymock.tests2.DependencyTest.testClassMocking":302,"org.easymock.tests2.AnswerTest.answer":194,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":53,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":267,"org.easymock.tests2.UsageTest.strictResetToDefault":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests2.DelegateToTest.testDelegate":183,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":176,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":461,"org.easymock.tests.LimitationsTest.mockFinalMethod":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":70,"org.easymock.tests2.DependencyTest.testClassMockingSupport":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":142,"org.easymock.tests2.CaptureTest.testCapture1_2446744":271,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":51,"org.easymock.tests.UsageThrowableTest.throwError":104,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":74,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":443,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":359,"org.easymock.samples.PartialClassMockTest.testGetArea":222,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":75,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":502,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":447,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":169,"org.easymock.tests2.UsageTest.niceToStrict":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":15,"org.easymock.tests2.ThreadingTest.testChangeDefault":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":298,"org.easymock.tests2.MockBuilderTest.testCreateMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":455,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":62,"org.easymock.tests.UsageOverloadedMethodTest.overloading":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":19,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":425,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":349,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":276,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":507,"org.easymock.tests.MockClassControlTest.testEquals":98,"org.easymock.tests2.EasyMockSupportClassTest.testAll":7,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":391,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureAll":268,"org.easymock.tests.MockNameTest.defaultName":144,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":72,"org.easymock.samples.ExampleTest.voteForRemovals":215,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":69,"org.easymock.samples.BasicClassMockTest.testPrintContent":221,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":437,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":489,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":286,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":521,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":519,"org.easymock.tests2.UsageConstraintsTest.greaterThan":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":495,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":134,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":360,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":323,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":337,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":59,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":352,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":341,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":484,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":240,"org.easymock.tests2.CaptureTest.testCaptureFirst":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":421,"org.easymock.tests2.UsageTest.moreThanOneArgument":110,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":301,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":513,"org.easymock.tests.GenericTest.testBridgedEquals":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":151,"org.easymock.tests.UsageExpectAndReturnTest.longType":417,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":464,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":504,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":462,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":499,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":439,"org.easymock.tests.UsageCallCountTest.tooManyCalls":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":179,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":451,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":436,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":292,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":84,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":228,"org.easymock.tests2.UsageConstraintsTest.testFind":246,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests.MockTypeTest.fromEasyMockClass":145,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageExpectAndReturnTest.object":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":516,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":509,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":91,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":200,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":430,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":202,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":210,"org.easymock.tests.MockClassControlTest.testHashCode":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":17,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":177,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":476,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":226,"org.easymock.tests.UsageVarargTest.varargCharAccepted":508,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":520,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":181,"org.easymock.tests.DefaultClassInstantiatorTest.object":88,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":471,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":281,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":321,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":431,"org.easymock.tests.ReplayStateInvalidCallsTest.times":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":498,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":95,"org.easymock.tests2.UsageTest.resumeIfFailure":116,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":487,"org.easymock.tests2.StubTest.stubWithReturnValue":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":260,"org.easymock.tests2.SerializationTest.testAllMockedMethod":101,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":108,"org.easymock.samples.SupportTest.voteForRemovals":218,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":458,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":102,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":107,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":264,"org.easymock.tests.UsageExpectAndThrowTest.object":456,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":348,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":257,"org.easymock.tests2.DelegateToTest.testWrongClass":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":388,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":389,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":310,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":457,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":63,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":354,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":503,"org.easymock.tests2.CaptureTest.testCaptureNone":275,"org.easymock.tests.UsageUnorderedTest.message":141,"org.easymock.tests.UsageVerifyTest.twoReturns":165,"org.easymock.tests.UsageVarargTest.varargByteAccepted":512,"org.easymock.tests2.ThreadingTest.testThreadSafe":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":21,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":199,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":168,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":220,"org.easymock.tests2.CaptureTest.testCapture_2617107":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":376,"org.easymock.tests2.UsageConstraintsTest.any":186,"org.easymock.tests2.StubTest.stub":44,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":486,"org.easymock.tests.UsageExpectAndThrowTest.longType":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":412,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":481,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":78,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":433,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":392,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":327,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":370,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests2.NameTest.nameForMocksControl":193,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":9,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":450,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":384,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":299,"org.easymock.tests.MockingTest.testNicePartialClassMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":316,"org.easymock.tests2.CaptureTest.testCaptureLast":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":143,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":369,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":258,"org.easymock.tests.MockingTest.testTwoMocks":380,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":366,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":454,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.samples.ExampleTest.removeNonExistingDocument":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":283,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":479,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":224,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":338,"org.easymock.tests2.MockBuilderTest.testCreateMockString":58,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":92,"org.easymock.tests.UsageExpectAndThrowTest.floatType":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":11,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":266,"org.easymock.tests.UsageVerifyTest.twoThrows":164,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":213,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":322,"org.easymock.tests.LimitationsTest.privateConstructor":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":438,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests2.UsageTest.defaultResetToNice":43,"org.easymock.samples.ExampleTest.voteAgainstRemovals":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":405,"org.easymock.tests.UsageVarargTest.differentLength":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":326,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.UsageConstraintsTest.equals":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":319,"org.easymock.tests.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":375,"org.easymock.tests.UsageCallCountTest.tooFewCalls":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":65,"org.easymock.tests.UsageThrowableTest.throwCheckedException":435,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":445,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":295,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":90,"org.easymock.tests2.NameTest.nameForNiceMock":192,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":368,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":363,"org.easymock.tests2.DependencyTest.testInterfaceMocking":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":517,"org.easymock.samples.ExampleTest.addDocument":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":300,"org.easymock.tests.UsageVarargTest.varargLongAccepted":511,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":432,"org.easymock.tests.UsageExpectAndReturnTest.floatType":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":434,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":243,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":306,"org.easymock.tests2.SerializationTest.test":100,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":415,"org.easymock.tests2.UsageConstraintsTest.testSame":185,"org.easymock.samples.SupportTest.addDocument":217,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":294,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":353,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":12,"org.easymock.tests.GenericTest.testPackageScope":390,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":287,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":351,"org.easymock.tests2.NameTest.nameForMock":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":426,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":460,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":514,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":497,"org.easymock.tests2.MockedExceptionTest.testRealException":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":124,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":374,"org.easymock.tests2.NameTest.nameForStrictMock":191,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":309,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":131,"org.easymock.tests2.UsageStrictMockTest.range":126,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":357,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":16,"org.easymock.tests2.CaptureTest.testCaptureRightOne":277,"org.easymock.tests2.UsageConstraintsTest.testOr":247,"org.easymock.tests.UsageRangeTest.combination":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":133,"org.easymock.tests.UsageTest.wrongArguments":137,"org.easymock.tests2.MockBuilderTest.testWithConstructor":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":13,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageVarargTest.varargShortAccepted":510,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":85,"org.easymock.tests2.UsageConstraintsTest.cmpTo":187,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":371,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":265,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":73,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":296,"org.easymock.tests.UsageTest.unexpectedCallWithArray":71,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":367,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":474,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":428,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.samples.ExampleTest.addAndChangeDocument":216,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":223,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":67,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":420,"org.easymock.tests.LimitationsTest.abstractClass":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":493,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":505,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":236}}]
