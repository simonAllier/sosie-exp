[{"position":"org.easymock.internal.Range:44","failures":[0],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[8,9,10,4,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,38,39,40,41,42,5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[8,9,52,53,54,55,56,57,58,59,10,3,60,4,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,11,12,12,13,13,82,83,14,84,15,16,17,18,85,19,20,22,86,23,87,24,88,89,90,91,92,25,93,26,94,95,27,28,96,97,29,30,98,99,100,31,101,32,33,102,103,104,105,106,107,108,109,34,110,111,112,113,114,115,116,117,118,35,119,120,121,122,123,36,124,125,126,127,128,129,130,131],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[37],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[93,132,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[134],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[31,135,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[136,31,135,101],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,2,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,60,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,82,83,248,249,250,251,252,253,254,255,256,257,258,18,19,20,259,260,89,91,28,44,261,45,46,262,263,264,265,266,267,268,269,270,271,272,273,274,275,31,135,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,49,296,297,298,51,299],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[136,31,135,101],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[229,230,291,292],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[300,301,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[8,9,52,53,54,55,56,57,58,59,10,3,60,4,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,11,12,12,13,13,82,83,14,84,15,16,17,18,85,19,20,22,86,23,87,24,88,89,90,91,92,25,93,26,94,95,27,28,96,97,29,30,98,99,100,31,101,32,33,102,103,104,105,106,107,108,109,34,110,111,112,113,114,115,116,117,118,35,119,120,121,122,123,36,124,125,126,127,128,129,130,131],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[304,305,296,50,306,307,308,297,298,299],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:83","failures":[309],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[10,4,11,12,12,13,13,310,311,18,312,21,22,86,313,24,26,28,29,31,32,33,314,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[43,44,315,261,316,45,46,317,47,318,48,319,262,320,49,296,50,321,51,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[137,138,139,140,141,142,143,144,145,146,1,323,324,325,326,327,328,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,52,329,177,330,56,57,58,331,332,333,334,178,179,180,335,2,181,182,336,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,4,220,221,222,223,224,225,64,337,338,227,229,230,232,233,5,6,7,339,0,340,341,342,343,234,235,236,237,238,11,241,242,243,244,246,247,12,12,13,13,249,250,251,252,253,255,256,344,257,258,15,18,19,20,23,259,260,88,89,345,90,91,92,93,27,28,96,346,347,43,44,315,261,316,45,46,317,318,132,348,349,350,351,304,352,353,48,319,354,355,262,320,356,263,357,358,264,265,359,30,98,99,360,361,362,266,267,268,363,269,270,271,364,272,273,274,365,275,31,135,32,276,277,278,279,280,281,282,366,283,284,285,286,107,34,35,36,287,289,291,292,294,295,126,127,128,129,367,130,131,49,296,321,306,297,298,368,51,322,369,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[12,13,310,311,312,22,370,313,371,372,31,32,33,104,105,106,107,108,109,34,110,111,112,113,114,115,116,117,118,35,119,120,121,122,123,36,124,125,128,131,303],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[179,373,242,272,274,365,275],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[85,25,30,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[344],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":44,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.tests2.StubTest.stubWithReturnValue":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":240,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":101,"org.easymock.tests2.DelegateToTest.testReturnException":272,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.samples.SupportTest.voteForRemovals":249,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":10,"org.easymock.tests.MockClassControlTest.testToString":76,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":1,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":338,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":147,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.UsageExpectAndThrowTest.object":157,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":319,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":260,"org.easymock.tests2.DelegateToTest.testWrongClass":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":233,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.tests.UsageStrictMockTest.range":229,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":366,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests2.UsageConstraintsTest.testNull":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":284,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":19,"org.easymock.tests2.CaptureTest.testPrimitive":321,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":104,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":166,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests2.CaptureTest.testCaptureNone":298,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":7,"org.easymock.tests.UsageUnorderedTest.message":183,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests.UsageVarargTest.varargByteAccepted":174,"org.easymock.tests2.ThreadingTest.testThreadSafe":266,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":0,"org.easymock.tests.UsageVarargTest.varargIntAccepted":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":119,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":187,"org.easymock.tests2.UsageConstraintsTest.any":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":373,"org.easymock.tests2.StubTest.stub":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":41,"org.easymock.tests.UsageExpectAndThrowTest.longType":150,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":70,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests.LimitationsTest.mockNativeMethod":64,"org.easymock.tests2.AnswerTest.answer":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":47,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":311,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests2.MockedExceptionTest.testMockedException":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":109,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests2.DelegateToTest.testDelegate":275,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":151,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":162,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":92,"org.easymock.tests.LimitationsTest.mockFinalMethod":65,"org.easymock.tests2.CompareToTest.testNotComparable":37,"org.easymock.tests2.CaptureTest.testCaptureLast":297,"org.easymock.tests2.CompareToTest.testCompareEqual":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":336,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":354,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":306,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":320,"org.easymock.tests.UsageThrowableTest.throwError":212,"org.easymock.tests.UsageStrictMockTest.differentMethods":230,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":68,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":24,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests.UsageExpectAndThrowTest.floatType":149,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":314,"org.easymock.tests.UsageVerifyTest.twoThrows":190,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":235,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":39,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":28,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":148,"org.easymock.tests.LimitationsTest.privateConstructor":63,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":372,"org.easymock.tests2.UsageConstraintsTest.testNotNull":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":219,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":300,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":18,"org.easymock.tests2.UsageTest.defaultResetToNice":344,"org.easymock.tests2.MockBuilderTest.testCreateMock":86,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":121,"org.easymock.tests2.CallbackTest.callback":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":26,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":156,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":281,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":350,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":349,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":216,"org.easymock.tests.MockClassControlTest.testEquals":80,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":60,"org.easymock.tests.MockingTest.testStrictClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":164,"org.easymock.tests2.CaptureTest.testCaptureAll":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.testMatches":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":367,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.samples.ExampleTest.voteForRemovals":246,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests.UsageVarargTest.allKinds":176,"org.easymock.tests2.DependencyTest.testInterfaceMocking":259,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.samples.BasicClassMockTest.testPrintContent":83,"org.easymock.samples.ExampleTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":120,"org.easymock.tests2.DelegateToTest.testStubDelegate":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":124,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":218,"org.easymock.tests2.AnswerTest.stubAnswer":265,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":374,"org.easymock.tests2.UsageConstraintsTest.greaterThan":352,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.tests.UsageVarargTest.varargLongAccepted":173,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":38,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":353,"org.easymock.tests.UsageThrowableTest.noUpperLimit":213,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":347,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":307,"org.easymock.tests2.SerializationTest.test":135,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":278,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":67,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":214,"org.easymock.tests2.UsageConstraintsTest.testSame":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.samples.SupportTest.addDocument":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests2.CaptureTest.testCaptureFirst":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":279,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":111,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests2.CaptureTest.testCapture2_2446744":369,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":363,"org.easymock.tests2.UsageTest.moreThanOneArgument":252,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":175,"org.easymock.tests.GenericTest.testBridgedEquals":61,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":313,"org.easymock.tests2.UsageStrictMockTest.differentMethods":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":334,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":329,"org.easymock.tests2.MockedExceptionTest.testRealException":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests.MockingTest.testNiceClassMocking":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests.MockingTest.testClassMocking":54,"org.easymock.tests2.UsageConstraintsTest.testContains":348,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":84,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":99,"org.easymock.tests2.UsageConstraintsTest.testFind":315,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":182,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":17,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":91,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":362,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":69,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":15,"org.easymock.tests2.UsageStrictMockTest.range":291,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":283,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":171,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":277,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":115,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":340,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests.UsageRangeTest.combination":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":89,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":167,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":179,"org.easymock.tests2.MockBuilderTest.testWithConstructor":310,"org.easymock.tests.MockClassControlTest.testHashCode":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":112,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":116,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":71,"org.easymock.tests.UsageVarargTest.varargShortAccepted":172,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":178,"org.easymock.tests2.UsageConstraintsTest.cmpTo":132,"org.easymock.tests.UsageVarargTest.varargCharAccepted":170,"org.easymock.tests2.CaptureTest.testCaptureMultiple":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":42,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":301,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":286,"org.easymock.tests.DefaultClassInstantiatorTest.object":66,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":326,"org.easymock.tests2.CaptureTest.testCaptureFromStub":322,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":215,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":78,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":27,"org.easymock.tests2.UsageConstraintsTest.constraints":43,"org.easymock.samples.ExampleTest.addAndChangeDocument":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":239,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":308,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":236,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.LimitationsTest.abstractClass":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":8,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":282,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":168}}]
