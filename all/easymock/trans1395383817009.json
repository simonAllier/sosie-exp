[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ZERO_OR_MORE"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[48,49,50,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[174,175],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[176,177,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[179,180],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[176,177,201,202],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[12,12,13,13,203,186,204,205,189,190,191,192,206,207,208,175,209,199,200,180,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[233],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[48,49,50,129,130,234,235,236,141,142,143,144,145,146,168,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[238],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[48,49,50,129,130,131,132,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[239,120,125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[48,49,50,129,130,131,132,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[121],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[181,183,185,187,188,190,192,193,195,197,199],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,57,58,59,60,61,62,63,66,67,240,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[14,19,38,52,53,54,55,57,59,60,63,65,66,102,103,107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[241,242,243,244,245,213,246],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[12,12,13,13,14,15,16,247,248,17,18,19,20,21,22,23,24,25,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,57,58,59,60,61,62,63,66,67,240,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[198],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:77","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[211],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":188,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":144,"org.easymock.tests2.StubTest.stubWithReturnValue":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":142,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":178,"org.easymock.tests.MockingTest.testPartialClassMocking":116,"org.easymock.samples.SupportTest.voteForRemovals":241,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":104,"org.easymock.tests.MockClassControlTest.testToString":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":148,"org.easymock.tests.UsageExpectAndThrowTest.object":158,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":222,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":103,"org.easymock.tests2.UsageConstraintsTest.testNull":190,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":59,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":127,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":27,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":86,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":170,"org.easymock.tests2.UsageConstraintsTest.any":196,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":58,"org.easymock.tests2.StubTest.stub":6,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":143,"org.easymock.tests.UsageExpectAndThrowTest.longType":151,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":98,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":111,"org.easymock.tests2.DependencyTest.testClassMocking":247,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":107,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":8,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":31,"org.easymock.tests2.CaptureTest.testAnd":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":42,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":10,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":152,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":60,"org.easymock.tests.MockingTest.testNicePartialClassMocking":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":163,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":37,"org.easymock.tests.LimitationsTest.mockFinalMethod":112,"org.easymock.tests2.CompareToTest.testCompareEqual":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":193,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":26,"org.easymock.tests2.DependencyTest.testClassMockingSupport":248,"org.easymock.tests.MockingTest.testTwoMocks":115,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":156,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":200,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":76,"org.easymock.tests.UsageExpectAndThrowTest.floatType":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests.UsageVerifyTest.twoThrows":133,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":80,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":149,"org.easymock.tests.LimitationsTest.privateConstructor":110,"org.easymock.tests2.UsageConstraintsTest.testNotNull":199,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":57,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":40,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":157,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":207,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":24,"org.easymock.tests.UsageThrowableTest.throwCheckedException":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.MockClassControlTest.testEquals":126,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":165,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":28,"org.easymock.tests2.CaptureTest.testCaptureAll":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.testMatches":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.tests.ObjectMethodsTest.testHashCode":239,"org.easymock.samples.ExampleTest.voteForRemovals":245,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":216,"org.easymock.tests2.UsageConstraintsTest.greaterThan":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":100,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":46,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":209,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":237,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":135,"org.easymock.tests2.UsageConstraintsTest.testSame":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":77,"org.easymock.tests.GenericTest.testPackageScope":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests.GenericTest.testBridgedEquals":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":89,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":22,"org.easymock.tests.MockingTest.testNiceClassMocking":119,"org.easymock.tests.MockingTest.testClassMocking":114,"org.easymock.tests2.UsageConstraintsTest.testContains":206,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":53,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":189,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":68,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":54,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":81,"org.easymock.tests2.CaptureTest.testCaptureRightOne":185,"org.easymock.tests2.UsageConstraintsTest.testOr":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.MockClassControlTest.testHashCode":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":78,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":82,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":99,"org.easymock.tests2.CompareToTest.testLessThan":179,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests.DefaultClassInstantiatorTest.object":94,"org.easymock.tests2.CaptureTest.testCaptureFromStub":186,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":55,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":155,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":124,"org.easymock.tests2.UsageConstraintsTest.constraints":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":91,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":123,"org.easymock.tests2.CompareToTest.testGreateThan":174,"org.easymock.tests2.UsageTest.resumeIfFailure":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":102,"org.easymock.tests.LimitationsTest.abstractClass":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":214,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":240}}]
