[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,0,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[99,101,0,112,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[205,66,81],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[206],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[2,38,207,208,206,209,210,211,212,213,214,215,216,217,218],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,219,220],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[221],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[222,223],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[224,225,226,227,228,1,229,230,231,232,233,234,2,3,219,235,236,237,238,4,239,240,241,5,6,242,243,7,8,244,245,246,9,10,11,247,12,248,13,14,15,249,250,16,17,251,252,253,254,255,256,257,18,19,20,21,22,23,24,25,26,27,28,29,258,30,31,32,33,34,259,35,36,37,260,38,207,261,262,263,264,39,265,266,40,267,268,269,270,271,272,273,274,275,41,276,277,278,279,280,42,281,282,283,284,285,286,287,288,43,289,208,44,290,206,291,45,292,46,209,47,293,210,294,48,212,295,296,49,50,51,52,53,297,298,54,55,56,57,299,58,59,60,61,62,63,64,65,300,301,66,216,302,303,67,68,69,304,305,70,71,72,73,306,74,75,76,77,78,79,307,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,308,309,97,310,311,312,313,314,315,98,316,317,318,319,320,321,322,99,100,101,323,0,102,103,104,105,106,324,325,107,326,108,109,327,328,110,329,111,112,113,114,330,115,331,332,333,217,218,116,334,335,336,337,338,117,118,119,120,121,339,340,341,342,343,122,123,344,345,124,346,347,348,349,350,351,352,353,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,354,145,146,355,356,147,148,357,358,149,359,360,361,362,363,364,365,366,367,368,369,370,150,151,152,153,154,155,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,156,395,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,396,397,398,177,399,178,179,180,181,182,183,184,185,400,401,402,403,404,405,406,407,408,409,221,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,186,436,437,438,439,440,441,442,443,444,445,446,447,448,449,187,450,451,452,453,454,455,456,457,458,459,460,188,189,190,461,462,463,464,465,191,466,192,193,467,194,468,469,470,471,472,473,474,475,476,477,195,196,197,198,478,479,480,199,481,200,201,482,483,484,485,486,202,203,487,204,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[224,225,226,227,228,1,229,230,231,232,233,234,3,235,236,237,238,4,239,240,241,5,6,7,8,244,245,246,9,10,11,247,12,248,13,14,15,249,250,16,17,256,257,18,19,20,21,22,23,24,25,26,27,28,29,258,30,35,283,284,285,286,287,288,43,296,49,50,51,52,53,297,298,54,55,56,57,299,58,59,62,70,71,72,73,306,74,75,76,77,78,79,307,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,308,309,97,310,311,312,313,314,315,98,316,317,318,319,320,321,322,99,100,101,323,0,102,103,104,105,106,324,325,107,326,108,109,327,328,110,329,111,112,113,114,330,115,331,332,333,336,337,338,117,118,119,120,121,339,340,341,342,343,122,123,344,345,124,349,350,352,353,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,355,356,147,148,357,358,149,359,360,361,362,363,364,365,366,367,368,369,370,150,151,152,153,154,155,380,381,382,383,384,385,386,387,388,389,390,391,392,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,396,397,398,177,399,178,179,180,181,182,183,184,185,400,401,402,403,404,405,406,407,408,409,221,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,186,436,437,438,439,440,441,442,443,444,445,446,447,448,188,189,190,461,462,463,464,465,191,466,192,193,467,194,468,469,470,471,473,474,475,476,477,195,196,197,198,478,479,480,199,481,200,201,482,483,487,488,489,491,492,493,494,495],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[496,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[247,249,250,108,355,356,357,358,155,189,190,468,498,480,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[499,70,87,93],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[2,210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[45,46,47,500,295,116],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[2,219,242,243,251,252,253,255,31,32,33,34,36,37,38,207,262,263,264,39,265,266,40,267,268,269,270,271,272,273,274,275,41,276,277,278,279,280,42,281,282,289,44,290,291,45,292,46,47,210,294,48,295,60,61,63,64,65,300,66,216,302,303,67,68,69,304,305,308,309,97,217,217,218,218,116,334,335,346,351,354,372,373,374,375,376,377,379,393,394,156,395,449,187,450,451,452,453,454,455,456,457,458,459,460,484,485,486,202,203,204,490],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[289,292,300,305,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.Range:40","failures":[224,225,226,227,228,1,229,230,231,232,233,234,2,3,219,235,236,237,238,4,239,240,241,5,6,242,243,7,8,244,245,246,9,10,11,247,12,248,13,14,15,249,250,16,17,251,252,253,254,255,256,257,18,19,20,21,22,23,24,25,26,27,28,29,258,30,31,32,33,34,259,35,36,37,260,38,207,261,262,263,264,39,265,266,40,267,268,269,270,271,272,273,274,275,41,276,277,278,279,280,42,281,282,283,284,285,286,287,288,43,289,208,44,290,206,291,45,292,46,209,47,293,210,294,48,212,295,296,49,50,51,52,53,297,298,54,55,56,57,299,58,59,60,61,62,63,64,65,300,301,66,216,302,303,67,68,69,304,305,70,71,72,73,306,74,75,76,77,78,79,307,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,308,309,97,310,311,312,313,314,315,98,316,317,318,319,320,321,322,99,100,101,323,0,102,103,104,105,106,324,325,107,326,108,109,327,328,110,329,111,112,113,114,330,115,331,332,333,217,218,116,334,335,336,337,338,117,118,119,120,121,339,340,341,342,343,122,123,344,345,124,346,347,348,349,350,351,352,353,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,354,145,146,355,356,147,148,357,358,149,359,360,361,362,363,364,365,366,367,368,369,370,150,151,152,153,154,155,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,156,395,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,396,397,398,177,399,178,179,180,181,182,183,184,185,400,401,402,403,404,405,406,407,408,409,221,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,186,436,437,438,439,440,441,442,443,444,445,446,447,448,449,187,450,451,452,453,454,455,456,457,458,459,460,188,189,190,461,462,463,464,465,191,466,192,193,467,194,468,469,470,471,472,473,474,475,476,477,195,196,197,198,478,479,480,199,481,200,201,482,483,484,485,486,202,203,487,204,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[502,503,355,504,505,480],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[248,64,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[506,79,84,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[2,219,251,255,31,32,33,34,36,37,38,207,261,262,263,39,266,40,267,268,269,271,272,273,274,41,276,277,278,279,280,42,289,208,44,290,206,291,45,292,46,209,47,210,294,48,212,295,60,61,63,64,65,300,66,216,302,303,67,68,69,304,305,308,309,97,217,218,116,334,335,346,351,354,372,373,374,375,376,377,379,393,394,156,395,449,187,450,451,452,453,454,455,456,457,458,459,460,484,485,486,202,203,204,490],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[398],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[449,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[1,2,3,219,4,239,240,241,5,6,7,8,244,246,9,10,11,247,12,248,13,14,15,249,250,16,17,18,19,20,21,22,23,24,25,26,27,28,29,258,30,31,32,33,34,35,36,37,38,39,40,41,42,284,285,286,287,288,43,289,44,45,46,47,48,49,50,51,52,53,297,298,54,55,56,57,299,58,59,60,61,62,63,64,65,300,66,303,67,68,69,70,71,72,73,74,75,76,77,78,79,307,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,308,309,97,310,98,322,99,100,101,323,0,102,103,104,105,106,324,325,107,326,108,109,327,328,110,329,111,112,113,114,330,115,331,332,333,217,217,218,218,116,334,335,336,337,338,117,118,119,120,121,339,343,122,123,344,345,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,354,145,146,355,356,147,148,357,358,149,359,360,361,362,364,365,366,367,369,370,150,151,152,153,154,155,372,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,396,397,177,399,178,179,180,181,182,183,184,185,415,421,424,432,433,434,435,186,436,437,438,439,441,442,443,444,445,446,447,448,187,450,451,453,188,189,190,461,462,463,464,465,191,466,192,193,467,194,469,470,471,195,196,197,198,478,479,480,199,481,200,201,482,483,486,202,203,204,491,492,493,494,495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[449,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[507,508],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[2,38,207,210,216,217,217,218,218],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[239,406],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[502,503,355,504,505,480],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:183","failures":[1,2,3,219,4,241,5,6,7,8,244,246,9,10,11,12,248,13,14,17,18,20,21,22,23,26,27,28,29,258,30,31,32,33,34,35,36,37,38,40,41,42,288,43,45,46,47,49,50,51,52,297,298,54,55,56,57,59,60,62,63,65,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,0,102,104,105,106,325,107,326,108,109,327,328,110,329,111,112,113,114,330,115,332,333,116,334,335,117,120,121,122,123,344,345,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,354,145,146,147,148,149,364,365,366,367,369,370,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,399,178,179,180,181,182,183,184,185,437,438,439,441,442,444,445,446,447,448,450,188,189,190,195,197,198,479,199,481,200,201,482,202,203,204],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.UsageTest.argumentsOrdered":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":248,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":329,"org.easymock.tests2.DelegateToTest.testReturnException":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":433,"org.easymock.tests.MockingTest.testPartialClassMocking":202,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":283,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":157,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageTest.wrongArguments":247,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":341,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":351,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":489,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":27,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":176,"org.easymock.tests.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":463,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":491,"org.easymock.tests.UsageTest.argumentsOrdered":358,"org.easymock.tests.UsageVarargTest.varargIntAccepted":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":320,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests.ReplayStateInvalidUsageTest.times":389,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":1,"org.easymock.tests2.DependencyTest.testClassMocking":242,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":238,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":348,"org.easymock.tests2.UsageTest.strictResetToDefault":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":197,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests.LimitationsTest.mockFinalMethod":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":477,"org.easymock.tests2.DependencyTest.testClassMockingSupport":243,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":396,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":236,"org.easymock.tests.UsageThrowableTest.throwError":177,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":350,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":472,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":465,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.samples.PartialClassMockTest.testGetArea":116,"org.easymock.tests.MockingTest.testInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":384,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":337,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":158,"org.easymock.tests2.UsageTest.niceToStrict":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":231,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":166,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":23,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":339,"org.easymock.tests.UsageOverloadedMethodTest.overloading":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":119,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":507,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":440,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":450,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":475,"org.easymock.tests2.CaptureTest.testCaptureAll":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":237,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":381,"org.easymock.samples.ExampleTest.voteForRemovals":115,"org.easymock.tests.UsageVarargTest.allKinds":448,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":476,"org.easymock.samples.BasicClassMockTest.testPrintContent":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":182,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":317,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":323,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":69,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":379,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":103,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":304,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":501,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":300,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":354,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":20,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":432,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":21,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":132,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":11,"org.easymock.tests2.CaptureTest.testCapture2_2446744":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":447,"org.easymock.tests.GenericTest.testBridgedEquals":452,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":369,"org.easymock.tests.UsageExpectAndReturnTest.longType":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":473,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":18,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":175,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":92,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":461,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":370,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":181,"org.easymock.tests.MockingTest.testNiceClassMocking":490,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests.MockingTest.testClassMocking":485,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":121,"org.easymock.tests.MockTypeTest.fromEasyMockClass":349,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":478,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":246,"org.easymock.tests.UsageExpectAndReturnTest.object":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":26,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":442,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":429,"org.easymock.tests.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":492,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":207,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":141,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":192,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":470,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":235,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":296,"org.easymock.tests.UsageVarargTest.varargCharAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastCall":13,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":29,"org.easymock.tests.DefaultClassInstantiatorTest.object":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":427,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":163,"org.easymock.tests.CapturesMatcherTest.test":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":359,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests2.UsageTest.resumeIfFailure":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":435,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":219,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":215,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":110,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":169,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":220,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":421,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":239,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":425,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.tests.UsageStrictMockTest.range":200,"org.easymock.samples.ConstructorCalledMockTest.testTax":217,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":262,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":340,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":338,"org.easymock.tests.UsageUnorderedTest.message":155,"org.easymock.tests.UsageVerifyTest.twoReturns":190,"org.easymock.tests.UsageVarargTest.varargByteAccepted":446,"org.easymock.tests2.ThreadingTest.testThreadSafe":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":276,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":367,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":430,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":345,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":388,"org.easymock.tests2.StubTest.stub":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":387,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":226,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.NameTest.nameForMocksControl":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":228,"org.easymock.tests2.MockedExceptionTest.testMockedException":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":266,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":204,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":245,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":203,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests2.CompareToTest.testCompareEqual":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":486,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":165,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.samples.ExampleTest.removeNonExistingDocument":331,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":497,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":374,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":104,"org.easymock.tests2.MockBuilderTest.testCreateMockString":295,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":241,"org.easymock.tests.UsageVerifyTest.twoThrows":189,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":261,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":68,"org.easymock.tests.LimitationsTest.privateConstructor":394,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":183,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":308,"org.easymock.tests2.UsageTest.defaultResetToNice":15,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":140,"org.easymock.tests.UsageVarargTest.differentLength":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":225,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests2.UsageConstraintsTest.equals":306,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":216,"org.easymock.tests.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":344,"org.easymock.tests.UsageCallCountTest.tooFewCalls":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":342,"org.easymock.tests.UsageThrowableTest.throwCheckedException":180,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":484,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":35,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests2.CompareToTest.testGreateOrEqual":506,"org.easymock.tests.ObjectMethodsTest.testHashCode":428,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests2.NameTest.nameForNiceMock":286,"org.easymock.tests2.DependencyTest.testInterfaceMocking":7,"org.easymock.samples.ExampleTest.addDocument":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":5,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":199,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":293,"org.easymock.tests.UsageVarargTest.varargLongAccepted":445,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":143,"org.easymock.tests.UsageExpectAndReturnTest.floatType":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":218,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests.UsageThrowableTest.noUpperLimit":399,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":251,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":297,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":508,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":126,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":259,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":268,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":318,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":488,"org.easymock.tests2.NameTest.nameForMock":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":137,"org.easymock.tests2.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":212,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":129,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":171,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":198,"org.easymock.tests2.MockedExceptionTest.testRealException":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":123,"org.easymock.tests2.NameTest.nameForStrictMock":285,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":291,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":255,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":44,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":272,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":496,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":356,"org.easymock.tests2.MockBuilderTest.testWithConstructor":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":269,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":138,"org.easymock.tests.UsageVarargTest.varargShortAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":14,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":382,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":290,"org.easymock.tests.UsageTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":480,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":366,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":139,"org.easymock.tests2.CaptureTest.testCapture":222,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":481,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.samples.ExampleTest.addAndChangeDocument":332,"org.easymock.tests.UsageStrictMockTest.testVerify":483,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.LimitationsTest.abstractClass":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":24}}]
