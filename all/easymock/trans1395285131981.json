[{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[0,2,13,14,17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,13,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[84,85,86,87,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[89,90,91,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"position":"org.easymock.internal.MocksControl:189","failures":[93,90,94,95,23,96,24,25,97,98,99,26,100,101,29,30,31,32,102,33,34,35,103,36,104,37,105],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[106,107,108],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[109],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[110,42,43,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,44,45,93,136,137,46,47,48,49,138,139,140,141,142,50,143,51,52,144,53,54,83,145,146,147,148,55,56,57,149,150,151,152,84,153,89,154,155,156,157,85,158,159,160,161,162,163,90,164,94,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,165,166,167,168,169,86,107,170,171,172,173,91,174,175,176,87,177,178,179,180,181,88,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,95,197,198,23,199,96,200,201,202,24,25,19,97,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,58,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,98,288,59,99,26,100,289,38,39,40,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,41,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,60,61,62,63,64,355,356,357,358,359,360,361,362,363,364,365,366,367,368,27,369,370,371,65,372,20,21,22,101,373,29,30,374,375,31,32,102,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,33,396,397,398,66,399,400,401,402,403,404,405,406,407,408,109,409,410,411,412,413,414,415,67,416,417,418,68,69,419,420,421,422,423,424,425,426,70,427,428,429,430,71,431,432,92,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,18,456,72,73,457,458,74,459,460,461,462,75,76,77,78,79,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,34,35,479,480,481,482,483,484,485,486,487,80,81,103,488,36,82,104,37,105,489,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,13,58,59,60,61,62,63,64,66,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[495,496,497,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[498,499,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[388,389,393],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[93,144,89,163,90,94,165,91,175,95,23,199,96,24,25,19,97,207,245,249,250,253,98,99,26,100,502,313,503,28,372,101,29,30,31,32,102,33,440,34,35,485,486,487,103,36,104,37,105],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[88,182,183,184,58,310,311,312,353,399,420,457,472,473,474,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":96,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":119,"org.easymock.tests2.DelegateToTest.testReturnException":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":473,"org.easymock.tests.MockingTest.testPartialClassMocking":41,"org.easymock.tests.MockClassControlTest.testToString":448,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":128,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":267,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":290,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":206,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":72,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":461,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":360,"org.easymock.tests2.UsageConstraintsTest.testNull":47,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":341,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":253,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":309,"org.easymock.tests.UsageTest.moreThanOneArgument":373,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":62,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":377,"org.easymock.tests.UsageVarargTest.varargIntAccepted":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":75,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":79,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.DependencyTest.testClassMocking":203,"org.easymock.tests2.AnswerTest.answer":282,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":152,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":357,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":248,"org.easymock.tests2.DelegateToTest.testDelegate":226,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":305,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":386,"org.easymock.tests2.DependencyTest.testClassMockingSupport":204,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":369,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":150,"org.easymock.tests.UsageThrowableTest.throwError":401,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":359,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":196,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":281,"org.easymock.samples.PartialClassMockTest.testGetArea":110,"org.easymock.tests.MockingTest.testInterfaceMocking":338,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":492,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":471,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":291,"org.easymock.tests2.ThreadingTest.testChangeDefault":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":67,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.MockBuilderTest.testCreateMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":299,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":249,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":479,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":459,"org.easymock.tests.UsageOverloadedMethodTest.overloading":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":366,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":325,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":10,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests.MockClassControlTest.testEquals":452,"org.easymock.tests2.EasyMockSupportClassTest.testAll":260,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":410,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":151,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.MockNameTest.defaultName":400,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":63,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":116,"org.easymock.tests.UsageVarargTest.allKinds":445,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":385,"org.easymock.samples.BasicClassMockTest.testPrintContent":121,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":407,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":192,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":225,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":394,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":20,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":395,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":178,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":376,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":246,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":247,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":180,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.UsageTest.moreThanOneArgument":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":90,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":444,"org.easymock.tests.GenericTest.testBridgedEquals":412,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":486,"org.easymock.tests.UsageExpectAndReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":382,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":308,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":147,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":60,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":487,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":236,"org.easymock.tests.MockingTest.testNiceClassMocking":342,"org.easymock.tests.MockingTest.testClassMocking":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":480,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":183,"org.easymock.tests2.UsageConstraintsTest.testFind":46,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":415,"org.easymock.tests.MockTypeTest.fromEasyMockClass":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":135,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests.UsageExpectAndReturnTest.object":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":252,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":439,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":469,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":126,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":434,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":365,"org.easymock.tests.MockClassControlTest.testHashCode":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":186,"org.easymock.tests2.EasyMockSupportTest.testVerify":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":270,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":363,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":149,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":208,"org.easymock.tests.UsageVarargTest.varargCharAccepted":438,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":387,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":498,"org.easymock.tests.DefaultClassInstantiatorTest.object":388,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":467,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":185,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":450,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":296,"org.easymock.tests.CapturesMatcherTest.test":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":310,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":279,"org.easymock.tests2.UsageTest.resumeIfFailure":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":475,"org.easymock.tests2.StubTest.stubWithReturnValue":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":323,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":428,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":302,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":92,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":283,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":465,"org.easymock.tests.UsageExpectAndThrowTest.object":300,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":145,"org.easymock.tests2.DelegateToTest.testWrongClass":224,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":232,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":493,"org.easymock.tests2.CaptureTest.testCaptureNone":9,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":496,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":502,"org.easymock.tests.UsageVerifyTest.twoReturns":35,"org.easymock.tests.UsageVarargTest.varargByteAccepted":443,"org.easymock.tests2.ThreadingTest.testThreadSafe":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":274,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":484,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":470,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":431,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.StubTest.stub":234,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndThrowTest.longType":293,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":392,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":18,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":211,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests2.NameTest.nameForMocksControl":132,"org.easymock.tests2.MockedExceptionTest.testMockedException":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":262,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":375,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":294,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":370,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":242,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":146,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":298,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":56,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":117,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":216,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":187,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":390,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":179,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":264,"org.easymock.tests.UsageExpectAndThrowTest.floatType":292,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":259,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":127,"org.easymock.tests.UsageVerifyTest.twoThrows":34,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":273,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.UsageConstraintsTest.testNotNull":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":408,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":88,"org.easymock.tests2.UsageTest.defaultResetToNice":202,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":329,"org.easymock.tests.UsageVarargTest.differentLength":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":210,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.UsageConstraintsTest.equals":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":171,"org.easymock.tests.UsageTest.openCallCountByLastCall":374,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":457,"org.easymock.tests.UsageCallCountTest.tooFewCalls":482,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":462,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":497,"org.easymock.tests.UsageThrowableTest.throwCheckedException":405,"org.easymock.tests.MockingTest.testStrictClassMocking":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":237,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":240,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":287,"org.easymock.tests.ObjectMethodsTest.testHashCode":468,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests2.NameTest.nameForNiceMock":131,"org.easymock.tests2.DependencyTest.testInterfaceMocking":205,"org.easymock.samples.ExampleTest.addDocument":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":275,"org.easymock.tests2.DelegateToTest.testStubDelegate":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":280,"org.easymock.tests2.AnswerTest.stubAnswer":286,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":82,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":161,"org.easymock.tests.UsageVarargTest.varargLongAccepted":442,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatType":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests.UsageThrowableTest.noUpperLimit":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":194,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":227,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":389,"org.easymock.tests2.UsageConstraintsTest.testSame":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":315,"org.easymock.samples.SupportTest.addDocument":123,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":239,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":265,"org.easymock.tests.GenericTest.testPackageScope":409,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":193,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":340,"org.easymock.tests2.NameTest.nameForMock":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":164,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":304,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":22,"org.easymock.tests2.MockedExceptionTest.testRealException":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":73,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":130,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":499,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":231,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":391,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":89,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":245,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":269,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":495,"org.easymock.tests2.UsageConstraintsTest.testOr":49,"org.easymock.tests.UsageRangeTest.combination":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":266,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":393,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":485,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":154,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":328,"org.easymock.tests2.CaptureTest.testCapture":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.samples.ExampleTest.addAndChangeDocument":118,"org.easymock.tests2.ConstraintsToStringTest.containsToString":494,"org.easymock.tests.UsageStrictMockTest.testVerify":490,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":122,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":383,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":77,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":78,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":250}}]
