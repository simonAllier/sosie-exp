[{"position":"org.easymock.EasyMock:557","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,252,253,253,254,255],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[109,258,111,112,259,260,113,115,261,116,117,119],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[262,263,264,265,266,68,267,268,269],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[131,170,222,228,235,236],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[114,115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[6,39,270,55,56,74,96,100,101,104,271,167,168,186],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,272,8,9,10,11,12,273,13,14,15,16,17,18,274,19,20,21,22,23,24,25,26,27,28,29,30,275,31,32,33,34,276,277,278,279,280,35,281,282,283,284,285,286,36,37,38,287,39,288,40,41,42,289,290,43,44,45,46,47,48,49,50,51,52,53,270,291,54,292,55,56,293,294,295,296,57,297,298,58,299,300,301,302,303,304,305,306,307,59,308,309,310,311,312,60,313,314,315,316,317,318,319,320,61,321,322,323,324,325,326,62,63,64,65,66,67,327,328,329,330,68,69,331,332,70,333,334,71,335,72,73,268,336,74,337,338,339,340,341,75,269,76,77,78,79,80,81,82,83,84,85,86,342,87,343,344,345,88,89,90,346,347,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,348,349,350,351,352,107,108,109,110,258,111,112,259,260,113,114,115,116,117,118,119,353,354,120,355,356,357,358,359,360,361,121,122,123,362,363,364,124,125,365,126,366,367,368,127,128,129,130,131,369,370,371,372,132,133,134,135,136,137,373,138,139,374,375,140,141,376,377,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,378,379,380,381,382,163,164,165,271,383,384,166,385,167,168,386,387,388,389,390,391,392,393,394,395,169,170,171,172,173,174,175,176,177,178,396,397,398,399,256,400,401,179,180,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,181,418,419,420,421,422,182,423,424,183,425,184,426,427,185,428,186,187,188,189,190,429,191,192,430,193,431,194,432,433,434,435,436,195,437,438,439,440,441,442,196,197,198,199,200,201,443,444,445,446,447,448,202,203,204,205,206,207,208,209,210,211,212,449,450,451,452,453,454,455,456,457,458,459,460,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,461,462,240,463,464,465,466,467,468,241,242,243,244,245,246,247,248,249,469,250,470,251,252,252,253,253,471,254,472,473,255,474,475],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,68,69,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,95,96,97,98,99,100,101,103,104,105,106,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,139,140,141,142,166,167,168,177,178,179,183,186,188,189,196,197,200,202,204,205,206,207,208,209,213,215,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,246,248,249,250,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[476],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[277,278,280,282,283,286,317,318,320,322,323,326],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[11,12,14,16,17,274,28,32,109,258,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[477],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[478],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[169,177,221,223,237,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[6,11,25,36,287,39,288,289,290,43,44,270,292,55,56,70,336,74,337,82,88,90,96,100,101,104,479,480,138,374,375,376,377,142,271,384,385,167,168,481,482,186,201,455,214,215,466,467,468],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[428],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,138,139,140,141,142,166,167,168,177,178,179,183,184,186,187,188,189,193,196,197,200,202,204,205,206,207,208,209,213,215,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,246,248,249,250,254,255],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[38,287,289,290,54,55,56,327,328,329,330,139,375,376,377,384,166,167,168,483,484,485,201,213,214,215],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[63,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[38,287,289,290,54,55,56,327,328,329,330,139,375,376,377,384,166,167,168,483,484,485,201,213,214,215],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[23,30,34,486],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[488,489,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[491,492,493,494,374,384],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,3,4,5,404,191],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[18,23,34,495],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":12,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.UsageTest.argumentsOrdered":290,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":412,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":288,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":471,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":133,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.tests.MockClassControlTest.testToString":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":143,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":483,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":53,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":196,"org.easymock.tests2.UsageTest.wrongArguments":287,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":371,"org.easymock.samples.ExampleTest.answerVsDelegate":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":446,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":162,"org.easymock.tests.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":241,"org.easymock.tests.UsageTest.argumentsOrdered":377,"org.easymock.tests.UsageVarargTest.varargIntAccepted":451,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":131,"org.easymock.tests.ReplayStateInvalidUsageTest.times":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":476,"org.easymock.tests2.AnswerTest.answer":62,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":99,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":158,"org.easymock.tests.LimitationsTest.mockFinalMethod":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":427,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":434,"org.easymock.tests.UsageThrowableTest.throwError":202,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":445,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":482,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":314,"org.easymock.samples.PartialClassMockTest.testGetArea":254,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":435,"org.easymock.tests.MockingTest.testInterfaceMocking":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":144,"org.easymock.tests2.UsageTest.niceToStrict":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":303,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":323,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":152,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":461,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":369,"org.easymock.tests.UsageOverloadedMethodTest.overloading":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":312,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":192,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":22,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":115,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":452,"org.easymock.tests.MockClassControlTest.testEquals":394,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":160,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":380,"org.easymock.tests.MockNameTest.defaultName":373,"org.easymock.tests2.UsageConstraintsTest.testMatches":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":172,"org.easymock.samples.ExampleTest.voteForRemovals":250,"org.easymock.tests.UsageVarargTest.allKinds":460,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.samples.BasicClassMockTest.testPrintContent":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":381,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":137,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests2.UsageConstraintsTest.greaterThan":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":90,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":248,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":97,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":132,"org.easymock.tests2.CaptureTest.testCaptureFirst":119,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":98,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":118,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":459,"org.easymock.tests.GenericTest.testBridgedEquals":426,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":467,"org.easymock.tests.UsageExpectAndReturnTest.longType":222,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":378,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":161,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":239,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.UsageCallCountTest.tooManyCalls":468,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testNiceClassMocking":368,"org.easymock.tests.MockingTest.testClassMocking":363,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":462,"org.easymock.tests2.UsageConstraintsTest.testContains":21,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":13,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":123,"org.easymock.tests.MockTypeTest.fromEasyMockClass":444,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests.UsageExpectAndReturnTest.object":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":324,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":454,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":263,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":359,"org.easymock.tests.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":210,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":269,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":449,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":191,"org.easymock.tests.MockClassControlTest.testHashCode":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":277,"org.easymock.tests2.EasyMockSupportTest.testVerify":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":217,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":453,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":489,"org.easymock.tests.DefaultClassInstantiatorTest.object":396,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":216,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":480,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":276,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":163,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests2.UsageTest.resumeIfFailure":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":135,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":331,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":492,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":155,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":182,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":63,"org.easymock.tests.UsageExpectAndThrowTest.object":153,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":212,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":29,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":178,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":351,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":294,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":370,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":176,"org.easymock.tests2.CaptureTest.testCaptureNone":114,"org.easymock.tests.UsageUnorderedTest.message":201,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":481,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests.UsageVarargTest.varargByteAccepted":458,"org.easymock.tests2.ThreadingTest.testThreadSafe":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":308,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":465,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":360,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":199,"org.easymock.tests2.UsageConstraintsTest.any":19,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":438,"org.easymock.tests2.StubTest.stub":107,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndThrowTest.longType":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":134,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":437,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.SerializationTest.testClass":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":120,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":318,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.NameTest.nameForMocksControl":330,"org.easymock.tests2.MockedExceptionTest.testMockedException":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":298,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":147,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":30,"org.easymock.tests.MockingTest.testTwoMocks":364,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":151,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.samples.ExampleTest.removeNonExistingDocument":470,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":436,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":278,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":398,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":299,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":65,"org.easymock.tests.UsageVerifyTest.twoThrows":214,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests.LimitationsTest.privateConstructor":354,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.UsageTest.defaultResetToNice":42,"org.easymock.samples.ExampleTest.voteAgainstRemovals":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests.UsageVarargTest.differentLength":455,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":317,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.UsageConstraintsTest.equals":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":198,"org.easymock.tests.UsageCallCountTest.tooFewCalls":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":372,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":49,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":67,"org.easymock.tests2.CompareToTest.testGreateOrEqual":495,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":265,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests2.NameTest.nameForNiceMock":329,"org.easymock.tests2.DependencyTest.testInterfaceMocking":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":264,"org.easymock.samples.ExampleTest.addDocument":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":309,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":477,"org.easymock.tests.UsageVarargTest.varargLongAccepted":457,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatType":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":253,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":349,"org.easymock.tests2.SerializationTest.test":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":259,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":257,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":397,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":220,"org.easymock.samples.SupportTest.addDocument":473,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":300,"org.easymock.tests.GenericTest.testPackageScope":183,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":366,"org.easymock.tests2.NameTest.nameForMock":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":231,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":157,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":197,"org.easymock.tests2.NameTest.nameForStrictMock":328,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":350,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":399,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":304,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageTest.wrongArguments":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":232,"org.easymock.tests.UsageVarargTest.varargShortAccepted":456,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":400,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":466,"org.easymock.tests2.UsageConstraintsTest.cmpTo":20,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":64,"org.easymock.tests2.CompareToTest.testLessThan":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":433,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":333,"org.easymock.tests.UsageTest.unexpectedCallWithArray":374,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":384,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":233,"org.easymock.tests2.CaptureTest.testCapture":261,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":385,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.samples.ExampleTest.addAndChangeDocument":251,"org.easymock.tests.UsageStrictMockTest.testVerify":387,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":472,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":383,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":379,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.LimitationsTest.abstractClass":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":130,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":485,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
