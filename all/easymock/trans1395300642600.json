[{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.RecordState:324","failures":[0,1,2],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:262","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,0,37,38,39,1,2,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[55,16,20,21,23,26,56,57,58,0,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[67,8,9,32,35,42,43,44,45,46,47,68,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[70,71,72,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[74,61,75,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[55,78,79,80,81,82,83,84,58,0,59,85,60,74,61,63,86,87,88,89,90,91,92,64,75,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[93,94,95,96,97,6,55,98,7,99,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,100,101,102,103,104,105,106,107,108,109,110,111,112,33,113,114,34,84,115,116,35,36,117,58,0,59,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,37,138,38,39,1,2,40,41,139,42,43,44,45,46,47,140,60,141,74,61,62,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,48,162,63,163,164,165,49,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,77,186,187,188,189,5,190,191,71,72,192,193,194,195,196,197,198,199,200,201,202,203,204,64,205,75,65,66,206,54,207,208,209,210,211,212],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[168,213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[93,94,95,96,97,6,55,214,78,98,7,79,80,99,215,216,217,218,219,220,221,222,223,67,8,9,224,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,100,101,102,225,103,104,226,105,106,107,108,109,227,228,229,230,231,232,233,234,235,236,237,110,32,238,239,240,241,242,243,244,245,246,247,248,249,250,251,111,252,112,33,253,56,254,113,114,34,255,256,57,84,115,116,35,36,117,58,0,59,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,37,138,38,39,1,2,40,41,257,258,259,260,261,262,263,139,264,265,42,43,44,45,46,47,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,68,296,297,3,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,140,85,60,141,74,61,62,322,142,143,323,324,69,325,326,327,328,329,330,331,332,333,334,335,336,337,338,144,145,146,147,148,149,339,150,151,152,153,154,155,156,340,157,341,341,342,342,158,159,160,161,48,162,63,86,163,164,165,49,343,87,88,166,167,344,345,346,347,168,348,169,170,349,350,351,352,353,354,171,172,355,173,356,357,174,358,359,360,361,362,363,364,365,175,366,76,367,368,369,370,176,371,372,177,373,178,179,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,180,390,391,181,392,393,182,183,394,395,396,397,398,50,51,52,53,399,400,401,184,185,77,402,186,187,403,404,405,406,407,188,408,409,410,411,412,413,4,189,5,190,414,191,71,72,73,415,416,192,193,194,195,196,197,198,417,199,200,201,202,418,419,89,90,91,92,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,203,454,455,456,457,458,459,460,204,64,205,75,65,66,206,54,461,462,463,464,465,466,467,207,208,468,469,470,471,472,209,210,473,211,474,475,212],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[375],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[80,248,114,84,0,37,138,39,1,2,40,41,321,74,61,163,164,88,351,173,175,176,179,374,376,379,385,386,387,389,187,193,195,197,198,200,201,202,460,75,65,211],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[6,55,214,78,79,80,99,218,219,220,221,222,223,226,228,230,231,234,235,236,237,248,252,253,56,254,255,256,84,58,0,59,316,319,320,321,85,60,141,74,61,62,333,334,335,48,63,86,163,164,87,88,166,167,344,345,346,169,170,350,351,352,173,364,366,367,370,382,187,188,408,193,195,197,198,199,200,89,90,91,92,203,454,460,64,205,75,65,66,462,463,466,467],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[177,375,385,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[111,300,152,181,393,394,187],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[93,94,95,96,97,6,55,214,78,98,7,79,80,99,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,100,101,102,103,104,226,105,106,107,108,109,227,230,231,232,233,234,235,236,110,32,241,242,244,248,250,251,111,112,33,254,113,114,34,84,115,116,35,36,117,58,0,59,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,37,138,38,39,1,2,40,41,257,258,259,260,261,263,139,42,43,44,45,46,47,268,311,312,313,314,321,140,85,60,141,74,61,62,142,143,144,145,146,147,148,149,339,150,151,152,153,154,155,156,157,341,342,158,159,160,161,48,162,63,86,163,164,165,49,343,87,88,166,167,344,345,168,348,169,170,350,351,352,171,172,355,173,356,357,174,358,359,361,364,365,175,366,368,369,370,176,372,177,373,178,179,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,180,390,391,181,182,183,394,395,396,397,398,50,51,52,53,399,401,184,185,402,186,187,188,189,5,190,191,71,72,73,415,192,193,194,195,196,197,198,417,199,200,201,202,418,427,430,440,446,203,460,204,64,205,75,65,66,206,54,461,462,463,464,465,466,467,207,208,468,469,470,471,472,209,210,473,211,474,475,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[6,7,0,38,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:42","sourceCode":"return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[382,388,208,468,470,471,472,209,210,212],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[100,101,102,103,104,105,106,107,108,109,227,230,231,232,233,235,236,84,35,138,139,140,141,74,61,62,149,150,151,153,154,155,156,157,158,159,160,161,164,168,388,73,195,200,201,202,418,204,205,75,65,66,206,208,468,471,472,209,210,212],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[214,78,79,80,476,254,84,0,59,85,74,86,87,88,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[207,468,469,470,471,472,209,473,477,211,474,212],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[55,78,79,80,252,253,56,255,256,84,58,0,59,60,74,61,478,479,480,481,482,483,484,63,86,87,88,64,75,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[370,176,178,179,375,385,207,468,211],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[391,486],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[55,78,79,80,81,82,83,84,58,0,59,85,60,74,61,63,86,87,88,89,90,91,92,64,75,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[76,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[55,487,488,476,252,253,56,254,255,256,84,58,0,59,60,74,61,478,489,479,490,481,483,63,64,75,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[173,364,366,463,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[36,302,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":176,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.UsageTest.argumentsOrdered":88,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":3,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":164,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":150,"org.easymock.tests2.DelegateToTest.testReturnException":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":43,"org.easymock.tests.MockingTest.testPartialClassMocking":241,"org.easymock.tests.MockClassControlTest.testToString":333,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":419,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":12,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":81,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":221,"org.easymock.tests2.UsageConstraintsTest.testNull":177,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":357,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":200,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":338,"org.easymock.tests2.CaptureTest.testPrimitive":469,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":31,"org.easymock.tests.UsageTest.moreThanOneArgument":55,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":95,"org.easymock.tests.UsageTest.argumentsOrdered":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":326,"org.easymock.tests.UsageVarargTest.varargIntAccepted":102,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":480,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.ReplayStateInvalidUsageTest.times":278,"org.easymock.tests2.DependencyTest.testClassMocking":353,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":398,"org.easymock.tests2.CaptureTest.testAnd":207,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests2.DelegateToTest.testDelegate":191,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":330,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":27,"org.easymock.tests.LimitationsTest.mockFinalMethod":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.DependencyTest.testClassMockingSupport":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":470,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":396,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":220,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":448,"org.easymock.samples.PartialClassMockTest.testGetArea":339,"org.easymock.tests.MockingTest.testInterfaceMocking":243,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":435,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":13,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":168,"org.easymock.tests2.MockBuilderTest.testCreateMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":379,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":473,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":225,"org.easymock.tests2.EasyMockSupportClassTest.testAll":427,"org.easymock.tests.MockClassControlTest.testEquals":337,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":397,"org.easymock.tests2.CaptureTest.testCaptureAll":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests.MockNameTest.defaultName":237,"org.easymock.tests2.UsageConstraintsTest.testMatches":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":270,"org.easymock.samples.ExampleTest.voteForRemovals":156,"org.easymock.tests.UsageVarargTest.allKinds":109,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":58,"org.easymock.samples.BasicClassMockTest.testPrintContent":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":40,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":460,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":47,"org.easymock.tests2.UsageConstraintsTest.greaterThan":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":366,"org.easymock.samples.ExampleTest.voteForRemoval":153,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":288,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":185,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":359,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":42,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":4,"org.easymock.tests2.CaptureTest.testCaptureFirst":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":475,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":402,"org.easymock.tests2.UsageTest.moreThanOneArgument":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":351,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":108,"org.easymock.tests.GenericTest.testBridgedEquals":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":235,"org.easymock.tests.UsageExpectAndReturnTest.longType":121,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":30,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":213,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":388,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":93,"org.easymock.tests.UsageCallCountTest.tooManyCalls":236,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":2,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":462,"org.easymock.tests.MockingTest.testNiceClassMocking":247,"org.easymock.tests.MockingTest.testClassMocking":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":229,"org.easymock.tests2.UsageConstraintsTest.testContains":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":52,"org.easymock.tests2.UsageConstraintsTest.testFind":372,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":34,"org.easymock.tests.MockTypeTest.fromEasyMockClass":219,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":401,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests.UsageExpectAndReturnTest.object":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":361,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":199,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":104,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":318,"org.easymock.tests.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":215,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":416,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":134,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":100,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.MockClassControlTest.testHashCode":336,"org.easymock.tests2.EasyMockSupportTest.testVerify":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":437,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":395,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":485,"org.easymock.tests.UsageVarargTest.varargCharAccepted":103,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":224,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":316,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":67,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":446,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":334,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":45,"org.easymock.tests2.StubTest.stubWithReturnValue":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":127,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":303,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":482,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":24,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":70,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":309,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":392,"org.easymock.tests.UsageExpectAndThrowTest.object":22,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":217,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":386,"org.easymock.tests2.DelegateToTest.testWrongClass":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":143,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.samples.ConstructorCalledMockTest.testTax":341,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":424,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":69,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests.UsageUnorderedTest.message":84,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":107,"org.easymock.tests2.ThreadingTest.testThreadSafe":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":441,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":233,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":158,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":468,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageConstraintsTest.any":376,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":44,"org.easymock.tests.UsageExpectAndThrowTest.longType":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":286,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":276,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":205,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.SerializationTest.testClass":71,"org.easymock.tests.LimitationsTest.mockNativeMethod":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":137,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.MockedExceptionTest.testMockedException":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":429,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":16,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":244,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":355,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":170,"org.easymock.tests.MockingTest.testNicePartialClassMocking":242,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests2.CaptureTest.testCaptureLast":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":256,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":467,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":179,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":387,"org.easymock.tests.MockingTest.testTwoMocks":240,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":20,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":390,"org.easymock.samples.ExampleTest.removeNonExistingDocument":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":284,"org.easymock.tests2.ConstraintsToStringTest.andToString":481,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":77,"org.easymock.tests2.MockBuilderTest.testCreateMockString":352,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":431,"org.easymock.tests.UsageExpectAndThrowTest.floatType":14,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":182,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":440,"org.easymock.samples.ExampleTest.voteAgainstRemoval":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":298,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":267,"org.easymock.tests2.UsageConstraintsTest.testNotNull":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":41,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":50,"org.easymock.tests2.UsageTest.defaultResetToNice":343,"org.easymock.samples.ExampleTest.voteAgainstRemovals":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":226,"org.easymock.tests2.CallbackTest.callback":187,"org.easymock.tests2.UsageConstraintsTest.equals":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":35,"org.easymock.tests.UsageCallCountTest.tooFewCalls":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests.UsageThrowableTest.throwCheckedException":1,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":487,"org.easymock.tests.MockingTest.testStrictClassMocking":238,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":466,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":465,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":394,"org.easymock.tests.ObjectMethodsTest.testHashCode":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":186,"org.easymock.tests2.NameTest.nameForNiceMock":91,"org.easymock.tests2.DependencyTest.testInterfaceMocking":171,"org.easymock.samples.ExampleTest.addDocument":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.DelegateToTest.testStubDelegate":5,"org.easymock.tests2.AnswerTest.stubAnswer":183,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests.UsageVarargTest.varargLongAccepted":106,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":297,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":415,"org.easymock.tests2.ConstraintsToStringTest.orToString":478,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":384,"org.easymock.tests.UsageThrowableTest.noUpperLimit":138,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":369,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":420,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":471,"org.easymock.tests2.SerializationTest.test":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":119,"org.easymock.tests2.UsageConstraintsTest.testSame":373,"org.easymock.samples.SupportTest.addDocument":160,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":432,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":245,"org.easymock.tests2.NameTest.nameForMock":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":26,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests2.MockedExceptionTest.testRealException":53,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":488,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":281,"org.easymock.tests2.NameTest.nameForStrictMock":90,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":174,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":385,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":82,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":345,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":436,"org.easymock.tests2.CaptureTest.testCaptureRightOne":211,"org.easymock.tests2.UsageConstraintsTest.testOr":178,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":173,"org.easymock.tests.UsageTest.wrongArguments":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":433,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":290,"org.easymock.tests.UsageVarargTest.varargShortAccepted":105,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":234,"org.easymock.tests2.UsageConstraintsTest.cmpTo":377,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests2.CompareToTest.testLessThan":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":292,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests2.CaptureTest.testCaptureFromStub":474,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":271,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":132,"org.easymock.tests2.CaptureTest.testCapture":477,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.UsageConstraintsTest.constraints":370,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests2.ConstraintsToStringTest.notToString":479,"org.easymock.tests.UsageStrictMockTest.testVerify":322,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":149,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":124,"org.easymock.tests.LimitationsTest.abstractClass":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":101,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198}}]
