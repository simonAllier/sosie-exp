[{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[14,6,15,16],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[14,6,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[37],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[38,39,40,41,42,43,18,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[26,64,65,66,67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[71,72,26,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,17,145,146,147,43,18,44,45,148,149,150,151,152,153,154,155,48,50,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,4,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,28,218,219,220,221,29,32,33,34,6,15,16,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,66,247,69,248,7,249,250,251,252,60,253,254,255,256,257,61,63,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,37,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,35,36,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[293,294,295,296,297,298,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[271],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[81,81,82,82,132,145,146,147,48,169,170,171,172,173,174,175,176,177,178,189,190,299,61,266,268,269,272,273,37,274,279,281,282,284,285,290,291,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[200,202,209,270,275],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[81,82,301,302,303,214,304,305,215,306,307,308,309,310,311,312,313,314,216,315,316,317,318,319,217,320,321,6,238,242,322,323,324,325,326,298,9,327,328,12,13],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[329,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[81,81,82,82,3,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[90,94,95,97,100,112,116,117,119,122,333,334,335,49,50,336,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[81,82,301,302,303,214,304,305,215,306,307,308,309,310,311,312,313,314,216,315,316,317,318,319,217,320,321,6,238,242,322,323,324,325,326,298,9,327,328,12,13],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[71,72,26,73,74,75,76,337,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,338,339,300,340,341,342,1,106,107,2,343,344,38,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,345,346,333,347,348,334,335,133,349,350,351,352,353,23,354,355,356,357,134,135,136,137,138,139,140,141,142,358,359,360,361,143,362,363,364,365,366,367,368,144,17,369,370,371,372,373,145,146,374,375,147,43,18,44,376,377,378,379,380,381,382,383,19,45,46,384,385,20,386,387,388,148,149,150,151,152,153,27,389,64,390,391,154,392,393,155,47,48,394,49,50,156,157,395,396,397,158,159,398,160,399,400,401,402,403,65,404,405,406,332,407,336,408,409,410,411,412,413,331,414,415,416,417,418,419,420,421,161,162,163,164,165,166,422,423,424,425,167,168,169,170,171,172,173,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,174,175,176,177,178,444,445,446,179,180,181,447,182,183,448,184,185,186,187,188,189,190,449,450,191,451,51,52,192,193,452,194,195,196,197,453,454,198,3,455,199,456,4,0,457,5,200,201,202,203,458,204,205,206,207,208,209,299,459,210,211,212,460,461,213,301,302,303,214,304,305,215,306,307,308,309,310,311,312,313,314,216,315,316,317,318,319,217,320,321,28,218,219,220,221,29,30,31,32,33,34,6,15,16,222,223,224,225,226,227,228,229,230,231,232,233,234,462,463,464,465,466,235,467,468,469,470,471,472,236,237,238,239,473,240,241,242,322,474,243,244,245,246,475,66,247,67,68,69,248,325,476,477,326,478,7,249,250,298,251,8,9,10,479,328,11,480,481,482,483,484,485,486,21,252,60,487,253,254,488,22,255,489,490,256,491,492,257,61,493,62,63,258,259,260,261,262,494,495,263,264,265,266,496,497,498,499,500,267,501,502,503,504,505,506,268,269,270,271,507,272,273,37,274,275,276,508,277,278,279,280,281,282,283,284,285,286,287,288,509,289,290,291,292,510,35,511,36,12,13,512],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[81,82,3,6,325,326,298,9,327,328,513,514,515,12,13],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[210,211],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[460],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[516],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":271,"org.easymock.tests2.UsageTest.argumentsOrdered":490,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":85,"org.easymock.tests2.DelegateToTest.testReturnException":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":149,"org.easymock.tests.MockingTest.testPartialClassMocking":158,"org.easymock.tests.MockClassControlTest.testToString":362,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":474,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":86,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":293,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":276,"org.easymock.tests2.UsageTest.wrongArguments":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":145,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":136,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":381,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":400,"org.easymock.tests2.UsageConstraintsTest.testNull":273,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":231,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":367,"org.easymock.tests2.CaptureTest.testPrimitive":203,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":147,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":105,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":171,"org.easymock.tests.UsageTest.argumentsOrdered":387,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":505,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":482,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":178,"org.easymock.tests.ReplayStateInvalidUsageTest.times":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests2.DependencyTest.testClassMocking":494,"org.easymock.tests2.AnswerTest.answer":29,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":262,"org.easymock.tests2.CaptureTest.testAnd":200,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":378,"org.easymock.tests2.UsageTest.strictResetToDefault":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":226,"org.easymock.tests2.DelegateToTest.testDelegate":69,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":101,"org.easymock.tests.LimitationsTest.mockFinalMethod":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":458,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":260,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":434,"org.easymock.tests.UsageThrowableTest.throwError":368,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":380,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":506,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":173,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":513,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":321,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":435,"org.easymock.tests.MockingTest.testInterfaceMocking":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":339,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":87,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":469,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":377,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":134,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":319,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":119,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":24,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":280,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":447,"org.easymock.tests2.EasyMockSupportClassTest.testAll":214,"org.easymock.tests.MockClassControlTest.testEquals":366,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.CaptureTest.testCaptureAll":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":261,"org.easymock.tests.MockNameTest.defaultName":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":172,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests.UsageVarargTest.allKinds":188,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":84,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":372,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":153,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":68,"org.easymock.tests2.UsageConstraintsTest.greaterThan":284,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":457,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":453,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":133,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":224,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":148,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":475,"org.easymock.tests2.CaptureTest.testCaptureFirst":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":225,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":491,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":115,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":461,"org.easymock.tests2.CaptureTest.testCapture2_2446744":459,"org.easymock.tests2.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":187,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":423,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":104,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":509,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":359,"org.easymock.tests.UsageCallCountTest.tooManyCalls":424,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":471,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":371,"org.easymock.tests.MockingTest.testNiceClassMocking":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":237,"org.easymock.tests.MockingTest.testClassMocking":396,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":162,"org.easymock.tests2.UsageConstraintsTest.testContains":279,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":220,"org.easymock.tests2.UsageConstraintsTest.testFind":272,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests.MockTypeTest.fromEasyMockClass":379,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":230,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":294,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":429,"org.easymock.tests.UsageTest.exactCallCountByLastCall":388,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":347,"org.easymock.tests2.ConstraintsToStringTest.findToString":516,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":497,"org.easymock.tests.MockClassControlTest.testHashCode":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":312,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":510,"org.easymock.tests.UsageVarargTest.varargCharAccepted":182,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":349,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastCall":488,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":444,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":427,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":456,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":358,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":217,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":363,"org.easymock.tests2.UsageTest.resumeIfFailure":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":376,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":151,"org.easymock.tests2.StubTest.stubWithReturnValue":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":289,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":414,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":515,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":58,"org.easymock.samples.SupportTest.voteForRemovals":79,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":98,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":420,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":30,"org.easymock.tests.UsageExpectAndThrowTest.object":96,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":287,"org.easymock.tests2.DelegateToTest.testWrongClass":67,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":190,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":485,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":250,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":442,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":39,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":300,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":186,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":315,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":166,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":430,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":83,"org.easymock.tests2.CaptureTest.testCapture_2617107":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":375,"org.easymock.tests2.UsageConstraintsTest.any":277,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":439,"org.easymock.tests2.StubTest.stub":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":150,"org.easymock.tests.UsageExpectAndThrowTest.longType":89,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":438,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":493,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests.LimitationsTest.mockNativeMethod":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":127,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.NameTest.nameForMocksControl":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.MockedExceptionTest.testMockedException":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":305,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":511,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":90,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":251,"org.easymock.tests.MockingTest.testNicePartialClassMocking":159,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.CaptureTest.testCaptureLast":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":242,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":275,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":288,"org.easymock.tests.MockingTest.testTwoMocks":397,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":489,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":291,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":468,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":436,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":498,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":330,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":352,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":460,"org.easymock.tests2.ConstraintsToStringTest.andToString":57,"org.easymock.tests2.MockBuilderTest.testCreateMockString":11,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.floatType":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":32,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":512,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":216,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":338,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":4,"org.easymock.tests.LimitationsTest.privateConstructor":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":290,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":373,"org.easymock.tests2.UsageTest.defaultResetToNice":255,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.UsageVarargTest.differentLength":448,"org.easymock.tests2.CallbackTest.callback":28,"org.easymock.tests2.UsageConstraintsTest.equals":507,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":385,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":374,"org.easymock.tests.UsageCallCountTest.tooFewCalls":164,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":137,"org.easymock.tests.UsageThrowableTest.throwCheckedException":370,"org.easymock.tests.MockingTest.testStrictClassMocking":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":241,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":240,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":34,"org.easymock.tests.ObjectMethodsTest.testHashCode":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":296,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":213,"org.easymock.tests2.NameTest.nameForNiceMock":245,"org.easymock.tests2.DependencyTest.testInterfaceMocking":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":295,"org.easymock.samples.ExampleTest.addDocument":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":316,"org.easymock.tests2.DelegateToTest.testStubDelegate":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.stubAnswer":33,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":126,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.tests2.ConstraintsToStringTest.orToString":53,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":504,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageThrowableTest.noUpperLimit":144,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":269,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":480,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":204,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":109,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.samples.SupportTest.addDocument":78,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":473,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":307,"org.easymock.tests.GenericTest.testPackageScope":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":503,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":399,"org.easymock.tests2.NameTest.nameForMock":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":120,"org.easymock.tests2.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":100,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":131,"org.easymock.tests2.MockedExceptionTest.testRealException":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":146,"org.easymock.tests2.NameTest.nameForStrictMock":244,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":478,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":484,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":476,"org.easymock.tests2.UsageStrictMockTest.range":62,"org.easymock.tests2.UsageConstraintsTest.lessThan":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":500,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":336,"org.easymock.tests2.CaptureTest.testCaptureRightOne":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":311,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":329,"org.easymock.tests2.UsageConstraintsTest.testOr":274,"org.easymock.tests.UsageRangeTest.combination":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":452,"org.easymock.tests.UsageTest.wrongArguments":384,"org.easymock.tests2.MockBuilderTest.testWithConstructor":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":121,"org.easymock.tests.UsageVarargTest.varargShortAccepted":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":422,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":22,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":433,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":477,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":165,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":122,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":394,"org.easymock.tests2.UsageConstraintsTest.constraints":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":77,"org.easymock.tests2.ConstraintsToStringTest.notToString":55,"org.easymock.tests.UsageStrictMockTest.testVerify":157,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":80,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":176,"org.easymock.tests.LimitationsTest.abstractClass":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":177,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":228}}]
