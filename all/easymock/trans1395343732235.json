[{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:130","sourceCode":"return (((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName()))) && ((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1013","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[58,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[61,62,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[72,73,7,8,9,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,10,11,101,102,103,104,105,106,107],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[108,109,110,111,112,113,32,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,66,133,134,135,136,137,138,139,140,141,142,143,144,145,146,22,147,148,3,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,33,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,28,190,191,29,192,193,194,69,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,70,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,7,232,233,234,235,37,38,236,9,237,238,77,80,90,96,239,63,240,241,242,243,244,103,245,246,247,104,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,64,65,276,277,40,41,42,43,44,45,46,47,48,49,50,53,278,54,56,57,279],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[280,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[283,284,285,286,66,133,2,134,135,136,3,151,152,287,288,180,181,192,200,210,218,222,223,289,229,230,239,290,242,291],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:58","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[131,3,149,155,156,157,158,159,160,161,169,170,171,172,173,174,191,29,192,35,36,227,248,280,292,281,250,251,252,253,293,254,255,257,258,294,259,260,295,261,262,296,263,264,265,266,267,268,297,298,275,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.internal.RecordState:274","failures":[32,163,35,36,216,37,300,301,38,39,236],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[302,40,42,43,44,45,46,47,49,303,50,51,53],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[304,305,306,307,308,309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[58,310,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":250,"org.easymock.tests2.UsageTest.argumentsOrdered":223,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":211,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":267,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":112,"org.easymock.tests2.SerializationTest.testAllMockedMethod":238,"org.easymock.tests2.DelegateToTest.testReturnException":54,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":25,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":300,"org.easymock.tests.UsageExpectAndThrowTest.object":189,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.DelegateToTest.testWrongClass":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":255,"org.easymock.tests2.UsageTest.wrongArguments":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":72,"org.easymock.tests.UsageStrictMockTest.range":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":23,"org.easymock.samples.ExampleTest.answerVsDelegate":32,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":243,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":299,"org.easymock.tests2.UsageConstraintsTest.testNull":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":272,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":210,"org.easymock.tests2.CaptureTest.testPrimitive":43,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":74,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":305,"org.easymock.tests.UsageUnorderedTest.message":192,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":283,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests.UsageVarargTest.varargByteAccepted":129,"org.easymock.tests.UsageTest.argumentsOrdered":136,"org.easymock.tests.UsageVarargTest.varargIntAccepted":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":91,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":179,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":119,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":160,"org.easymock.tests2.UsageConstraintsTest.any":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":174,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":58,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":277,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests.LimitationsTest.mockNativeMethod":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests2.AnswerTest.answer":37,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":256,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":100,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":306,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":79,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.DelegateToTest.testDelegate":57,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":269,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":274,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":254,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":104,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":138,"org.easymock.tests2.CaptureTest.testCapture1_2446744":44,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":222,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":297,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":309,"org.easymock.tests.UsageThrowableTest.throwError":193,"org.easymock.tests.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":308,"org.easymock.tests2.MockBuilderTest.testCreateMockString":291,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":81,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":38,"org.easymock.tests.UsageVerifyTest.twoThrows":66,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":90,"org.easymock.samples.PartialClassMockTest.testGetArea":111,"org.easymock.tests2.CompareToTest.testLessOrEqual":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests2.UsageTest.niceToStrict":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":26,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":199,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":290,"org.easymock.tests2.UsageTest.defaultResetToNice":221,"org.easymock.samples.ExampleTest.voteAgainstRemovals":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":93,"org.easymock.tests.UsageVarargTest.differentLength":126,"org.easymock.tests2.CallbackTest.callback":216,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":159,"org.easymock.tests.UsageCallCountTest.tooFewCalls":177,"org.easymock.tests.UsageOverloadedMethodTest.overloading":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":260,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":245,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":184,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":310,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":259,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":49,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":307,"org.easymock.tests.UsageThrowableTest.throwCheckedException":196,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":31,"org.easymock.tests2.CaptureTest.testCaptureAll":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.testMatches":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":246,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":162,"org.easymock.samples.ExampleTest.voteForRemovals":117,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":249,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests.UsageVarargTest.allKinds":131,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":14,"org.easymock.samples.BasicClassMockTest.testPrintContent":120,"org.easymock.samples.ExampleTest.addDocument":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":92,"org.easymock.tests2.DelegateToTest.testStubDelegate":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":97,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":198,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests2.AnswerTest.stubAnswer":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":24,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":149,"org.easymock.tests2.UsageConstraintsTest.greaterThan":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":276,"org.easymock.tests.UsageVarargTest.varargLongAccepted":128,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.samples.ExampleTest.voteForRemoval":114,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":73,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":296,"org.easymock.tests.UsageThrowableTest.noUpperLimit":194,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":292,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":168,"org.easymock.tests2.SerializationTest.test":237,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":203,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":75,"org.easymock.samples.SupportTest.addDocument":109,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":204,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":82,"org.easymock.tests.GenericTest.testPackageScope":182,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":248,"org.easymock.tests2.CaptureTest.testCapture2_2446744":52,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":130,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":175,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":132,"org.easymock.tests2.UsageStrictMockTest.differentMethods":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":102,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":21,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":244,"org.easymock.tests2.UsageConstraintsTest.testContains":294,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":62,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":279,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":273,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests.UsageExpectAndReturnTest.object":146,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":275,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":239,"org.easymock.tests2.UsageStrictMockTest.range":229,"org.easymock.tests2.UsageConstraintsTest.lessThan":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":13,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":125,"org.easymock.tests.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":86,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":304,"org.easymock.tests2.UsageConstraintsTest.testOr":293,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":270,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":121,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":33,"org.easymock.tests.UsageTest.wrongArguments":134,"org.easymock.tests2.MockBuilderTest.testWithConstructor":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":83,"org.easymock.tests2.EasyMockSupportTest.testVerify":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":87,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":18,"org.easymock.tests.UsageVarargTest.varargShortAccepted":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":163,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":285,"org.easymock.tests2.UsageConstraintsTest.cmpTo":258,"org.easymock.tests.UsageVarargTest.varargCharAccepted":124,"org.easymock.tests2.CaptureTest.testCaptureMultiple":302,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":301,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":212,"org.easymock.tests2.CaptureTest.testCaptureFromStub":51,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":195,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":178,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":101,"org.easymock.tests2.CaptureTest.testCapture":303,"org.easymock.tests2.UsageConstraintsTest.constraints":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.samples.ExampleTest.addAndChangeDocument":118,"org.easymock.tests.CapturesMatcherTest.test":34,"org.easymock.tests.UsageStrictMockTest.testVerify":154,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":96,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":207,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":122}}]
