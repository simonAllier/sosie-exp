[{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[102,103,104,105,106,107,20,108,29,30,109,110,111,112,113,114,115,42,116,117,118,119,120,121,122,123,124,125,126,70,81,82,127,128,129,86,130,131,132,133,134,135,136,137,138,139,140,141,142,143,87,144,145,0,1,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[86,154,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:54","sourceCode":"try {\n    return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[]);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException);\n}","type":"CtTryImpl"},"failures":[167,168,169,170,171,172],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[23,29,173,174,175,176],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[177,177,178,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[2,180,3,4,5,181,182,6,7,8,183,184,185,186,187,102,103,104,188,189,190,191,192,193,194,195,15,196,197,16,17,18,198,199,200,201,202,203,204,205,206,105,106,207,208,209,210,211,19,212,213,214,215,107,216,217,218,20,108,219,220,221,222,223,224,166,21,22,23,24,225,226,25,26,27,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,28,251,29,30,31,32,33,34,252,109,110,38,39,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,41,281,282,283,111,112,113,114,115,42,43,44,284,116,117,118,119,120,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,177,177,178,178,303,304,305,306,48,49,307,308,51,52,53,54,55,309,310,311,121,312,122,313,314,315,316,317,318,319,123,124,125,320,56,57,58,59,321,322,60,323,61,62,63,64,324,325,326,65,66,67,68,327,69,328,329,330,331,332,126,70,333,334,71,73,335,74,336,75,337,76,77,338,78,79,339,340,341,80,342,81,82,83,84,85,128,129,86,130,131,132,133,134,135,136,137,138,139,140,141,142,143,87,144,145,0,1,146,147,148,149,150,151,343,88,344,345,346,347,179,348,349,350,351,352,90,353,354,355,356,92,93,357,358,94,95,359,360,361,362,363,364,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[365,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[86,135,140,0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[353,354,355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[9,12,187,198,199,200,201,202,216,217,218,368,177,177,178,178,304,305,306,48,369,49,50,307,308,51,52,53,54,370,55,371,316,317,318,319,327,69,329,330,331,332,126,70,333,334,71,343,351,353,355,356,92,93,357,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[372,373,374,96,97,98,99,375,376,377,378,379,380,101,93,95,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[9,12,187,382,383,198,199,200,201,384,385,386,202,387,388,216,217,218,389,167,168,169,170,390,171,172,37,391,368,45,46,47,392,393,394,177,177,178,178,304,305,306,48,369,49,50,366,307,308,51,52,395,53,54,370,55,396,397,371,398,399,400,401,402,316,403,404,317,405,406,407,408,409,410,411,412,413,318,414,415,416,417,418,319,419,420,327,69,329,330,331,332,126,421,422,70,333,334,71,423,72,424,425,343,380,349,350,351,353,355,356,92,93,357,94,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":130,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":367,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.UsageTest.argumentsOrdered":66,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":64,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":303,"org.easymock.tests2.DelegateToTest.testReturnException":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":204,"org.easymock.tests.MockingTest.testPartialClassMocking":199,"org.easymock.tests.MockClassControlTest.testToString":45,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":185,"org.easymock.samples.ExampleTest.answerVsDelegate":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":12,"org.easymock.tests2.UsageConstraintsTest.testNull":132,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":329,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":79,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":256,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests2.AnswerTest.answer":344,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":315,"org.easymock.tests2.CaptureTest.testAnd":152,"org.easymock.tests2.UsageTest.strictResetToDefault":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":337,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":260,"org.easymock.tests2.DelegateToTest.testDelegate":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests.LimitationsTest.mockFinalMethod":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":38,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":313,"org.easymock.tests.UsageThrowableTest.throwError":104,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":420,"org.easymock.samples.PartialClassMockTest.testGetArea":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":409,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":37,"org.easymock.tests2.UsageTest.niceToStrict":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":307,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":416,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":97,"org.easymock.tests.UsageOverloadedMethodTest.overloading":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":142,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":272,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.MockClassControlTest.testEquals":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":316,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":396,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":314,"org.easymock.tests.MockNameTest.defaultName":40,"org.easymock.tests2.UsageConstraintsTest.testMatches":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":107,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":221,"org.easymock.samples.BasicClassMockTest.testPrintContent":306,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":193,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":106,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":363,"org.easymock.tests2.UsageConstraintsTest.greaterThan":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":172,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":423,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":332,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":187,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":60,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":203,"org.easymock.tests2.CaptureTest.testCaptureFirst":165,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":75,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":268,"org.easymock.tests2.CaptureTest.testCapture2_2446744":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":215,"org.easymock.tests.GenericTest.testBridgedEquals":389,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":7,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":374,"org.easymock.tests.UsageExpectAndReturnTest.longType":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":108,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":370,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":147,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":192,"org.easymock.tests.MockingTest.testNiceClassMocking":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":92,"org.easymock.tests.MockingTest.testClassMocking":383,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":369,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":351,"org.easymock.tests2.UsageConstraintsTest.testFind":131,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":292,"org.easymock.tests.MockTypeTest.fromEasyMockClass":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":124,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":28,"org.easymock.tests.UsageExpectAndReturnTest.object":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":78,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":99,"org.easymock.tests.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":102,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":380,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":196,"org.easymock.tests.MockClassControlTest.testHashCode":392,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":127,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.object":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":227,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":399,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":190,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":47,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":253,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":319,"org.easymock.tests2.UsageTest.resumeIfFailure":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":206,"org.easymock.tests2.StubTest.stubWithReturnValue":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":377,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":355,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":176,"org.easymock.samples.SupportTest.voteForRemovals":302,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":180,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":345,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":1,"org.easymock.tests2.DelegateToTest.testWrongClass":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":109,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":177,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":184,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":166,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":214,"org.easymock.tests2.ThreadingTest.testThreadSafe":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":414,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":182,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":36,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":305,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":119,"org.easymock.tests2.UsageConstraintsTest.any":138,"org.easymock.tests2.StubTest.stub":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":205,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests2.SerializationTest.testClass":353,"org.easymock.tests.LimitationsTest.mockNativeMethod":202,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":398,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests2.NameTest.nameForMocksControl":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":327,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":200,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":331,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":146,"org.easymock.tests.MockingTest.testTwoMocks":198,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":150,"org.easymock.tests.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":169,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":311,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":347,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":318,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":223,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":334,"org.easymock.tests.LimitationsTest.privateConstructor":386,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":373,"org.easymock.tests2.UsageConstraintsTest.testNotNull":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":194,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":349,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":276,"org.easymock.tests.UsageVarargTest.differentLength":19,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":421,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":118,"org.easymock.tests.UsageCallCountTest.tooFewCalls":5,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":186,"org.easymock.tests.UsageThrowableTest.throwCheckedException":191,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":174,"org.easymock.tests.MockingTest.testStrictClassMocking":382,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":89,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":358,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":348,"org.easymock.tests2.NameTest.nameForNiceMock":58,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":312,"org.easymock.tests2.DependencyTest.testInterfaceMocking":321,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":361,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests.UsageVarargTest.varargLongAccepted":213,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests.UsageExpectAndReturnTest.floatType":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":343,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":178,"org.easymock.tests.UsageThrowableTest.noUpperLimit":188,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":145,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":129,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":424,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.SerializationTest.test":354,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":168,"org.easymock.tests2.UsageConstraintsTest.testSame":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":262,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":259,"org.easymock.tests2.NameTest.nameForMock":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":273,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":283,"org.easymock.tests2.MockedExceptionTest.testRealException":352,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":117,"org.easymock.tests2.NameTest.nameForStrictMock":57,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":425,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":170,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":83,"org.easymock.tests2.UsageConstraintsTest.lessThan":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":410,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests2.UsageConstraintsTest.testOr":134,"org.easymock.tests.UsageRangeTest.combination":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":407,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":171,"org.easymock.tests.UsageVarargTest.varargShortAccepted":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":6,"org.easymock.tests2.UsageConstraintsTest.cmpTo":139,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":346,"org.easymock.tests2.CompareToTest.testLessThan":365,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":163,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":50,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":181,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":275,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":31,"org.easymock.tests2.UsageConstraintsTest.constraints":86,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":252,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":300,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":219,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":371,"org.easymock.tests.LimitationsTest.abstractClass":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208}}]
