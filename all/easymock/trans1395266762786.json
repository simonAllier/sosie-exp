[{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"failMessage"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,258,16,17,18,19,20,259,21,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[53,367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[369,86,370,371],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[187,193,271,273,287,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[372,373,374,375,376,22,23,24,25,26,27,28,29,30,31,32,377,378,379,380,38,45,46,47,48,49,51,52,53,54,55,56,57,58,381,382,383,384,59,385,386,61,63,64,65,66,67,68,69,387,388,70,389,390,391,392,393,394,395,71,72,73,74,75,76,77,78,79,80,81,82,83,84,396,369,86,370,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,147,148,149,150,160,397,398,399,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,193,194,195,196,197,204,205,206,207,208,209,210,214,400,215,216,218,219,221,224,225,228,229,230,231,232,233,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,301,302,303,304,306,307,308,309,311,312,313,314,315,401,316,317,318,331,332,334,335,336,337,338,339,402,403,404,340,341,342,343,344,345,347,348,349,350,351,352,353,354,405,405,406,406,407,355,356,357,358,359,360,361,362,364,408,409,365,366],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[410,411],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[412,413,414,415,416,417,418],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[71,72,73,74,81,82,90,91,93,94,95,96,97,98,99,100,109,110,114,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[419,372,420,421,373,422,374,375,423,424,376,425,29,30,31,426,427,428,377,429,430,378,431,432,433,434,435,436,437,438,439,379,440,441,442,443,444,380,445,446,447,448,381,382,383,384,385,386,387,388,389,390,391,449,392,450,451,367,393,394,395,452,368,396,418,369,370,453,454,455,456,457,458,459,397,398,399,460,461,462,400,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,401,410,402,403,404,411,405,405,406,406,407,408,409],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[114],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[419,481,372,420,373,422,374,375,424,376,482,425,31,377,378,379,380,483,484,485,381,382,383,384,385,386,387,388,389,390,391,449,392,367,393,394,395,396,369,370,459,397,398,399,400,471,472,474,401,402,403,404,405,405,406,406,407,408,409],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[369,86,370,371],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[56,117,124,179,181,182,183,184,185,186,206,219,232,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,3,302,316,317,318,331,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[99],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[486,88,107,113],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,319,320,321,322,323,325,326,327,328,329,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[95],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[125,137],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[65,67,145,216,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[317,318,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[369,86,370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[510,511],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":91,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":365,"org.easymock.tests2.DelegateToTest.testReturnException":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.MockingTest.testPartialClassMocking":397,"org.easymock.tests.MockClassControlTest.testToString":475,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":238,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":378,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":58,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":509,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":289,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":191,"org.easymock.samples.ExampleTest.answerVsDelegate":358,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":472,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":169,"org.easymock.tests2.UsageConstraintsTest.testNull":94,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":389,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":74,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":257,"org.easymock.tests.UsageTest.moreThanOneArgument":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":223,"org.easymock.tests.UsageTest.argumentsOrdered":338,"org.easymock.tests.UsageVarargTest.varargIntAccepted":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":493,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests.ReplayStateInvalidUsageTest.times":327,"org.easymock.tests2.DependencyTest.testClassMocking":447,"org.easymock.tests2.AnswerTest.answer":145,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":154,"org.easymock.tests2.CaptureTest.testAnd":71,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":209,"org.easymock.tests2.DelegateToTest.testDelegate":69,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":227,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":492,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":253,"org.easymock.tests.LimitationsTest.mockFinalMethod":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":300,"org.easymock.tests2.DependencyTest.testClassMockingSupport":448,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":211,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":152,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":321,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":235,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":496,"org.easymock.samples.PartialClassMockTest.testGetArea":407,"org.easymock.tests.MockingTest.testInterfaceMocking":167,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":322,"org.easymock.tests2.CompareToTest.testLessOrEqual":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":435,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":373,"org.easymock.tests2.MockBuilderTest.testCreateMock":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":247,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":189,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":219,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":346,"org.easymock.tests.MockClassControlTest.testEquals":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":377,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":255,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":153,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":298,"org.easymock.tests.MockNameTest.defaultName":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":196,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":319,"org.easymock.samples.ExampleTest.voteForRemovals":362,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":301,"org.easymock.samples.BasicClassMockTest.testPrintContent":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests2.UsageConstraintsTest.greaterThan":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":395,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":497,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":470,"org.easymock.samples.ExampleTest.voteForRemoval":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":452,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":449,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":489,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":401,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":64,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":276,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":48,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":272,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":296,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":482,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":112,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests.MockingTest.testNiceClassMocking":460,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":382,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":481,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":31,"org.easymock.tests2.UsageConstraintsTest.testFind":93,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":206,"org.easymock.tests.MockTypeTest.fromEasyMockClass":234,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageExpectAndReturnTest.object":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":414,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":201,"org.easymock.tests.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":224,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":285,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":218,"org.easymock.tests.MockClassControlTest.testHashCode":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":34,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":437,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":216,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":151,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":85,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":21,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":464,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":33,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":495,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":244,"org.easymock.tests.ReplayStateInvalidCallsTest.times":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":502,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":380,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests2.StubTest.stubWithReturnValue":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":278,"org.easymock.tests2.SerializationTest.testAllMockedMethod":370,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":258,"org.easymock.samples.SupportTest.voteForRemovals":356,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":250,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":371,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":259,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":146,"org.easymock.tests.UsageExpectAndThrowTest.object":248,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":262,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":110,"org.easymock.tests2.DelegateToTest.testWrongClass":67,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":499,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.samples.ConstructorCalledMockTest.testTax":405,"org.easymock.tests.UsageStrictMockTest.range":175,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":143,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":426,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":329,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":190,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":491,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":315,"org.easymock.tests.UsageUnorderedTest.message":214,"org.easymock.tests.UsageVerifyTest.twoReturns":303,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":440,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":408,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":202,"org.easymock.tests2.CaptureTest.testCapture_2617107":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":292,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests2.StubTest.stub":55,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":468,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":325,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests2.SerializationTest.testClass":369,"org.easymock.tests.LimitationsTest.mockNativeMethod":400,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":485,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":157,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":507,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests2.NameTest.nameForMocksControl":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":159,"org.easymock.tests2.MockedExceptionTest.testMockedException":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":430,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":399,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":62,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":242,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":387,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":398,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":155,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":212,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":506,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":386,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":111,"org.easymock.tests.MockingTest.testTwoMocks":459,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":503,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":246,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.samples.ExampleTest.removeNonExistingDocument":363,"org.easymock.tests.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":162,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":35,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":511,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":466,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":47,"org.easymock.tests2.MockBuilderTest.testCreateMockString":425,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":431,"org.easymock.tests.UsageExpectAndThrowTest.floatType":240,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":148,"org.easymock.tests.UsageVerifyTest.twoThrows":302,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":379,"org.easymock.samples.ExampleTest.voteAgainstRemoval":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":394,"org.easymock.tests.LimitationsTest.privateConstructor":462,"org.easymock.tests2.UsageConstraintsTest.testNotNull":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":156,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.CallbackTest.callback":87,"org.easymock.tests2.UsageConstraintsTest.equals":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":450,"org.easymock.tests.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":291,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":192,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":150,"org.easymock.tests.ObjectMethodsTest.testHashCode":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":505,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":49,"org.easymock.tests2.NameTest.nameForNiceMock":53,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":500,"org.easymock.tests2.DependencyTest.testInterfaceMocking":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":415,"org.easymock.samples.ExampleTest.addDocument":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.DelegateToTest.testStubDelegate":66,"org.easymock.tests2.AnswerTest.stubAnswer":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":173,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":487,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":9,"org.easymock.tests.UsageExpectAndReturnTest.floatType":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":396,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":406,"org.easymock.tests.UsageThrowableTest.noUpperLimit":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":453,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":76,"org.easymock.tests2.SerializationTest.test":86,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":465,"org.easymock.tests2.UsageConstraintsTest.testSame":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":270,"org.easymock.samples.SupportTest.addDocument":355,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":490,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":432,"org.easymock.tests.GenericTest.testPackageScope":402,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":41,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":168,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":488,"org.easymock.tests2.NameTest.nameForMock":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":252,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":210,"org.easymock.tests2.MockedExceptionTest.testRealException":32,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":330,"org.easymock.tests2.NameTest.nameForStrictMock":52,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":456,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":467,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":372,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":494,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":436,"org.easymock.tests2.CaptureTest.testCaptureRightOne":81,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":510,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":388,"org.easymock.tests.UsageTest.wrongArguments":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":433,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":469,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":508,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":147,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":3,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":320,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":420,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":504,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.UsageConstraintsTest.constraints":90,"org.easymock.samples.ExampleTest.addAndChangeDocument":364,"org.easymock.tests.UsageStrictMockTest.testVerify":178,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":366,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":77,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.LimitationsTest.abstractClass":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":275,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":344}}]
