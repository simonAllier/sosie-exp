[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,26,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,0,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,27,187,188,189,190,191,192,193,25,194,195,196,197,1,198,199,2,3,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,12,13,14,15,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,16,17,18,19,20,21,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,4,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,28,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,22,401,402,403,5,404,405,6,7,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,8,9,10,430,431,432,433,434,11,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,23,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[48,50,58,78,79,82,84,26,86,96,101],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[31,33,34,35,36,38,40,42,46,46,47,47,48,49,51,52,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,76,77,78,79,81,82,83,84,26,85,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,111,112,113,114,116,117,118,120,121,122,123,124,125,131,141,144,154,160,163,164,0,166,168,169,170,173,174,176,177,178,179,180,181,184,187,188,189,192,193,25,194,195,1,199,2,202,203,204,205,206,207,208,209,210,211,212,213,214,215,222,232,12,13,14,15,241,245,247,249,253,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,307,16,17,18,19,20,21,329,330,331,332,333,350,356,358,4,361,362,365,374,28,376,380,381,382,383,388,389,390,391,392,393,394,395,397,398,399,400,22,5,405,6,408,410,412,413,414,415,416,417,418,419,420,423,8,9,10,430,432,433,11,436,437,438,439,440,441,443,450,457,458,23,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[48,50,51,52,53,54,55,57,492,58,59,61],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[83],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[31,43,44,46,46,47,47,62,64,73,111,112,113,114,117,118,141,144,154,160,176,177,179,180,181,182,184,27,187,188,189,493,14,239,494,241,242,245,246,247,249,252,253,495,255,288,293,307,322,373,374,28,376,408,409,410,412],"status":-1,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,70,71,72,73,76,77,78,79,81,82,83,84,26,85,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,111,112,113,114,116,117,118,120,123,124,125,131,141,144,154,160,163,164,0,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,184,27,188,192,193,25,194,195,196,197,1,198,199,2,3,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,232,12,13,14,15,239,245,246,247,249,253,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,307,309,310,311,313,314,316,317,318,319,320,16,17,18,19,20,21,322,329,330,331,332,333,358,4,359,360,361,362,363,364,365,366,367,368,369,370,374,28,376,380,381,382,383,384,385,386,387,388,389,390,391,392,400,22,401,402,403,5,404,405,6,7,406,408,409,412,414,415,421,422,423,424,425,426,8,9,10,11,446,448,449,451,454,456,457,458,23,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[31,43,44,46,46,47,47,62,64,73,76,111,112,113,114,117,118,141,144,154,160,163,176,177,179,180,181,182,184,27,187,188,189,192,12,13,14,239,241,245,246,247,249,252,253,255,297,307,309,321,322,323,324,325,326,327,328,373,374,28,376,380,408,409,410,411,412],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[259,260,267,274,332,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[74,496,497,498,499,500,248],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[501,48,50,51,52,53,54,55,57,492,58,59,61],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[103,502],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[48,50,51,52,53,54,55,57,492,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[398,437,438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[72,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[503,504,505,506,359,403],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[62,63,64,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[503,403],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[48,49,50,51,58,59,78,79,81,82,83,84,26,85,86,87,96,97,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[33,34,35,36,37,38,40,48,49,50,51,53,54,55,56,57,58,61,62,63,64,66,67,70,71,72,73,76,77,78,79,81,82,83,84,26,85,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,112,113,117,118,120,123,124,125,164,0,166,167,170,173,176,178,179,180,181,184,27,188,192,193,195,197,1,2,3,202,218,219,220,221,222,223,224,225,226,12,13,14,15,239,245,246,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,307,309,310,311,313,314,316,317,318,319,320,16,17,18,19,20,21,322,329,330,331,332,333,4,366,367,368,369,370,374,28,376,380,381,382,383,384,385,386,387,388,389,390,391,392,400,402,5,6,7,406,408,409,412,414,415,421,422,423,424,425,426,8,9,10,11,457,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":79,"org.easymock.tests2.UsageTest.argumentsOrdered":172,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":358,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":344,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":17,"org.easymock.tests.MockingTest.testPartialClassMocking":374,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":217,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":461,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":144,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":457,"org.easymock.tests2.UsageTest.wrongArguments":165,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":386,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":293,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":460,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":480,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":416,"org.easymock.tests.UsageTest.argumentsOrdered":364,"org.easymock.tests.UsageVarargTest.varargIntAccepted":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":239,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":392,"org.easymock.tests.ReplayStateInvalidUsageTest.times":453,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.DependencyTest.testClassMocking":200,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":226,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":290,"org.easymock.tests2.UsageTest.strictResetToDefault":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":382,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":420,"org.easymock.tests2.DelegateToTest.testDelegate":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":476,"org.easymock.tests.LimitationsTest.mockFinalMethod":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":370,"org.easymock.tests2.DependencyTest.testClassMockingSupport":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":442,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":447,"org.easymock.tests.UsageThrowableTest.throwError":279,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":292,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":396,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":162,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":448,"org.easymock.tests.MockingTest.testInterfaceMocking":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":389,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":437,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":489,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":462,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":149,"org.easymock.tests2.ThreadingTest.testChangeDefault":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":245,"org.easymock.tests2.MockBuilderTest.testCreateMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":134,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":470,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":421,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":384,"org.easymock.tests.UsageOverloadedMethodTest.overloading":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":433,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":270,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":312,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":409,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":478,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":368,"org.easymock.tests.MockNameTest.defaultName":490,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":320,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":369,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":285,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":21,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":381,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":189,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":190,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":412,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":16,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":352,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":319,"org.easymock.tests.GenericTest.testBridgedEquals":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":428,"org.easymock.tests.UsageExpectAndReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":366,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":479,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":483,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":477,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":429,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":466,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":284,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests.MockingTest.testNiceClassMocking":379,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":422,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":415,"org.easymock.tests.MockTypeTest.fromEasyMockClass":291,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":258,"org.easymock.tests.UsageExpectAndReturnTest.object":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":314,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":365,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":417,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":397,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":275,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":151,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":418,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":175,"org.easymock.tests.UsageVarargTest.varargCharAccepted":313,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":296,"org.easymock.tests2.CaptureTest.testCaptureMultiple":501,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.DefaultClassInstantiatorTest.object":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":439,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":129,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":467,"org.easymock.tests.CapturesMatcherTest.test":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":19,"org.easymock.tests2.StubTest.stubWithReturnValue":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":64,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":350,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":473,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":356,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":121,"org.easymock.tests.UsageExpectAndThrowTest.object":471,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":399,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":97,"org.easymock.tests2.DelegateToTest.testWrongClass":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":481,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":482,"org.easymock.tests.UsageStrictMockTest.range":405,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":109,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":472,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":138,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":438,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.UsageUnorderedTest.message":287,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":318,"org.easymock.tests2.ThreadingTest.testThreadSafe":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":155,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":426,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":488,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":452,"org.easymock.tests2.StubTest.stub":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageExpectAndThrowTest.longType":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":301,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":451,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.SerializationTest.testClass":62,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":307,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":128,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":3,"org.easymock.tests2.NameTest.nameForMocksControl":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":143,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":465,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":257,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":176,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":249,"org.easymock.tests.MockingTest.testNicePartialClassMocking":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests2.CompareToTest.testNotComparable":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":126,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":443,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":98,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":469,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":29,"org.easymock.samples.ExampleTest.removeNonExistingDocument":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":449,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":133,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":299,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":25,"org.easymock.tests2.MockBuilderTest.testCreateMockString":255,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":140,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":75,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":286,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":127,"org.easymock.tests.UsageVarargTest.differentLength":315,"org.easymock.tests2.CallbackTest.callback":222,"org.easymock.tests2.UsageConstraintsTest.equals":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":185,"org.easymock.tests.UsageTest.openCallCountByLastCall":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":23,"org.easymock.tests.UsageCallCountTest.tooFewCalls":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":387,"org.easymock.tests.UsageThrowableTest.throwCheckedException":283,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":454,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":116,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":125,"org.easymock.tests.ObjectMethodsTest.testHashCode":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":195,"org.easymock.tests2.NameTest.nameForNiceMock":220,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests2.DelegateToTest.testStubDelegate":67,"org.easymock.tests2.AnswerTest.stubAnswer":124,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":317,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndReturnTest.floatType":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":73,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests.UsageThrowableTest.noUpperLimit":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":104,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":63,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":298,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":260,"org.easymock.samples.SupportTest.addDocument":41,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":115,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":146,"org.easymock.tests.GenericTest.testPackageScope":408,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":377,"org.easymock.tests2.NameTest.nameForMock":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":271,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":475,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":383,"org.easymock.tests2.MockedExceptionTest.testRealException":15,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":458,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":456,"org.easymock.tests2.NameTest.nameForStrictMock":219,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":244,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":108,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":96,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":199,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":150,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests.UsageRangeTest.combination":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":177,"org.easymock.tests.UsageTest.wrongArguments":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":147,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":335,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":302,"org.easymock.tests.UsageVarargTest.varargShortAccepted":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":427,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":122,"org.easymock.tests2.CompareToTest.testLessThan":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":446,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":242,"org.easymock.tests.UsageTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":273,"org.easymock.tests2.CaptureTest.testCapture":492,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":404,"org.easymock.tests2.UsageConstraintsTest.constraints":78,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.UsageStrictMockTest.testVerify":406,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":45,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":367,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":265,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":391,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":310}}]
