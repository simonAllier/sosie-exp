[{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[11,12,13,14,15],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[16,17,18,19],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:74","sourceCode":"return (this.org.easymock.internal.Invocation.equals(org.easymock.internal.ExpectedInvocation.org.easymock.internal.Invocation)) && ((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","type":"CtReturnImpl"},"failures":[20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,20,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,21,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,22,23,24,183,184,185,27,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,200,201,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,0,1,235,2,236,3,4,237,238,239,240,241,242,243,244,245,246,6,247,248,249,250,7,251,252,17,18,19,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,28,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,8,320,9,321,322,323,324,325,326,327,10,328,329,330,331,332,29,333,334,335,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[68,69,70,71,72,73,74,100,147,148,151,27,233,234,235,2,236,3,240,242,243,245,246,7,251,252,313,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[233,245,250,337],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[193,231,232,274,275,276],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[343,344,82,185,345,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[347,348,349,30,31,32,33,34,35,36,37,38,350,351,352,353,354,355,356,357,358,359,360,361,362,363,39,40,41,364,42,43,44,365,366,367,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,368,64,65,369,66,67,68,69,370,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,20,86,87,88,89,90,371,91,92,93,94,95,96,97,98,372,373,374,375,376,99,377,100,101,378,102,103,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,405,406,407,144,145,408,146,409,410,411,21,147,148,149,150,151,412,152,11,12,13,340,14,413,15,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,414,415,416,338,174,175,176,177,178,179,180,181,182,22,23,24,417,25,26,418,419,183,184,185,27,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,339,215,420,421,216,217,218,219,422,423,424,425,426,220,427,428,221,429,430,431,432,433,434,435,436,437,222,438,439,440,441,442,223,443,444,224,225,226,227,445,228,229,230,446,231,447,232,233,234,0,1,448,235,2,236,3,4,237,5,238,239,240,241,242,243,244,245,246,6,247,248,249,250,7,251,252,17,18,19,253,449,254,450,451,452,255,256,257,453,258,454,455,259,260,456,261,262,263,264,265,266,267,268,269,270,28,271,272,273,457,458,459,460,461,462,463,274,464,465,275,276,277,278,279,280,281,466,467,468,469,470,282,471,472,473,474,475,476,283,284,285,286,287,288,289,290,291,292,293,294,295,477,296,297,298,299,478,479,480,481,482,300,483,484,485,486,487,488,301,489,490,302,303,304,305,306,307,308,309,310,311,312,313,491,492,314,315,493,316,317,318,494,319,8,320,9,321,322,323,324,325,326,327,10,328,329,330,495,331,332,29,333,334,335,336],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[233,245,250,337],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[41,45,47,48,49,50,51,52,57,58,59,60,61,62,65,80,85,101,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,149,150,23,262,269,302,303,304,305,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:163","failures":[276,277],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[453,489,496,497,498,499,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[247],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[64,193,316,318,319],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[454],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[200,201,420,17,449,451,453,455,501,456,502,503,504,301,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[36,37,38,67,505,370,506,507,82,83,20,86,21,165,23,24,185,187,188,254,259,260,261,265,28,271,272,292,334,335],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[347,348,349,30,31,32,33,34,35,36,37,38,350,351,352,353,354,355,356,357,358,359,360,361,362,363,39,40,41,364,42,43,44,365,366,367,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,368,64,65,369,66,67,68,69,370,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,20,86,87,88,89,90,371,91,92,93,94,95,96,97,98,372,373,374,375,376,99,377,100,101,378,102,103,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,405,406,407,144,145,408,146,409,410,411,21,147,148,149,150,151,412,152,11,12,13,340,14,413,15,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,414,415,416,338,174,175,176,177,178,179,180,181,182,22,23,24,417,25,26,418,419,183,184,185,27,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,339,215,420,421,216,217,218,219,422,423,424,425,426,220,427,428,221,429,430,431,432,433,434,435,436,437,222,438,439,440,441,442,223,443,444,224,225,226,227,445,228,229,230,446,231,447,232,233,234,0,1,448,235,2,236,3,4,237,5,238,239,240,241,242,243,244,245,246,6,247,248,249,250,7,251,252,17,18,19,253,449,254,450,451,452,255,256,257,453,258,454,455,259,260,456,261,262,263,264,265,266,267,268,269,270,28,271,272,273,457,458,459,460,461,462,463,274,464,465,275,276,277,278,279,280,281,466,467,468,469,470,282,471,472,473,474,475,476,283,284,285,286,287,288,289,290,291,292,293,294,295,477,296,297,298,299,478,479,480,481,482,300,483,484,485,486,487,488,301,489,490,302,303,304,305,306,307,308,309,310,311,312,313,491,492,314,315,493,316,317,318,494,319,8,320,9,321,322,323,324,325,326,327,10,328,329,330,495,331,332,29,333,334,335,336],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61,62,101,302,303,304,305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[30,31,32,33,34,35,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,20,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,21,147,148,149,150,151,157,165,166,167,168,169,170,171,172,173,416,175,182,22,23,24,183,184,185,27,186,187,188,189,190,192,193,194,195,196,197,199,208,209,210,211,212,213,215,216,218,225,226,229,230,231,232,233,234,0,1,235,2,236,3,4,237,238,239,240,241,242,243,244,245,246,6,247,248,250,7,251,252,17,18,19,253,255,256,260,261,262,263,264,265,266,267,268,269,270,28,271,272,273,274,275,276,277,278,279,280,281,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,8,320,9,321,322,323,324,325,326,327,10,328,329,330,495,331,332,29,333,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[102,379,380],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[347,348,349,32,350,351,352,361,362,363,39,40,41,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,80,81,84,85,87,373,99,100,101,102,379,397,403,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,21,147,148,149,150,151,165,166,167,168,169,170,171,172,173,414,416,182,22,23,24,417,25,26,418,419,27,187,188,191,192,193,194,195,197,199,200,200,201,201,205,208,209,210,211,212,213,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,0,1,235,2,236,3,4,237,238,239,240,241,242,243,244,245,246,6,247,248,250,7,251,252,17,18,254,255,257,258,260,262,263,264,266,268,269,270,272,273,274,464,465,275,276,277,282,283,284,285,286,287,288,289,290,291,292,293,294,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,493,316,317,318,494,319,8,320,321,322,325,326,327,10,328,329,330,29,334,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[67,506,507,82,83,20,86,21,23,24,185,187,265,28,271,334],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":271,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":391,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":267,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":202,"org.easymock.tests2.DelegateToTest.testReturnException":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.MockingTest.testPartialClassMocking":144,"org.easymock.tests.MockClassControlTest.testToString":176,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":477,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":104,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageTest.wrongArguments":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":55,"org.easymock.samples.ExampleTest.answerVsDelegate":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":358,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":410,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":211,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":292,"org.easymock.tests2.CaptureTest.testPrimitive":321,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":123,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":417,"org.easymock.tests.UsageTest.argumentsOrdered":86,"org.easymock.tests.UsageVarargTest.varargIntAccepted":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":459,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":74,"org.easymock.tests.ReplayStateInvalidUsageTest.times":161,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":300,"org.easymock.tests2.DependencyTest.testClassMocking":491,"org.easymock.tests2.AnswerTest.answer":274,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":281,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":355,"org.easymock.tests2.UsageTest.strictResetToDefault":263,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":287,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":419,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":119,"org.easymock.tests.LimitationsTest.mockFinalMethod":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":79,"org.easymock.tests2.DependencyTest.testClassMockingSupport":492,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":415,"org.easymock.tests2.CaptureTest.testCapture1_2446744":322,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":279,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":155,"org.easymock.tests.UsageThrowableTest.throwError":45,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":357,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":173,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":444,"org.easymock.samples.PartialClassMockTest.testGetArea":191,"org.easymock.tests.MockingTest.testInterfaceMocking":408,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":156,"org.easymock.tests2.CompareToTest.testLessOrEqual":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":433,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":105,"org.easymock.tests2.UsageTest.niceToStrict":266,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":255,"org.easymock.tests2.MockBuilderTest.testCreateMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":113,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":345,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":53,"org.easymock.tests.UsageOverloadedMethodTest.overloading":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":437,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":135,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":39,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":341,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":327,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":371,"org.easymock.tests.MockClassControlTest.testEquals":180,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":280,"org.easymock.tests2.CaptureTest.testCaptureAll":320,"org.easymock.tests.MockNameTest.defaultName":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":153,"org.easymock.samples.ExampleTest.voteForRemovals":197,"org.easymock.tests.UsageVarargTest.allKinds":98,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":78,"org.easymock.samples.BasicClassMockTest.testPrintContent":207,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":51,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":413,"org.easymock.tests2.UsageConstraintsTest.greaterThan":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":219,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":15,"org.easymock.samples.ExampleTest.voteForRemoval":194,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":422,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":214,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":182,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":285,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":493,"org.easymock.tests2.CaptureTest.testCaptureFirst":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":286,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":131,"org.easymock.tests2.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":310,"org.easymock.tests2.CaptureTest.testCapture2_2446744":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":260,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":97,"org.easymock.tests.GenericTest.testBridgedEquals":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":37,"org.easymock.tests.UsageExpectAndReturnTest.longType":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":122,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageCallCountTest.tooManyCalls":38,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":50,"org.easymock.tests.MockingTest.testNiceClassMocking":411,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":225,"org.easymock.tests.MockingTest.testClassMocking":406,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":31,"org.easymock.tests2.UsageConstraintsTest.testContains":240,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":304,"org.easymock.tests2.UsageConstraintsTest.testFind":235,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":41,"org.easymock.tests.MockTypeTest.fromEasyMockClass":356,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageExpectAndReturnTest.object":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":92,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":44,"org.easymock.tests.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":25,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":140,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":88,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.MockClassControlTest.testHashCode":179,"org.easymock.tests2.EasyMockSupportTest.testVerify":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":435,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":26,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":278,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":495,"org.easymock.tests.UsageVarargTest.varargCharAccepted":91,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":412,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastCall":268,"org.easymock.tests.DefaultClassInstantiatorTest.object":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":42,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":436,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":350,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":223,"org.easymock.tests2.UsageTest.resumeIfFailure":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.StubTest.stubWithReturnValue":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":250,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":397,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":504,"org.easymock.samples.SupportTest.voteForRemovals":205,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":346,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":116,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":403,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":464,"org.easymock.tests.UsageExpectAndThrowTest.object":114,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":374,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":247,"org.easymock.tests2.DelegateToTest.testWrongClass":318,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":69,"org.easymock.tests.UsageStrictMockTest.range":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":200,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":462,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":424,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":163,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":54,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":343,"org.easymock.tests2.CaptureTest.testCaptureNone":326,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":505,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":96,"org.easymock.tests2.ThreadingTest.testThreadSafe":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":438,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":35,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":206,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":365,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":150,"org.easymock.tests2.UsageConstraintsTest.any":238,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":160,"org.easymock.tests2.StubTest.stub":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":159,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":282,"org.easymock.tests.LimitationsTest.mockNativeMethod":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":143,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":480,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests2.NameTest.nameForMocksControl":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests2.MockedExceptionTest.testMockedException":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":428,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":447,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":258,"org.easymock.tests.MockingTest.testNicePartialClassMocking":145,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":478,"org.easymock.tests2.CaptureTest.testCaptureLast":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":230,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":248,"org.easymock.tests.MockingTest.testTwoMocks":407,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":112,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":251,"org.easymock.samples.ExampleTest.removeNonExistingDocument":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":12,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":309,"org.easymock.tests2.MockBuilderTest.testCreateMockString":261,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.floatType":106,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":490,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":218,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":52,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":302,"org.easymock.tests2.UsageTest.defaultResetToNice":270,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":479,"org.easymock.tests.UsageVarargTest.differentLength":93,"org.easymock.tests2.CallbackTest.callback":306,"org.easymock.tests2.UsageConstraintsTest.equals":448,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":420,"org.easymock.tests.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":149,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":56,"org.easymock.tests.UsageThrowableTest.throwCheckedException":49,"org.easymock.tests.MockingTest.testStrictClassMocking":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":344,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":277,"org.easymock.tests.ObjectMethodsTest.testHashCode":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.NameTest.nameForNiceMock":298,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.DelegateToTest.testStubDelegate":317,"org.easymock.tests2.AnswerTest.stubAnswer":276,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":454,"org.easymock.tests.UsageVarargTest.varargLongAccepted":95,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":142,"org.easymock.tests.UsageExpectAndReturnTest.floatType":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":301,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests.UsageThrowableTest.noUpperLimit":46,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":234,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":457,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":323,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":342,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":125,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.samples.SupportTest.addDocument":204,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":445,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":430,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":409,"org.easymock.tests2.NameTest.nameForMock":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":456,"org.easymock.tests2.UsageStrictMockTest.differentMethods":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":118,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":364,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":168,"org.easymock.tests2.MockedExceptionTest.testRealException":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests2.NameTest.nameForStrictMock":297,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":461,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":13,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":254,"org.easymock.tests2.UsageStrictMockTest.range":334,"org.easymock.tests2.UsageConstraintsTest.lessThan":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":434,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":209,"org.easymock.tests.UsageTest.wrongArguments":83,"org.easymock.tests2.MockBuilderTest.testWithConstructor":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":431,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":382,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":14,"org.easymock.tests.UsageVarargTest.varargShortAccepted":94,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":36,"org.easymock.tests2.UsageConstraintsTest.cmpTo":239,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":269,"org.easymock.tests2.CaptureTest.testCaptureFromStub":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":154,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":450,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":185,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":34,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":138,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":203,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":130,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":73,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":289}}]
