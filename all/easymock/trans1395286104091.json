[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,0,1,104,105,2,106,3,4,107,5,108,109,110,111,112,113,114,115,116,6,117,118,119,120,7,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,8,141,9,142,143,144,145,146,147,148,10,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,11,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[160,225],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[488,489,184,218,11],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[32,39,47,258,259,264,271,350,352,353,354,355,356,357,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,418,423,438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,3,4,5,6,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[43,46,311,446,447,448],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[29,30,490,491,492,493,80,187,190],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[29,30,31,494,490,491,492,495,496,497,493,80,187,190,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[34,125,128,129,131,132,133,134,260,397,399,400,409,412,413,422,423,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[115,500],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,16,17,19,20,21,22,23,24,25,26,26,27,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,54,64,70,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,0,1,105,2,106,3,4,107,5,108,109,110,111,112,113,114,115,116,6,117,118,119,120,7,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,8,141,9,142,143,144,145,146,147,148,10,149,150,151,152,153,154,155,156,162,169,170,171,172,174,175,176,178,180,184,185,186,188,191,192,194,197,198,206,207,208,209,210,211,212,214,217,218,11,219,227,234,235,236,237,238,239,242,244,245,246,247,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,276,277,278,280,284,285,287,288,289,291,292,310,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,394,395,396,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,465,466,467,468,469,470,471,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[107,112,122,501],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[502,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,54,64,70,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,103,0,1,105,2,106,3,4,107,108,109,110,111,112,113,114,115,116,6,117,118,119,120,7,121,122,123,124,125,126,127,128,129,135,138,139,140,8,141,9,142,143,144,145,146,147,148,10,149,150,151,152,153,154,155,156,162,169,170,171,172,174,175,176,178,180,184,185,186,188,191,192,194,197,198,206,207,208,209,210,211,212,214,217,218,11,219,227,234,235,236,237,238,239,242,244,245,246,247,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,277,278,280,284,285,287,288,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,415,417,418,421,422,423,424,434,435,436,437,438,439,440,441,442,443,444,445,447,448,461,462,463,465,466,467,468,469,470,471,472,505,505],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[502,503,506,507,508,509,510,504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[13,96,97,98,99,100,101,417],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[34,35,41,42,125,127,128,131,132,133,134,260,262,265,266,273,408,409,411,412,420,422,423,424],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[13,77,79,135,138,139,140,156,415],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[430,511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[102,115,120,513],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[514,408],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[515],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[34,35,41,42,114,125,127,128,516,514,517,518,519,520,521,522,523,524,525,260,261,262,265,266,273,526,527,528,529,530,531,532,291,292,408,409,411,412,422,423,424],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":259,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":304,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":435,"org.easymock.tests.MockingTest.testPartialClassMocking":277,"org.easymock.tests.MockClassControlTest.testToString":481,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":130,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":366,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":107,"org.easymock.tests2.UsageTest.wrongArguments":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":268,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":391,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":486,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":92,"org.easymock.tests2.CaptureTest.testPrimitive":142,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":385,"org.easymock.tests.UsageTest.moreThanOneArgument":260,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":360,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":456,"org.easymock.tests.UsageTest.argumentsOrdered":266,"org.easymock.tests.UsageVarargTest.varargIntAccepted":463,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":201,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":444,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":519,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests.ReplayStateInvalidUsageTest.times":346,"org.easymock.tests2.DependencyTest.testClassMocking":195,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":155,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":388,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":87,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":460,"org.easymock.tests2.DelegateToTest.testDelegate":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":381,"org.easymock.tests.LimitationsTest.mockFinalMethod":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":255,"org.easymock.tests2.DependencyTest.testClassMockingSupport":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":153,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":340,"org.easymock.tests.UsageThrowableTest.throwError":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":390,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":72,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.MockingTest.testInterfaceMocking":279,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests2.CompareToTest.testLessOrEqual":513,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":453,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":478,"org.easymock.tests2.UsageTest.niceToStrict":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":230,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":375,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":508,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":418,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":511,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":111,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":464,"org.easymock.tests.MockClassControlTest.testEquals":485,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":288,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":521,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":154,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":253,"org.easymock.tests.MockNameTest.defaultName":365,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":361,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":472,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":422,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":254,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":356,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":164,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":432,"org.easymock.tests2.UsageConstraintsTest.greaterThan":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":219,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":433,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":220,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":85,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":434,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":86,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":325,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":34,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":471,"org.easymock.tests.GenericTest.testBridgedEquals":290,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":509,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":506,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":404,"org.easymock.tests.UsageExpectAndReturnTest.longType":321,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":384,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":455,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":358,"org.easymock.tests.UsageCallCountTest.tooManyCalls":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":527,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":355,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":170,"org.easymock.tests.MockingTest.testNiceClassMocking":283,"org.easymock.tests.MockingTest.testClassMocking":275,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":489,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":110,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":75,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests.MockTypeTest.fromEasyMockClass":389,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageExpectAndReturnTest.object":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":466,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":510,"org.easymock.tests.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":457,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":248,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":531,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":30,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":461,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":417,"org.easymock.tests.MockClassControlTest.testHashCode":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":158,"org.easymock.tests2.EasyMockSupportTest.testVerify":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":61,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":518,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":458,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":415,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":152,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":45,"org.easymock.tests.UsageVarargTest.varargCharAccepted":465,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":425,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":317,"org.easymock.tests2.UsageTest.openCallCountByLastCall":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":502,"org.easymock.tests.DefaultClassInstantiatorTest.object":426,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":394,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":474,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":157,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":483,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":372,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":449,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":520,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":70,"org.easymock.tests2.UsageTest.resumeIfFailure":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":386,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":437,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":327,"org.easymock.tests2.SerializationTest.testAllMockedMethod":82,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":310,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":499,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":523,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":378,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":316,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":136,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":250,"org.easymock.tests.UsageExpectAndThrowTest.object":376,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":117,"org.easymock.tests2.DelegateToTest.testWrongClass":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":284,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":285,"org.easymock.tests.UsageStrictMockTest.range":411,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":204,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":169,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":507,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":377,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":48,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":265,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":526,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":454,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.UsageUnorderedTest.message":273,"org.easymock.tests.UsageVerifyTest.twoReturns":424,"org.easymock.tests.UsageVarargTest.varargByteAccepted":470,"org.easymock.tests2.ThreadingTest.testThreadSafe":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":65,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":402,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":525,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":314,"org.easymock.tests2.UsageConstraintsTest.any":108,"org.easymock.tests2.StubTest.stub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndThrowTest.longType":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":430,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.SerializationTest.testClass":80,"org.easymock.tests.LimitationsTest.mockNativeMethod":242,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":224,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":515,"org.easymock.tests2.NameTest.nameForMocksControl":134,"org.easymock.tests2.MockedExceptionTest.testMockedException":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":53,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":78,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":278,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":494,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":118,"org.easymock.tests.MockingTest.testTwoMocks":276,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":374,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":412,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":229,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":159,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ConstraintsToStringTest.andToString":522,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.MockBuilderTest.testCreateMockString":194,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":55,"org.easymock.tests.UsageExpectAndThrowTest.floatType":368,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":64,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":305,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":11,"org.easymock.tests.LimitationsTest.privateConstructor":241,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":357,"org.easymock.tests2.UsageTest.defaultResetToNice":40,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":333,"org.easymock.tests.UsageVarargTest.differentLength":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":223,"org.easymock.tests2.CallbackTest.callback":156,"org.easymock.tests2.UsageConstraintsTest.equals":104,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":529,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":215,"org.easymock.tests.UsageTest.openCallCountByLastCall":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":270,"org.easymock.tests.UsageCallCountTest.tooFewCalls":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":528,"org.easymock.tests.MockingTest.testStrictClassMocking":274,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":174,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":140,"org.easymock.tests2.CompareToTest.testGreateOrEqual":501,"org.easymock.tests.ObjectMethodsTest.testHashCode":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.NameTest.nameForNiceMock":133,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":66,"org.easymock.tests2.DelegateToTest.testStubDelegate":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.AnswerTest.stubAnswer":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":409,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":189,"org.easymock.tests.UsageVarargTest.varargLongAccepted":469,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":303,"org.easymock.tests.UsageExpectAndReturnTest.floatType":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":29,"org.easymock.tests2.ConstraintsToStringTest.orToString":516,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":166,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":116,"org.easymock.tests.UsageThrowableTest.noUpperLimit":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":103,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":199,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":144,"org.easymock.tests2.SerializationTest.test":81,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":512,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":427,"org.easymock.tests2.UsageConstraintsTest.testSame":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":319,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":173,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":56,"org.easymock.tests.GenericTest.testPackageScope":287,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":165,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":281,"org.easymock.tests2.NameTest.nameForMock":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":330,"org.easymock.tests2.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":380,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":448,"org.easymock.tests2.MockedExceptionTest.testRealException":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":530,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":498,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":269,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":349,"org.easymock.tests2.NameTest.nameForStrictMock":132,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":183,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":503,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":203,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":180,"org.easymock.tests2.UsageStrictMockTest.range":127,"org.easymock.tests2.UsageConstraintsTest.lessThan":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":161,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":302,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":60,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":207,"org.easymock.tests.UsageTest.wrongArguments":262,"org.easymock.tests2.MockBuilderTest.testWithConstructor":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":57,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":468,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":431,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":403,"org.easymock.tests2.UsageConstraintsTest.cmpTo":109,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":297,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":181,"org.easymock.tests.UsageTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":332,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":410,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests2.ConstraintsToStringTest.notToString":517,"org.easymock.tests.UsageStrictMockTest.testVerify":414,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":28,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":252,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":442,"org.easymock.tests.LimitationsTest.abstractClass":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":443,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":89}}]
