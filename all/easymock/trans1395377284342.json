[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,4,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,0,246,247,248,249,250,1,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,13,14,15,16,17,18,19,20,21,22,23,25,26,275,276,277,278,279,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[281],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[33,104,282,166,167,185,211,283,212,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[284,285,2,286,287],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[3,5,288,7,8,9,289,10,11,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[54,56,60,101,106,109,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,154,155,156,157,158,159,169,186,193],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[243,247,256,261],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[4,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[291,213,214],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[51,89,90,96,97,98,99,100,101,102,109,110,111,112,113,114,149,150,151,166,167,201,292,238,239,240,241,242,243,244,245,0,246,247,248,249,250,1,251,252,253,254,255,256,257,258,259,260,261,262,263,270,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[27,31,293,294,295,296,297,298,299,300,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[303,304,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[13,15,16,17,18,19,20,22,306,23],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[307,307,308,308,52,90,96,98,99,102,110,111,112,113,114,149,150,309,310,311,312,313,314,315,316,317,318,169,201,238,239,242,243,244,245,250,251,252,254,255,256,261,262,263,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,50,51,53,54,55,57,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,94,95,96,98,99,102,320,321,322,323,107,108,324,325,326,327,109,328,110,111,112,113,114,115,329,330,331,332,116,333,117,118,119,120,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,334,153,154,314,315,316,317,318,162,163,164,165,166,167,168,169,183,185,187,188,190,191,194,197,200,201,204,205,206,207,208,209,210,211,212,213,214,335,336,337,338,4,215,216,339,222,340,227,228,231,232,233,234,237,238,239,240,241,242,243,244,245,0,246,248,249,250,1,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,341,272,13,14,15,16,18,19,20,21,22,23,26,276,277,279,342,343,280,344],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[53,54,55,57,58,61,62,345,346,90,92,93,151,188,189,195,196,201,203,204,347,348,349,350,351,352,353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[30,354,355,356,4,218,219,220,339,221,357,222,223,224,225,358,359,271,272,360],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[90,309,310,311,312,313,201,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[361,362,363,364,46,53,54,55,56,57,58,61,62,63,87,89,90,91,92,93,94,116,117,118,121,122,151,162,171,175,176,179,185,186,188,189,190,191,195,196,198,199,201,202,203,204,205,207,208,209,210,221,225,240,253,271,273],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[56,68,74,80,84,86,129,135,141,145,147,151,366,161,17,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[367,368,369,53,54,55,57,345,346,90,92,93,370,371,107,372,151,188,201,203,204,347,373,348,374,350,352],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[375,376,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":241,"org.easymock.tests2.UsageTest.argumentsOrdered":196,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":327,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.tests2.StubTest.stubWithReturnValue":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":76,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":31,"org.easymock.tests2.SerializationTest.testAllMockedMethod":216,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":325,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":351,"org.easymock.samples.SupportTest.voteForRemovals":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":140,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":128,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":291,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":361,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":257,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":184,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":98,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.samples.ConstructorCalledMockTest.testTax":307,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":302,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":33,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":226,"org.easymock.tests2.UsageConstraintsTest.testNull":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests2.CaptureTest.testPrimitive":16,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.UsageTest.moreThanOneArgument":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":316,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":49,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests.UsageTest.argumentsOrdered":62,"org.easymock.tests.UsageVarargTest.varargIntAccepted":43,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":120,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":352,"org.easymock.tests2.CaptureTest.testCapture_2617107":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":353,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":340,"org.easymock.tests2.UsageConstraintsTest.any":248,"org.easymock.tests2.StubTest.stub":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests.LimitationsTest.mockNativeMethod":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":281,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":356,"org.easymock.tests2.AnswerTest.answer":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":86,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":300,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests2.NameTest.nameForMocksControl":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.DelegateToTest.testDelegate":279,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":132,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":264,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":224,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":298,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":346,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":232,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":332,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":345,"org.easymock.tests2.CaptureTest.testCapture1_2446744":17,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":136,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":262,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":305,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":295,"org.easymock.tests2.ConstraintsToStringTest.andToString":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.MockBuilderTest.testCreateMockString":358,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":318,"org.easymock.tests.UsageExpectAndThrowTest.floatType":130,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":253,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":212,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":219,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests2.CompareToTest.testLessOrEqual":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":111,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":129,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests2.ThreadingTest.testChangeDefault":303,"org.easymock.tests2.UsageConstraintsTest.testNotNull":261,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":222,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":299,"org.easymock.tests.UsageVarargTest.differentLength":46,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":301,"org.easymock.tests.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":137,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":100,"org.easymock.tests.UsageCallCountTest.tooFewCalls":118,"org.easymock.tests.UsageOverloadedMethodTest.overloading":126,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":251,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":78,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":125,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":156,"org.easymock.tests2.EasyMockSupportClassTest.testAll":217,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":145,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":330,"org.easymock.tests2.CaptureTest.testCaptureAll":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.testMatches":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":230,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":317,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":103,"org.easymock.tests2.CompareToTest.testGreateOrEqual":286,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests2.NameTest.nameForNiceMock":209,"org.easymock.tests.UsageVarargTest.allKinds":51,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests2.DependencyTest.testInterfaceMocking":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":331,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":158,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":328,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":290,"org.easymock.tests2.UsageConstraintsTest.greaterThan":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":273,"org.easymock.tests.UsageVarargTest.varargLongAccepted":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests.UsageExpectAndReturnTest.floatType":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":206,"org.easymock.tests2.ConstraintsToStringTest.orToString":347,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":308,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":255,"org.easymock.tests.UsageThrowableTest.noUpperLimit":153,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":239,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":108,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.SerializationTest.test":215,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":18,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.testSame":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":68,"org.easymock.samples.SupportTest.addDocument":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":324,"org.easymock.tests2.CaptureTest.testCaptureFirst":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":74,"org.easymock.tests.GenericTest.testPackageScope":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests2.CaptureTest.testCapture2_2446744":25,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":296,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":50,"org.easymock.tests2.NameTest.nameForMock":207,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":121,"org.easymock.tests.UsageExpectAndReturnTest.longType":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":115,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":146,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":52,"org.easymock.tests2.UsageStrictMockTest.differentMethods":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":71,"org.easymock.tests.UsageCallCountTest.tooManyCalls":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":117,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":368,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":282,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":333,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests2.NameTest.nameForStrictMock":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":280,"org.easymock.tests2.UsageConstraintsTest.testFind":242,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":127,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":268,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":167,"org.easymock.tests.UsageExpectAndReturnTest.object":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":362,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":270,"org.easymock.tests.ErrorMessageTest.testGetters":363,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":221,"org.easymock.tests2.UsageStrictMockTest.range":203,"org.easymock.tests2.UsageConstraintsTest.lessThan":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":45,"org.easymock.tests.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":160,"org.easymock.tests2.UsageConstraintsTest.testOr":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":83,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":41,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":294,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":72,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":80,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":161,"org.easymock.tests.UsageVarargTest.varargShortAccepted":47,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":292,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests.UsageVarargTest.varargCharAccepted":44,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":283,"org.easymock.tests2.CompareToTest.testLessThan":284,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests2.CaptureTest.testCaptureFromStub":24,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":357,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":135,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":119,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":81,"org.easymock.tests2.CaptureTest.testCapture":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":271,"org.easymock.tests2.UsageConstraintsTest.constraints":240,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":134,"org.easymock.tests2.ConstraintsToStringTest.notToString":348,"org.easymock.tests.CapturesMatcherTest.test":12,"org.easymock.tests.UsageStrictMockTest.testVerify":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":27,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":329,"org.easymock.tests2.CompareToTest.testGreateThan":285,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":73,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":364,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176}}]
