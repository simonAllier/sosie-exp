[{"position":"org.easymock.internal.InjectionPlan:51","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[27,28],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[29,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,26,59,29,30,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"equalsMethod"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[75,100],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:75","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[101,102,103,104,105,106,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[108,109,110,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[114,115,116,117,118,119,120,121,122,108,109,110,111,123,124,125,126,127],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[102,103,104,129,105,106,130],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[131,132,133],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[134,76,115,135,136,116,117,118,119,120,137,84,122,138,139,140,141,142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[143,144,145],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[66,146],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[33,35,43,53,54,56,58,26,29,68,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[147,114,115,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[59,63,75,148],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[30,81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[149,150],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[0,6,12,18,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[151,152,153,154,155],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,156,47,157,48,49,50,147,51,52,53,54,55,56,57,58,26,59,29,30,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,158,76,159,77,17,78,160,79,161,80,81,82,83,84,85,86,87,88,89,162,90,91,92,93,94,95,96],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests2.CompareToTest.testGreateOrEqual":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":105,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.UsageVarargTest.allKinds":78,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":15,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":130,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":95,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":90,"org.easymock.samples.ConstructorCalledMockTest.testTax":154,"org.easymock.tests.UsageStrictMockTest.range":121,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":21,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.UsageConstraintsTest.testNull":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":38,"org.easymock.tests2.CaptureTest.testPrimitive":36,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":149,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":94,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests.UsageTest.moreThanOneArgument":136,"org.easymock.tests2.UsageConstraintsTest.testSame":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.CaptureTest.testCaptureNone":41,"org.easymock.tests.UsageUnorderedTest.message":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":109,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":108,"org.easymock.tests2.CaptureTest.testCapture_2617107":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":85,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":22,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":153,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":112,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests2.SerializationTest.testClass":97,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":5,"org.easymock.tests2.AnswerTest.answer":158,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.CaptureTest.testAnd":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":147,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":4,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":91,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":116,"org.easymock.tests2.UsageConstraintsTest.testFind":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":79,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":117,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":111,"org.easymock.tests.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests2.UsageConstraintsTest.testOr":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":107,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":152,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":156,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":47,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":31,"org.easymock.tests2.CompareToTest.testLessThan":100,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":162,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":133,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":1,"org.easymock.tests2.UsageConstraintsTest.equals":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":118,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":83,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":32,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":127,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":42,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":24,"org.easymock.tests2.CompareToTest.testGreateThan":146,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":87,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":88,"org.easymock.tests2.CaptureTest.testCaptureAll":34}}]
