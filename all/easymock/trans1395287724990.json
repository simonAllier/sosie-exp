[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[177,178,34,40,45,46,47,50,56,57,58,59,92,99,100,102,109,115,179,117,118,119,120,121,180,181,136,182],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[183,34,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[184,184,185,185,15,186,37,38,41,42,43,44,49,51,52,54,55,60,61,62,112,113,114,125,187,188,189,190,127,191,162,163,164,165,166,170,174,175],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[2,193,3,4,194,5,195,196,197,198,6,199,7,200,184,185,201,202,203,8,204,205,206,9,10,207,208,209,11,12,210,211,212,213,214,13,215,216,217,218,219,220,221,222,223,224,225,226,227,192,14,228,229,230,231,232,233,234,235,236,15,237,16,17,238,18,19,20,239,21,177,22,23,24,240,178,25,26,27,28,183,29,30,241,242,31,32,33,34,186,35,36,37,38,39,40,243,41,42,43,44,45,46,244,47,48,49,50,51,52,53,54,55,56,57,58,245,59,60,61,62,246,247,248,63,249,250,64,251,252,253,254,255,256,257,258,259,65,260,261,262,263,264,66,265,266,267,268,269,67,270,271,272,68,273,69,274,70,275,276,277,71,278,279,280,281,282,283,284,72,285,286,287,288,289,290,291,292,73,293,294,295,296,297,298,74,75,76,77,299,78,79,80,300,81,301,302,303,82,304,83,305,306,307,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,308,101,102,103,104,105,106,309,310,107,311,312,313,108,109,110,314,315,316,317,318,319,320,111,321,322,323,324,112,113,325,326,114,327,328,329,330,115,179,116,117,118,119,120,121,331,332,333,334,335,336,122,123,124,125,187,188,189,190,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,0,392,393,394,1,395,396,397,126,398,399,400,401,402,403,127,404,128,129,405,406,407,408,409,410,411,412,413,414,415,416,417,418,191,419,420,421,422,423,424,425,426,130,131,427,428,132,133,429,180,134,430,431,432,433,434,435,436,437,438,181,439,440,441,442,443,444,135,136,137,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,138,139,140,141,469,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,470,471,167,472,168,182,169,473,474,475,476,477,170,478,479,480,481,171,172,482,173,483,484,485,174,175,486,176,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[19,89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[488,48,107],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[184,184,185,185,15,186,37,38,41,42,43,44,49,51,52,54,55,60,61,62,112,113,114,125,187,188,189,190,127,162,163,164,165,166,170,174,175],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[2,193,3,4,5,196,6,7,184,184,185,185,202,203,8,204,205,206,9,10,11,12,13,192,14,228,230,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,186,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,291,292,73,293,74,75,76,77,78,79,80,81,301,302,303,82,304,83,307,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,316,318,319,111,322,323,324,112,113,325,326,114,115,179,116,117,118,119,120,121,331,332,333,335,122,123,124,125,187,188,189,190,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,377,378,379,380,381,126,399,127,128,129,191,130,131,132,133,134,432,181,135,136,137,461,467,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,182,169,170,478,171,172,173,174,175,176],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[397,400],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[394,489,490],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[2,193,3,4,194,5,196,197,198,199,7,200,201,203,8,204,206,9,10,11,12,13,192,14,236,15,237,16,17,238,18,19,20,21,177,22,23,25,26,27,28,31,32,34,36,40,42,44,45,60,68,69,70,72,81,303,82,307,84,85,86,88,89,90,91,92,93,94,95,97,98,99,100,102,105,109,316,318,319,112,113,325,326,114,115,179,116,117,118,119,120,121,125,187,188,189,190,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,372,373,374,375,376,398,402,127,404,128,129,405,130,131,132,133,134,181,135,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,182,169,170,174,175],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[15,16,17,20,491,492,493,494,127,128,129,131,181,168,182,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[495,51,58,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[193,203,8,204,206,228,230,27,28,183,29,30,241,242,31,32,33,34,186,35,36,81,303,82,318,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,193,3,4,194,5,196,203,8,204,206,9,10,207,11,192,14,228,230,231,232,233,234,235,236,15,237,16,17,238,18,19,20,239,21,177,22,23,24,240,178,25,26,27,28,183,29,30,241,242,31,32,33,34,186,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,267,268,68,273,71,279,291,292,73,293,295,296,297,298,75,76,79,80,81,303,82,304,83,307,84,85,86,87,88,101,102,103,104,105,106,107,313,109,111,112,113,325,326,114,327,328,329,330,115,179,116,117,118,119,120,121,335,125,187,188,189,190,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,372,373,374,375,376,383,126,398,401,402,403,127,404,128,129,405,406,411,130,131,427,428,132,133,429,180,134,430,431,432,433,434,435,181,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,182,169,473,474,475,476,477,170,478,171,172,173,174,175],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[14,18,23,291,292,73,293,319,325,326,116,120,121,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,130,133,137,478],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[9,10,207],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[64,268,273,291,309,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"targetField"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,14,15,16,17,18,20,22,23,25,26,28,30,31,32,35,36,37,38,39,41,42,43,44,47,49,51,52,53,54,55,60,61,62,71,81,82,84,85,86,111,113,114,116,127,128,129,130,131,132,133,134,137,454,456,465,466,468,138,139,140,141,142,143,146,148,149,150,151,153,154,155,156,158,159,160,161,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[497,498,499,500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[502,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[184,184,185,185,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:158","sourceCode":"return ((java.lang.Class<?>.getSimpleName()) + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[15,16,17,20,239,240,178,334,335,403,127,128,129,131,427,428,429,180,181,469,168,182,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[505,506,507,508,403,427],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[445,449,450,459,464],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":455,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":201,"org.easymock.tests2.DelegateToTest.testReturnException":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":339,"org.easymock.tests.MockingTest.testPartialClassMocking":171,"org.easymock.tests.MockClassControlTest.testToString":384,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":294,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":254,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":345,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":491,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":12,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageTest.wrongArguments":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":329,"org.easymock.samples.ExampleTest.answerVsDelegate":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":424,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":484,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests2.CaptureTest.testPrimitive":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":114,"org.easymock.tests.UsageTest.moreThanOneArgument":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":364,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests.UsageTest.argumentsOrdered":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":377,"org.easymock.tests.UsageVarargTest.varargIntAccepted":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.ReplayStateInvalidUsageTest.times":415,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests2.DependencyTest.testClassMocking":208,"org.easymock.tests2.AnswerTest.answer":81,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":234,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":421,"org.easymock.tests2.CaptureTest.testAnd":27,"org.easymock.tests2.UsageTest.strictResetToDefault":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests2.DelegateToTest.testDelegate":206,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":360,"org.easymock.tests.LimitationsTest.mockFinalMethod":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":477,"org.easymock.tests2.DependencyTest.testClassMockingSupport":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":30,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":232,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":409,"org.easymock.tests.UsageThrowableTest.throwError":115,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":423,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":266,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":482,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":123,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":444,"org.easymock.tests2.UsageTest.niceToStrict":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":217,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":354,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":153,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":135,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":489,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":33,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":368,"org.easymock.tests.MockClassControlTest.testEquals":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":63,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":398,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":475,"org.easymock.tests2.CaptureTest.testCaptureAll":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":233,"org.easymock.tests.MockNameTest.defaultName":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":376,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":476,"org.easymock.samples.BasicClassMockTest.testPrintContent":198,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":120,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":395,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":110,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":396,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":314,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":309,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":337,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":338,"org.easymock.tests2.CaptureTest.testCaptureFirst":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":149,"org.easymock.tests2.CaptureTest.testCapture2_2446744":35,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":375,"org.easymock.tests.GenericTest.testBridgedEquals":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":437,"org.easymock.tests.UsageExpectAndReturnTest.longType":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":473,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":363,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":438,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":119,"org.easymock.tests.MockingTest.testNiceClassMocking":485,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.MockingTest.testClassMocking":480,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":431,"org.easymock.tests2.UsageConstraintsTest.testContains":49,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":422,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":370,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":442,"org.easymock.tests.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":158,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":318,"org.easymock.tests.MockClassControlTest.testHashCode":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":281,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":257,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":379,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":267,"org.easymock.tests.UsageVarargTest.varargCharAccepted":369,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":390,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastCall":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":503,"org.easymock.tests.DefaultClassInstantiatorTest.object":391,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":331,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":280,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":351,"org.easymock.tests.CapturesMatcherTest.test":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":322,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests2.UsageTest.resumeIfFailure":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":341,"org.easymock.tests2.StubTest.stubWithReturnValue":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":207,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":461,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":501,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":467,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":301,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":487,"org.easymock.tests.UsageExpectAndThrowTest.object":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":175,"org.easymock.samples.ConstructorCalledMockTest.testTax":184,"org.easymock.tests.UsageStrictMockTest.range":128,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":226,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":356,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":429,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":124,"org.easymock.tests2.CaptureTest.testCaptureNone":32,"org.easymock.tests.UsageUnorderedTest.message":181,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":374,"org.easymock.tests2.ThreadingTest.testThreadSafe":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":435,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":443,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":197,"org.easymock.tests2.CaptureTest.testCapture_2617107":183,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":326,"org.easymock.tests2.UsageConstraintsTest.any":47,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":414,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":340,"org.easymock.tests.UsageExpectAndThrowTest.longType":348,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":394,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":413,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":161,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":212,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests2.NameTest.nameForMocksControl":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":214,"org.easymock.tests2.MockedExceptionTest.testMockedException":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":250,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":173,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.MockingTest.testNicePartialClassMocking":172,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":497,"org.easymock.tests2.CompareToTest.testCompareEqual":488,"org.easymock.tests2.CaptureTest.testCaptureLast":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":481,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":353,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":240,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.samples.ExampleTest.removeNonExistingDocument":195,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":216,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":282,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":86,"org.easymock.tests2.MockBuilderTest.testCreateMockString":279,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":251,"org.easymock.tests.UsageExpectAndThrowTest.floatType":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":303,"org.easymock.tests.UsageVerifyTest.twoThrows":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":306,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.LimitationsTest.privateConstructor":471,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":291,"org.easymock.tests2.UsageTest.defaultResetToNice":24,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":211,"org.easymock.tests.UsageVarargTest.differentLength":371,"org.easymock.tests2.CallbackTest.callback":307,"org.easymock.tests2.UsageConstraintsTest.equals":243,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":325,"org.easymock.tests.UsageCallCountTest.tooFewCalls":433,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":330,"org.easymock.tests.UsageThrowableTest.throwCheckedException":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":479,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":478,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":78,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":304,"org.easymock.tests.ObjectMethodsTest.testHashCode":441,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":88,"org.easymock.tests2.NameTest.nameForNiceMock":297,"org.easymock.tests2.DependencyTest.testInterfaceMocking":11,"org.easymock.samples.ExampleTest.addDocument":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":261,"org.easymock.tests2.DelegateToTest.testStubDelegate":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.AnswerTest.stubAnswer":82,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":127,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":275,"org.easymock.tests.UsageVarargTest.varargLongAccepted":373,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":185,"org.easymock.tests.UsageThrowableTest.noUpperLimit":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":221,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":241,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":143,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.samples.SupportTest.addDocument":199,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":299,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":252,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":287,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":483,"org.easymock.tests2.NameTest.nameForMock":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":359,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":141,"org.easymock.tests2.MockedExceptionTest.testRealException":293,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":458,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":113,"org.easymock.tests2.NameTest.nameForStrictMock":296,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":504,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":225,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests.ErrorMessageTest.testGetters":493,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":67,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests2.CaptureTest.testCaptureRightOne":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":256,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":428,"org.easymock.tests2.MockBuilderTest.testWithConstructor":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":253,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":155,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":436,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":302,"org.easymock.tests2.CompareToTest.testLessThan":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CaptureTest.testCaptureFromStub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":408,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":270,"org.easymock.tests.UsageTest.unexpectedCallWithArray":427,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":404,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.samples.ExampleTest.addAndChangeDocument":196,"org.easymock.tests.UsageStrictMockTest.testVerify":406,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":200,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.LimitationsTest.abstractClass":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":366}}]
