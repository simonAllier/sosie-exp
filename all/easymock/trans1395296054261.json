[{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[10,11,12,13,14,15,16,17,0,18,19,20,21,9,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[24,25],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[26,7],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[27,28,23,29,30,31,32,33,34,35,36,37],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[39],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[51,52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,41,42,43,44,45,46,47,48,49,112,113,114,115,115,116,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,26,134,135,136,7,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[152,153,154,112,113,114,155,156,157,158,8,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,18,194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.EasyMock.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[124,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"methodArgs":"methodArgs","this":"this","methodTypes":"methodTypes","i":"i"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[54,195,55,196],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[27,28,35,197,198,199,200,201,202],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[203],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[202],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[67,204,205,206,207,208,209,210],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[26,7],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[27,211,28,23,29,30,31,32,33,35,36,212,37,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[214,215,25,216],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[58,63,65,100,121,218,139,140,141,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[220,221,222,223,224,225,226,227,228,229,230,231,54,195,55,232,233,234,235,236,237,238,239,240,241,56,57,242,243,244,245,246,152,247,248,10,249,250,251,153,252,11,12,253,254,58,60,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,61,62,63,64,271,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,272,273,274,275,276,277,154,94,95,96,97,98,99,100,101,102,103,104,105,27,211,28,23,29,30,31,32,203,33,35,36,212,37,106,107,278,108,109,110,111,40,41,42,43,44,45,46,47,48,49,215,279,197,198,280,281,282,283,199,200,284,201,285,286,287,288,289,290,291,25,292,202,293,294,295,216,296,297,298,112,113,114,155,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,13,326,327,328,329,330,331,332,333,334,335,336,337,338,339,115,116,117,118,119,340,341,342,343,156,344,345,157,346,347,348,349,350,351,352,158,8,353,120,354,355,121,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,122,159,378,14,15,379,160,16,17,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,0,123,124,125,126,127,128,129,398,399,400,401,402,403,404,405,406,407,408,409,410,130,131,132,133,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,411,412,413,181,414,182,183,184,185,186,187,415,416,417,418,419,3,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,218,188,189,190,191,192,193,448,449,450,451,452,453,454,455,456,457,458,459,26,134,135,136,7,137,138,139,140,141,142,143,144,460,18,19,461,462,463,464,465,466,467,468,194,469,470,20,4,5,6,471,472,473,474,475,476,477,478,479,480,481,9,482,483,22,484,485,486,145,146,147,148,149,487,150,488,489,151,490,491,492,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests2.UsageTest.argumentsOrdered":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":250,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":189,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.tests.MockClassControlTest.testToString":139,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":272,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":161,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":284,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":351,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":348,"org.easymock.samples.ExampleTest.answerVsDelegate":332,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":121,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":489,"org.easymock.tests2.UsageConstraintsTest.testNull":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":266,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":180,"org.easymock.tests.UsageTest.moreThanOneArgument":378,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":463,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":490,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageVarargTest.varargIntAccepted":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":397,"org.easymock.tests.ReplayStateInvalidUsageTest.times":407,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":38,"org.easymock.tests2.DependencyTest.testClassMocking":56,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests2.CaptureTest.testAnd":27,"org.easymock.tests2.UsageTest.strictResetToDefault":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":494,"org.easymock.tests2.DelegateToTest.testDelegate":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":176,"org.easymock.tests.LimitationsTest.mockFinalMethod":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":475,"org.easymock.tests2.DependencyTest.testClassMockingSupport":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":411,"org.easymock.tests2.CaptureTest.testCapture1_2446744":29,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":401,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":355,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":219,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":93,"org.easymock.samples.PartialClassMockTest.testGetArea":117,"org.easymock.tests.MockingTest.testInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":402,"org.easymock.tests2.CompareToTest.testLessOrEqual":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":394,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":80,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":218,"org.easymock.tests2.UsageTest.niceToStrict":249,"org.easymock.tests2.ThreadingTest.testChangeDefault":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":53,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":98,"org.easymock.tests2.MockBuilderTest.testCreateMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":170,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":346,"org.easymock.tests.UsageOverloadedMethodTest.overloading":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":90,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":289,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":369,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":288,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":33,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":451,"org.easymock.tests.MockClassControlTest.testEquals":143,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests.MockNameTest.defaultName":398,"org.easymock.tests2.UsageConstraintsTest.testMatches":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":399,"org.easymock.samples.ExampleTest.voteForRemovals":336,"org.easymock.tests.UsageVarargTest.allKinds":459,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":474,"org.easymock.samples.BasicClassMockTest.testPrintContent":119,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":315,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":129,"org.easymock.samples.ExampleTest.voteForRemoval":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":48,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":318,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":111,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":122,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":259,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":260,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":365,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":248,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":104,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":458,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":391,"org.easymock.tests.UsageExpectAndReturnTest.longType":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":471,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":179,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":295,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":461,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":382,"org.easymock.tests.UsageCallCountTest.tooManyCalls":392,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests.MockingTest.testNiceClassMocking":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.MockingTest.testClassMocking":146,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":385,"org.easymock.tests2.UsageConstraintsTest.testContains":287,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":281,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":157,"org.easymock.tests.MockTypeTest.fromEasyMockClass":354,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":246,"org.easymock.tests.UsageExpectAndReturnTest.object":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":265,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":206,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":446,"org.easymock.tests.UsageTest.exactCallCountByLastCall":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":491,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":440,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":468,"org.easymock.tests.MockClassControlTest.testHashCode":142,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":300,"org.easymock.tests2.EasyMockSupportTest.testVerify":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":82,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":492,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":466,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":217,"org.easymock.tests.UsageVarargTest.varargCharAccepted":452,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":251,"org.easymock.tests.DefaultClassInstantiatorTest.object":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":51,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":4,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":444,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":299,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":167,"org.easymock.tests.CapturesMatcherTest.test":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":381,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":91,"org.easymock.tests2.UsageTest.resumeIfFailure":253,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":191,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":367,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":173,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":196,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":438,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":237,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":442,"org.easymock.tests.UsageExpectAndThrowTest.object":171,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":293,"org.easymock.tests2.DelegateToTest.testWrongClass":314,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":415,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":416,"org.easymock.samples.ConstructorCalledMockTest.testTax":115,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":255,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":409,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":347,"org.easymock.tests2.CaptureTest.testCaptureNone":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":342,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":457,"org.easymock.tests2.ThreadingTest.testThreadSafe":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":86,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":389,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":447,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":118,"org.easymock.tests2.CaptureTest.testCapture_2617107":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests2.UsageConstraintsTest.any":285,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":406,"org.easymock.tests2.StubTest.stub":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":190,"org.easymock.tests.UsageExpectAndThrowTest.longType":164,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":127,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":405,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":222,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.NameTest.nameForMocksControl":276,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":74,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":245,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":110,"org.easymock.tests2.CompareToTest.testCompareEqual":39,"org.easymock.tests2.CaptureTest.testCaptureLast":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":200,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":294,"org.easymock.tests.MockingTest.testTwoMocks":147,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":169,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":297,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests.UsageStrictMockTest.differentMethods":484,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":301,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":125,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":319,"org.easymock.tests2.MockBuilderTest.testCreateMockString":105,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":137,"org.easymock.tests.UsageExpectAndThrowTest.floatType":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":76,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":131,"org.easymock.tests2.UsageConstraintsTest.testNotNull":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.samples.ExampleTest.voteAgainstRemovals":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":373,"org.easymock.tests.UsageVarargTest.differentLength":454,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":221,"org.easymock.tests2.CallbackTest.callback":270,"org.easymock.tests2.UsageConstraintsTest.equals":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":42,"org.easymock.tests.UsageTest.openCallCountByLastCall":379,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":158,"org.easymock.tests.UsageCallCountTest.tooFewCalls":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests.MockingTest.testStrictClassMocking":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":208,"org.easymock.tests2.NameTest.nameForNiceMock":275,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":207,"org.easymock.samples.ExampleTest.addDocument":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.DelegateToTest.testStubDelegate":313,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":482,"org.easymock.tests.UsageVarargTest.varargLongAccepted":456,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatType":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":376,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageThrowableTest.noUpperLimit":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":58,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":30,"org.easymock.tests2.SerializationTest.test":195,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":124,"org.easymock.tests2.UsageConstraintsTest.testSame":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":359,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":77,"org.easymock.tests.GenericTest.testPackageScope":134,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":488,"org.easymock.tests2.NameTest.nameForMock":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":370,"org.easymock.tests2.UsageStrictMockTest.differentMethods":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":175,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":479,"org.easymock.tests2.MockedExceptionTest.testRealException":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":324,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":352,"org.easymock.tests2.NameTest.nameForStrictMock":274,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":126,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":1,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":95,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":258,"org.easymock.tests2.CaptureTest.testCaptureRightOne":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":81,"org.easymock.tests2.UsageConstraintsTest.testOr":199,"org.easymock.tests.UsageRangeTest.combination":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":107,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":78,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":455,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":390,"org.easymock.tests2.UsageConstraintsTest.cmpTo":286,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":3,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":400,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":96,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":372,"org.easymock.tests2.CaptureTest.testCapture":34,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":483,"org.easymock.tests2.UsageConstraintsTest.constraints":197,"org.easymock.samples.ExampleTest.addAndChangeDocument":338,"org.easymock.tests.UsageStrictMockTest.testVerify":486,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":339,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":472,"org.easymock.tests2.CompareToTest.testGreateThan":24,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":395,"org.easymock.tests.LimitationsTest.abstractClass":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":364,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":396,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":263}}]
