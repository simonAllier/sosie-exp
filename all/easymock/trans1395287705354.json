[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[5,7,15,19,20,21,22,23,24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[27],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[28,29,30,31],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[32,33,34,35,36,37,38,39,40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,5,6,8,9,12,178,13,15,16,17,18,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,0,1,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,19,20,249,21,250,22,23,29,251,252,253,254,30,255,256,257,258,25,259,260,261,26,262,31,263,264,265],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[266,267],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[32,33,35,36,37,39,63,64,66,68,69,71,72,73,74,75,76,79,80,82,83,84,86,87,88,89,90,91,92,93,94,97,115,138,139,140,141,142,143,147,150,151,152,153,156,157,158,159,160,164,165,166,168,169,170,171,172,173,174,175,176,177,182,184,185,186,187,212,213,214,215,216,217,218,221,225,226,227,228,229,239,240,241,242,243,265],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[118,268,145,269,244],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[270,271],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,272,37,273,274,39,275,276,277,278,44,45,47,52,57,68,279,73,74,76,81,86,103,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,107,108,109,110,111,112,113,114,118,121,122,298,299,300,301,127,134,135,136,137,302,303,304,305,306,307,141,142,143,308,309,310,311,312,313,147,148,314,315,316,317,318,269,319,320,155,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,166,167,168,169,170,171,172,173,337,174,338,176,5,6,7,8,10,11,12,178,13,15,18,182,183,184,185,186,187,189,190,191,193,196,0,1,2,199,200,201,202,203,204,205,206,207,208,209,210,339,211,212,213,214,215,216,217,218,220,222,340,226,341,227,228,342,343,230,231,344,233,345,236,346,347,238,348,349,350,351,352,353,354,242,243,246,20,23,29,251,252,254,256,25,259,260,355,261,263,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[32,40,40,41,41,276,277,270,68,279,69,271,103,280,266,356,357,358,267,359,290,291,292,293,294,295,296,297,360,361,362,363,364,141,142,143,365,366,367,368,166,369,168,169,171,172,173,337,174,370,371,338,175,176,177,372,373,374,375,376,184,377,378,185,379,380,381,382,383,384,385,386,387,186,388,389,390,391,392,187,393,394,189,190,191,0,2,395,396,212,213,214,215,217,218,340,397,225,398,399,226,341,227,228,400,342,229,401,343,402,403,265,404],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[65,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[169,373,405,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[407,0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[405],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,135,408,220,222,223,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[32,33,34,35,36,272,37,38,274,39,275,40,41,276,277,278,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,68,279,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,103,281,282,283,284,285,286,287,288,289,291,108,109,115,116,119,120,121,122,124,128,129,130,131,132,133,137,303,138,140,306,307,141,142,143,409,308,146,410,309,310,148,149,150,151,152,153,154,156,157,158,159,160,327,328,329,330,331,332,333,334,335,336,164,165,166,411,168,170,171,172,173,174,338,176,5,6,7,8,10,11,12,178,13,15,18,179,180,183,184,185,186,187,188,189,190,191,192,193,196,197,198,0,1,2,199,200,201,202,203,204,205,206,207,208,209,210,339,211,212,213,214,215,216,217,218,406,412,413,414,220,221,224,340,226,341,227,228,231,232,233,345,236,237,348,239,241,350,351,352,353,354,242,243,244,245,246,247,248,19,20,249,21,250,22,23,29,251,252,253,254,30,255,256,257,258,25,259,260,261,26,262,31,263,264,265],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[34,134,188,193,196,198,263,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:371","sourceCode":"return this","type":"CtReturnImpl"},"failures":[92,93,94,237,244],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[270,68,279,69,271],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[70,416,417,121,122,298,299,300,301,302,304,139,344,346,347,240],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[32,33,34,35,36,272,37,273,38,274,39,275,40,41,276,277,278,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,270,68,279,69,271,418,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,280,266,356,357,358,267,359,281,282,283,284,285,286,287,288,289,104,105,106,290,291,292,293,294,295,296,297,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,360,419,420,421,422,361,423,424,123,124,298,299,125,126,300,301,127,128,129,130,131,132,133,134,425,135,136,426,137,302,427,303,304,138,305,139,140,306,307,362,363,364,141,142,428,143,429,430,365,431,432,408,433,434,435,436,437,438,439,440,441,442,443,444,268,144,445,446,447,448,449,145,450,409,308,146,410,309,310,311,312,313,147,148,149,150,151,152,153,154,451,314,315,316,452,366,317,318,269,319,320,155,321,322,323,324,325,326,156,157,158,159,160,161,162,163,327,328,329,453,330,331,454,332,333,334,335,336,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,164,165,367,368,166,369,477,167,411,478,479,480,481,482,168,169,170,171,172,173,337,483,174,370,371,338,175,176,177,372,373,5,6,7,8,9,10,11,12,178,13,15,16,17,18,179,484,180,181,182,183,374,375,376,184,377,378,185,379,380,381,382,383,384,385,386,387,186,388,389,390,391,392,187,393,394,188,189,190,191,192,193,194,195,196,197,198,0,1,2,199,200,201,202,203,204,205,206,207,208,209,210,339,485,486,487,488,489,211,490,491,492,493,494,495,212,213,214,215,496,216,217,218,497,405,406,412,413,414,219,220,221,222,223,224,340,225,398,399,226,341,227,228,498,400,342,229,343,402,499,500,403,501,502,230,231,232,344,233,345,234,235,236,346,347,237,238,503,348,239,349,240,241,350,351,352,353,354,504,505,242,243,244,245,506,507,508,509,510,246,511,512,513,514,515,516,247,248,19,20,517,249,21,250,22,23,29,24,251,252,253,254,30,255,256,257,258,25,259,260,355,261,26,262,31,518,263,519,264,265,404],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[118,433],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[40,40,41,41,370,0,498,400,265,404],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[180,181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[32,33,34,35,36,272,37,273,38,274,39,275,40,41,276,277,278,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,270,68,279,69,271,418,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,520,280,266,356,357,358,267,521,359,522,281,282,283,284,285,286,287,288,289,104,105,106,290,291,292,293,294,295,296,297,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,360,419,420,421,422,361,423,424,123,124,298,299,125,126,300,301,127,128,129,130,131,132,133,134,425,135,136,426,137,302,427,303,304,138,305,139,140,306,307,362,363,364,141,142,428,143,429,430,365,431,432,408,433,434,435,436,437,438,439,440,441,442,443,444,268,144,445,446,447,448,449,145,450,409,308,146,410,309,310,311,312,313,147,148,149,150,151,152,153,154,451,314,315,316,452,366,317,318,269,319,320,155,321,322,323,324,325,326,156,157,158,159,160,161,162,163,327,328,329,453,330,331,454,332,333,334,335,336,164,165,367,368,166,369,477,167,411,168,169,170,171,172,173,337,483,174,370,371,338,175,176,177,372,373,5,6,7,8,9,10,11,12,178,13,15,16,17,18,179,180,181,182,183,374,375,376,184,377,378,185,379,380,381,382,383,384,385,386,387,186,388,389,390,391,392,187,393,394,188,189,190,191,192,193,194,195,196,197,198,0,1,2,199,200,201,202,203,204,205,206,207,208,209,210,339,485,486,487,488,489,211,490,491,492,493,494,495,212,213,214,215,496,216,217,218,497,405,406,412,413,414,219,220,221,222,223,224,340,523,225,398,524,399,226,341,227,525,228,498,400,342,229,526,343,402,499,500,527,403,501,502,230,231,232,344,233,345,234,235,236,346,347,237,238,503,348,239,349,240,241,350,351,352,353,354,504,505,242,243,244,245,506,507,508,509,510,246,511,512,513,514,515,516,247,248,19,20,517,249,21,250,22,23,29,24,251,252,253,254,30,255,256,257,258,25,259,260,355,261,26,262,31,518,263,519,264,265,404,528],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[38,42,48,54,58,60,70,71,77,83,87,89,124,442,144,149,323,6,12,178,18,179,180,188,224,232,247,30,257,31,263,264],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[109,121,122,127,138,193,230,238,239],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.UsageTest.argumentsOrdered":347,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":440,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":345,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":278,"org.easymock.tests2.DelegateToTest.testReturnException":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":129,"org.easymock.tests.MockingTest.testPartialClassMocking":141,"org.easymock.tests.MockClassControlTest.testToString":292,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":405,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":42,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":243,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageTest.wrongArguments":344,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":283,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":430,"org.easymock.tests2.UsageConstraintsTest.testNull":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":208,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":297,"org.easymock.tests2.CaptureTest.testPrimitive":8,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":119,"org.easymock.tests.UsageTest.moreThanOneArgument":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":61,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":98,"org.easymock.tests.UsageTest.argumentsOrdered":301,"org.easymock.tests.UsageVarargTest.varargIntAccepted":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":515,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":460,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests.ReplayStateInvalidUsageTest.times":323,"org.easymock.tests2.DependencyTest.testClassMocking":504,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":354,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":5,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":524,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":102,"org.easymock.tests2.DelegateToTest.testDelegate":224,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":459,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":57,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":289,"org.easymock.tests2.DependencyTest.testClassMockingSupport":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":477,"org.easymock.tests2.CaptureTest.testCapture1_2446744":9,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":352,"org.easymock.tests.UsageThrowableTest.throwError":107,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":269,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":522,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":516,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":463,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.MockingTest.testInterfaceMocking":428,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":43,"org.easymock.tests2.UsageTest.niceToStrict":233,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":383,"org.easymock.tests2.ThreadingTest.testChangeDefault":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":27,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":226,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":51,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":387,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":254,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":13,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":453,"org.easymock.tests2.EasyMockSupportClassTest.testAll":184,"org.easymock.tests.MockClassControlTest.testEquals":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":59,"org.easymock.tests2.CaptureTest.testCaptureAll":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":353,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":317,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":336,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":120,"org.easymock.samples.BasicClassMockTest.testPrintContent":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":113,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":133,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":223,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":521,"org.easymock.tests2.UsageConstraintsTest.greaterThan":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":92,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":177,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":464,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":359,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":372,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":527,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":337,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":456,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":103,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":201,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":128,"org.easymock.tests2.CaptureTest.testCaptureFirst":18,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":78,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":17,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":229,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":335,"org.easymock.tests.GenericTest.testBridgedEquals":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":312,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":285,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":60,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":97,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":105,"org.easymock.tests.UsageCallCountTest.tooManyCalls":313,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":213,"org.easymock.tests.MockingTest.testNiceClassMocking":365,"org.easymock.tests.MockingTest.testClassMocking":363,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":397,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":249,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":427,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":264,"org.easymock.tests.UsageExpectAndReturnTest.object":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":207,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":331,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":316,"org.easymock.tests.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":99,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":87,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":507,"org.easymock.tests.MockClassControlTest.testHashCode":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":385,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":162,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":351,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":518,"org.easymock.tests.UsageVarargTest.varargCharAccepted":330,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":520,"org.easymock.tests2.CaptureTest.testCaptureMultiple":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests.DefaultClassInstantiatorTest.object":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":161,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":506,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":462,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":175,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":48,"org.easymock.tests.CapturesMatcherTest.test":3,"org.easymock.tests.ReplayStateInvalidCallsTest.times":468,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":104,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":187,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":293,"org.easymock.tests2.UsageTest.resumeIfFailure":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":131,"org.easymock.tests2.StubTest.stubWithReturnValue":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":525,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":261,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":144,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":54,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":407,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":145,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":194,"org.easymock.tests.UsageExpectAndThrowTest.object":52,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":67,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":259,"org.easymock.tests2.DelegateToTest.testWrongClass":222,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":466,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":501,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":227,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":282,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":458,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":64,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":479,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests.UsageVerifyTest.twoReturns":122,"org.easymock.tests.UsageVarargTest.varargByteAccepted":334,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":388,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":310,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":276,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":118,"org.easymock.tests2.UsageConstraintsTest.any":251,"org.easymock.tests2.StubTest.stub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":130,"org.easymock.tests.UsageExpectAndThrowTest.longType":45,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":321,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":349,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":487,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":474,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":350,"org.easymock.tests2.NameTest.nameForMocksControl":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":489,"org.easymock.tests2.MockedExceptionTest.testMockedException":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":378,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":126,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":519,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":46,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":228,"org.easymock.tests.MockingTest.testNicePartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":485,"org.easymock.tests2.CaptureTest.testCaptureLast":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":167,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":473,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":218,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":260,"org.easymock.tests.MockingTest.testTwoMocks":364,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":470,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":50,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":346,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":262,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":482,"org.easymock.samples.ExampleTest.removeNonExistingDocument":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":508,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":481,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":356,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":181,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":290,"org.easymock.tests.UsageExpectAndThrowTest.floatType":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":379,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":528,"org.easymock.tests.UsageVerifyTest.twoThrows":121,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":186,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":176,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":114,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":486,"org.easymock.tests.UsageVarargTest.differentLength":454,"org.easymock.tests2.CallbackTest.callback":188,"org.easymock.tests2.UsageConstraintsTest.equals":517,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":117,"org.easymock.tests.UsageCallCountTest.tooFewCalls":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":284,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":480,"org.easymock.tests.UsageThrowableTest.throwCheckedException":111,"org.easymock.tests.MockingTest.testStrictClassMocking":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":96,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":490,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":216,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":198,"org.easymock.tests2.CompareToTest.testGreateOrEqual":28,"org.easymock.tests.ObjectMethodsTest.testHashCode":315,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":472,"org.easymock.tests2.NameTest.nameForNiceMock":413,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":467,"org.easymock.tests2.DependencyTest.testInterfaceMocking":242,"org.easymock.samples.ExampleTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.DelegateToTest.testStubDelegate":221,"org.easymock.tests2.AnswerTest.stubAnswer":197,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":498,"org.easymock.tests.UsageVarargTest.varargLongAccepted":333,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":265,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":514,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageThrowableTest.noUpperLimit":108,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":402,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":10,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":72,"org.easymock.tests2.UsageConstraintsTest.testSame":250,"org.easymock.samples.SupportTest.addDocument":274,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":496,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":457,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":380,"org.easymock.tests.GenericTest.testPackageScope":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":513,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":429,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":455,"org.easymock.tests2.NameTest.nameForMock":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":526,"org.easymock.tests2.UsageStrictMockTest.differentMethods":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":56,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":94,"org.easymock.tests2.MockedExceptionTest.testRealException":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":326,"org.easymock.tests2.NameTest.nameForStrictMock":412,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":403,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":225,"org.easymock.tests2.UsageStrictMockTest.range":240,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":461,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":395,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":384,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":478,"org.easymock.tests2.UsageConstraintsTest.testOr":22,"org.easymock.tests.UsageRangeTest.combination":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":169,"org.easymock.tests.UsageTest.wrongArguments":299,"org.easymock.tests2.MockBuilderTest.testWithConstructor":523,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":381,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":267,"org.easymock.tests.UsageVarargTest.varargShortAccepted":332,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":311,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":475,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":195,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.CaptureTest.testCaptureFromStub":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":318,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":398,"org.easymock.tests.UsageTest.unexpectedCallWithArray":298,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":471,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":309,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":85,"org.easymock.tests2.CaptureTest.testCapture":14,"org.easymock.tests2.UsageConstraintsTest.constraints":19,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.UsageStrictMockTest.testVerify":307,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":286,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":11,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":77,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":205,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":328}}]
