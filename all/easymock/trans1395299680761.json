[{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,3,4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,1,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,2,3,4,5,6,71,7,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,8,91,92,9,93,94,95,96,97,98,99,100,101,10,102,103,104,105,106,11,107,108,109,110,12,111,112,113,114,13,115,14,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,0,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,15,16,17,18,212,213,19,20,214,21,22,23,215,24,25,26,27,216,28,29,30,217,218,219,220,221,222,223,224,31,32,225,33,1,34,35,226,36,227,228,37,38,39,40,229,41,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,42,247,248,43,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,44,45,46,282,47,283,284,285,286,287,288,48,49,50,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,51,385,386,387,388,52,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,53,54,55,56,57,58,59,473,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[60,61,62,63,64,65,67,7,74,75,77,78,81,84,86,87,109,110,12,111,112,114,13,115,14,130,131,134,135,136,137,138,140,141,142,143,144,145,147,148,149,150,151,152,0,153,154,155,156,157,159,160,161,162,164,165,168,169,171,172,173,174,175,178,179,180,181,182,183,184,186,187,188,189,190,191,194,195,196,197,198,199,16,17,19,20,21,24,25,219,31,225,33,1,34,36,37,39,242,243,246,42,43,250,251,252,253,257,258,259,260,261,263,264,266,274,275,278,45,46,47,286,287,48,49,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,350,351,357,358,359,360,361,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,394,395,396,397,398,399,404,406,409,410,411,417,419,420,421,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,456,457,458,460,461,463,464,465,466,467,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[77,110,12,195,196,197,198,37,245,42,250,251,252,253,257,258,259,260,261,284,285,422],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[61,129,130,131,132,133,134,414],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,72,475,476,477,478,479,13,480,216],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[76,82,83,167,267,268,271,272,279,481,405,408,418,420,421],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[72,475,476,477,482,483,480],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[484,181,183,184,185,186,187,188,190,485,191,192,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[444,445,446],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[13,115,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[141,158,245,467],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,72,475,476,477,478,479,13,480,216],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[112,114,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,0,153,154,155,156,157,158,159,160,161,162,165,181,182,183,184,185,186,187,188,189,190,191,192,193,194,36,245,274,275,276,277,278,279,286,287,362,363,405,406,433,435,436,437,438,439,467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[485,486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[75,76,82,83,165,167,168,205,223,235,266,267,268,271,272,279,290,291,364,387,390,405,406,408,409,419,420,421,469,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[60,61,62,63,64,65,66,67,68,69,70,2,3,4,5,6,71,7,72,487,73,74,75,76,77,78,79,80,81,82,83,84,85,488,86,87,88,89,90,8,91,92,9,93,94,95,96,97,98,99,100,101,10,102,103,104,105,106,11,107,108,109,110,12,111,112,113,114,13,115,14,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,0,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,15,16,17,18,212,213,19,20,214,21,489,22,23,490,215,24,25,26,480,27,491,216,28,29,492,30,217,218,219,220,221,493,494,495,222,223,224,31,32,225,33,1,34,35,226,36,227,228,37,38,39,40,229,41,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,42,247,248,43,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,44,45,46,282,47,283,284,285,286,287,288,48,49,50,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,51,385,386,387,388,52,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,496,422,423,424,425,426,427,497,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,53,54,55,56,57,58,59,473,474,498],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[4,9,10,11,13,21,22,23,24,25,26,27,28,29,30,35,38,39,41,50,51,52],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[73,76,77,78,82,83,84,85,117,121,122,125,137,0,163,166,167,168,199,22,28,29,30,32,38,40,265,267,268,271,272,273,279,499,481,400,401,402,403,405,407,408,409,420,421,440,462,500,498],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[391,392,393],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:80","failures":[4,13,21,501,22,23,24,25,26,27,28,29,502,503,30,35,50,51,52],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[16,17,19,20,21,22,23,26,27,28,29,30,32,37,40,41,51,52,53,54,56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[288,48,49,50,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[112,114,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,0,153,154,155,156,157,158,159,160,161,162,165,181,182,183,184,185,186,187,188,189,190,191,192,193,194,36,245,274,275,276,277,278,279,286,287,362,363,405,406,433,435,436,437,438,439,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[135,153,159,504],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[67,75,78,79,80,84,86,112,114,134,135,136,137,140,141,142,143,149,150,151,152,153,154,161,162,167,168,182,183,185,186,188,189,193,194,199,242,243,244,264,265,266,269,270,279,317,318,321,323,324,325,326,328,329,330,331,333,334,335,336,350,365,366,369,371,372,373,374,376,377,378,379,381,382,383,384,396,408,409,419,440,441,442,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[505,506,267,507,508,405],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":303,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":70,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":430,"org.easymock.tests.MockingTest.testPartialClassMocking":45,"org.easymock.tests.MockClassControlTest.testToString":56,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":170,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":365,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":475,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":252,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":52,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":33,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":474,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":384,"org.easymock.tests.UsageTest.moreThanOneArgument":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":359,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":451,"org.easymock.tests.UsageTest.argumentsOrdered":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":435,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":483,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.DependencyTest.testClassMocking":217,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":198,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":386,"org.easymock.tests2.CaptureTest.testAnd":181,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":455,"org.easymock.tests2.DelegateToTest.testDelegate":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":380,"org.easymock.tests.LimitationsTest.mockFinalMethod":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.DependencyTest.testClassMockingSupport":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":290,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":196,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.UsageThrowableTest.throwError":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":108,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":282,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests2.CompareToTest.testLessOrEqual":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":436,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":97,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":53,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":24,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":374,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":250,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":101,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":415,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":151,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":328,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":150,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":190,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":459,"org.easymock.tests.MockClassControlTest.testEquals":473,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":382,"org.easymock.tests2.CaptureTest.testCaptureAll":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests.MockNameTest.defaultName":364,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":360,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests.UsageVarargTest.allKinds":467,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":419,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":355,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":434,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":207,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":497,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":479,"org.easymock.tests2.UsageConstraintsTest.greaterThan":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":428,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":229,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":243,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":502,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":42,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":429,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":129,"org.easymock.tests2.CaptureTest.testCaptureFirst":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":324,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":193,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":311,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":466,"org.easymock.tests.GenericTest.testBridgedEquals":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":401,"org.easymock.tests.UsageExpectAndReturnTest.longType":320,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":503,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":383,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":450,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":402,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":354,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":16,"org.easymock.tests.MockingTest.testNiceClassMocking":285,"org.easymock.tests.MockingTest.testClassMocking":281,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":501,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":395,"org.easymock.tests2.UsageConstraintsTest.testContains":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":12,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":114,"org.easymock.tests.UsageExpectAndReturnTest.object":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":476,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":461,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":471,"org.easymock.tests.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":452,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":72,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":456,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":333,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":414,"org.easymock.tests.MockClassControlTest.testHashCode":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":201,"org.easymock.tests2.EasyMockSupportTest.testVerify":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":99,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":453,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":488,"org.easymock.tests.UsageVarargTest.varargCharAccepted":460,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":496,"org.easymock.tests2.CaptureTest.testCaptureMultiple":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":422,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":391,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":469,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":371,"org.easymock.tests.CapturesMatcherTest.test":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":11,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":57,"org.easymock.tests2.UsageTest.resumeIfFailure":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":432,"org.easymock.tests2.StubTest.stubWithReturnValue":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":480,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":326,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":309,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":69,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":377,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":315,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":256,"org.easymock.tests.UsageExpectAndThrowTest.object":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.tests.UsageStrictMockTest.range":408,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":223,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":376,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":88,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":271,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":449,"org.easymock.tests2.CaptureTest.testCaptureNone":189,"org.easymock.tests.UsageUnorderedTest.message":279,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":500,"org.easymock.tests.UsageVerifyTest.twoReturns":421,"org.easymock.tests.UsageVarargTest.varargByteAccepted":465,"org.easymock.tests2.ThreadingTest.testThreadSafe":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":102,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":399,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":472,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests2.CaptureTest.testCapture_2617107":183,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":313,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests2.StubTest.stub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":368,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":426,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.LimitationsTest.mockNativeMethod":43,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests2.NameTest.nameForMocksControl":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":92,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":113,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":369,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":34,"org.easymock.tests2.CaptureTest.testCaptureLast":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":291,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":44,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":373,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":161,"org.easymock.samples.ExampleTest.removeNonExistingDocument":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":202,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":424,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":244,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":93,"org.easymock.tests.UsageExpectAndThrowTest.floatType":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":178,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":420,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":10,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":248,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":356,"org.easymock.tests2.UsageTest.defaultResetToNice":81,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":332,"org.easymock.tests.UsageVarargTest.differentLength":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests2.CallbackTest.callback":199,"org.easymock.tests2.UsageConstraintsTest.equals":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":227,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":253,"org.easymock.tests.UsageThrowableTest.throwCheckedException":353,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":280,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests.ObjectMethodsTest.testHashCode":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":482,"org.easymock.tests2.NameTest.nameForNiceMock":173,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":477,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":103,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":406,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":491,"org.easymock.tests.UsageVarargTest.varargLongAccepted":464,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":302,"org.easymock.tests.UsageExpectAndReturnTest.floatType":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":209,"org.easymock.tests.UsageThrowableTest.noUpperLimit":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":221,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":186,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testSame":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":318,"org.easymock.samples.SupportTest.addDocument":68,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":212,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":94,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":208,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":283,"org.easymock.tests2.NameTest.nameForMock":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":492,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":379,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":443,"org.easymock.tests2.MockedExceptionTest.testRealException":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":172,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":1,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":222,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":425,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests2.UsageConstraintsTest.lessThan":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":478,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":301,"org.easymock.tests2.CaptureTest.testCaptureRightOne":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":98,"org.easymock.tests2.UsageConstraintsTest.testOr":143,"org.easymock.tests.UsageRangeTest.combination":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":32,"org.easymock.tests.UsageTest.wrongArguments":268,"org.easymock.tests2.MockBuilderTest.testWithConstructor":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":95,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":330,"org.easymock.tests.UsageVarargTest.varargShortAccepted":463,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":427,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":400,"org.easymock.tests2.UsageConstraintsTest.cmpTo":148,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":296,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":331,"org.easymock.tests2.CaptureTest.testCapture":485,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":407,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests.UsageStrictMockTest.testVerify":411,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":71,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":437,"org.easymock.tests.LimitationsTest.abstractClass":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":438,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122}}]
