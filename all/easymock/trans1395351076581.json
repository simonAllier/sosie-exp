[{"position":"org.easymock.internal.MockBuilder:89","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[51,52,53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[56,57,52,58,59],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[60,61,62,63,64],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[23,24,65,25,26,27,66,67,28,29,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,32,33,34,35,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,37,38,195,39,40,196,197,5,198,199,200,201,202,203,204,205,206,207,208,209,61,62,63,210,211,212,213,214,215,216,216,217,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,41,42,232,233,234,235,236,43,44,237,238,239,240,2,241,242,243,244,245,246,247,248,11,249,250,251,12,252,253,254,255,256,257,258,259,260,3,4,261,46,262,263,264,265,47,266,267,268,269,270,271,272,273,274,275,276,277,19,20,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,48,312,49,50,313,57,314,52,315,316,317,318,319,320,53,321,322,323,324,325,54,326,327,58,328,329,330,331,332,59,333,334,55,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[245,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[357],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[65,67,82,83,89,90,91,92,93,94,99,156,163,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,199,203,204,230,235,280,281,282,283,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[29,39,44,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[358,302,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[359,360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[362,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[37,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[216,217,14,366,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[60],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":315,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.UsageTest.argumentsOrdered":44,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":358,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":233,"org.easymock.tests2.StubTest.stubWithReturnValue":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":124,"org.easymock.tests2.SerializationTest.testAllMockedMethod":339,"org.easymock.tests2.DelegateToTest.testReturnException":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":143,"org.easymock.tests.MockingTest.testPartialClassMocking":158,"org.easymock.samples.SupportTest.voteForRemovals":215,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":263,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":173,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":271,"org.easymock.tests.UsageExpectAndThrowTest.object":183,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":330,"org.easymock.tests2.DelegateToTest.testWrongClass":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":80,"org.easymock.tests2.UsageTest.wrongArguments":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":166,"org.easymock.samples.ExampleTest.answerVsDelegate":219,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":45,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":247,"org.easymock.tests2.UsageConstraintsTest.testNull":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests2.CaptureTest.testPrimitive":343,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":192,"org.easymock.tests.UsageTest.moreThanOneArgument":25,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":151,"org.easymock.tests2.CaptureTest.testCaptureNone":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":212,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.UsageVerifyTest.twoReturns":34,"org.easymock.tests.UsageVarargTest.varargByteAccepted":77,"org.easymock.tests2.ThreadingTest.testThreadSafe":277,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":168,"org.easymock.tests.UsageVarargTest.varargIntAccepted":71,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":225,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":31,"org.easymock.tests2.CaptureTest.testCapture_2617107":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":83,"org.easymock.tests2.UsageConstraintsTest.any":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":241,"org.easymock.tests2.StubTest.stub":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":91,"org.easymock.tests.UsageExpectAndThrowTest.longType":176,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":362,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.SerializationTest.testClass":337,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests.LimitationsTest.mockNativeMethod":146,"org.easymock.tests2.AnswerTest.answer":270,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":269,"org.easymock.tests2.CaptureTest.testAnd":340,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":260,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":7,"org.easymock.tests2.NameTest.nameForMocksControl":301,"org.easymock.tests2.MockedExceptionTest.testMockedException":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":87,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.DelegateToTest.testDelegate":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":172,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":177,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":257,"org.easymock.tests2.CaptureTest.testCaptureLast":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":320,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":12,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":111,"org.easymock.tests.MockingTest.testTwoMocks":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":23,"org.easymock.tests2.CaptureTest.testCapture1_2446744":344,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":181,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":334,"org.easymock.tests.UsageThrowableTest.throwError":5,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":20,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":153,"org.easymock.tests.UsageExpectAndThrowTest.floatType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":327,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":273,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":264,"org.easymock.samples.PartialClassMockTest.testGetArea":227,"org.easymock.tests2.CompareToTest.testLessOrEqual":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":206,"org.easymock.samples.ExampleTest.voteAgainstRemoval":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":4,"org.easymock.tests2.UsageTest.niceToStrict":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":174,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":15,"org.easymock.tests2.UsageConstraintsTest.testNotNull":333,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":2,"org.easymock.tests2.MockBuilderTest.testCreateMock":244,"org.easymock.tests2.UsageTest.defaultResetToNice":236,"org.easymock.samples.ExampleTest.voteAgainstRemovals":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":130,"org.easymock.tests.UsageVarargTest.differentLength":74,"org.easymock.tests2.CallbackTest.callback":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":66,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":182,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":114,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":164,"org.easymock.tests.UsageCallCountTest.tooFewCalls":137,"org.easymock.tests.UsageOverloadedMethodTest.overloading":155,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":54,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":126,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":154,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":363,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":325,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":262,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":190,"org.easymock.tests2.CaptureTest.testCaptureAll":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":251,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":11,"org.easymock.tests.MockNameTest.defaultName":36,"org.easymock.tests2.UsageConstraintsTest.testMatches":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":250,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":161,"org.easymock.tests2.CompareToTest.testGreateOrEqual":51,"org.easymock.samples.ExampleTest.voteForRemovals":223,"org.easymock.tests2.NameTest.nameForNiceMock":300,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":279,"org.easymock.tests.UsageVarargTest.allKinds":79,"org.easymock.tests2.DependencyTest.testInterfaceMocking":335,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":32,"org.easymock.samples.BasicClassMockTest.testPrintContent":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":110,"org.easymock.samples.ExampleTest.addDocument":222,"org.easymock.tests2.DelegateToTest.testStubDelegate":304,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests2.AnswerTest.stubAnswer":274,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":261,"org.easymock.tests.UsageVarargTest.varargLongAccepted":76,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.samples.ExampleTest.voteForRemoval":220,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":19,"org.easymock.tests.UsageExpectAndReturnTest.floatType":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":133,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":258,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":328,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":314,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":213,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":345,"org.easymock.tests2.SerializationTest.test":338,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests2.UsageConstraintsTest.testSame":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":116,"org.easymock.samples.SupportTest.addDocument":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":89,"org.easymock.tests2.CaptureTest.testCaptureFirst":353,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":287,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":122,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":352,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":278,"org.easymock.tests2.UsageTest.moreThanOneArgument":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":171,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":245,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":78,"org.easymock.tests.GenericTest.testBridgedEquals":64,"org.easymock.tests2.NameTest.nameForMock":298,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":141,"org.easymock.tests.UsageExpectAndReturnTest.longType":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":191,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":332,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":145,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":119,"org.easymock.tests.UsageCallCountTest.tooManyCalls":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":123,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":248,"org.easymock.tests2.UsageConstraintsTest.testContains":324,"org.easymock.tests2.NameTest.nameForStrictMock":299,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":1,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":282,"org.easymock.tests2.UsageConstraintsTest.testFind":316,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":156,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests.MockTypeTest.fromEasyMockClass":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":355,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests.UsageExpectAndReturnTest.object":125,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":240,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":292,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":73,"org.easymock.tests.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":0,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.CaptureTest.testCaptureRightOne":350,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":169,"org.easymock.tests2.UsageConstraintsTest.testOr":319,"org.easymock.tests.UsageRangeTest.combination":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":131,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":98,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests2.EasyMockSupportTest.testVerify":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":359,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":170,"org.easymock.tests.UsageVarargTest.varargShortAccepted":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":140,"org.easymock.tests2.UsageConstraintsTest.cmpTo":323,"org.easymock.tests.UsageVarargTest.varargCharAccepted":72,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":272,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":112,"org.easymock.tests2.CaptureTest.testCaptureFromStub":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":26,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":129,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":179,"org.easymock.tests.UsageStrictMockTest.testVerify":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":103,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":265,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":108,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":346,"org.easymock.tests2.UsageTest.resumeIfFailure":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":290,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":70}}]
