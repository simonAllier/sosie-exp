[{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[8,9,4,10,11,6,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[0,32,33,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[34,35,36,37],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,1,175,176,177,178,179,180,181,182,183,184,4,185,186,187,188,189,190,191,192,193,193,194,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,34,215,216,217,10,11,2,218,219,220,221,222,223,224,225,226,227,228,35,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,5,246,247,248,249,250,37,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,6,12,13,7,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[268,269,270,271,272,273,274,275,309,276,285,286,289,290,18,19,20,21,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[271,309,285,289],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:81","sourceCode":"return org.easymock.internal.Results.getMainInterval().contains(org.easymock.internal.Results.getCallCount())","type":"CtReturnImpl"},"failures":[45,47,48,53,54,57,58,65,66,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,131,132,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,182,183,184,4,185,186,187,188,189,190,191,192,195,196,197,198,200,202,203,206,207,210,34,215,216,217,10,11,2,218,223,224,226,35,229,235,237,239,240,241,242,243,245,5,246,247,248,249,250,37,251,253,254,255,256,257,259,261,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,6,12,13,7,296,298,299,300,301,302,303,304,305,306,307,308,14,15,17,18,19,20,21,23,24,25,26,27,28,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[46,48,310,58,75,84,85,87,93,94,96,97,98,99,100,101,124,125,127,128,311,312,169,170,171,183,4,219,220,221,222,225,227,228,230,231,233,234,236,260,262,263,271,272,276,277,289,290,6,17],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[313,314,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,0,331,332,333,334,335,336,32,337,43,44,45,46,47,48,338,339,310,340,341,342,343,344,345,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,3,346,8,347,348,64,349,350,351,352,65,66,353,67,354,355,356,357,358,68,359,69,70,71,72,73,74,75,76,77,360,78,79,361,80,81,82,83,84,362,85,86,363,364,87,88,89,90,91,92,365,366,367,93,94,95,96,97,98,99,100,101,368,369,370,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,371,372,373,374,375,376,377,378,379,380,381,382,122,123,124,125,126,127,128,129,130,131,132,383,384,385,386,387,388,389,133,390,391,392,393,394,395,134,33,135,136,396,137,397,398,138,399,139,400,311,312,401,402,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,403,172,173,174,1,175,404,176,405,406,407,408,409,410,177,178,179,180,181,411,182,183,184,4,185,186,187,188,412,189,190,191,192,193,193,194,194,195,196,197,198,199,413,414,415,416,417,200,201,202,418,203,419,420,204,421,205,206,207,208,209,210,211,212,213,214,422,423,424,34,425,426,215,427,428,429,430,431,432,433,434,435,216,436,437,438,439,440,217,441,442,10,443,11,2,218,444,219,220,221,222,445,446,223,224,225,226,227,228,35,229,230,231,232,233,234,235,236,237,238,239,240,241,242,447,448,243,449,36,244,450,245,38,451,452,5,246,247,248,249,250,37,251,252,253,254,255,256,257,258,259,260,261,262,263,264,453,454,455,456,265,266,267,268,269,457,270,271,272,273,274,275,309,276,277,278,279,280,281,282,283,284,285,286,287,458,288,289,290,291,292,459,460,461,462,463,464,465,293,466,467,468,469,470,471,6,472,473,12,13,7,294,295,296,297,474,475,476,477,478,298,479,480,481,482,483,484,299,300,301,302,303,304,305,306,307,308,485,14,15,16,486,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[27],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[56,57,59,60,61,62,63,96,99,100,122,125,170,172,1,182,218,228,35,229,233,234,5,247,248,250,37,251,253,254,258,260,273,285,13,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[93,97,98,101,125,169,171,225,230,231,236,260,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[379,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[331,32,43,45,46,47,48,338,339,310,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,3,346,8,347,348,64,349,352,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,361,80,81,82,83,84,85,86,363,87,88,89,90,91,92,365,366,367,93,94,95,96,97,98,99,100,101,368,369,370,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,372,122,123,124,125,126,127,128,129,130,131,132,389,133,391,392,393,400,311,312,401,402,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,403,172,173,174,1,175,177,178,179,180,181,411,182,183,184,4,185,186,187,188,189,190,191,192,193,193,194,194,195,196,197,198,199,414,200,201,202,203,420,204,205,206,207,208,209,210,211,212,213,214,34,215,216,217,10,11,2,218,219,220,221,222,223,224,225,226,227,228,35,229,230,231,232,233,234,235,236,237,238,239,240,241,242,447,243,244,450,245,38,5,246,247,248,249,250,37,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,309,276,277,278,279,280,281,282,283,284,285,286,287,458,288,289,290,291,292,293,6,472,473,12,13,7,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,485,14,15,16,486,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[56,58,59,60,61,62,63,347,73,93,98,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,170,1,183,218,225,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[325,327,335,336,337,54,56,58,59,60,61,62,63,64,65,66,67,68,85,363,365,366,367,93,94,97,98,101,372,125,127,128,131,132,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,175,411,182,183,184,185,186,188,192,196,414,200,202,203,204,206,207,208,209,210,34,215,216,217,218,223,224,225,226,227,35,230,231,232,235,236,237,238,239,240,241,242,243,450,245,38,246,247,248,249,250,37,251,252,253,254,255,256,260,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,6,13,296,298,299,300,302,303,304,305,306,307,308,15,18,19,21,22,25,26,27,28,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[369,370,392,393],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":269,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.UsageTest.argumentsOrdered":234,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":326,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":195,"org.easymock.tests2.DelegateToTest.testReturnException":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":70,"org.easymock.tests.MockingTest.testPartialClassMocking":65,"org.easymock.tests.MockClassControlTest.testToString":405,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":444,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageTest.wrongArguments":228,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":51,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests2.UsageConstraintsTest.testNull":271,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":240,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":254,"org.easymock.tests2.CaptureTest.testPrimitive":21,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":400,"org.easymock.tests.UsageTest.argumentsOrdered":100,"org.easymock.tests.UsageVarargTest.varargIntAccepted":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":483,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":398,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests2.DependencyTest.testClassMocking":445,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":214,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests2.UsageTest.strictResetToDefault":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":250,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":402,"org.easymock.tests2.DelegateToTest.testDelegate":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests.LimitationsTest.mockFinalMethod":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":92,"org.easymock.tests2.DependencyTest.testClassMockingSupport":446,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":389,"org.easymock.tests2.CaptureTest.testCapture1_2446744":22,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":212,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":33,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":484,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":196,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":135,"org.easymock.tests.MockingTest.testInterfaceMocking":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":431,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests2.UsageTest.niceToStrict":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":200,"org.easymock.tests2.MockBuilderTest.testCreateMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":37,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":49,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":280,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":347,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":151,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":487,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":279,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":360,"org.easymock.tests.MockClassControlTest.testEquals":409,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":213,"org.easymock.tests.MockNameTest.defaultName":394,"org.easymock.tests2.UsageConstraintsTest.testMatches":281,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":180,"org.easymock.samples.ExampleTest.voteForRemovals":188,"org.easymock.tests.UsageVarargTest.allKinds":84,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":91,"org.easymock.samples.BasicClassMockTest.testPrintContent":198,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":62,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":74,"org.easymock.tests2.UsageConstraintsTest.greaterThan":283,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.samples.ExampleTest.voteForRemoval":185,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":447,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":225,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":248,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":69,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":249,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":30,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":209,"org.easymock.tests2.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":333,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":83,"org.easymock.tests.GenericTest.testBridgedEquals":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":339,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":88,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":458,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.UsageCallCountTest.tooManyCalls":310,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":303,"org.easymock.tests.MockingTest.testNiceClassMocking":356,"org.easymock.tests.MockingTest.testClassMocking":351,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":44,"org.easymock.tests2.UsageConstraintsTest.testContains":278,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":270,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":11,"org.easymock.tests.UsageExpectAndReturnTest.object":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":253,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":79,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":311,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":156,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":8,"org.easymock.tests.ResultTest.createThrowResultToString":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":475,"org.easymock.tests.MockClassControlTest.testHashCode":408,"org.easymock.tests2.EasyMockSupportTest.testVerify":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":433,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":3,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":211,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":265,"org.easymock.tests.UsageVarargTest.varargCharAccepted":78,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":374,"org.easymock.tests2.CaptureTest.testCaptureMultiple":42,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":256,"org.easymock.tests.DefaultClassInstantiatorTest.object":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":434,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":474,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":450,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.CapturesMatcherTest.test":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":391,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":217,"org.easymock.tests2.UsageTest.resumeIfFailure":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":72,"org.easymock.tests2.StubTest.stubWithReturnValue":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":288,"org.easymock.tests2.SerializationTest.testAllMockedMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":331,"org.easymock.samples.SupportTest.voteForRemovals":192,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":32,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":472,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":286,"org.easymock.tests2.DelegateToTest.testWrongClass":16,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.tests.UsageStrictMockTest.range":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":455,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":422,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":50,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":367,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":39,"org.easymock.tests.UsageUnorderedTest.message":87,"org.easymock.tests.UsageVerifyTest.twoReturns":171,"org.easymock.tests.UsageVarargTest.varargByteAccepted":82,"org.easymock.tests2.ThreadingTest.testThreadSafe":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":197,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageConstraintsTest.any":276,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":397,"org.easymock.tests2.StubTest.stub":2,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":336,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":137,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests2.SerializationTest.testClass":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":463,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests2.NameTest.nameForMocksControl":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":465,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":426,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":203,"org.easymock.tests.MockingTest.testNicePartialClassMocking":66,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":461,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":308,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":287,"org.easymock.tests.MockingTest.testTwoMocks":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":290,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":41,"org.easymock.samples.ExampleTest.removeNonExistingDocument":412,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":467,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":136,"org.easymock.tests.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":476,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":40,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":208,"org.easymock.tests2.MockBuilderTest.testCreateMockString":205,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":12,"org.easymock.tests.ResultTest.createReturnResultToString":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":460,"org.easymock.tests.UsageVerifyTest.twoThrows":170,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":216,"org.easymock.tests.ResultTest.createDelegateResultToString":313,"org.easymock.samples.ExampleTest.voteAgainstRemoval":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":327,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":365,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":245,"org.easymock.tests.LimitationsTest.privateConstructor":358,"org.easymock.tests2.UsageConstraintsTest.testNotNull":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":232,"org.easymock.samples.ExampleTest.voteAgainstRemovals":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":462,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.UsageConstraintsTest.equals":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":449,"org.easymock.tests.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":174,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":52,"org.easymock.tests.UsageThrowableTest.throwCheckedException":60,"org.easymock.tests.MockingTest.testStrictClassMocking":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":466,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":304,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":138,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":306,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":7,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":210,"org.easymock.tests2.NameTest.nameForNiceMock":221,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.samples.ExampleTest.addDocument":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":15,"org.easymock.tests2.AnswerTest.stubAnswer":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests.UsageVarargTest.varargLongAccepted":81,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":292,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":482,"org.easymock.tests.UsageThrowableTest.noUpperLimit":57,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":284,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":453,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":23,"org.easymock.tests2.SerializationTest.test":300,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":488,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.tests2.UsageConstraintsTest.testSame":272,"org.easymock.samples.SupportTest.addDocument":191,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":428,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":481,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":354,"org.easymock.tests2.NameTest.nameForMock":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":421,"org.easymock.tests2.UsageStrictMockTest.differentMethods":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":163,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":173,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":139,"org.easymock.tests2.NameTest.nameForStrictMock":220,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":417,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":10,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":454,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":414,"org.easymock.tests2.UsageStrictMockTest.range":262,"org.easymock.tests2.UsageConstraintsTest.lessThan":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":478,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":432,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.UsageConstraintsTest.testOr":273,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":238,"org.easymock.tests.UsageTest.wrongArguments":96,"org.easymock.tests2.MockBuilderTest.testWithConstructor":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":429,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.varargShortAccepted":80,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":338,"org.easymock.tests2.UsageConstraintsTest.cmpTo":277,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":134,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":415,"org.easymock.tests.UsageTest.unexpectedCallWithArray":95,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.UsageConstraintsTest.constraints":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":189,"org.easymock.tests.UsageStrictMockTest.testVerify":130,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":190,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":89,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.LimitationsTest.abstractClass":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":251}}]
