[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[7,8,9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,2,59,60,61,62,63,64,10,65,66,67,11,68,69,70,12,13,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,139,140,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,14,197,15,198,199,200,201,202,203,204,205,206,207,208,209,210,211,17,212,18,19,20,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,22,23,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[24,25,26,253,27,28,29,30,254,31,255,256,257,32,258,33,259,260,261,262,34,35,263,264,36,37,38,39,40,41,42,43,44,45,46,47,48,265,49,50,51,52,53,54,266,55,267,268,56,269,270,57,271,58,2,272,273,59,274,275,276,277,278,279,280,281,282,283,284,285,286,287,60,288,61,289,62,290,63,291,64,292,10,65,293,294,295,296,297,298,299,300,66,301,67,11,68,69,302,70,303,12,13,71,304,305,72,73,74,75,306,76,77,78,79,80,81,82,83,84,85,86,87,88,0,89,90,91,92,93,94,95,96,97,98,99,307,100,308,309,310,101,311,312,102,313,314,315,316,317,318,319,320,321,103,322,323,324,325,326,104,327,328,329,330,331,332,333,334,105,106,335,107,108,109,110,111,112,113,114,115,116,117,118,119,120,336,121,337,122,338,339,340,341,342,343,344,345,346,347,348,349,123,124,125,126,350,127,128,129,351,130,131,132,133,352,134,1,135,136,137,138,139,140,353,141,354,142,355,143,356,144,357,145,146,358,359,147,360,148,361,149,150,151,152,362,153,154,155,156,363,157,364,158,365,159,366,367,368,369,370,371,372,373,160,374,161,162,163,375,164,165,166,167,168,169,376,170,377,171,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,172,407,173,408,174,409,175,410,176,411,177,412,178,413,179,414,180,415,181,182,183,416,184,185,186,187,188,417,418,189,190,191,419,192,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,193,194,435,195,196,14,197,436,15,198,437,199,438,439,440,441,442,443,444,445,446,447,200,448,201,449,202,450,203,451,204,452,205,453,206,454,207,455,208,456,209,457,210,7,458,459,211,16,17,460,212,18,19,461,20,213,214,215,216,217,218,219,220,221,462,463,222,464,223,224,225,226,227,465,466,228,467,229,230,468,231,469,470,471,472,473,474,475,476,477,8,478,479,232,480,233,481,234,482,235,483,236,237,238,239,22,23,240,241,9,242,243,244,484,245,246,247,248,249,250,251,252,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[254,256,259,493,263,274,494,495,125,129,351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[60,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[496,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[75,79,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[254,493,497,263,269,139,140],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[277,278,280,283,284,287,339,340,342,345,346,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[440,444],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[30,31,32,258,33,260,34,35,264,265,50,51,52,54,266,55,267,56,57,271,58,2,59,101,102,103,104,123,124,125,126,128,129,132,139,139,140,140,141,147,360,366,169,170,377,171,189,190,191,192,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[498,107,108,109,110,111,112,113,114,115,116,499,117,118,119,120,336,500,439],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[501,502,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":459,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":389,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":353,"org.easymock.tests2.DelegateToTest.testReturnException":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":228,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests.MockClassControlTest.testToString":367,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":1,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":406,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":217,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":480,"org.easymock.samples.ExampleTest.answerVsDelegate":356,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":490,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":421,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":45,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":372,"org.easymock.tests2.CaptureTest.testPrimitive":110,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":181,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":364,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":223,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":296,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests2.DependencyTest.testClassMocking":329,"org.easymock.tests2.AnswerTest.answer":24,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":122,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":487,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests2.UsageTest.strictResetToDefault":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":215,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":227,"org.easymock.tests2.DelegateToTest.testDelegate":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":179,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":483,"org.easymock.tests2.DependencyTest.testClassMockingSupport":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":193,"org.easymock.tests2.CaptureTest.testCapture1_2446744":111,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":182,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":489,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":465,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":365,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":328,"org.easymock.samples.PartialClassMockTest.testGetArea":141,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests.MockingTest.testInterfaceMocking":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":7,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":172,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.MockBuilderTest.testCreateMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":176,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":3,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":479,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":326,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":161,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":116,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.MockClassControlTest.testEquals":371,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":180,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":482,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.MockNameTest.defaultName":457,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":158,"org.easymock.samples.ExampleTest.voteForRemovals":146,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":235,"org.easymock.samples.BasicClassMockTest.testPrintContent":360,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":468,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":283,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":272,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":267,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":169,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":38,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":466,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":39,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":106,"org.easymock.tests2.UsageTest.moreThanOneArgument":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":397,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":153,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":481,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":415,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":9,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":414,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":363,"org.easymock.tests.UsageCallCountTest.tooManyCalls":154,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests.MockingTest.testNiceClassMocking":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":124,"org.easymock.tests.MockingTest.testClassMocking":418,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":361,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":132,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests.MockTypeTest.fromEasyMockClass":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":100,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndReturnTest.object":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":44,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":474,"org.easymock.tests.UsageTest.exactCallCountByLastCall":461,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":455,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":277,"org.easymock.tests.MockClassControlTest.testHashCode":370,"org.easymock.tests2.EasyMockSupportTest.testVerify":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":336,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":305,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.CaptureTest.testCaptureMultiple":498,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.object":439,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":47,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":403,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":472,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":271,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":409,"org.easymock.tests.CapturesMatcherTest.test":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":368,"org.easymock.tests2.UsageTest.resumeIfFailure":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":229,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":395,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":4,"org.easymock.samples.SupportTest.voteForRemovals":355,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":376,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":401,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":25,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":478,"org.easymock.tests.UsageExpectAndThrowTest.object":411,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":241,"org.easymock.samples.ConstructorCalledMockTest.testTax":139,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":299,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":458,"org.easymock.tests2.CaptureTest.testCaptureNone":115,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":322,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":152,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":475,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":147,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":220,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndThrowTest.longType":173,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":443,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.SerializationTest.testClass":265,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.NameTest.nameForMocksControl":138,"org.easymock.tests2.MockedExceptionTest.testMockedException":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":312,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":408,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":307,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":260,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":55,"org.easymock.tests2.CaptureTest.testCaptureLast":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":189,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":447,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":410,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":503,"org.easymock.samples.ExampleTest.removeNonExistingDocument":358,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":427,"org.easymock.tests.UsageStrictMockTest.differentMethods":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":278,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":105,"org.easymock.tests2.MockBuilderTest.testCreateMockString":264,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":159,"org.easymock.tests.UsageExpectAndThrowTest.floatType":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":275,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":130,"org.easymock.tests2.UsageTest.defaultResetToNice":303,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.CallbackTest.callback":29,"org.easymock.tests2.UsageConstraintsTest.equals":306,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":269,"org.easymock.tests.UsageTest.openCallCountByLastCall":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":219,"org.easymock.tests.UsageCallCountTest.tooFewCalls":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.MockingTest.testStrictClassMocking":417,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":127,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":28,"org.easymock.tests.ObjectMethodsTest.testHashCode":473,"org.easymock.tests2.NameTest.nameForNiceMock":137,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":335,"org.easymock.tests2.DependencyTest.testInterfaceMocking":331,"org.easymock.samples.ExampleTest.addDocument":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.stubAnswer":27,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":261,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":456,"org.easymock.tests.UsageExpectAndReturnTest.floatType":448,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":140,"org.easymock.tests.UsageThrowableTest.noUpperLimit":183,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":294,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":112,"org.easymock.tests2.SerializationTest.test":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.samples.SupportTest.addDocument":142,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":350,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":284,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":420,"org.easymock.tests2.NameTest.nameForMock":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":453,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":449,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":413,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":471,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":216,"org.easymock.tests2.MockedExceptionTest.testRealException":133,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":392,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":218,"org.easymock.tests2.NameTest.nameForStrictMock":136,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":298,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":37,"org.easymock.tests2.CaptureTest.testCaptureRightOne":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":52,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":380,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":255,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":151,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":454,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":436,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.samples.ExampleTest.addAndChangeDocument":359,"org.easymock.tests.UsageStrictMockTest.testVerify":199,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":354,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":234,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":42,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
