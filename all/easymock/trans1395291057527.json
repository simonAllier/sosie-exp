[{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[1,2],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[21,22,23,24,25,26,27,28,29,16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[30,31,32,33,34,35],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,35,52,53,54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[58,59,60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[30,31,32,33,34,35],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[16,72,73,74],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,62,89,63,64,71,90],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[5,8,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[93,94,95,96,97,98,99,100,101,102,103,104,3,105,106,107,108,109,110,111,112,113,114,36,37,38,39,115,116,117,118,119,120,121,58,122,75,76,123,77,78,79,80,81,82,83,84,124,125,126,1,127,128,59,129,85,86,130,131,60,87,88,132,133,134,135,136,21,22,137,138,139,140,141,142,143,144,145,146,147,148,4,149,6,7,150,151,8,9,10,28,11,152,29,12,13,153,15,154,155,156,157,158,159,62,89,63,64,65,66,67,68,160,69,71,90,161,162,16,72,73,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,40,41,193,194,195,196,197,42,43,198,199,200,201,202,203,204,205,206,207,208,209,210,44,211,45,46,212,213,214,215,216,217,218,17,219,220,221,222,223,91,92,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,18,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,0,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,19,403,404,405,406,20,407,408,409,410,411,412,413,48,34,49,414,415,50,51,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,35,52,471,53,54,472,473,55,56,57,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[93,94,95,96,98,3,106,109,110,111,112,113,117,58,122,75,76,77,78,79,80,81,82,84,124,125,126,1,127,128,59,129,85,86,130,131,60,87,88,132,135,136,21,143,147,148,6,8,10,11,13,155,156,157,159,62,89,63,64,65,68,160,69,71,161,162,16,72,164,165,166,167,168,169,170,171,172,173,174,175,176,178,184,191,192,40,193,195,196,197,198,199,200,201,202,203,205,206,207,44,45,46,213,214,215,216,217,218,220,91,92,224,232,249,252,262,268,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,302,303,305,310,313,314,315,316,317,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,375,377,378,379,380,381,382,413,48,414,415,416,442,443,446,447,457,458,459,460,461,463,464,466,52,53,54,55,56,57,474,475,476,477,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[10],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[58,59,60,61],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[41,42,43,45,504,34,49,50,51,450,35,53,56,57],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[324,326,340,341,342,474],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[58,59,60,61],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[505],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[103,104,3,107,107,108,108,115,116,117,133,134,21,22,4,6,7,151,8,9,10,11,29,12,13,15,16,73,200,201,202,203,206,207,213,214,216,217,218,17,219,220,221,222,223,91,92,224,225,226,239,243,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,299,300,301,302,303,305,308,309,310,311,18,312,318,319,320,321,353,362,383,384,385,386,387,388,389,390,19,20,424,425,426,427,428,429,431,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[41,42,43,45,504,34,49,50,51,450,35,53,56,57],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[58,59,60,61],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[22,23,24,25,506,507,28],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[115,116,117,118,271,272,273,274,275,276,278,444],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[21,22,137,508,23,24,25,26,506,507,27,28,29,509,510,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97,98,100,101,102,103,104,105,106,109,110,111,112,113,36,115,116,117,118,119,121,58,122,75,76,77,78,79,80,81,82,84,124,125,126,1,127,128,59,129,85,86,130,131,60,87,88,132,135,136,143,146,147,148,155,156,157,159,62,89,63,64,65,66,67,68,160,69,71,90,161,162,72,73,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,184,191,192,40,41,193,194,195,196,42,43,198,199,200,203,205,209,210,44,211,45,46,212,213,214,215,216,217,218,220,232,249,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,310,311,312,313,314,315,316,317,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,389,390,413,48,49,414,415,50,51,416,417,420,432,435,436,437,438,440,441,442,443,444,445,446,450,457,459,460,461,463,464,469,470,35,52,471,53,54,472,473,55,56,57,474,475,476,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,1,59,129,132,164,44,313,314,315,316,317,342,343,344,345,346,352,442,443,446,468,52,474,475,480,484,485,494,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":413,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":490,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":194,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":101,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":272,"org.easymock.tests.MockingTest.testPartialClassMocking":302,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":114,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":256,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":279,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":47,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":23,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":442,"org.easymock.tests2.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":411,"org.easymock.samples.ExampleTest.answerVsDelegate":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":20,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":216,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":446,"org.easymock.tests.UsageTest.moreThanOneArgument":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":298,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":344,"org.easymock.tests.UsageTest.argumentsOrdered":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":347,"org.easymock.tests.UsageVarargTest.varargIntAccepted":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":507,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":317,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.ReplayStateInvalidUsageTest.times":360,"org.easymock.tests2.DependencyTest.testClassMocking":133,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":142,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":404,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":169,"org.easymock.tests2.DelegateToTest.testDelegate":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":294,"org.easymock.tests.LimitationsTest.mockFinalMethod":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests2.DependencyTest.testClassMockingSupport":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":447,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":140,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":354,"org.easymock.tests.UsageThrowableTest.throwError":375,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":479,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":270,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":304,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":355,"org.easymock.tests2.CompareToTest.testLessOrEqual":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":392,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.UsageTest.niceToStrict":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":288,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":170,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":403,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":409,"org.easymock.tests.UsageOverloadedMethodTest.overloading":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":333,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":366,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":249,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":141,"org.easymock.tests2.CaptureTest.testCaptureAll":89,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":345,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":352,"org.easymock.samples.ExampleTest.voteForRemovals":98,"org.easymock.tests.UsageVarargTest.allKinds":374,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":104,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":381,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":186,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":276,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":27,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":458,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":224,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":95,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":17,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":432,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":271,"org.easymock.tests2.CaptureTest.testCaptureFirst":162,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":168,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":329,"org.easymock.tests2.CaptureTest.testCapture2_2446744":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":498,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":373,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":440,"org.easymock.tests.UsageExpectAndReturnTest.longType":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":165,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":297,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":468,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":342,"org.easymock.tests.UsageCallCountTest.tooManyCalls":441,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":380,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":201,"org.easymock.tests.MockingTest.testNiceClassMocking":308,"org.easymock.tests.MockingTest.testClassMocking":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":434,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":5,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":478,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":121,"org.easymock.tests.UsageExpectAndReturnTest.object":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":24,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":368,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":505,"org.easymock.tests.UsageTest.exactCallCountByLastCall":416,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":338,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":463,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":180,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":259,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":349,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":139,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":138,"org.easymock.tests.UsageVarargTest.varargCharAccepted":367,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":423,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":503,"org.easymock.tests2.UsageTest.openCallCountByLastCall":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":424,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":176,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":378,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":179,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":400,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":268,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":274,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":28,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":331,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":496,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":510,"org.easymock.samples.SupportTest.voteForRemovals":106,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":31,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":291,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":502,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":456,"org.easymock.tests.UsageExpectAndThrowTest.object":289,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":475,"org.easymock.samples.ConstructorCalledMockTest.testTax":107,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":244,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":290,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":410,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":393,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.UsageUnorderedTest.message":450,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":372,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":263,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":438,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":103,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":500,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":445,"org.easymock.tests2.UsageConstraintsTest.any":84,"org.easymock.tests2.StubTest.stub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":273,"org.easymock.tests.UsageExpectAndThrowTest.longType":282,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":428,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":358,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":320,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests2.NameTest.nameForMocksControl":39,"org.easymock.tests2.MockedExceptionTest.testMockedException":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":251,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":415,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":283,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":213,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":508,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":448,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":207,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":301,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":287,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":99,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":181,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":426,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":253,"org.easymock.tests.UsageExpectAndThrowTest.floatType":281,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":137,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":262,"org.easymock.samples.ExampleTest.voteAgainstRemoval":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":391,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests.LimitationsTest.privateConstructor":319,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":382,"org.easymock.tests2.UsageTest.defaultResetToNice":197,"org.easymock.samples.ExampleTest.voteAgainstRemovals":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.UsageVarargTest.differentLength":369,"org.easymock.tests2.CallbackTest.callback":178,"org.easymock.tests2.UsageConstraintsTest.equals":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":221,"org.easymock.tests.UsageTest.openCallCountByLastCall":414,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":444,"org.easymock.tests.UsageCallCountTest.tooFewCalls":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":412,"org.easymock.tests.UsageThrowableTest.throwCheckedException":379,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":33,"org.easymock.tests.MockingTest.testStrictClassMocking":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":0,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":148,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.CompareToTest.testGreateOrEqual":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":506,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":38,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":25,"org.easymock.samples.ExampleTest.addDocument":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":264,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":269,"org.easymock.tests2.AnswerTest.stubAnswer":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":152,"org.easymock.tests.UsageVarargTest.varargLongAccepted":371,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.floatType":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":108,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":188,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":129,"org.easymock.tests.UsageThrowableTest.noUpperLimit":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":122,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":239,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests2.SerializationTest.test":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":323,"org.easymock.samples.SupportTest.addDocument":105,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":204,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":254,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":187,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests2.NameTest.nameForMock":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":153,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":293,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":460,"org.easymock.tests2.MockedExceptionTest.testRealException":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":493,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":443,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":362,"org.easymock.tests2.NameTest.nameForStrictMock":37,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":217,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":243,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":427,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":488,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":26,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":258,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests.UsageRangeTest.combination":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":214,"org.easymock.tests.UsageTest.wrongArguments":49,"org.easymock.tests2.MockBuilderTest.testWithConstructor":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":255,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":335,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":429,"org.easymock.tests.UsageVarargTest.varargShortAccepted":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":439,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":483,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":353,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":7,"org.easymock.tests.UsageTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":336,"org.easymock.tests2.CaptureTest.testCapture":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":471,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.UsageStrictMockTest.testVerify":473,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":102,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":315,"org.easymock.tests.LimitationsTest.abstractClass":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":328,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":171,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":364}}]
