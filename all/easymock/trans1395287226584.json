[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:117","failures":[21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[46,47,48,49,50,51,52,53,54,13,14,55,56,57,58,59,15,60,61,62,63,64,65,66,16,18,19,67,68,69],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[70,21,71,72,73,74,75,76,77,78,79,80,22,81,82,83,23,84,24,85,86,29,30,87,88,31,89,32,33,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,34,106,107,25,108,109,26,110,27,111,112,113,114,35,36,37,115,116,117,118,38,39,119,40,120,121,41,122,123,124,125,126,127,128,129,130,131,132,133,134,135,46,136,137,138,139,140,47,48,49,141,142,143,144,145,146,147,148,149,150,50,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,12,194,13,14,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,57,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,42,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,43,44,45,270,271,272,15,60,273,274,61,62,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,63,64,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,28,318,319,320,321,322,65,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,66,360,361,16,17,362,18,19,363,20,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,67,68,69],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[386,387,388,389,390,391,392,393,394,52,54,395,396,397,398,6,399,400],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[85,99,105,401],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[389,0,394,1,2,3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[135,46,47,48,172,173,174,175,12,14,272,60,61,62,63,64,66,16,17,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[191,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[23,24,85,86,29,30,88,31,89,32,33,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,34,106,107,35,36,37,115,116,117,118,38,39,119,40,120,121,41,154,402,12,203,204,42,254,255,269,43,44,45,270,323,324,325,326,327,66,16,17,368],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[404,405],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:274","failures":[21,22,23,24,25,108,109,26,110,27,28],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[386,386,387,387,406,407,388,389,408,409,390,391,410,411,51,412,392,413,414,415,52,53,54,416,7,8,417,9,418,402,10,419,396,11,397,420,421,422,423,424,425,398,190,426,427,428,429,236,430,431,432,433,434,435,436,437,438,439,400,440,441,442,443,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[46,47,48,13,56,15,60,61,62,63,64,65,66,16,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[160,161,163,166,167,170,177,178,180,183,184,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"matched"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[389,81,408,445],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[446],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[389,81,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.MocksControl:190","failures":[22,30,33,90,92,95,101,102,103,105,40,136,137,48,143,145,147,148,50,151,152,53,7,396,192,13,14,57,62,297,63,310,311,313,314,315,316,317,66,360,18,19],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,71,72,74,388,80,389,81,409,390,391,410,85,86,29,30,88,31,89,32,33,90,92,93,94,95,96,97,98,99,100,101,102,103,105,34,106,107,25,110,35,36,115,116,38,39,119,40,121,41,122,123,124,125,126,129,133,134,135,136,138,139,140,49,141,142,143,144,145,146,147,148,149,150,50,151,152,51,392,414,415,53,416,7,155,8,417,9,402,419,396,11,420,421,422,423,156,424,425,157,158,164,398,181,190,12,13,14,197,203,427,428,429,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,57,237,238,239,438,400,241,254,255,269,43,270,271,272,273,274,275,296,297,298,299,64,300,301,302,310,312,313,314,315,316,317,444,322,323,324,325,326,327,337,339,348,349,351,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[135,46,47,48,447,448,449,450,451,452,453,12,13,14,228,229,272,60,61,62,299,63,64,318,321,322,66,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests2.UsageTest.argumentsOrdered":48,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":271,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":338,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":137,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":78,"org.easymock.tests2.DelegateToTest.testReturnException":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":365,"org.easymock.tests.MockingTest.testPartialClassMocking":427,"org.easymock.tests.MockClassControlTest.testToString":432,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":171,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":200,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":443,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":8,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":50,"org.easymock.tests2.CaptureTest.testPrimitive":115,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":270,"org.easymock.tests.UsageTest.moreThanOneArgument":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":295,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":377,"org.easymock.tests.UsageTest.argumentsOrdered":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":370,"org.easymock.tests.UsageVarargTest.varargIntAccepted":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":327,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests.ReplayStateInvalidUsageTest.times":265,"org.easymock.tests2.AnswerTest.answer":25,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":114,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":238,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":228,"org.easymock.tests2.CaptureTest.testCapture1_2446744":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":112,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":259,"org.easymock.tests.UsageThrowableTest.throwError":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":304,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":187,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":379,"org.easymock.samples.PartialClassMockTest.testGetArea":388,"org.easymock.tests.MockingTest.testInterfaceMocking":205,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":260,"org.easymock.tests2.CompareToTest.testLessOrEqual":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests2.UsageTest.niceToStrict":136,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":392,"org.easymock.tests2.MockBuilderTest.testCreateMock":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":285,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":198,"org.easymock.tests.UsageOverloadedMethodTest.overloading":297,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":219,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":296,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":404,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":246,"org.easymock.tests.MockClassControlTest.testEquals":436,"org.easymock.tests2.EasyMockSupportClassTest.testAll":409,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":439,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":113,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":354,"org.easymock.tests.MockNameTest.defaultName":202,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":378,"org.easymock.samples.ExampleTest.voteForRemovals":74,"org.easymock.tests.UsageVarargTest.allKinds":42,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":299,"org.easymock.samples.BasicClassMockTest.testPrintContent":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":355,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":316,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":183,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":369,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":11,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":418,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":441,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":144,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":364,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":127,"org.easymock.tests2.CaptureTest.testCaptureFirst":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":145,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":215,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":346,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":253,"org.easymock.tests.GenericTest.testBridgedEquals":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":68,"org.easymock.tests.UsageExpectAndReturnTest.longType":211,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":352,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":294,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":104,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":69,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":421,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":298,"org.easymock.tests.MockTypeTest.fromEasyMockClass":303,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":360,"org.easymock.tests.UsageExpectAndReturnTest.object":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":402,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":248,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":234,"org.easymock.tests.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":240,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":224,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":319,"org.easymock.tests.MockClassControlTest.testHashCode":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":177,"org.easymock.tests2.EasyMockSupportTest.testVerify":153,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":111,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":55,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":247,"org.easymock.tests2.CaptureTest.testCaptureMultiple":446,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":357,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":232,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":162,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":176,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":307,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":410,"org.easymock.tests2.UsageTest.resumeIfFailure":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":367,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":217,"org.easymock.tests2.SerializationTest.testAllMockedMethod":408,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":344,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":451,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":288,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":445,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":350,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":108,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":242,"org.easymock.tests.UsageExpectAndThrowTest.object":286,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":255,"org.easymock.samples.ConstructorCalledMockTest.testTax":386,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":82,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":287,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":199,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":58,"org.easymock.tests.UsageVerifyTest.twoReturns":64,"org.easymock.tests.UsageVarargTest.varargByteAccepted":252,"org.easymock.tests2.ThreadingTest.testThreadSafe":122,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":385,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":406,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":235,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":453,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests2.StubTest.stub":196,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageExpectAndThrowTest.longType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":263,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":194,"org.easymock.tests2.SerializationTest.testClass":389,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests.LimitationsTest.mockNativeMethod":444,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":400,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":161,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests2.NameTest.nameForMocksControl":175,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":163,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":429,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":280,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":416,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":415,"org.easymock.tests.MockingTest.testNicePartialClassMocking":428,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":159,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":229,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":425,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":103,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":284,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":166,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":178,"org.easymock.tests2.ConstraintsToStringTest.andToString":450,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":430,"org.easymock.tests.UsageExpectAndThrowTest.floatType":278,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":26,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":391,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":396,"org.easymock.tests2.UsageConstraintsTest.testNotNull":34,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":317,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":160,"org.easymock.tests.UsageVarargTest.differentLength":249,"org.easymock.tests2.CallbackTest.callback":22,"org.easymock.tests2.UsageConstraintsTest.equals":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":395,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":44,"org.easymock.tests.UsageCallCountTest.tooFewCalls":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":423,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":201,"org.easymock.tests.UsageThrowableTest.throwCheckedException":314,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":424,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":165,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":27,"org.easymock.tests.ObjectMethodsTest.testHashCode":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.NameTest.nameForNiceMock":174,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests2.AnswerTest.stubAnswer":110,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":393,"org.easymock.tests.UsageVarargTest.varargLongAccepted":251,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndReturnTest.floatType":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":398,"org.easymock.tests2.ConstraintsToStringTest.orToString":447,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":185,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":100,"org.easymock.tests.UsageThrowableTest.noUpperLimit":311,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":117,"org.easymock.tests2.SerializationTest.test":81,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":405,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":209,"org.easymock.samples.SupportTest.addDocument":79,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":262,"org.easymock.tests.GenericTest.testPackageScope":438,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":184,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":206,"org.easymock.tests2.NameTest.nameForMock":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":220,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":290,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":239,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":43,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":268,"org.easymock.tests2.NameTest.nameForStrictMock":173,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":336,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests.UsageRangeTest.combination":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":7,"org.easymock.tests.UsageTest.wrongArguments":60,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":329,"org.easymock.tests.UsageVarargTest.varargShortAccepted":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":67,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":331,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":258,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":412,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":222,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":362,"org.easymock.samples.ExampleTest.addAndChangeDocument":76,"org.easymock.tests2.ConstraintsToStringTest.notToString":448,"org.easymock.tests.UsageStrictMockTest.testVerify":20,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":77,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":353,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":214,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":244}}]
