[{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[23,24],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[25,3,4,26,5,6,27,28,29,30,31,32,33,12,34,35,36,37,38,39,40,41,42,14,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[55,56,57,58,59,60,25,61,62,63,64,65,66,67,68,69,70,71,72,73,2,3,4,74,75,76,26,5,7,27,77,78,79,80,81,82,83,84,85,86,28,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,29,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,12,36,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,38,191,192,193,194,195,39,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,41,13,15,43,214,215,216,217,218,44,219,220,221,45,222,223,46,224,225,226,227,228,229,230,231,232,47,233,234,235,236,237,238,239,240,241,242,243,244,245,48,246,247,248,249,250,251,252,23,253,254,255,256,257,258,259,49,260,261,262,263,264,265,266,22,267,52,268,269,54,270,271,272,273,274,275],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[276,277],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[271,278,279,280,281,282,283,284],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[285,286,287,55,56,57,58,59,25,61,288,289,62,63,64,65,66,67,68,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,2,3,4,74,314,75,76,315,26,316,5,317,6,7,27,77,78,79,80,81,82,83,318,319,85,86,320,321,322,323,324,8,28,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,325,29,112,113,114,115,116,117,326,327,328,118,329,119,120,121,122,123,124,126,127,128,129,330,331,332,30,31,130,131,132,133,33,333,334,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,335,12,34,336,337,338,35,339,340,341,342,343,157,158,159,160,160,161,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,344,177,178,179,180,181,182,345,346,183,184,185,186,187,188,189,190,37,38,191,192,193,194,347,39,40,196,197,198,199,200,201,348,349,202,203,204,205,206,207,208,209,350,41,13,42,14,15,43,214,215,216,217,218,44,219,220,221,45,222,223,46,224,225,226,351,227,228,352,353,229,230,231,232,47,233,234,235,236,237,238,354,239,240,241,242,243,244,245,48,246,247,248,249,355,250,251,252,23,253,356,255,257,258,357,259,49,260,261,262,263,264,265,50,266,22,51,267,52,358,359,268,360,53,269,361,54,270,271,272,362,363,273,274,275],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[55,56,57,58,59,1,25,61,288,289,62,63,64,65,66,67,68,69,70,71,72,73,2,3,4,74,75,76,315,26,316,5,317,6,7,27,77,78,79,80,81,82,83,84,364,365,366,367,368,369,319,85,86,320,321,322,323,324,8,28,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,29,112,113,114,115,116,117,118,329,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,335,12,370,34,336,337,338,35,339,36,154,155,156,157,158,159,160,160,161,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,344,177,178,179,180,181,182,345,346,183,184,185,186,187,188,189,190,37,38,191,192,193,194,195,39,196,197,198,199,200,201,348,349,202,203,204,205,206,207,208,209,210,211,212,213,350,41,13,42,14,15,43,214,215,216,217,218,44,219,220,221,45,222,223,46,224,225,226,227,228,352,229,230,231,232,47,233,234,235,236,237,238,239,240,241,242,243,244,245,48,246,247,248,249,250,251,252,23,253,254,255,256,257,258,357,371,259,49,260,261,262,263,264,372,265,50,266,22,51,267,52,358,359,268,360,53,269,361,54,270,271,272,273,274,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[288,63,64,65,66,67,68,297,326,327,328,329,184,185,186,187,189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[374,375,376,377,378,379,380,285,381,382,286,287,383,384,55,56,57,58,59,0,1,60,25,61,288,289,62,63,64,65,66,67,68,385,386,387,388,389,390,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,69,70,71,72,73,2,3,4,74,314,75,76,315,26,316,5,317,6,7,27,77,78,79,80,81,391,82,83,318,392,393,84,394,395,396,397,398,399,400,364,401,365,366,402,367,403,404,368,405,369,319,85,86,320,321,322,323,324,8,406,407,408,28,409,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,410,110,111,325,29,112,113,114,115,116,117,326,327,328,118,329,119,120,121,122,123,124,125,126,127,128,129,411,330,331,332,412,30,31,413,130,32,414,415,416,131,132,417,133,418,419,420,33,333,334,421,422,423,424,425,426,427,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,335,12,370,34,336,337,338,35,339,36,154,155,156,340,341,342,343,157,158,159,160,161,162,163,164,165,166,167,168,169,428,170,171,172,173,174,175,176,344,177,178,179,180,181,182,345,346,183,184,185,186,187,188,189,190,37,38,191,192,193,429,430,194,431,432,195,347,39,40,433,434,435,196,197,198,199,436,437,438,439,200,201,348,349,202,203,204,205,206,207,208,209,210,211,212,213,350,41,13,42,14,15,43,214,215,216,217,218,44,219,220,221,45,222,223,46,224,225,226,351,227,228,352,353,229,230,231,232,47,440,233,234,235,236,237,238,354,239,240,241,242,243,244,245,48,246,247,248,249,355,250,251,252,23,441,442,443,444,445,253,446,447,448,449,450,451,254,356,452,453,255,256,257,258,454,455,357,371,456,457,458,459,460,259,461,462,463,464,465,466,467,468,469,49,470,471,260,472,473,474,475,476,477,478,479,480,261,481,482,483,484,485,262,486,487,488,489,263,264,265,50,266,22,51,267,52,358,359,268,360,53,269,361,54,490,270,271,491,272,362,363,273,274,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[422,426],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:99","failures":[55,56,57,58,59,25,61,62,2,4,314,75,76,5,6,7,78,79,80,81,82,318,319,86,320,321,322,323,324,28,116,117,118,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,335,12,336,337,339,162,164,166,167,169,172,173,174,176,344,179,180,181,182,346,183,186,189,190,37,38,191,192,193,194,347,39,40,200,201,348,349,202,203,204,205,206,207,208,209,13,14,15,214,215,217,218,44,219,220,221,45,222,223,46,224,225,228,230,231,232,47,233,234,235,236,237,238,239,240,241,242,243,244,245,48,246,247,248,249,250,251,252,23,253,356,255,257,258,357,259,49,260,261,262,263,264,50,266,22,267,358,359,268,269,361,271,274],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[385,388,74,82,83,318,84,28,416,131,132,133,158,159,160,160,161,161,162,186,190,37,191,192,193,429,194,195,347,39,40,203,204,205,206,208,209,214,216,254,492,356,452,255,256,257,258,455,357,493,371,49,260,261,262,271,494,495,496,497],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[173,175,182,232,237],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[442,443,445,447,448,451,457,458,460,462,463,466],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[376,393,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[326,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[385,388,74,391,82,83,318,392,393,84,394,395,396,397,398,399,407,408,28,409,414,415,416,131,132,133,420,421,422,423,424,425,426,427,158,159,160,160,161,161,162,184,185,186,190,37,191,192,193,429,194,431,432,195,347,39,40,433,434,436,498,499,437,203,204,205,206,208,209,214,216,254,356,452,453,255,256,257,258,454,455,357,371,467,468,469,49,470,471,260,472,473,474,475,476,477,478,479,480,261,481,482,483,484,485,262,486,487,488,489,271,491],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[2,6,7,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[375,378,0,1,386,390,2,3,4,316,5,6,7,8,406,12,370,34,338,35,438,13,14,15,253,259,22,51,360,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[214,215,216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[2,4,5,335,336,337,339,13,50,358,359,361,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[500,491,279,280,281,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[375,378,379,385,386,387,388,389,390,394,395,396,406,37,195,40,434,196,197,198,199,204,205,208,209,219,45,223,253,446,257,258,357,371,259,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"name","methodName":"name"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[74,82,83,318,28,416,131,132,133,158,159,160,160,161,161,162,186,190,37,191,192,193,429,194,195,347,39,40,203,204,205,206,208,209,214,216,254,356,452,255,256,257,258,455,357,371,49,260,261,262,271,494],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[47,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[501,214,215,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[375,376,377,380,285,381,382,286,287,383,384,55,56,57,58,59,0,1,25,61,288,289,62,67,316,5,8,115,116,117,118,329,173,174,175,176,344,177,178,179,180,181,182,345,346,183,194,202,13,230,231,232,47,233,234,235,236,237,238,354,239,240,241,242,243,244,245,48,246,247,248,249,355,250,251,252,23,263,264,372,54,270],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests2.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":335,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":300,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":163,"org.easymock.tests2.DelegateToTest.testReturnException":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":64,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":394,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":87,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":279,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":25,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":155,"org.easymock.samples.ExampleTest.answerVsDelegate":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":388,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":419,"org.easymock.tests2.UsageConstraintsTest.testNull":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":191,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests2.CaptureTest.testPrimitive":176,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":62,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":121,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":109,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":55,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":59,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":272,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":213,"org.easymock.tests2.CaptureTest.testAnd":173,"org.easymock.tests2.UsageTest.strictResetToDefault":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":220,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":384,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":276,"org.easymock.tests.LimitationsTest.mockFinalMethod":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":73,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":344,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":211,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":401,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":387,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":487,"org.easymock.samples.PartialClassMockTest.testGetArea":162,"org.easymock.tests.MockingTest.testInterfaceMocking":417,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests2.UsageTest.niceToStrict":267,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":255,"org.easymock.tests2.MockBuilderTest.testCreateMock":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":17,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":36,"org.easymock.tests.UsageOverloadedMethodTest.overloading":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":480,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":145,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":242,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":181,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":410,"org.easymock.tests.MockClassControlTest.testEquals":398,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":494,"org.easymock.tests2.CaptureTest.testCaptureAll":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":212,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":244,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":122,"org.easymock.samples.ExampleTest.voteForRemovals":169,"org.easymock.tests.UsageVarargTest.allKinds":115,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":2,"org.easymock.samples.BasicClassMockTest.testPrintContent":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":72,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":323,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":68,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests2.UsageConstraintsTest.greaterThan":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":79,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":427,"org.easymock.samples.ExampleTest.voteForRemoval":166,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":433,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":429,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":44,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":63,"org.easymock.tests2.CaptureTest.testCaptureFirst":183,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":219,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":361,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":346,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":357,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":114,"org.easymock.tests.GenericTest.testBridgedEquals":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":330,"org.easymock.tests.UsageExpectAndReturnTest.longType":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":69,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":217,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":331,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":322,"org.easymock.tests.MockingTest.testNiceClassMocking":420,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":204,"org.easymock.tests.MockingTest.testClassMocking":415,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":277,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":492,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":125,"org.easymock.tests2.UsageConstraintsTest.testContains":241,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":186,"org.easymock.tests2.UsageConstraintsTest.testFind":233,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockClass":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":270,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":223,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":280,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":286,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":150,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":107,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":30,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.MockClassControlTest.testHashCode":397,"org.easymock.tests2.EasyMockSupportTest.testVerify":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":478,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":210,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":372,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":313,"org.easymock.tests2.UsageTest.openCallCountByLastCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":340,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":375,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":479,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":497,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":396,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":151,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":326,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":395,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":262,"org.easymock.tests2.UsageTest.resumeIfFailure":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":66,"org.easymock.tests2.StubTest.stubWithReturnValue":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":250,"org.easymock.tests2.SerializationTest.testAllMockedMethod":216,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":306,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":312,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":362,"org.easymock.tests.UsageExpectAndThrowTest.object":97,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":248,"org.easymock.tests2.DelegateToTest.testWrongClass":352,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.samples.ConstructorCalledMockTest.testTax":160,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":438,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":467,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":154,"org.easymock.tests2.CaptureTest.testCaptureNone":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":334,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":113,"org.easymock.tests2.ThreadingTest.testThreadSafe":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":481,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":129,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":158,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageConstraintsTest.any":239,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":65,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":425,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.tests2.SerializationTest.testClass":214,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":253,"org.easymock.tests.LimitationsTest.mockNativeMethod":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":153,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":318,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":458,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":43,"org.easymock.tests2.NameTest.nameForMocksControl":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":460,"org.easymock.tests2.MockedExceptionTest.testMockedException":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":471,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":337,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":490,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":258,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":456,"org.easymock.tests2.CaptureTest.testCaptureLast":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":209,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":237,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":249,"org.easymock.tests.MockingTest.testTwoMocks":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":360,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":252,"org.easymock.samples.ExampleTest.removeNonExistingDocument":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ConstraintsToStringTest.andToString":20,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":348,"org.easymock.tests2.MockBuilderTest.testCreateMockString":371,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":472,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":273,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":261,"org.easymock.samples.ExampleTest.voteAgainstRemoval":167,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":408,"org.easymock.tests2.UsageConstraintsTest.testNotNull":251,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":324,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.samples.ExampleTest.voteAgainstRemovals":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":457,"org.easymock.tests.UsageVarargTest.differentLength":325,"org.easymock.tests2.CallbackTest.callback":265,"org.easymock.tests2.UsageConstraintsTest.equals":440,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":431,"org.easymock.tests.UsageTest.openCallCountByLastCall":336,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.UsageCallCountTest.tooFewCalls":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":156,"org.easymock.tests.UsageThrowableTest.throwCheckedException":321,"org.easymock.tests.MockingTest.testStrictClassMocking":414,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":461,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":207,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":275,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":282,"org.easymock.tests2.NameTest.nameForNiceMock":198,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":202,"org.easymock.tests2.DependencyTest.testInterfaceMocking":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":281,"org.easymock.samples.ExampleTest.addDocument":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.DelegateToTest.testStubDelegate":228,"org.easymock.tests2.AnswerTest.stubAnswer":274,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests.UsageVarargTest.varargLongAccepted":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":152,"org.easymock.tests.UsageExpectAndReturnTest.floatType":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":271,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":161,"org.easymock.tests2.ConstraintsToStringTest.orToString":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests.UsageThrowableTest.noUpperLimit":85,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":231,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":436,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":177,"org.easymock.tests2.SerializationTest.test":215,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":135,"org.easymock.tests2.UsageConstraintsTest.testSame":235,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":473,"org.easymock.tests.GenericTest.testPackageScope":82,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":418,"org.easymock.tests2.NameTest.nameForMock":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":146,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":81,"org.easymock.tests2.MockedExceptionTest.testRealException":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":10,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":61,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":369,"org.easymock.tests2.NameTest.nameForStrictMock":197,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":453,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":247,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":356,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":477,"org.easymock.tests2.CaptureTest.testCaptureRightOne":182,"org.easymock.tests2.UsageConstraintsTest.testOr":236,"org.easymock.tests.UsageRangeTest.combination":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":37,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":474,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":291,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":29,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":411,"org.easymock.tests2.UsageConstraintsTest.cmpTo":240,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":363,"org.easymock.tests2.CompareToTest.testLessThan":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":293,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests2.CaptureTest.testCaptureFromStub":345,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":364,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":452,"org.easymock.tests.UsageTest.unexpectedCallWithArray":370,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":148,"org.easymock.tests2.CaptureTest.testCapture":373,"org.easymock.tests2.UsageConstraintsTest.constraints":232,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":317,"org.easymock.samples.ExampleTest.addAndChangeDocument":170,"org.easymock.tests2.ConstraintsToStringTest.notToString":18,"org.easymock.tests.UsageStrictMockTest.testVerify":77,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":70,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":178,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":57,"org.easymock.tests.LimitationsTest.abstractClass":407,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":140,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":58,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":45}}]
