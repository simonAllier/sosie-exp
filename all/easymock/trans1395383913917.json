[{"position":"org.easymock.internal.RecordState:173","failures":[0],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[6],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[1,2],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[20,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,19,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[42,43,6,44,45,46,2,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[49,50,51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[53,54,55,42,56,57,58,59,60,61,62,63,20,64,65,66,67,68,69,70,71,72,73,74,11,75,76,77,78,79,80,81,13,82,83,43,84,85,86,87,88,89,90,49,91,50,92,93,94,95,96,97,98,51,99,100,101,102,103,104,105,106,107,22,108,109,110,111,112,6,44,113,114,115,116,117,118,119,120,121,122,0,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,52,148,149,150,151,152,153,154,155,156,157,41,10,158,159,160,161,162,163,45,46,1,2,23,25,27,28,29,30,31,32,34,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,7,186,187,188,189,190,191,192,193,194,195,8,9,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,47,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[53,54,55,42,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,43,84,87,88,49,91,50,92,93,94,95,96,97,98,51,99,100,101,102,103,104,105,106,107,108,6,44,113,114,115,116,117,122,0,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,52,148,149,150,151,152,153,154,155,156,157,41,10,158,159,160,161,162,163,45,46,1,2,164,165,166,168,169,170,171,173,175,176,177,185,7,186,187,188,189,190,191,192,193,194,195,8,9,196,197,199,201,202,203,204,205,316,317,206,207,208,209,210,211,212,213,214,215,217,218,219,220,318,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,47,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,319,320,266,267,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,321,322,303,304,305,306,307,308,311,312,313,315],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[13,82,83,323],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[325,318],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[61,62,20,34,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[145,326,41,161],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[27,33],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[77,80,81,327,328,329,330,166,185,7,186,201,204,205,331,212,213,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[63,66,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[20,13,22,23,24,25,26,27,28,29,30,31,32,355,33,34,35,36,37],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[79,80,185,203,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":307,"org.easymock.tests2.UsageTest.argumentsOrdered":174,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":169,"org.easymock.tests2.StubTest.stubWithReturnValue":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":63,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":160,"org.easymock.tests2.SerializationTest.testAllMockedMethod":83,"org.easymock.tests2.DelegateToTest.testReturnException":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":299,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":38,"org.easymock.samples.SupportTest.voteForRemovals":54,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":178,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":74,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":293,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":342,"org.easymock.tests.UsageStrictMockTest.range":203,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":183,"org.easymock.samples.ExampleTest.answerVsDelegate":42,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":36,"org.easymock.tests2.UsageConstraintsTest.testNull":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":322,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":29,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":277,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests.UsageTest.moreThanOneArgument":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":296,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":264,"org.easymock.tests.UsageVerifyTest.twoReturns":186,"org.easymock.tests.UsageVarargTest.varargByteAccepted":289,"org.easymock.tests2.ThreadingTest.testThreadSafe":67,"org.easymock.tests.UsageTest.argumentsOrdered":314,"org.easymock.tests.UsageVarargTest.varargIntAccepted":283,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":28,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests2.StubTest.stub":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests.UsageExpectAndThrowTest.longType":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":3,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":78,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":265,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":37,"org.easymock.tests2.AnswerTest.answer":45,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":334,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":109,"org.easymock.tests2.NameTest.nameForMocksControl":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":336,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":248,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":30,"org.easymock.tests.MockingTest.testNicePartialClassMocking":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CompareToTest.testNotComparable":40,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":332,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":158,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":119,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":162,"org.easymock.tests.UsageThrowableTest.throwError":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":338,"org.easymock.tests.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":69,"org.easymock.tests2.ConstraintsToStringTest.andToString":39,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":353,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":298,"org.easymock.tests.UsageExpectAndThrowTest.floatType":246,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":155,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":46,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":245,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests2.UsageConstraintsTest.testNotNull":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":197,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":31,"org.easymock.tests2.UsageTest.defaultResetToNice":172,"org.easymock.samples.ExampleTest.voteAgainstRemovals":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":333,"org.easymock.tests.UsageVarargTest.differentLength":286,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":339,"org.easymock.tests.UsageTest.openCallCountByLastCall":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":213,"org.easymock.tests.UsageOverloadedMethodTest.overloading":279,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":153,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":87,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":4,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":184,"org.easymock.tests.UsageThrowableTest.throwCheckedException":8,"org.easymock.tests.MockClassControlTest.testEquals":321,"org.easymock.tests2.EasyMockSupportClassTest.testAll":177,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":337,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.testMatches":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":88,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":297,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests2.NameTest.nameForNiceMock":329,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":71,"org.easymock.tests.UsageVarargTest.allKinds":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":73,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.samples.BasicClassMockTest.testPrintContent":65,"org.easymock.samples.ExampleTest.addDocument":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":196,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":75,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":17,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests.UsageVarargTest.varargLongAccepted":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":351,"org.easymock.tests.UsageThrowableTest.noUpperLimit":193,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":141,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests2.SerializationTest.test":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.tests2.UsageConstraintsTest.testSame":146,"org.easymock.samples.SupportTest.addDocument":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests.GenericTest.testPackageScope":219,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":70,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":290,"org.easymock.tests.GenericTest.testBridgedEquals":318,"org.easymock.tests2.NameTest.nameForMock":327,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":217,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":33,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageCallCountTest.tooManyCalls":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":306,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":212,"org.easymock.tests2.MockedExceptionTest.testRealException":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":249,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":85,"org.easymock.tests2.NameTest.nameForStrictMock":328,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":24,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":144,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":44,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":340,"org.easymock.tests2.UsageStrictMockTest.range":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":347,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":317,"org.easymock.tests.UsageTest.exactCallCountByLastCall":315,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":266,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":319,"org.easymock.tests2.UsageConstraintsTest.testOr":147,"org.easymock.tests.UsageRangeTest.combination":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests2.EasyMockSupportTest.testVerify":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":47,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests.UsageVarargTest.varargCharAccepted":284,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":76,"org.easymock.tests2.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests2.CaptureTest.testCaptureFromStub":99,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":26,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests2.UsageConstraintsTest.constraints":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":60,"org.easymock.tests.CapturesMatcherTest.test":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131}}]
