[{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[46,47,48,49,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[50,51,51,52,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,0,75,76,77,78,79,80,81,82,83,84,85,86,87,88,1,89,90,91,92,93,94,95,96,97,98,2,99,100,101,4,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,6,117,118,119,120,121,7,122,8,123,124,9,125,126,127,128,129,130,131,10,132,133,11,12,13,134,135,136,14,15,16,17,137,138,18,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,19,156,157,158,20,21,159,160,22,161,162,163,164,165,166,167,168,169,170,171,172,173,23,174,175,24,25,26,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,27,240,241,242,28,243,30,244,245,31,32,33,246,247,248,34,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,35,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,36,37,300,301,302,303,304,39,40,305,306,41,307,42,308,43,44,45,309,310,311,312,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:189","sourceCode":"java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })))","type":"CtAssignmentImpl"},"failures":[314,315],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[316,0,81,87,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[292,311,312,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[77,82,91,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[127,128,129,130,10,135,147,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,28,245,253,254,256,257,258,259,260,261,267,284,285,293,294,295,296,297,298,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:85","failures":[50,51,51,52,52,53,54,55,56,57,58,317,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,0,75,76,77,78,79,80,81,83,84,85,86,87,88,1,89,90,91,92,93,94,95,96,97,98,318,319,320,321,322,2,99,323,100,101,3,4,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,6,117,118,119,120,324,121,325,7,122,8,123,124,9,125,126,127,128,129,130,131,10,132,133,11,12,13,134,135,136,14,15,16,17,137,138,18,326,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,19,156,157,158,20,21,159,160,22,161,162,163,164,165,166,167,168,171,172,173,23,174,175,24,25,26,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,327,328,329,330,331,332,333,334,335,336,337,338,226,227,228,229,230,231,233,234,236,339,27,240,241,242,28,243,29,30,244,245,31,32,33,246,340,341,342,343,344,345,34,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,270,271,272,273,274,35,275,276,277,278,279,280,346,347,348,349,350,351,352,281,282,283,284,285,286,353,354,355,356,287,288,289,290,291,357,358,359,293,294,295,296,297,298,299,36,37,300,360,301,302,303,304,38,39,40,305,306,41,307,42,308,43,44,45,309,310],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[11,14,15,25,361,29,30,31,32,34,36,37,42,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[51,52,66,362,363,364,365,366,367,368,369,370,371,372,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[264],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,75,77,79,80,96,99,100,101,102,103,109,110,112,115,6,119,122,123,124,9,126,131,10,132,133,12,13,134,135,16,17,137,138,18,139,141,142,143,145,146,147,155,19,156,157,158,20,21,160,22,161,162,168,171,172,174,175,24,25,26,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,226,227,228,229,230,231,233,234,28,243,244,245,33,34,252,254,255,256,257,258,259,260,261,263,265,266,267,270,271,272,273,274,275,276,277,278,279,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,36,37,305,306,307,308,43,44,45,309],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[362,365,374,375,376,377,378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"parameterType","throwableClass":"parameterType"}},{"position":"org.easymock.internal.RecordState:262","failures":[127,128,129,130,10,135,147,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,234,28,245,249,250,251,253,254,256,257,258,259,260,261,267,284,285,293,294,295,296,297,298,36],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[25,26,299,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[25,26,184,188,189,191,194,207,211,212,214,217,379,380,381,382,44,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[25,383,36,37,44],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[50,51,51,52,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,0,75,76,77,78,79,80,81,83,84,85,86,87,88,1,89,90,91,92,93,95,96,97,98,318,319,320,321,322,99,323,100,101,4,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,6,117,118,119,120,121,325,122,123,124,9,125,126,127,128,129,130,131,10,132,133,11,12,13,134,135,136,14,15,16,17,137,138,18,326,139,141,142,143,145,146,147,148,149,150,151,152,153,154,155,19,156,157,158,20,21,159,160,22,161,162,163,164,165,166,167,168,171,172,173,23,174,175,24,25,26,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,328,330,331,333,336,338,226,227,228,229,230,236,238,27,240,241,242,28,243,29,30,244,245,31,32,33,246,340,341,342,343,344,34,252,253,254,255,256,257,258,259,260,261,262,263,266,267,270,271,272,273,274,275,276,277,278,279,346,281,282,283,284,285,286,353,354,355,356,287,288,289,290,291,293,294,295,296,297,298,299,36,37,300,360,301,302,303,304,305,306,41,307,42,308,43,44,45,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[362,365,385,374,375,376,377,378,386,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[177,178,179,387],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[66,362,365,366,374,375,376,388,386,177],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[389,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[177,178,179,387],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[50,51,51,52,52,61,62,66,362,322,2,391,392,99,323,100,101,366,3,4,5,116,6,118,119,120,324,121,372,393,325,7,122,8,394,395,127,128,129,396,397,398,399,400,401,148,149,150,151,153,154,402,403,404,164,405,406,165,407,408,409,410,411,412,413,414,415,166,416,417,418,419,420,167,421,422,177,179,423,424,425,223,224,225,426,427,428,246,345,389,429,430,314,390,431,432,262,263,264,433,280,346,347,348,349,350,351,352,434,435,281,436],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[315],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[389,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,14,15,25,339,361,29,30,31,32,34,36,37,42,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:124","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[60,63,437,438,439,440,441,131,442,443,444,445,446,447,448,449,450,451,452,139,453,454,455,456,457,458],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":442,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":13,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":60,"org.easymock.tests2.DelegateToTest.testReturnException":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":294,"org.easymock.tests.MockingTest.testPartialClassMocking":223,"org.easymock.tests.MockClassControlTest.testToString":347,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":165,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":374,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":282,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":355,"org.easymock.samples.ExampleTest.answerVsDelegate":54,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":428,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":22,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":352,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests.UsageTest.moreThanOneArgument":243,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":228,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":287,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":291,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests.ReplayStateInvalidUsageTest.times":335,"org.easymock.tests2.DependencyTest.testClassMocking":396,"org.easymock.tests2.AnswerTest.answer":168,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":325,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests2.DelegateToTest.testDelegate":145,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":344,"org.easymock.tests2.DependencyTest.testClassMockingSupport":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":329,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":230,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":422,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests2.UsageTest.niceToStrict":12,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":46,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":353,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests2.EasyMockSupportClassTest.testAll":164,"org.easymock.tests.MockClassControlTest.testEquals":351,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":342,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":327,"org.easymock.samples.ExampleTest.voteForRemovals":58,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":299,"org.easymock.samples.BasicClassMockTest.testPrintContent":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":260,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":386,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":8,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":324,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":293,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":140,"org.easymock.tests2.CaptureTest.testCaptureFirst":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":114,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.GenericTest.testBridgedEquals":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":39,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":226,"org.easymock.tests.UsageCallCountTest.tooManyCalls":40,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":259,"org.easymock.tests.MockingTest.testNiceClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests.MockingTest.testClassMocking":424,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":360,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":375,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":359,"org.easymock.tests.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":252,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":438,"org.easymock.tests.MockClassControlTest.testHashCode":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":413,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":326,"org.easymock.tests.UsageVarargTest.varargCharAccepted":273,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":162,"org.easymock.tests.DefaultClassInstantiatorTest.object":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":249,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":414,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":348,"org.easymock.tests2.UsageTest.resumeIfFailure":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":296,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":365,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":179,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":371,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":47,"org.easymock.samples.SupportTest.voteForRemovals":65,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":269,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":169,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":51,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":48,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":313,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":416,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":304,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":61,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.StubTest.stub":146,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":202,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":295,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":333,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":24,"org.easymock.tests2.SerializationTest.testClass":177,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.LimitationsTest.mockNativeMethod":281,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests2.NameTest.nameForMocksControl":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests2.MockedExceptionTest.testMockedException":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":406,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":225,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":224,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":385,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":154,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.samples.ExampleTest.removeNonExistingDocument":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":439,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":429,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":9,"org.easymock.tests2.MockBuilderTest.testCreateMockString":5,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":407,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":166,"org.easymock.samples.ExampleTest.voteAgainstRemoval":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests.LimitationsTest.privateConstructor":435,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":261,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.UsageVarargTest.differentLength":35,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":284,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":356,"org.easymock.tests.UsageThrowableTest.throwCheckedException":258,"org.easymock.tests.MockingTest.testStrictClassMocking":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":150,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":173,"org.easymock.tests2.CompareToTest.testGreateOrEqual":316,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":377,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.NameTest.nameForNiceMock":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":376,"org.easymock.samples.ExampleTest.addDocument":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.DelegateToTest.testStubDelegate":142,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":308,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":309,"org.easymock.tests.UsageExpectAndReturnTest.floatType":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":66,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":398,"org.easymock.tests2.SerializationTest.test":178,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":315,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":389,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.samples.SupportTest.addDocument":64,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":408,"org.easymock.tests.GenericTest.testPackageScope":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests2.NameTest.nameForMock":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests2.MockedExceptionTest.testRealException":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":283,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":338,"org.easymock.tests2.NameTest.nameForStrictMock":68,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":401,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":430,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":441,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":412,"org.easymock.tests2.CaptureTest.testCaptureRightOne":112,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":409,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":390,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":38,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":170,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":328,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":391,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":303,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":217,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":59,"org.easymock.tests.UsageStrictMockTest.testVerify":310,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":63,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":289,"org.easymock.tests.LimitationsTest.abstractClass":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":209,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":21,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":271,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":383}}]
