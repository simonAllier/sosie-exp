[{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"name","methodName":"name"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[40,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[61,62,63,64,65,45,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,55,133,134,135,136,137,138,139,140,141,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[143,40,144,145],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[146,147,148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[59,149,150,33,151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[40,152,41,153,154,155,156,157,158,159],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[160,160,161,161,162,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[65,67,165,166,167,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[143,40,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[160,160,161,161,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,64,65,45,46,66,67,201,202,203,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,204,205,206,207,208,84,209,210,4,5,6,211,212,213,85,86,87,88,214,215,216,217,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,218,219,220,221,222,223,224,225,226,227,13,228,229,230,231,232,233,234,235,236,106,107,108,109,110,111,112,113,115,116,117,118,237,119,120,238,19,121,122,123,21,126,239,130,240,132,241,242,243,244,245,246,247,26,55,134,135,248,136,249,250,251,28,252,253],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[256,257,258,259,160,161,260,261,262,263,264,265,266,267,268,170,61,269,270,271,272,273,171,172,173,174,175,274,275,276,277,255,278,279,280,281,176,177,178,179,180,181,282,182,62,283,284,285,183,286,287,63,184,185,186,187,188,189,190,191,192,193,194,195,288,289,196,197,198,199,200,290,291,64,292,293,294,3,65,45,46,47,66,67,48,49,295,201,202,296,297,298,299,68,165,300,301,302,303,304,305,203,306,307,308,0,309,310,311,312,313,314,59,149,315,150,316,317,318,69,70,319,320,71,321,72,73,74,75,322,76,77,78,79,323,80,81,82,83,204,205,206,207,208,84,166,324,325,326,327,328,329,330,331,332,333,334,335,336,209,210,4,5,6,211,212,213,85,86,87,88,214,215,337,338,216,339,217,340,7,341,342,8,9,10,11,12,89,90,343,344,91,345,92,93,94,95,346,96,97,98,99,347,100,101,102,103,348,218,219,349,220,350,351,352,353,221,354,355,356,222,223,224,225,357,358,50,226,359,104,105,360,227,361,362,363,364,13,228,229,14,15,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,164,387,230,388,389,16,390,391,17,231,18,392,393,394,232,395,396,397,398,399,400,401,233,234,235,236,106,107,108,254,402,109,110,111,112,403,404,405,406,407,113,114,115,116,408,117,118,409,410,411,412,60,237,119,120,238,413,414,415,416,417,19,20,418,419,420,421,422,121,122,123,423,424,425,426,427,428,429,21,22,430,431,432,433,434,435,124,125,436,126,127,437,128,129,438,439,239,130,131,440,441,442,443,40,144,145,444,445,240,446,447,132,241,242,243,244,245,448,449,450,451,452,453,246,23,152,24,454,41,247,25,455,26,167,456,55,56,457,133,134,135,248,57,58,136,458,153,154,459,460,461,462,463,249,250,137,464,138,465,27,466,467,468,469,251,470,471,163,472,28,473,474,29,475,30,476,31,32,477,478,479,33,34,151,139,252,140,480,35,36,37,38,481,482,253,483,141,142,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"key"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[511,453,473,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[40,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[409,410],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[29,30,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":254,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":375,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":133,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testReturnException":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.tests.MockClassControlTest.testToString":4,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":480,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":495,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":491,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":89,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":155,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":404,"org.easymock.tests2.UsageTest.wrongArguments":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":214,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":224,"org.easymock.samples.ExampleTest.answerVsDelegate":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":10,"org.easymock.tests2.UsageConstraintsTest.testNull":110,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":392,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":213,"org.easymock.tests2.CaptureTest.testPrimitive":436,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":103,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":198,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":269,"org.easymock.tests.UsageVarargTest.varargIntAccepted":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":208,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":148,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests.ReplayStateInvalidUsageTest.times":192,"org.easymock.tests2.DependencyTest.testClassMocking":440,"org.easymock.tests2.AnswerTest.answer":460,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":244,"org.easymock.tests2.CaptureTest.testAnd":435,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":342,"org.easymock.tests2.UsageTest.strictResetToDefault":456,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":87,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":347,"org.easymock.tests.LimitationsTest.mockFinalMethod":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":175,"org.easymock.tests2.DependencyTest.testClassMockingSupport":441,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":126,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":242,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":186,"org.easymock.tests.UsageThrowableTest.throwError":299,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":9,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":509,"org.easymock.samples.PartialClassMockTest.testGetArea":256,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":187,"org.easymock.tests.MockingTest.testInterfaceMocking":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":496,"org.easymock.tests2.UsageTest.niceToStrict":457,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":453,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":391,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":115,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":76,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":114,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":438,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":328,"org.easymock.tests2.EasyMockSupportClassTest.testAll":488,"org.easymock.tests.MockClassControlTest.testEquals":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":101,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":173,"org.easymock.tests2.CaptureTest.testCaptureAll":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":243,"org.easymock.tests.MockNameTest.defaultName":3,"org.easymock.tests2.UsageConstraintsTest.testMatches":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":199,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests.UsageVarargTest.allKinds":336,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":174,"org.easymock.samples.BasicClassMockTest.testPrintContent":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":303,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":481,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":159,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":29,"org.easymock.samples.ExampleTest.voteForRemoval":265,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":475,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":389,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":444,"org.easymock.tests2.CaptureTest.testCaptureFirst":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":16,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":458,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":73,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":423,"org.easymock.tests2.CaptureTest.testCapture2_2446744":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":335,"org.easymock.tests.GenericTest.testBridgedEquals":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":286,"org.easymock.tests.UsageExpectAndReturnTest.longType":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":171,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":102,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":412,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":146,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":505,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":302,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testNiceClassMocking":318,"org.easymock.tests.MockingTest.testClassMocking":313,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":511,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":182,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":235,"org.easymock.tests2.UsageConstraintsTest.testFind":109,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":64,"org.easymock.tests.MockTypeTest.fromEasyMockClass":8,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests.UsageExpectAndReturnTest.object":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":156,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":330,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":229,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":270,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.MockClassControlTest.testHashCode":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":498,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":147,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":241,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":238,"org.easymock.tests.UsageVarargTest.varargCharAccepted":329,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":305,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":394,"org.easymock.tests.DefaultClassInstantiatorTest.object":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":296,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":473,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":507,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":5,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":7,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":145,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":381,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":53,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":97,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":143,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":164,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":461,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":294,"org.easymock.tests.UsageExpectAndThrowTest.object":346,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":410,"org.easymock.tests2.DelegateToTest.testWrongClass":446,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":160,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":400,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":485,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":42,"org.easymock.tests2.CaptureTest.testCaptureNone":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.UsageVerifyTest.twoReturns":324,"org.easymock.tests.UsageVarargTest.varargByteAccepted":334,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":502,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":14,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":125,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":338,"org.easymock.tests2.UsageConstraintsTest.any":406,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":191,"org.easymock.tests2.StubTest.stub":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":344,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":190,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":483,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":484,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":510,"org.easymock.tests2.NameTest.nameForMocksControl":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":490,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":464,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":465,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":469,"org.easymock.tests2.CompareToTest.testNotComparable":169,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests2.CaptureTest.testCaptureLast":128,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":403,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":411,"org.easymock.tests.MockingTest.testTwoMocks":314,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.samples.ExampleTest.removeNonExistingDocument":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":188,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":307,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":492,"org.easymock.tests.UsageExpectAndThrowTest.floatType":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":459,"org.easymock.tests.UsageVerifyTest.twoThrows":166,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":501,"org.easymock.samples.ExampleTest.voteAgainstRemoval":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":474,"org.easymock.tests.LimitationsTest.privateConstructor":279,"org.easymock.tests2.UsageConstraintsTest.testNotNull":237,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":304,"org.easymock.tests2.UsageTest.defaultResetToNice":248,"org.easymock.samples.ExampleTest.voteAgainstRemovals":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.UsageVarargTest.differentLength":331,"org.easymock.tests2.CallbackTest.callback":140,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":163,"org.easymock.tests.UsageTest.openCallCountByLastCall":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":337,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":477,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":225,"org.easymock.tests.UsageThrowableTest.throwCheckedException":301,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":43,"org.easymock.tests.MockingTest.testStrictClassMocking":312,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":479,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":250,"org.easymock.tests.ObjectMethodsTest.testHashCode":228,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":424,"org.easymock.tests2.NameTest.nameForNiceMock":37,"org.easymock.tests2.DependencyTest.testInterfaceMocking":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":157,"org.easymock.samples.ExampleTest.addDocument":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":508,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.AnswerTest.stubAnswer":249,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":226,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":454,"org.easymock.tests.UsageVarargTest.varargLongAccepted":333,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests.UsageExpectAndReturnTest.floatType":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":153,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.UsageThrowableTest.noUpperLimit":68,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":395,"org.easymock.tests2.SerializationTest.test":144,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":127,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testSame":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":70,"org.easymock.samples.SupportTest.addDocument":261,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":478,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":493,"org.easymock.tests.GenericTest.testPackageScope":275,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":316,"org.easymock.tests2.NameTest.nameForMock":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":455,"org.easymock.tests2.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":472,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":364,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":88,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":378,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":215,"org.easymock.tests2.NameTest.nameForStrictMock":36,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":399,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":409,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":449,"org.easymock.tests2.UsageStrictMockTest.range":141,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":497,"org.easymock.tests2.CaptureTest.testCaptureRightOne":439,"org.easymock.tests2.UsageConstraintsTest.testOr":112,"org.easymock.tests.UsageRangeTest.combination":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests2.MockBuilderTest.testWithConstructor":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":494,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":309,"org.easymock.tests.UsageVarargTest.varargShortAccepted":332,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":183,"org.easymock.tests2.UsageConstraintsTest.cmpTo":407,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":462,"org.easymock.tests2.CompareToTest.testLessThan":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":185,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":450,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":79,"org.easymock.tests2.UsageConstraintsTest.constraints":108,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":359,"org.easymock.samples.ExampleTest.addAndChangeDocument":61,"org.easymock.tests.UsageStrictMockTest.testVerify":227,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":172,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":72,"org.easymock.tests.LimitationsTest.abstractClass":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":17,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":326}}]
