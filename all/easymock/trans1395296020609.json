[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,18,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,196,197,197,198,199,200,201,202,203,204,205,0,206,207,208,1,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,2,334,3,4,5,6,7,8,335,9,11,12,336,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[21,22,23,24,25,26,27,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,72,73,75,82,83,85,86,87,88,89,90,91,92,94,95,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,148,149,150,151,152,153,154,155,156,157,164,165,167,168,171,172,18,173,174,175,176,177,178,179,180,181,182,183,184,185,187,189,190,191,192,194,195,196,196,197,197,201,202,203,204,0,207,208,1,211,212,214,215,217,218,220,222,223,224,225,226,227,228,229,231,233,234,235,236,237,238,239,240,241,242,243,244,245,337,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,316,317,320,322,323,325,326,327,328,329,330,331,332,333,2,334,3,4,5,6,7,8,335,9,11,12,336,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[338,339,340,341,342,343],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[344,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[347,348,73,84,85,86,87,146,147,148,155,349,187,196,196,197,197,198,199,213,350,214,351,215,216,217,218,219,220,352,221,224,225,227,228,229,230,231,232,233,234,235,275,353,354,355,292,294,295,313,314,315,316,327,328,329,330,332,333],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[238,239,243,244,337,255,2,3,11],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[356,292,293,294],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[357,358,359,360,361,362,363,292,295,364],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[356,292,293,294],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[365,281],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[28,366,367,164,368,369],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[244],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:48","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[347,348,73,370,371,84,85,86,87,372,19,146,147,148,20,373,374,155,375,376,377,378,379,380,381,382,383,384,349,385,386,387,388,389,390,187,196,196,197,197,198,199,213,350,214,351,391,215,216,217,218,358,219,220,352,221,224,225,227,228,229,230,231,392,393,232,233,234,235,394,395,273,274,275,353,396,354,355,397,292,294,295,364,398,399,400,401,402,313,403,404,314,405,406,407,408,409,410,411,412,413,315,414,415,416,417,418,316,419,420,327,328,329,330,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[421,286,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[347,348,73,370,371,84,85,86,87,372,19,146,147,148,20,373,374,155,375,376,377,378,379,380,381,382,383,384,349,385,386,387,388,389,390,187,196,196,197,197,198,199,213,350,214,351,391,215,216,217,218,358,219,220,352,221,224,225,227,228,229,230,231,392,393,232,233,234,235,394,395,273,274,275,354,292,294,295,364,398,399,400,401,402,313,403,404,314,405,406,407,408,409,410,411,412,413,315,414,415,416,417,418,316,419,420,327,328,329,330,332,333],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,422,79,82,83,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,103,104,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,149,150,151,152,153,154,155,423,424,425,426,427,428,429,430,431,365,432,433,376,158,159,160,161,434,435,436,162,164,165,166,167,168,169,170,171,172,384,349,385,386,387,388,389,390,181,182,183,184,185,187,189,190,192,437,196,196,197,197,202,203,204,205,0,207,208,1,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,267,268,269,270,271,272,273,274,275,276,279,280,281,282,283,285,287,288,289,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,313,314,315,316,317,318,320,321,322,323,324,326,327,328,329,330,331,332,333,2,4,5,9,11,12,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[238,239,241,243,244,337,255,260,2,3,11],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[251],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[350,215,233,234],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[347,348,148,187,213,350,214,351,215,216,217,218,219,220,352,221,230,354,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[73,370,371,84,372,146,147,20,373,374,155,375,376,377,378,379,380,381,382,384,349,385,386,387,388,389,390,198,199,224,225,227,228,229,231,393,232,235,394,395,274,275,294,398,399,400,313,404,405,406,409,412,414,415,418,327,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":239,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.UsageTest.argumentsOrdered":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":421,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":188,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":150,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":42,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":314,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":359,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageTest.wrongArguments":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":190,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests2.UsageConstraintsTest.testNull":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":305,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":109,"org.easymock.tests.UsageTest.moreThanOneArgument":27,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":61,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":176,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":317,"org.easymock.tests2.DependencyTest.testClassMocking":438,"org.easymock.tests2.AnswerTest.answer":263,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":272,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":180,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":57,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":145,"org.easymock.tests2.DependencyTest.testClassMockingSupport":439,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":270,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":420,"org.easymock.samples.PartialClassMockTest.testGetArea":187,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":409,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":43,"org.easymock.tests2.UsageTest.niceToStrict":0,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":215,"org.easymock.tests2.MockBuilderTest.testCreateMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":416,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":51,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":368,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":14,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":124,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":249,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":313,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":147,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":59,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":271,"org.easymock.tests2.CaptureTest.testCaptureAll":334,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":24,"org.easymock.samples.ExampleTest.voteForRemovals":194,"org.easymock.tests.UsageVarargTest.allKinds":72,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":144,"org.easymock.samples.BasicClassMockTest.testPrintContent":199,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":139,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":154,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":290,"org.easymock.tests2.UsageConstraintsTest.greaterThan":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":235,"org.easymock.samples.ExampleTest.voteForRemoval":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":230,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":299,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":204,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":282,"org.easymock.tests2.CaptureTest.testCapture2_2446744":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":220,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":71,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":80,"org.easymock.tests.UsageExpectAndReturnTest.longType":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":141,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":60,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":352,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":175,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":58,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":81,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":328,"org.easymock.tests.MockingTest.testNiceClassMocking":372,"org.easymock.tests.MockingTest.testClassMocking":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":422,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":275,"org.easymock.tests2.UsageConstraintsTest.testFind":240,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageExpectAndReturnTest.object":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":304,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":360,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":436,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":364,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":129,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":94,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":269,"org.easymock.tests.UsageVarargTest.varargCharAccepted":65,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":319,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":307,"org.easymock.tests.DefaultClassInstantiatorTest.object":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":39,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":49,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":136,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":316,"org.easymock.tests2.UsageTest.resumeIfFailure":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":152,"org.easymock.tests2.StubTest.stubWithReturnValue":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":259,"org.easymock.tests2.SerializationTest.testAllMockedMethod":294,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":156,"org.easymock.samples.SupportTest.voteForRemovals":201,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":369,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":54,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":356,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":157,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":264,"org.easymock.tests.UsageExpectAndThrowTest.object":52,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":256,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":171,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":172,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":196,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":366,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":174,"org.easymock.tests2.CaptureTest.testCaptureNone":335,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":339,"org.easymock.tests.UsageUnorderedTest.message":104,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":70,"org.easymock.tests2.ThreadingTest.testThreadSafe":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":414,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":78,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":198,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":108,"org.easymock.tests2.UsageConstraintsTest.any":246,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":45,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":285,"org.easymock.tests2.SerializationTest.testClass":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":155,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":132,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":340,"org.easymock.tests2.MockedExceptionTest.testMockedException":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":218,"org.easymock.tests.MockingTest.testNicePartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":333,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":257,"org.easymock.tests.MockingTest.testTwoMocks":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":50,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":261,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":343,"org.easymock.samples.ExampleTest.removeNonExistingDocument":437,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":427,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":342,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":378,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":281,"org.easymock.tests2.MockBuilderTest.testCreateMockString":221,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":44,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":266,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":315,"org.easymock.samples.ExampleTest.voteAgainstRemoval":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":234,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":273,"org.easymock.tests2.UsageTest.defaultResetToNice":1,"org.easymock.samples.ExampleTest.voteAgainstRemovals":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":128,"org.easymock.tests.UsageVarargTest.differentLength":67,"org.easymock.tests2.CallbackTest.callback":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":392,"org.easymock.tests.UsageTest.openCallCountByLastCall":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":341,"org.easymock.tests.UsageThrowableTest.throwCheckedException":137,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":367,"org.easymock.tests.MockingTest.testStrictClassMocking":370,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":329,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":331,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":268,"org.easymock.tests.ObjectMethodsTest.testHashCode":435,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":283,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":361,"org.easymock.samples.ExampleTest.addDocument":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests2.AnswerTest.stubAnswer":267,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests.UsageVarargTest.varargLongAccepted":69,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":131,"org.easymock.tests.UsageExpectAndReturnTest.floatType":115,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":295,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":197,"org.easymock.tests.UsageThrowableTest.noUpperLimit":134,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":398,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":293,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":114,"org.easymock.tests2.UsageConstraintsTest.testSame":242,"org.easymock.samples.SupportTest.addDocument":200,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":146,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":179,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":125,"org.easymock.tests2.UsageStrictMockTest.differentMethods":323,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":276,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":320,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":106,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":17,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":399,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":255,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":379,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":214,"org.easymock.tests2.UsageStrictMockTest.range":322,"org.easymock.tests2.UsageConstraintsTest.lessThan":262,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":396,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":410,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":338,"org.easymock.tests2.UsageConstraintsTest.testOr":243,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":225,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":407,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":126,"org.easymock.tests.UsageVarargTest.varargShortAccepted":68,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":79,"org.easymock.tests2.UsageConstraintsTest.cmpTo":247,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":265,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":77,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":127,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.UsageConstraintsTest.constraints":238,"org.easymock.samples.ExampleTest.addAndChangeDocument":195,"org.easymock.tests.UsageStrictMockTest.testVerify":170,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":186,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":142,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":119,"org.easymock.tests.LimitationsTest.abstractClass":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":302}}]
