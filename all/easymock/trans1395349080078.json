[{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return this.org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","args":"args","proxy":"proxy","method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[196,247,248,273,274,275],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[276,0,0,1,1,277,2,3,278,4,5,6,7,279,8,280,9,281,282,10,11,12,283,284,285,286,287,288,13,289,290,291,292,293,294,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,295,296,297,298,299,300,301,302,303,304,29,30,305,31,306,307,308,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,309,53,54,55,56,57,310,311,58,59,60,312,61,313,62,63,64,65,66,67,68,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,69,330,70,71,331,72,332,73,74,75,76,77,78,79,80,81,82,83,84,333,334,335,336,337,85,86,87,338,339,88,340,341,342,89,90,91,343,92,344,93,345,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,346,347,117,348,118,119,120,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,121,373,374,375,376,377,122,378,379,380,381,382,383,384,385,386,387,388,389,390,391,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,392,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,393,394,395,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,396,178,179,180,181,397,182,398,399,400,401,402,403,183,184,185,186,187,188,404,405,406,407,189,190,408,409,410,411,191,412,413,192,414,415,416,417,418,419,420,421,422,193,423,424,425,426,427,194,428,429,430,195,431,432,196,433,197,198,434,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,435,218,219,220,221,222,223,436,224,225,226,227,228,229,230,231,232,233,234,235,437,236,237,238,239,240,241,242,243,244,245,438,439,246,440,441,442,247,248,249,443,444,445,446,447,448,449,250,450,451,452,453,454,455,456,457,458,459,251,252,460,253,254,461,462,255,256,257,258,259,260,261,463,464,465,466,467,262,468,469,470,471,472,473,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[63,66,74,75,76,77,78,79,85,86,87,364,148,269,270,271,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[360],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[10,11,12,16,18,23,67,71,78,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,360,123,125,126,127,128,129,130,148,164,171],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[0,1,3,192,193],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[383,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[62,224],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[475,251,252,460,253,254,461,462,255,257,258,259,260,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[10,11,12,16,18,23,67,71,78,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,360,123,125,126,127,128,129,130,148,164,171],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[320,169,230,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,22,23,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,170,171,172,175,176,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[0,1,182,398,189,476,477,478,434,479,480,481,482,483,440],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[276,0,1,277,2,3,278,4,5,6,7,279,8,280,9,281,282,10,11,12,283,284,285,286,287,288,13,289,290,291,292,293,294,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,295,296,484,485,297,298,299,300,301,302,303,304,29,30,305,31,306,307,308,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,309,53,54,55,56,57,310,311,58,59,60,312,61,313,62,63,64,65,66,67,68,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,69,330,70,71,331,72,332,73,74,75,76,77,78,79,80,81,82,83,84,333,334,335,336,337,85,86,87,338,339,88,340,341,342,89,90,91,343,92,344,93,345,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,346,347,117,348,118,119,120,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,121,373,374,375,376,377,122,378,486,379,380,381,382,383,384,487,385,386,387,388,389,390,391,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,392,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,393,394,395,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,396,178,179,180,181,397,182,398,488,399,400,401,402,403,183,184,185,186,187,188,404,405,406,407,189,190,408,409,410,411,191,412,413,192,414,415,416,417,418,419,420,421,422,193,423,424,425,426,427,194,428,429,430,476,195,431,477,432,196,433,197,478,198,489,434,199,200,480,201,490,202,203,204,205,491,206,207,208,492,209,210,211,212,213,214,215,216,217,435,218,219,220,221,222,223,436,224,225,226,227,228,229,230,231,232,233,234,235,437,236,237,238,239,240,241,242,243,244,245,438,439,246,440,441,442,247,248,249,443,444,445,446,447,448,449,250,450,451,452,453,454,455,456,457,458,459,251,252,460,253,254,461,462,255,256,257,258,259,260,261,463,464,465,466,467,262,468,469,470,471,472,473,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,293,294,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,296,297,298,299,300,301,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,310,58,59,60,61,62,63,64,65,66,67,68,326,327,328,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,333,334,335,336,337,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,351,352,353,121,122,387,390,391,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,397,182,183,184,185,186,187,188,404,405,406,189,190,191,192,193,194,430,195,431,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,436,224,225,226,227,228,229,230,231,232,233,234,235,437,236,237,238,239,240,241,242,243,244,245,246,442,247,248,249,444,250,450,251,252,460,253,254,461,462,255,256,257,258,259,260,261,262,468,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[430,433,438,444,269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[15,16,17,19,21,24,25,27,28,54,56,57,330,331,72,120,166,167,173,174,178,180,181,493,494,495,496,497,498,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[32,33,40,47,119,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[80,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[323,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[500,501,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":217,"org.easymock.tests2.UsageTest.argumentsOrdered":174,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":169,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":278,"org.easymock.tests2.DelegateToTest.testReturnException":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":75,"org.easymock.tests.MockingTest.testPartialClassMocking":29,"org.easymock.tests.MockClassControlTest.testToString":351,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":97,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":162,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":64,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":328,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":299,"org.easymock.tests2.UsageConstraintsTest.testNull":219,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":243,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":158,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.CaptureTest.testPrimitive":253,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":116,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":131,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":495,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests.ReplayStateInvalidUsageTest.times":322,"org.easymock.tests2.DependencyTest.testClassMocking":394,"org.easymock.tests2.AnswerTest.answer":183,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":407,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":485,"org.easymock.tests2.CaptureTest.testAnd":251,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":143,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":135,"org.easymock.tests2.DelegateToTest.testDelegate":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":112,"org.easymock.tests.LimitationsTest.mockFinalMethod":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":337,"org.easymock.tests2.DependencyTest.testClassMockingSupport":395,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":254,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":405,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":316,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":298,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":140,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":429,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":418,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":391,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":106,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":326,"org.easymock.tests.UsageOverloadedMethodTest.overloading":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":94,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":227,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":257,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":286,"org.easymock.tests2.EasyMockSupportClassTest.testAll":191,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":114,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":406,"org.easymock.tests2.CaptureTest.testCaptureAll":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":335,"org.easymock.tests.MockNameTest.defaultName":294,"org.easymock.tests2.UsageConstraintsTest.testMatches":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":314,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":79,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":267,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":249,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":385,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":438,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":151,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":74,"org.easymock.tests2.CaptureTest.testCaptureFirst":261,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":152,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":39,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":212,"org.easymock.tests2.CaptureTest.testCapture2_2446744":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":90,"org.easymock.tests.UsageExpectAndReturnTest.longType":35,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":115,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":437,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":86,"org.easymock.tests.UsageCallCountTest.tooManyCalls":91,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":203,"org.easymock.tests.MockingTest.testNiceClassMocking":308,"org.easymock.tests.MockingTest.testClassMocking":303,"org.easymock.tests2.UsageConstraintsTest.testContains":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":339,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":271,"org.easymock.tests2.UsageConstraintsTest.testFind":218,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests.MockTypeTest.fromEasyMockClass":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":146,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.object":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":157,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":288,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":389,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":132,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":398,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":48,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":420,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":404,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":490,"org.easymock.tests.UsageVarargTest.varargCharAccepted":287,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":160,"org.easymock.tests.DefaultClassInstantiatorTest.object":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":10,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":126,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":247,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":103,"org.easymock.tests.CapturesMatcherTest.test":475,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":49,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":194,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":352,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":77,"org.easymock.tests2.StubTest.stubWithReturnValue":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":408,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":121,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":483,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":343,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":109,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":122,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":184,"org.easymock.tests.UsageExpectAndThrowTest.object":107,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":234,"org.easymock.tests2.DelegateToTest.testWrongClass":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":458,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":409,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":327,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":60,"org.easymock.tests2.CaptureTest.testCaptureNone":256,"org.easymock.tests.UsageUnorderedTest.message":120,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":423,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":342,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":390,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":460,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":499,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageConstraintsTest.any":224,"org.easymock.tests2.StubTest.stub":147,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":87,"org.easymock.tests.UsageExpectAndThrowTest.longType":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.SerializationTest.testClass":189,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":51,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":274,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":397,"org.easymock.tests2.NameTest.nameForMocksControl":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":413,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":101,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":31,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":198,"org.easymock.tests.MockingTest.testNicePartialClassMocking":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":500,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.CaptureTest.testCaptureLast":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":235,"org.easymock.tests.MockingTest.testTwoMocks":304,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":105,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":238,"org.easymock.samples.ExampleTest.removeNonExistingDocument":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":381,"org.easymock.tests2.ConstraintsToStringTest.andToString":496,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":211,"org.easymock.tests2.MockBuilderTest.testCreateMockString":201,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":414,"org.easymock.tests.UsageExpectAndThrowTest.floatType":99,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":488,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":193,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests.LimitationsTest.privateConstructor":347,"org.easymock.tests2.UsageConstraintsTest.testNotNull":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests2.UsageTest.defaultResetToNice":172,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.UsageVarargTest.differentLength":13,"org.easymock.tests2.CallbackTest.callback":163,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":440,"org.easymock.tests.UsageTest.openCallCountByLastCall":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":329,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests.MockingTest.testStrictClassMocking":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":206,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":188,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.NameTest.nameForNiceMock":402,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":213,"org.easymock.tests2.DependencyTest.testInterfaceMocking":161,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.DelegateToTest.testStubDelegate":265,"org.easymock.tests2.AnswerTest.stubAnswer":187,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":489,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndReturnTest.floatType":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":50,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":182,"org.easymock.tests2.ConstraintsToStringTest.orToString":493,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":232,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":456,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":461,"org.easymock.tests2.SerializationTest.test":190,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":474,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":33,"org.easymock.tests2.UsageConstraintsTest.testSame":220,"org.easymock.samples.SupportTest.addDocument":277,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":491,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":415,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests2.NameTest.nameForMock":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":480,"org.easymock.tests2.UsageStrictMockTest.differentMethods":181,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":111,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":144,"org.easymock.tests2.MockedExceptionTest.testRealException":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":482,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":370,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":325,"org.easymock.tests2.NameTest.nameForStrictMock":401,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":457,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":233,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":382,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":195,"org.easymock.tests2.UsageStrictMockTest.range":180,"org.easymock.tests2.UsageConstraintsTest.lessThan":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":419,"org.easymock.tests2.CaptureTest.testCaptureRightOne":258,"org.easymock.tests2.UsageConstraintsTest.testOr":221,"org.easymock.tests.UsageRangeTest.combination":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":241,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests2.MockBuilderTest.testWithConstructor":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":416,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":358,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":384,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":89,"org.easymock.tests2.UsageConstraintsTest.cmpTo":225,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests2.CaptureTest.testCaptureFromStub":259,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":315,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":431,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":341,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.UsageConstraintsTest.constraints":216,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests2.ConstraintsToStringTest.notToString":494,"org.easymock.tests.UsageStrictMockTest.testVerify":311,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":82,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":38,"org.easymock.tests.LimitationsTest.abstractClass":346,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":155,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284}}]
