[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[99,100,101,102],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,87,116,117,118],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,1,119,120,121,122,123,42,124,125,126,127,43,128,129,130,44,131,132,133,134,135,136,137,138,48,139,140,141,142,143,144,49,145,146,147,148,50,149,150,51,53,54,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,60,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,79,80,81,82,83,84,85,86,203],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[204,205,206,207,208,209,210,211,212,213,214,215,2,216,99,100,217,37,38,39,40,3,4,218,219,5,6,7,8,220,221,222,223,9,224,10,11,225,12,13,14,226,227,228,15,16,17,229,230,231,232,233,234,235,236,237,238,239,18,240,241,242,243,244,245,246,42,124,247,125,126,127,128,44,132,136,248,249,250,251,252,48,144,49,149,51,253,254,103,104,255,256,257,258,52,105,106,259,260,53,54,151,261,153,154,156,157,158,262,159,263,264,265,266,267,268,269,270,271,272,273,56,57,58,59,180,181,19,20,21,22,23,274,275,111,24,276,101,102,277,61,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,25,311,312,193,194,195,313,314,201,315,65,316,317,318,319,71,80,320,115,87,116,321,322,117,118,323,324,325,326,327,328,329,330,331,332,333,26,27,28,29,30,203,31,32,334,335,33,34,35,88,89,90,91,92,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:298","sourceCode":"return ","type":"CtReturnImpl"},"failures":[272,335],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[179,183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[147,197],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[366],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[2,100,217,103,24,102,277,308,309,310,367,115,365],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[6,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[22,278,279,286,293,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[19,280,282,296,297,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[128,129,130,44,131,132,133,134,135,136,137,48,140,141,143,144,49,145,147,148,50,149,51,53,54,151,152,153,154,155,156,157,158,159,160,161,368,162,369,163,164,165,166,167,370,168,169,170,171,371,172,173,174,175,176,177,178,372,373],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[204,205,206,207,208,209,210,374,119,375,376,377,120,121,211,378,212,213,215,2,216,99,100,217,41,3,4,218,219,5,6,7,8,220,221,222,223,9,224,10,11,225,12,13,14,226,227,379,228,15,16,17,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,42,124,247,125,126,127,128,132,136,248,249,250,251,252,45,380,381,382,383,384,385,386,387,388,389,47,144,145,147,253,254,103,104,255,256,257,258,105,106,260,151,55,152,153,154,155,390,156,157,158,262,159,162,164,172,178,267,268,269,270,271,273,180,181,275,111,24,276,101,102,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,302,304,308,309,310,25,193,194,195,391,313,314,201,316,317,318,319,392,393,320,115,116,321,322,117,118,323,324,325,326,327,328,329,330,331,332,333,26,27,28,29,30,203,31,32,334,335,33,34,35,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,394,395,396],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[204,206,207,209,119,377,211,378,2,99,100,42,124,247,125,126,127,128,131,132,133,136,251,140,144,145,147,149,152,153,154,155,390,156,157,162,164,172,178,268,19,20,21,22,24,101,102,278,279,280,281,282,283,286,287,289,290,291,293,294,295,296,297,304,305,306,307,193,194,195,201,26,27,28,29,30,31,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[134,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[397,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[204,205,206,207,208,209,210,0,0,1,1,374,119,375,376,377,120,121,211,378,212,213,214,215,2,216,99,100,217,37,38,39,40,41,3,4,218,219,5,6,7,8,220,221,222,223,9,224,10,11,225,12,13,14,226,227,228,15,16,17,229,230,231,232,233,234,235,236,237,238,239,18,240,241,242,243,244,245,42,124,247,125,126,127,128,44,132,136,248,249,250,251,252,45,380,381,382,383,384,385,46,386,387,388,389,47,48,144,49,145,147,149,51,253,254,103,104,255,256,257,258,52,105,106,259,260,53,54,151,261,55,152,153,154,155,390,156,157,158,262,159,162,164,172,178,263,264,265,266,267,268,269,270,271,272,273,56,57,58,59,180,181,19,20,21,22,23,274,275,111,24,276,101,102,277,61,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,25,311,193,194,195,313,314,201,315,65,316,317,318,319,68,70,71,73,76,78,80,320,115,87,116,321,322,117,118,323,324,325,326,327,328,329,330,331,332,333,26,27,28,29,30,203,31,32,334,335,33,34,35,88,89,90,91,92,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[204,205,206,207,208,209,36,210,0,1,374,119,375,376,377,120,121,399,400,211,378,122,401,402,403,123,404,405,212,406,213,214,215,2,216,99,100,217,37,38,39,40,407,408,409,410,411,41,95,412,413,414,415,416,3,4,218,219,417,5,6,7,8,220,221,418,222,223,9,224,10,11,225,12,13,14,226,227,379,228,15,16,17,229,230,231,232,233,234,235,236,237,238,239,18,240,241,242,419,420,243,244,245,246,42,124,247,125,126,127,43,421,128,129,130,44,131,132,133,134,135,136,137,138,248,249,250,251,252,45,380,381,382,383,384,385,46,386,387,388,389,47,48,139,140,141,142,143,144,49,145,146,147,422,148,50,149,150,51,253,254,103,104,255,256,257,258,52,105,106,259,260,53,54,151,261,423,424,425,426,427,55,96,428,429,430,431,432,152,153,154,155,433,390,156,157,434,158,262,159,160,161,368,162,369,163,164,165,166,167,370,168,169,170,171,371,172,173,174,175,176,177,178,372,373,435,263,264,265,266,436,267,268,269,437,270,271,272,273,56,57,58,59,179,180,181,182,183,19,20,21,22,23,438,60,184,185,186,187,188,439,189,274,275,111,24,276,101,102,277,61,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,440,441,442,308,309,310,25,311,443,312,367,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,190,191,192,193,194,468,195,469,470,196,471,472,473,474,391,313,314,475,62,63,64,476,477,197,478,479,480,97,198,481,482,199,200,201,202,315,65,316,317,318,319,66,392,393,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,483,397,484,320,115,87,116,321,322,117,118,323,324,325,326,485,327,328,486,329,330,331,332,333,26,27,28,29,30,487,488,203,31,32,334,335,33,34,35,88,89,90,91,92,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,489,490,491,492,493,494,398,495,394,496,395,396,497,365,93],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[53,54,151,261,273,298,299,300,301,302,303,311,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[99,104,105,106,111,101,309,310,498,87,116,117,118,356,93],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[444,448,449,458,463,67,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":219,"org.easymock.tests2.UsageTest.argumentsOrdered":106,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":320,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":454,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":256,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":375,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":299,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":81,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":336,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":221,"org.easymock.tests2.UsageTest.wrongArguments":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":31,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":58,"org.easymock.samples.ExampleTest.answerVsDelegate":205,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":198,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":470,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":387,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":86,"org.easymock.tests2.CaptureTest.testPrimitive":232,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":33,"org.easymock.tests.UsageTest.moreThanOneArgument":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":355,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":489,"org.easymock.tests.UsageTest.argumentsOrdered":118,"org.easymock.tests.UsageVarargTest.varargIntAccepted":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":26,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests.ReplayStateInvalidUsageTest.times":75,"org.easymock.tests2.DependencyTest.testClassMocking":399,"org.easymock.tests2.AnswerTest.answer":242,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":40,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":479,"org.easymock.tests2.CaptureTest.testAnd":229,"org.easymock.tests2.UsageTest.strictResetToDefault":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":383,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":493,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":351,"org.easymock.tests.LimitationsTest.mockFinalMethod":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":92,"org.easymock.tests2.DependencyTest.testClassMockingSupport":400,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":443,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":38,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":69,"org.easymock.tests.UsageThrowableTest.throwError":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":97,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":474,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":119,"org.easymock.tests.MockingTest.testInterfaceMocking":468,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":472,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":168,"org.easymock.tests2.UsageTest.niceToStrict":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":413,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":345,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":384,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":495,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":56,"org.easymock.tests.UsageOverloadedMethodTest.overloading":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":396,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":10,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":289,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":366,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":238,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":485,"org.easymock.tests2.EasyMockSupportClassTest.testAll":162,"org.easymock.tests.MockClassControlTest.testEquals":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":181,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":90,"org.easymock.tests2.CaptureTest.testCaptureAll":230,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":22,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":67,"org.easymock.samples.ExampleTest.voteForRemovals":209,"org.easymock.tests.UsageVarargTest.allKinds":333,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":308,"org.easymock.samples.BasicClassMockTest.testPrintContent":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":91,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":363,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":439,"org.easymock.tests2.UsageConstraintsTest.greaterThan":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":133,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":189,"org.easymock.samples.ExampleTest.voteForRemoval":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":134,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":249,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":203,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":253,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":381,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":298,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":436,"org.easymock.tests2.CaptureTest.testCaptureFirst":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":382,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":285,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":240,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":462,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":149,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":332,"org.easymock.tests.GenericTest.testBridgedEquals":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":392,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":281,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":354,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":487,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":19,"org.easymock.tests.UsageCallCountTest.tooManyCalls":393,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":362,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testNiceClassMocking":196,"org.easymock.tests.MockingTest.testClassMocking":191,"org.easymock.tests2.UsageConstraintsTest.testContains":9,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":65,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":314,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.object":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":386,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":328,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":64,"org.easymock.tests.UsageTest.exactCallCountByLastCall":323,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":490,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":294,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":424,"org.easymock.tests.MockClassControlTest.testHashCode":84,"org.easymock.tests2.EasyMockSupportTest.testVerify":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":170,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":491,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":246,"org.easymock.tests.UsageVarargTest.varargCharAccepted":327,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":389,"org.easymock.tests.DefaultClassInstantiatorTest.object":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":494,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":62,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":131,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":178,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":82,"org.easymock.tests2.UsageTest.resumeIfFailure":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":301,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":287,"org.easymock.tests2.SerializationTest.testAllMockedMethod":159,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":460,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":109,"org.easymock.samples.SupportTest.voteForRemovals":377,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":348,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":466,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":419,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":442,"org.easymock.tests.UsageExpectAndThrowTest.object":346,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":35,"org.easymock.tests.UsageStrictMockTest.range":101,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":404,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":347,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":160,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":57,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":473,"org.easymock.tests2.CaptureTest.testCaptureNone":237,"org.easymock.tests.UsageUnorderedTest.message":356,"org.easymock.tests.UsageVerifyTest.twoReturns":310,"org.easymock.tests.UsageVarargTest.varargByteAccepted":331,"org.easymock.tests2.ThreadingTest.testThreadSafe":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":173,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":319,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":476,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":335,"org.easymock.tests2.UsageConstraintsTest.any":222,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":74,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":300,"org.easymock.tests.UsageExpectAndThrowTest.longType":339,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":187,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":73,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.SerializationTest.testClass":158,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":409,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.tests2.NameTest.nameForMocksControl":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":411,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":163,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":322,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":406,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":340,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":147,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":407,"org.easymock.tests2.CompareToTest.testCompareEqual":94,"org.easymock.tests2.CaptureTest.testCaptureLast":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":312,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":227,"org.easymock.tests.MockingTest.testTwoMocks":192,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":344,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":16,"org.easymock.samples.ExampleTest.removeNonExistingDocument":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":425,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":185,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":250,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":165,"org.easymock.tests.UsageExpectAndThrowTest.floatType":338,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":138,"org.easymock.tests.UsageVerifyTest.twoThrows":309,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":172,"org.easymock.samples.ExampleTest.voteAgainstRemoval":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":132,"org.easymock.tests.LimitationsTest.privateConstructor":200,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":364,"org.easymock.tests2.UsageTest.defaultResetToNice":52,"org.easymock.samples.ExampleTest.voteAgainstRemovals":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":293,"org.easymock.tests.UsageVarargTest.differentLength":486,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":408,"org.easymock.tests2.CallbackTest.callback":271,"org.easymock.tests2.UsageConstraintsTest.equals":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":129,"org.easymock.tests.UsageTest.openCallCountByLastCall":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":334,"org.easymock.tests.UsageCallCountTest.tooFewCalls":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":59,"org.easymock.tests.UsageThrowableTest.throwCheckedException":361,"org.easymock.tests.MockingTest.testStrictClassMocking":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":390,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":245,"org.easymock.tests.ObjectMethodsTest.testHashCode":63,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":252,"org.easymock.tests2.NameTest.nameForNiceMock":265,"org.easymock.tests2.DependencyTest.testInterfaceMocking":211,"org.easymock.samples.ExampleTest.addDocument":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":174,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":244,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":422,"org.easymock.tests.UsageVarargTest.varargLongAccepted":330,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.floatType":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":136,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":13,"org.easymock.tests.UsageThrowableTest.noUpperLimit":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":122,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":234,"org.easymock.tests2.SerializationTest.test":262,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":184,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":279,"org.easymock.samples.SupportTest.addDocument":376,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":433,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":166,"org.easymock.tests.GenericTest.testPackageScope":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":429,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":469,"org.easymock.tests2.NameTest.nameForMock":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":150,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":350,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":307,"org.easymock.tests2.MockedExceptionTest.testRealException":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":457,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":32,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":78,"org.easymock.tests2.NameTest.nameForStrictMock":264,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":186,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":140,"org.easymock.tests2.UsageStrictMockTest.range":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":169,"org.easymock.tests2.CaptureTest.testCaptureRightOne":239,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":124,"org.easymock.tests.UsageTest.wrongArguments":116,"org.easymock.tests2.MockBuilderTest.testWithConstructor":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":167,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":291,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":188,"org.easymock.tests.UsageVarargTest.varargShortAccepted":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":66,"org.easymock.tests2.UsageConstraintsTest.cmpTo":223,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":258,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":68,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":141,"org.easymock.tests.UsageTest.unexpectedCallWithArray":87,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":292,"org.easymock.tests2.UsageConstraintsTest.constraints":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.samples.ExampleTest.addAndChangeDocument":210,"org.easymock.tests.UsageStrictMockTest.testVerify":61,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":374,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":89,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":28,"org.easymock.tests.LimitationsTest.abstractClass":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":29,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":385,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":325}}]
