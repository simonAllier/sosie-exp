[{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[0,1,2],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,1,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,36,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[214,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[38,39,40,41,42,43,56,57,58,59,60,61,62,70,71,72,216,217,218,219,75,76,77,81,82,83,84,85,86,89,90,92,93,94,96,97,98,99,100,106,107,108,109,110,111,124,125,126,127,128,129,130,131,132,133,137,139,140,141,142,143,144,145,146,147,148,163,190,191,192,193,194,196,197,198,199,200,201,211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[136],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[166,173,177,188,220],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[221,222,223,224,225,226,227,228,125,229,133,230,140,141,144,145,231,190,232,192,193,233,194,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[235,236,51,237,52,238,239,56,240,57,58,241,242,243,244,245,74,246,247,248,249,250,251,252,253,101,102,254,255,256,257,105,125,131,133,258,146,259,147,148,260,152,156,157,160,166,179,261,262,263,264,265,266,267,268,269,270,271,272,202,204,273,205,274,275,276,210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[277,278,279,280,281,221,282,37,283,284,285,286,287,288,38,39,40,41,42,235,236,289,43,44,290,291,45,292,293,294,295,296,297,222,298,299,300,301,223,302,303,304,305,306,307,308,309,310,311,312,46,313,47,314,315,316,317,318,319,320,321,48,49,322,50,323,324,325,326,327,51,237,52,328,53,54,55,238,329,239,56,240,57,58,241,330,59,60,61,62,331,0,332,1,2,224,333,225,226,227,228,334,335,3,4,5,6,7,336,8,9,10,11,12,13,63,337,64,65,66,67,68,69,242,338,339,340,70,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,243,368,369,370,371,372,71,72,373,374,375,73,376,216,217,218,219,377,378,379,380,381,382,383,384,385,386,387,244,388,389,245,74,246,390,391,392,75,76,393,77,394,395,396,397,78,79,80,398,399,400,401,402,403,404,405,406,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,254,255,103,104,256,257,105,407,408,409,410,411,412,413,414,415,416,417,418,419,106,420,107,421,108,109,422,110,423,424,425,111,112,113,426,114,115,427,428,116,117,118,119,429,120,121,430,431,122,432,433,123,124,125,126,127,128,129,434,435,130,436,437,229,131,132,133,438,230,439,440,441,442,443,444,445,446,447,448,449,450,134,135,136,137,138,139,140,141,142,451,143,144,145,452,453,454,455,456,258,457,146,259,147,148,260,149,150,458,151,152,153,154,155,156,157,158,159,160,161,162,459,214,460,163,461,215,462,164,165,166,167,463,168,169,170,171,172,173,464,174,175,176,36,177,178,179,180,181,182,183,184,465,185,186,187,188,466,467,468,469,470,189,471,472,473,474,475,476,231,477,190,232,478,479,191,480,192,481,193,482,483,233,194,484,234,485,486,487,488,489,195,490,491,492,493,494,495,496,497,498,196,499,500,197,501,502,503,504,505,506,507,508,509,198,510,511,512,513,514,199,515,516,517,518,200,201,519,272,202,203,204,273,205,274,206,207,208,275,276,209,210,520,521,522,211,523,524,212,525,526,527,213,528],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[529],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[213,528],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[463],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[130,436,437,229,131,132,133,438,230,444,445,448,139,140,141,142,144,145,149,458,231,190,232,479,191,480,192,193,483,233,194,234,496,497,498,196,499,500,197,501,502,503,504,505,506,507,508,509,198,510,511,512,513,514,199,515,516,211,523],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[277,278,279,280,281,221,282,37,283,284,285,286,287,288,38,39,40,41,42,235,236,289,43,44,290,291,45,292,293,294,295,296,297,222,300,301,223,302,303,304,305,306,307,308,309,310,311,312,46,313,47,314,315,316,317,318,319,320,321,48,49,322,50,323,324,325,326,327,51,237,52,328,53,54,55,238,329,239,56,240,57,58,241,330,59,60,61,62,331,0,332,1,2,224,333,225,226,227,228,334,335,3,4,5,6,7,336,8,9,10,11,12,13,63,337,64,65,66,67,68,69,242,338,339,340,70,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,243,368,369,370,371,372,71,72,373,374,375,73,376,216,217,218,219,377,378,379,380,381,382,383,384,385,386,387,244,388,389,245,74,246,390,391,392,75,76,393,77,394,395,396,78,79,80,399,400,401,402,403,404,406,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,254,255,103,104,256,257,105,407,408,409,410,411,412,413,414,415,416,417,418,419,106,420,107,421,108,109,422,110,423,424,425,111,112,113,426,114,115,427,428,116,117,118,119,429,120,121,430,431,122,432,433,123,124,125,126,127,128,129,434,435,130,436,437,229,131,132,133,438,230,439,440,441,442,443,444,448,449,450,134,135,136,137,138,139,140,141,142,143,144,145,453,454,455,456,258,457,146,259,147,148,260,149,150,458,151,152,153,154,155,156,157,158,159,160,161,162,459,214,460,163,461,215,462,164,165,166,167,463,168,169,170,171,172,173,464,174,175,176,36,177,178,179,180,181,182,183,184,465,185,186,187,188,466,467,468,469,470,189,471,472,473,474,475,476,231,190,232,479,191,480,192,193,483,233,194,234,485,486,487,488,489,195,490,491,492,493,494,495,496,497,498,196,499,500,197,501,502,503,504,505,506,507,508,509,198,510,511,512,513,514,199,515,516,517,518,200,201,272,202,203,204,273,205,274,206,207,208,275,276,209,210,520,521,522,211,523,212,525,526,527,213,528],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[331,75,76,77,418,419,106,430,434,131,132,140,141,144,145],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[531],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[277,278,279,280,281,221,282,37,283,284,285,286,287,288,38,39,40,41,42,235,236,289,43,44,290,291,45,292,293,294,295,296,297,222,298,299,300,301,223,302,303,304,305,306,307,308,309,310,311,312,46,313,47,314,315,316,317,318,319,320,321,48,49,322,50,323,324,325,326,327,51,237,52,328,53,54,55,238,329,239,56,240,57,58,241,330,59,60,61,62,331,0,332,1,2,224,333,225,226,227,228,334,335,3,4,5,6,7,336,8,9,10,11,12,13,63,337,64,65,66,67,68,69,242,338,339,340,70,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,243,368,369,370,371,372,71,72,373,374,375,73,376,216,217,218,219,377,378,379,380,381,382,383,384,385,386,387,244,388,389,245,74,246,390,391,392,75,76,393,77,394,395,396,397,78,79,80,398,399,400,401,402,403,404,405,406,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,254,255,103,104,256,257,105,407,408,409,410,411,412,413,414,415,416,417,418,419,106,420,107,421,108,109,422,110,423,424,425,111,112,113,426,114,115,427,428,116,117,118,119,429,120,121,430,431,122,432,433,123,124,125,126,127,128,129,434,435,130,436,437,229,131,132,133,438,230,439,440,441,442,443,444,445,446,447,448,449,450,134,135,136,137,138,139,140,141,142,451,143,144,145,452,453,454,455,456,258,457,146,259,147,148,260,149,150,458,151,152,153,154,155,156,157,158,159,160,161,162,459,214,460,163,461,215,462,164,165,166,167,463,168,169,170,171,172,173,464,174,175,176,36,177,178,179,180,181,182,183,184,465,185,186,187,188,466,467,468,469,470,189,471,472,473,474,475,476,231,477,190,232,478,479,191,480,192,481,193,482,483,233,194,484,234,485,486,487,488,489,195,490,491,492,493,494,495,496,497,498,196,499,500,197,501,502,503,504,505,506,507,508,509,198,510,511,512,513,514,199,515,516,517,518,200,201,519,272,202,203,204,273,205,274,206,207,208,275,276,209,210,520,521,522,211,523,524,212,525,526,527,213,528],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[286,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[532,533,534,535],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[311],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[112,426,114,115,427,428,116,118,536,119,429,121],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[149,481,483,537,538,211,523,539,540,541,542,543,544,545],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[546,237,52,57,147],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[277,278,279,280,281,221,282,37,283,284,285,286,287,288,38,39,40,41,42,235,236,289,43,44,290,291,45,292,293,294,295,296,297,222,298,299,300,301,223,302,303,304,305,306,307,308,309,310,311,312,46,313,47,314,315,316,317,318,319,320,321,48,49,322,50,323,324,325,326,327,51,237,52,328,53,54,55,238,329,239,56,240,57,58,241,330,59,60,61,62,331,0,332,1,2,224,333,225,226,227,228,334,335,3,4,5,6,7,336,8,9,10,11,12,13,63,337,64,65,66,67,68,69,242,338,339,340,70,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,243,368,369,370,371,372,71,72,373,374,375,73,376,216,217,218,219,377,378,379,380,381,382,383,384,385,386,387,244,388,389,245,74,246,390,391,392,75,76,393,77,394,395,396,397,78,79,80,398,399,400,401,402,403,404,405,406,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,254,255,103,104,256,257,105,407,408,409,410,411,412,413,414,415,416,417,418,419,106,420,107,421,108,109,422,110,423,424,425,111,112,113,426,114,115,427,428,116,117,118,119,429,120,121,430,431,122,432,433,123,124,125,126,127,128,129,434,435,130,436,437,229,131,132,133,438,230,439,440,441,442,443,444,445,446,447,448,449,450,134,135,136,137,138,139,140,141,142,451,143,144,145,452,453,454,455,456,258,457,146,259,147,148,260,149,150,458,151,152,153,154,155,156,157,158,159,160,161,162,459,214,460,163,461,215,462,164,165,166,167,463,168,169,170,171,172,173,464,174,175,176,36,177,178,179,180,181,182,183,184,465,185,186,187,188,466,467,468,469,470,189,471,472,473,474,475,476,231,477,190,232,478,479,191,480,192,481,193,482,483,233,194,484,234,485,486,487,488,489,195,490,491,492,493,494,495,496,497,498,196,499,500,197,501,502,503,504,505,506,507,508,509,198,510,511,512,513,514,199,515,516,517,518,200,201,519,272,202,203,204,273,205,274,206,207,208,275,276,209,210,520,521,522,211,523,524,212,525,526,527,213,528],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[167,168],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[112,426,114,115,427,428,116,118,536,119,429,121],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[481,523,540,541,542,543,544],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[547],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":167,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":313,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":420,"org.easymock.tests2.DelegateToTest.testReturnException":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":293,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":225,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":439,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":504,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":342,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":540,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":43,"org.easymock.tests2.UsageTest.wrongArguments":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":495,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":409,"org.easymock.samples.ExampleTest.answerVsDelegate":421,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":223,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":395,"org.easymock.tests2.UsageConstraintsTest.testNull":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":160,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":114,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageTest.moreThanOneArgument":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":361,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests.UsageTest.argumentsOrdered":257,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":284,"org.easymock.tests.UsageVarargTest.varargIntAccepted":364,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":544,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":446,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":42,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":19,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":265,"org.easymock.tests.ReplayStateInvalidUsageTest.times":10,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":547,"org.easymock.tests2.DependencyTest.testClassMocking":517,"org.easymock.tests2.AnswerTest.answer":212,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":456,"org.easymock.tests2.CaptureTest.testAnd":112,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":299,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":61,"org.easymock.tests2.DelegateToTest.testDelegate":462,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":288,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":357,"org.easymock.tests.LimitationsTest.mockFinalMethod":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":327,"org.easymock.tests2.DependencyTest.testClassMockingSupport":518,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":235,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":454,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":5,"org.easymock.tests.UsageThrowableTest.throwError":63,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":301,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":516,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":22,"org.easymock.samples.PartialClassMockTest.testGetArea":106,"org.easymock.tests.MockingTest.testInterfaceMocking":393,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":505,"org.easymock.tests2.UsageTest.niceToStrict":205,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":191,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":512,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":492,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":351,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":156,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":407,"org.easymock.tests.UsageOverloadedMethodTest.overloading":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":509,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":177,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":365,"org.easymock.tests2.EasyMockSupportClassTest.testAll":196,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":332,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":359,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":530,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":455,"org.easymock.tests2.CaptureTest.testCaptureAll":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":325,"org.easymock.tests.MockNameTest.defaultName":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":178,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":219,"org.easymock.samples.ExampleTest.voteForRemovals":110,"org.easymock.tests.UsageVarargTest.allKinds":372,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":51,"org.easymock.samples.BasicClassMockTest.testPrintContent":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":326,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":68,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":545,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":405,"org.easymock.tests2.UsageConstraintsTest.greaterThan":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":499,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":60,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":133,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":406,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":438,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":434,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":328,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":153,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":292,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":154,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":371,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":385,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":360,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":465,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":414,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":386,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":248,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":513,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":67,"org.easymock.tests.MockingTest.testNiceClassMocking":396,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests.MockingTest.testClassMocking":391,"org.easymock.tests2.UsageConstraintsTest.testContains":176,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":379,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":168,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":55,"org.easymock.tests.MockTypeTest.fromEasyMockClass":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":522,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":541,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":367,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":282,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":285,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":523,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":362,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.MockClassControlTest.testHashCode":228,"org.easymock.tests2.EasyMockSupportTest.testVerify":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":507,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":264,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":453,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":519,"org.easymock.tests.UsageVarargTest.varargCharAccepted":366,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":398,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":50,"org.easymock.tests2.UsageTest.openCallCountByLastCall":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":399,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":411,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":508,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":131,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":21,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":348,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.ReplayStateInvalidCallsTest.times":27,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":373,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":226,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":266,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":295,"org.easymock.tests2.StubTest.stubWithReturnValue":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":481,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.SerializationTest.testAllMockedMethod":458,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":318,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":538,"org.easymock.samples.SupportTest.voteForRemovals":111,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":269,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":354,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":525,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":283,"org.easymock.tests.UsageExpectAndThrowTest.object":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":183,"org.easymock.tests2.DelegateToTest.testWrongClass":461,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":25,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":72,"org.easymock.samples.ConstructorCalledMockTest.testTax":418,"org.easymock.tests.UsageStrictMockTest.range":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":449,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":353,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":496,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":12,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":408,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":247,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":17,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":80,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":533,"org.easymock.tests.UsageUnorderedTest.message":242,"org.easymock.tests.UsageVerifyTest.twoReturns":52,"org.easymock.tests.UsageVarargTest.varargByteAccepted":370,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":510,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":383,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":416,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":174,"org.easymock.tests2.StubTest.stub":433,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":9,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":294,"org.easymock.tests.UsageExpectAndThrowTest.longType":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":403,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":8,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.SerializationTest.testClass":149,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":1,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":487,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":33,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.NameTest.nameForMocksControl":443,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":489,"org.easymock.tests2.MockedExceptionTest.testMockedException":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":500,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":521,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":346,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":193,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":539,"org.easymock.tests2.CompareToTest.testCompareEqual":529,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":485,"org.easymock.tests2.CaptureTest.testCaptureLast":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":32,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":184,"org.easymock.tests.MockingTest.testTwoMocks":392,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":29,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":350,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":535,"org.easymock.samples.ExampleTest.removeNonExistingDocument":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":491,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":401,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests2.ConstraintsToStringTest.andToString":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":234,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":501,"org.easymock.tests.UsageExpectAndThrowTest.floatType":344,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":498,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":527,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":524,"org.easymock.tests.UsageVerifyTest.twoThrows":237,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":198,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":132,"org.easymock.tests.LimitationsTest.privateConstructor":340,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":430,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":69,"org.easymock.tests2.UsageTest.defaultResetToNice":208,"org.easymock.samples.ExampleTest.voteAgainstRemovals":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":314,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":486,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.CallbackTest.callback":272,"org.easymock.tests2.UsageConstraintsTest.equals":463,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":436,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":250,"org.easymock.tests.UsageTest.openCallCountByLastCall":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":410,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":534,"org.easymock.tests.UsageThrowableTest.throwCheckedException":66,"org.easymock.tests.MockingTest.testStrictClassMocking":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":490,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":11,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":528,"org.easymock.tests2.CompareToTest.testGreateOrEqual":220,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":543,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":531,"org.easymock.tests2.NameTest.nameForNiceMock":442,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":138,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":31,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":26,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":542,"org.easymock.samples.ExampleTest.addDocument":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":515,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":482,"org.easymock.tests.UsageVarargTest.varargLongAccepted":369,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":211,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":419,"org.easymock.tests2.ConstraintsToStringTest.orToString":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":181,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":444,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":427,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":400,"org.easymock.tests2.UsageConstraintsTest.testSame":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.samples.SupportTest.addDocument":425,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":451,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":16,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":502,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":394,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":14,"org.easymock.tests2.NameTest.nameForMock":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":484,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":356,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":62,"org.easymock.tests2.MockedExceptionTest.testRealException":432,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":537,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":13,"org.easymock.tests2.NameTest.nameForStrictMock":441,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":479,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":520,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":128,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":448,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":402,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":182,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":190,"org.easymock.tests2.UsageStrictMockTest.range":147,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":506,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":532,"org.easymock.tests2.UsageConstraintsTest.testOr":171,"org.easymock.tests.UsageRangeTest.combination":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":125,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests2.MockBuilderTest.testWithConstructor":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":503,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":404,"org.easymock.tests.UsageVarargTest.varargShortAccepted":368,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":384,"org.easymock.tests2.UsageConstraintsTest.cmpTo":175,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":34,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":526,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.CaptureTest.testCaptureFromStub":429,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":4,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":232,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":30,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":239,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests2.CaptureTest.testCapture":536,"org.easymock.tests2.UsageConstraintsTest.constraints":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.samples.ExampleTest.addAndChangeDocument":424,"org.easymock.tests2.ConstraintsToStringTest.notToString":263,"org.easymock.tests.UsageStrictMockTest.testVerify":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":415,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":329,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":324,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.LimitationsTest.abstractClass":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":41,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":546,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":157,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":363}}]
