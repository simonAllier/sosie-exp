[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,11,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,0,314,1,315,316,317,318,319,320,321,2,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,3,4,478,479,5,480,6,7,481,8,482,483,484,485,486,487,488,489,490,9,491,492,493,494,10,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[12,13,14,15,16,18,20,22,24,24,25,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,94,102,103,104,105,106,107,108,109,110,111,112,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,179,180,181,183,203,209,213,220,221,222,223,224,225,226,227,246,247,248,249,250,251,252,253,265,288,289,292,294,295,298,11,299,300,301,302,303,305,308,309,310,311,0,314,1,315,316,317,318,319,320,321,2,322,323,324,325,327,328,329,330,334,337,347,353,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,388,395,396,397,398,400,401,402,409,410,411,412,413,414,415,416,419,420,421,422,425,426,427,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,460,461,462,463,469,476,477,3,4,479,5,480,6,7,481,8,482,483,484,485,486,487,488,489,490,9,491,492,493,494,10,495,496,498,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[61,503,504,505,506,507,508,509,135,136,137,147,148,149,152,153,162,165,166,167,170,171,173,174,294,295,510,511,512,513,514,515,516,517,518,519,520,436,437,443,444,449,451,452,488],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,521,95,96,97,98,99,100,522,101,523,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,288,289,290,291,292,293,294,295,296,298,11,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,0,314,1,315,316,317,318,319,320,321,2,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,524,416,417,525,418,419,420,421,526,422,423,424,425,426,527,427,428,429,430,528,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,3,4,478,479,5,480,6,7,481,8,482,483,484,485,486,487,488,489,490,9,491,492,493,494,10,495,496,497,498,499,500,501,502,529],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[91,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[486],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[530,481,486,496],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[531,367,368,369],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[367,368,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[60,61,135,136,137,141,145,147,148,149,152,153,170,171,173,174,229,232,294,295,388,432,436,437,443,444,449,451,452,469],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[61,532,533,534,135,136,137,147,149,152,153,170,171,173,174,405,406,407,408,436,437,443,444,449,451,452],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[535],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[367,536,537,538,539,540,526,424,501,502],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[197,409,411],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[504,513,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[5,8,9,10],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[480],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[541],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[542],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[503,505,148,170,511,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[543,476,489,494],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[14,163,410,412,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,20,21,22,23,24,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,111,112,113,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,179,180,181,183,203,209,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,288,289,292,294,295,298,11,299,300,301,302,303,305,308,309,310,311,0,314,1,315,316,317,318,319,320,321,2,322,323,324,325,327,328,329,330,334,337,347,353,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,388,395,396,397,398,400,401,402,405,406,407,408,409,410,411,412,413,414,415,416,419,421,422,426,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,460,461,462,463,469,476,477,3,4,479,5,480,6,7,481,8,482,483,484,485,486,487,488,489,490,9,491,492,493,494,10,495,496,498,500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,56,57,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,102,103,104,105,106,107,108,109,110,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,167,168,169,170,171,172,173,174,175,176,180,181,183,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,254,255,256,258,259,260,261,262,263,264,265,288,289,292,298,11,299,300,301,302,303,305,308,309,310,311,0,314,1,315,316,317,318,319,320,321,2,322,323,324,325,327,328,329,330,334,337,347,353,356,357,358,359,360,361,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,388,395,396,397,398,400,401,402,405,406,407,408,410,411,412,414,415,416,419,420,421,422,425,426,427,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,460,461,462,463,469,476,477,3,4,479,5,480,6,7,481,482,483,484,485,486,487,488,489,490,9,491,492,493,494,10,495,496,498,500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[544],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":444,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":380,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":197,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":439,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":28,"org.easymock.tests2.DelegateToTest.testReturnException":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":156,"org.easymock.tests.MockingTest.testPartialClassMocking":180,"org.easymock.tests.MockClassControlTest.testToString":116,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":337,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":532,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":461,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":536,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":481,"org.easymock.tests2.UsageTest.wrongArguments":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":104,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":143,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":185,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":300,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":379,"org.easymock.tests2.CaptureTest.testPrimitive":315,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests.UsageTest.moreThanOneArgument":147,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.UsageTest.argumentsOrdered":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":89,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":271,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":514,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":388,"org.easymock.tests.ReplayStateInvalidUsageTest.times":242,"org.easymock.tests2.DependencyTest.testClassMocking":458,"org.easymock.tests2.AnswerTest.answer":361,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":457,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":140,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":435,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":525,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":374,"org.easymock.tests2.DelegateToTest.testDelegate":414,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":93,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests.LimitationsTest.mockFinalMethod":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":110,"org.easymock.tests2.DependencyTest.testClassMockingSupport":459,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":294,"org.easymock.tests2.CaptureTest.testCapture1_2446744":316,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":455,"org.easymock.tests.UsageThrowableTest.throwError":122,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":236,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":142,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":523,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":274,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":182,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":237,"org.easymock.tests2.CompareToTest.testLessOrEqual":543,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":50,"org.easymock.tests2.UsageTest.niceToStrict":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":342,"org.easymock.tests2.ThreadingTest.testChangeDefault":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":419,"org.easymock.tests2.MockBuilderTest.testCreateMock":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":102,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":352,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":486,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":73,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":485,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":321,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":257,"org.easymock.tests.MockClassControlTest.testEquals":120,"org.easymock.tests2.EasyMockSupportClassTest.testAll":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":57,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":516,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":108,"org.easymock.tests2.CaptureTest.testCaptureAll":314,"org.easymock.tests.MockNameTest.defaultName":60,"org.easymock.tests2.UsageConstraintsTest.testMatches":487,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":234,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":109,"org.easymock.samples.BasicClassMockTest.testPrintContent":27,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":128,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":540,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":522,"org.easymock.tests2.UsageConstraintsTest.greaterThan":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":311,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":275,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":101,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":528,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":303,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":267,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":434,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":94,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":372,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":155,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":409,"org.easymock.tests2.CaptureTest.testCaptureFirst":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":373,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":446,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":436,"org.easymock.tests2.CaptureTest.testCapture2_2446744":323,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":205,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":264,"org.easymock.tests.GenericTest.testBridgedEquals":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":106,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":493,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":504,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":396,"org.easymock.tests.MockingTest.testNiceClassMocking":186,"org.easymock.tests.MockingTest.testClassMocking":178,"org.easymock.tests2.UsageConstraintsTest.testContains":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":212,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":359,"org.easymock.tests2.UsageConstraintsTest.testFind":479,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":222,"org.easymock.tests.MockTypeTest.fromEasyMockClass":141,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":500,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests.UsageExpectAndReturnTest.object":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":537,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":259,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":231,"org.easymock.tests.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":52,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":90,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":508,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":78,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":465,"org.easymock.tests.MockClassControlTest.testHashCode":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":344,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":513,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":161,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":497,"org.easymock.tests.UsageVarargTest.varargCharAccepted":258,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":521,"org.easymock.tests2.CaptureTest.testCaptureMultiple":541,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastCall":440,"org.easymock.tests.DefaultClassInstantiatorTest.object":95,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":251,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":229,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":464,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":118,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":79,"org.easymock.tests.ReplayStateInvalidCallsTest.times":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":111,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":280,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":515,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":353,"org.easymock.tests2.UsageTest.resumeIfFailure":445,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":158,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":526,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":369,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":518,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":531,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":209,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":362,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":54,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":491,"org.easymock.tests2.DelegateToTest.testWrongClass":412,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":432,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":51,"org.easymock.tests2.CaptureTest.testCaptureNone":320,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.UsageVerifyTest.twoReturns":137,"org.easymock.tests.UsageVarargTest.varargByteAccepted":263,"org.easymock.tests2.ThreadingTest.testThreadSafe":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":348,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":26,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":232,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":520,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageConstraintsTest.any":482,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":157,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":99,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":240,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":450,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":469,"org.easymock.tests2.SerializationTest.testClass":367,"org.easymock.tests.LimitationsTest.mockNativeMethod":292,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":285,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":453,"org.easymock.tests2.NameTest.nameForMocksControl":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":336,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":499,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":422,"org.easymock.tests.MockingTest.testNicePartialClassMocking":181,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":302,"org.easymock.tests2.CaptureTest.testCaptureLast":319,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":295,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":402,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":284,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":492,"org.easymock.tests.MockingTest.testTwoMocks":179,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":443,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":390,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":466,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":97,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":297,"org.easymock.tests2.ConstraintsToStringTest.andToString":517,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":427,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":114,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":338,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":529,"org.easymock.tests.UsageVerifyTest.twoThrows":136,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":347,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":310,"org.easymock.tests.LimitationsTest.privateConstructor":291,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":129,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":357,"org.easymock.tests2.UsageTest.defaultResetToNice":442,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.UsageVarargTest.differentLength":260,"org.easymock.tests2.CallbackTest.callback":356,"org.easymock.tests2.UsageConstraintsTest.equals":478,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":306,"org.easymock.tests.UsageTest.openCallCountByLastCall":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":476,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":132,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":105,"org.easymock.tests.UsageThrowableTest.throwCheckedException":126,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":401,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":400,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":366,"org.easymock.tests2.CompareToTest.testGreateOrEqual":530,"org.easymock.tests.ObjectMethodsTest.testHashCode":230,"org.easymock.tests2.NameTest.nameForNiceMock":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":283,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":330,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":278,"org.easymock.tests2.DependencyTest.testInterfaceMocking":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":538,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":349,"org.easymock.tests2.DelegateToTest.testStubDelegate":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.stubAnswer":365,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":423,"org.easymock.tests.UsageVarargTest.varargLongAccepted":262,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":196,"org.easymock.tests.UsageExpectAndReturnTest.floatType":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":501,"org.easymock.tests2.ConstraintsToStringTest.orToString":510,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageThrowableTest.noUpperLimit":123,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":477,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":428,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":317,"org.easymock.tests2.SerializationTest.test":368,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":535,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":96,"org.easymock.tests2.UsageConstraintsTest.testSame":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":63,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":399,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":268,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":339,"org.easymock.tests.GenericTest.testPackageScope":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":184,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":266,"org.easymock.tests2.NameTest.nameForMock":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":527,"org.easymock.tests2.UsageStrictMockTest.differentMethods":452,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":85,"org.easymock.tests2.MockedExceptionTest.testRealException":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":507,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":245,"org.easymock.tests2.NameTest.nameForStrictMock":406,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":418,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":498,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":431,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":533,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":98,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":416,"org.easymock.tests2.UsageStrictMockTest.range":451,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":272,"org.easymock.tests2.UsageConstraintsTest.lessThan":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":468,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":544,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":371,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":343,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageTest.wrongArguments":149,"org.easymock.tests2.MockBuilderTest.testWithConstructor":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":340,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":75,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":100,"org.easymock.tests.UsageVarargTest.varargShortAccepted":261,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":483,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":286,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":363,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":190,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":441,"org.easymock.tests2.CaptureTest.testCaptureFromStub":322,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":235,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":417,"org.easymock.tests.UsageTest.unexpectedCallWithArray":148,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":282,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":76,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests2.ConstraintsToStringTest.notToString":512,"org.easymock.tests2.ConstraintsToStringTest.containsToString":542,"org.easymock.tests.UsageStrictMockTest.testVerify":176,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":68,"org.easymock.tests.LimitationsTest.abstractClass":290,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":534,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":376}}]
