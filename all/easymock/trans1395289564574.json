[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[3,4,5,6,7],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[8,9,10,11,12,13,14,15],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,3,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,4,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,5,195,6,7,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,8,248,249,250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[28,46,118,122,235,242],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,25,36,84,85,86,253,254,255,256,257,258,259,260,153,175,196,197,200,201,202,203,208,210,211,213,214,220,221,222],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[261,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[30,42,43,263,264,265,266,267,268,269,270,271,272,273,53,274,275,276,277,278,279,280,281,282,283,284,285,127,128,286,152,154,155,157,158,159,160,287,288,289,290,291,292,293,167,170,182,294,228,295,296,297,298,299,300,301,302],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[290,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[303,304,305,30,306,42,43,307,263,264,265,266,267,268,269,270,271,272,273,53,274,275,276,277,95,96,97,278,279,280,281,282,283,284,285,127,128,258,258,259,259,129,308,286,152,154,155,157,158,159,309,160,310,287,288,311,161,289,290,291,292,293,167,168,169,170,172,173,180,182,312,313,314,315,316,224,317,225,226,318,319,320,321,322,294,323,324,228,325,295,229,296,297,326,327,298,328,329,299,330,230,300,301,331,332,302,231,333,334,8,335,336,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"result"}},{"position":"org.easymock.Capture:82","failures":[139,141,142,143,144,145,146,148,338,149,260,151],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[339,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[30,42,43,263,264,265,266,267,268,269,270,271,272,273,53,274,275,276,277,278,279,280,281,282,283,284,285,127,128,286,152,154,155,157,158,159,160,287,288,289,290,291,292,293,167,170,182,294,228,295,296,297,298,299,300,301,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[258,259,310,341,342,343,344,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[202],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[311,161,313,224],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[279,280,284],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[16,17,18,19,20,347,21,22,25,348,349,350,351,26,352,353,354,355,356,357,27,28,29,30,32,33,34,36,39,40,358,41,359,360,361,42,43,265,45,46,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,253,254,255,256,257,362,363,87,88,89,90,364,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,365,366,367,368,126,127,128,258,259,129,130,131,4,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,151,308,286,152,369,370,153,154,156,157,158,159,160,288,161,371,372,373,374,162,163,166,167,168,169,170,171,172,173,375,376,377,378,174,175,178,179,180,181,182,183,184,185,186,187,188,189,379,190,191,192,193,194,5,195,7,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,312,224,317,225,226,227,228,229,230,231,232,233,234,236,237,239,240,380,381,246,247,8,248,249,250,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[28,29,35,38,52,382,383,384,120,123,124,177,238,243,244],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[180,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":199,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":346,"org.easymock.tests2.UsageTest.argumentsOrdered":244,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":240,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":107,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":182,"org.easymock.tests2.DelegateToTest.testReturnException":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":349,"org.easymock.tests.MockingTest.testPartialClassMocking":95,"org.easymock.samples.SupportTest.voteForRemovals":138,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":306,"org.easymock.tests.MockClassControlTest.testToString":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":54,"org.easymock.tests.UsageExpectAndThrowTest.object":64,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":216,"org.easymock.tests2.DelegateToTest.testWrongClass":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":205,"org.easymock.tests2.UsageTest.wrongArguments":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.samples.ConstructorCalledMockTest.testTax":258,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":367,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":379,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests2.UsageConstraintsTest.testNull":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":225,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":191,"org.easymock.tests2.CaptureTest.testPrimitive":142,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":73,"org.easymock.tests.UsageTest.moreThanOneArgument":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":366,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":81,"org.easymock.tests2.ThreadingTest.testThreadSafe":162,"org.easymock.tests.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageVarargTest.varargIntAccepted":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":300,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":90,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.CaptureTest.testCapture_2617107":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":317,"org.easymock.tests2.UsageConstraintsTest.any":206,"org.easymock.tests2.StubTest.stub":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":350,"org.easymock.tests.UsageExpectAndThrowTest.longType":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":283,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests2.SerializationTest.testClass":180,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests.LimitationsTest.mockNativeMethod":53,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":345,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":307,"org.easymock.tests2.AnswerTest.answer":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":378,"org.easymock.tests2.CaptureTest.testAnd":139,"org.easymock.tests2.UsageTest.strictResetToDefault":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":288,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.MockedExceptionTest.testMockedException":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.DelegateToTest.testDelegate":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":58,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":226,"org.easymock.tests.MockingTest.testNicePartialClassMocking":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":69,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests.LimitationsTest.mockFinalMethod":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":9,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":217,"org.easymock.tests.MockingTest.testTwoMocks":277,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":62,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":243,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.tests.UsageThrowableTest.throwError":44,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":281,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":164,"org.easymock.tests2.MockBuilderTest.testCreateMockString":322,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests.UsageExpectAndThrowTest.floatType":56,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":249,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":230,"org.easymock.samples.PartialClassMockTest.testGetArea":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":17,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":298,"org.easymock.tests2.UsageTest.niceToStrict":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":55,"org.easymock.tests.LimitationsTest.privateConstructor":273,"org.easymock.tests2.UsageConstraintsTest.testNotNull":220,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":51,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":224,"org.easymock.tests2.UsageTest.defaultResetToNice":380,"org.easymock.tests2.MockBuilderTest.testCreateMock":319,"org.easymock.samples.ExampleTest.voteAgainstRemovals":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":331,"org.easymock.tests2.CallbackTest.callback":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":63,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":23,"org.easymock.tests.UsageCallCountTest.tooFewCalls":88,"org.easymock.tests.UsageOverloadedMethodTest.overloading":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":302,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":94,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":48,"org.easymock.tests.MockClassControlTest.testEquals":270,"org.easymock.tests2.EasyMockSupportClassTest.testAll":228,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.MockingTest.testStrictClassMocking":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureAll":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":166,"org.easymock.tests.UsageVarargTest.allKinds":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.samples.BasicClassMockTest.testPrintContent":128,"org.easymock.samples.ExampleTest.addDocument":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.DelegateToTest.testStubDelegate":195,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":50,"org.easymock.tests2.AnswerTest.stubAnswer":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":36,"org.easymock.tests2.UsageConstraintsTest.greaterThan":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":359,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":289,"org.easymock.tests.UsageVarargTest.varargLongAccepted":80,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":285,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":290,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":214,"org.easymock.tests.UsageThrowableTest.noUpperLimit":45,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":197,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":292,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":144,"org.easymock.tests2.SerializationTest.test":181,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":318,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":46,"org.easymock.tests2.UsageConstraintsTest.testSame":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":323,"org.easymock.samples.SupportTest.addDocument":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":348,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":245,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":297,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests2.UsageTest.moreThanOneArgument":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":252,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":320,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":82,"org.easymock.tests.GenericTest.testBridgedEquals":263,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":91,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":183,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":110,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageCallCountTest.tooManyCalls":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":361,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":87,"org.easymock.tests2.MockedExceptionTest.testRealException":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":59,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests.MockingTest.testNiceClassMocking":278,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests.MockingTest.testClassMocking":276,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":313,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":200,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":33,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":316,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":247,"org.easymock.tests.UsageExpectAndReturnTest.object":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":293,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":282,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":314,"org.easymock.tests2.UsageStrictMockTest.range":177,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":328,"org.easymock.tests2.CaptureTest.testCaptureRightOne":149,"org.easymock.tests2.UsageConstraintsTest.testOr":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":335,"org.easymock.tests.UsageRangeTest.combination":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":3,"org.easymock.tests.UsageTest.wrongArguments":120,"org.easymock.tests.MockClassControlTest.testHashCode":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":326,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":265,"org.easymock.tests2.EasyMockSupportTest.testVerify":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":329,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":93,"org.easymock.tests.UsageVarargTest.varargShortAccepted":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":375,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests.UsageVarargTest.varargCharAccepted":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":262,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests.DefaultClassInstantiatorTest.object":279,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests2.CaptureTest.testCaptureFromStub":260,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":315,"org.easymock.tests.UsageTest.unexpectedCallWithArray":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":61,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":89,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":112,"org.easymock.tests2.CaptureTest.testCapture":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":311,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":268,"org.easymock.tests2.UsageConstraintsTest.constraints":198,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":60,"org.easymock.samples.ExampleTest.addAndChangeDocument":136,"org.easymock.tests.UsageStrictMockTest.testVerify":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":115,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":126,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.UsageTest.resumeIfFailure":381,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":304,"org.easymock.tests.LimitationsTest.abstractClass":272,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":104,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":19,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189}}]
