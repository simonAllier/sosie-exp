[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,47,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[157,158,159,160,161,2,3,162,163],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[4,6,14,21,22,24,26,27,29,39,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[165,166,157,167,168,158,159,160,0,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,1,187,188,161,2,3,189,190,191,192,68,69,193,70,194,71,195,4,5,7,8,11,12,13,14,15,16,17,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,74,75,211,76,77,78,47,82,83,84,88,91,93,94,96,212,98,99,100,213,103,105,113,119,214,162,215,216,217,218,219,219,220,220,221,122,48,222,223,224,225,226,227,228,229,230,231,232,233,131,133,50,234,235,236,237,238,239,240,241,51,52,53,54,55,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,145,150,151,152,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,56,57,295,296,297,58,59,60,61,62,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,64,65,163,315,316,317,156,318,319,320,321,66,322],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[323,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[189,190,67,324],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[325,326,327,328,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[330,34],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[124,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332,325,326,327,328,329,305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[333,0,334,169,170,335,171,336,173,175,177,178,180,181,161,69,193,71,195,196,198,337,199,338,339,340,203,204,21,36,341,342,343,344,75,81,84,86,87,88,89,93,94,95,96,97,212,345,346,347,348,48,137,138,139,349,49,50,350,234,235,351,352,239,353,354,355,356,357,358,298,302,303,304,309,310,359,360,361,362,313,164,314,154,363,364,155,365,366,367,368,317,369],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[192,196,201,54,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,145,267,268,269,270,271,272,273,274,303,304,308,309,310,312,361,316,368,66,322],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[370,371,372,373,374,375,165,166,157,167,168,158,159,160,333,376,0,334,169,170,335,377,378,379,380,381,171,336,382,383,384,385,386,172,173,174,175,176,177,178,179,180,181,182,183,387,184,185,186,1,187,188,388,389,161,2,390,3,189,190,67,191,192,68,69,193,70,391,194,71,195,392,72,393,394,395,73,396,397,4,5,6,7,8,9,10,11,12,13,14,15,16,17,196,197,198,337,199,338,200,201,202,339,340,203,204,205,206,207,208,209,210,18,19,20,21,22,398,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,399,341,342,343,344,74,75,211,76,77,78,79,400,47,401,80,81,82,83,84,85,86,87,402,88,89,403,90,91,92,93,404,94,405,406,95,96,407,97,408,409,410,411,412,212,345,413,414,415,416,417,98,99,100,213,101,102,418,103,419,104,105,106,107,108,420,109,110,111,112,421,113,114,115,116,117,118,119,422,423,424,120,121,214,162,215,216,425,217,426,218,219,220,427,221,428,122,429,346,430,431,347,348,432,123,124,125,126,127,128,433,129,48,332,434,435,436,437,222,438,439,440,441,442,443,223,224,225,226,227,228,229,230,231,232,233,130,131,132,133,134,135,136,137,138,139,140,141,142,349,444,49,50,350,234,235,351,445,236,237,238,352,446,239,353,447,448,354,355,356,325,449,450,451,326,327,452,453,454,455,456,457,458,459,328,460,240,461,323,329,462,463,241,464,51,52,53,54,55,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,143,144,145,146,465,357,147,148,149,150,151,466,152,467,468,153,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,56,57,295,296,297,469,470,471,472,473,58,59,60,61,62,474,475,476,477,478,479,358,480,481,482,483,63,298,299,300,301,302,303,304,305,306,307,308,309,310,359,360,311,312,361,362,313,484,485,486,487,164,314,488,154,489,490,363,364,155,365,366,64,65,163,367,315,316,368,317,369,156,318,319,320,321,66,322],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[188,388,389,189,401,402,403,404,405,406,407,219,220],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[0,15,19,20,23,24,25,26,32,34,35,37,38,44,45,46,219,219,220,220,226,227,228,229,230,50,51,52,55,56,58,59,60,61,62,64,65],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[48,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[189,190,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[370,371,372,373,165,157,158,159,160,376,0,170,335,184,185,187,188,161,2,3,189,190,67,191,192,69,193,71,195,4,5,6,7,9,10,11,12,13,14,17,197,198,199,338,202,203,206,207,210,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,341,342,343,344,74,211,76,77,78,47,81,83,87,91,92,98,99,100,213,214,162,215,216,425,217,218,226,227,228,229,230,131,132,136,444,50,235,351,445,352,446,239,353,447,448,51,52,55,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,145,150,151,152,268,269,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,56,469,470,471,472,473,58,59,60,61,62,474,475,476,478,479,480,481,482,483,63,298,299,300,301,302,303,304,307,308,310,484,485,486,487,64,65,317,156,318,319,320,321,66,322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[105,113,219,220,122],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[188,493,494,495,496,497,498,499],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[500,34,41,46],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[207],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[376,334,169,170,335,175,181,182,183,387,67,191,5,6,9,10,11,12,17,338,42,91,424,120,121,214,215,216,425,217,218,427,221,428,48,132,444,350,234,235,351,239,353,447,448,355,356,53,268,474,475,476,478,479,480,481,482,483,63,156],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[188,493,494,495,496,497,498,499],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[388,501,502,193,195,392,402,403,404,492,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":309,"org.easymock.tests2.UsageTest.argumentsOrdered":340,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":456,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":338,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":428,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":319,"org.easymock.tests.MockingTest.testPartialClassMocking":150,"org.easymock.tests.MockClassControlTest.testToString":137,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":247,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageTest.wrongArguments":337,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":486,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":155,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":468,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":181,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":142,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":266,"org.easymock.tests.UsageTest.moreThanOneArgument":310,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":242,"org.easymock.tests.UsageTest.argumentsOrdered":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":62,"org.easymock.tests.ReplayStateInvalidUsageTest.times":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests2.DependencyTest.testClassMocking":374,"org.easymock.tests2.AnswerTest.answer":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":373,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":176,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests2.DelegateToTest.testDelegate":210,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.LimitationsTest.mockFinalMethod":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":473,"org.easymock.tests2.DependencyTest.testClassMockingSupport":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":164,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":371,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":435,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":364,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":465,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":230,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":122,"org.easymock.tests.MockingTest.testInterfaceMocking":466,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":109,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":91,"org.easymock.tests2.MockBuilderTest.testCreateMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":484,"org.easymock.tests.UsageOverloadedMethodTest.overloading":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":118,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":13,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":477,"org.easymock.tests.MockClassControlTest.testEquals":141,"org.easymock.tests2.EasyMockSupportClassTest.testAll":103,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":471,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":372,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests.UsageVarargTest.allKinds":63,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":472,"org.easymock.samples.BasicClassMockTest.testPrintContent":121,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":499,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":433,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":129,"org.easymock.samples.ExampleTest.voteForRemoval":215,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":185,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":79,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":174,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":318,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":175,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":204,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":16,"org.easymock.tests2.UsageTest.moreThanOneArgument":198,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":483,"org.easymock.tests.GenericTest.testBridgedEquals":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":355,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":469,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":265,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":42,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":232,"org.easymock.tests.UsageCallCountTest.tooManyCalls":356,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests.MockingTest.testNiceClassMocking":153,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests.MockingTest.testClassMocking":148,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":446,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":308,"org.easymock.tests.MockTypeTest.fromEasyMockClass":363,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":479,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":313,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":243,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":388,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.MockClassControlTest.testHashCode":140,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":370,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":18,"org.easymock.tests.UsageVarargTest.varargCharAccepted":478,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":432,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":183,"org.easymock.tests.DefaultClassInstantiatorTest.object":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":223,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":231,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":119,"org.easymock.tests2.UsageTest.resumeIfFailure":203,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":321,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":404,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":240,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":324,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":241,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":167,"org.easymock.tests.UsageExpectAndThrowTest.object":257,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":65,"org.easymock.samples.ConstructorCalledMockTest.testTax":219,"org.easymock.tests.UsageStrictMockTest.range":234,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":396,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":93,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":101,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":485,"org.easymock.tests2.CaptureTest.testCaptureNone":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":238,"org.easymock.tests.UsageUnorderedTest.message":48,"org.easymock.tests.UsageVerifyTest.twoReturns":304,"org.easymock.tests.UsageVarargTest.varargByteAccepted":482,"org.easymock.tests2.ThreadingTest.testThreadSafe":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":114,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":448,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":120,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":439,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":320,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":127,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":438,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.SerializationTest.testClass":189,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":212,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":331,"org.easymock.tests2.NameTest.nameForMocksControl":344,"org.easymock.tests2.MockedExceptionTest.testMockedException":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":104,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":390,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":94,"org.easymock.tests.MockingTest.testNicePartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":493,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":41,"org.easymock.tests.MockingTest.testTwoMocks":149,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":255,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":339,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":426,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":437,"org.easymock.tests.UsageStrictMockTest.differentMethods":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":125,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":186,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":106,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":389,"org.easymock.tests.UsageVerifyTest.twoThrows":303,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":113,"org.easymock.samples.ExampleTest.voteAgainstRemoval":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests.LimitationsTest.privateConstructor":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":202,"org.easymock.samples.ExampleTest.voteAgainstRemovals":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests.UsageVarargTest.differentLength":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":161,"org.easymock.tests2.UsageConstraintsTest.equals":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":401,"org.easymock.tests.UsageTest.openCallCountByLastCall":311,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":487,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests.MockingTest.testStrictClassMocking":147,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":336,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":160,"org.easymock.tests.ObjectMethodsTest.testHashCode":430,"org.easymock.tests2.CompareToTest.testGreateOrEqual":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests2.NameTest.nameForNiceMock":343,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.AnswerTest.stubAnswer":159,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":405,"org.easymock.tests.UsageVarargTest.varargLongAccepted":481,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":188,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":72,"org.easymock.tests2.SerializationTest.test":190,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":124,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.samples.SupportTest.addDocument":427,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":391,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":107,"org.easymock.tests.GenericTest.testPackageScope":131,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":467,"org.easymock.tests2.NameTest.nameForMock":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":407,"org.easymock.tests2.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests2.NameTest.nameForStrictMock":342,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":73,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":491,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":126,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":169,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":75,"org.easymock.tests.UsageTest.wrongArguments":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":108,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":480,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":354,"org.easymock.tests2.UsageConstraintsTest.cmpTo":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":168,"org.easymock.tests2.CompareToTest.testLessThan":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":451,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":434,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":89,"org.easymock.tests.UsageTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":447,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":350,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageStrictMockTest.testVerify":445,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":424,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":470,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":60,"org.easymock.tests.LimitationsTest.abstractClass":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":61,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":178}}]
