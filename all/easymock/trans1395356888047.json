[{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,12,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[68,24,25,27,28,29,30,33,35,69,40,48,50,51,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[70,71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[73],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,23,91,92,93,94,95,96,28,29,30,32,97,33,98,34,35,36,99,100,101,102,103,104,105,106,107,108,38,39,109,40,110,111,112,113,114,115,116,117,118,119,120,121,45,122,123,124,46,48,49,50,51,54,125,126,55,56,57,127,128,129,130,131,132,133,58,134,60,22,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[146,147,148,149,150],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[167],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[168,169,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"name"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[171,171,172,172,156,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[174,175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[177,24,25,35,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[178],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[179,180,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[181,182,183,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[171,171,172,172,184,84,85,185,186,187,188,189,190,103,191,109,192,193,194,195,196,197,198,199,200,201,202,203,204,168,133,205,206,207,208,146,58,209,134,147,210,211,59,60,61,212,213,158,214,215,159,216,65,217,218,219,148,220,19,66,221,67,149,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":179,"org.easymock.tests2.UsageTest.argumentsOrdered":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":175,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":155,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":137,"org.easymock.tests2.SerializationTest.testAllMockedMethod":133,"org.easymock.tests.MockingTest.testPartialClassMocking":188,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests.MockClassControlTest.testToString":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":149,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":206,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":70,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":182,"org.easymock.tests2.UsageTest.wrongArguments":48,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":4,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":186,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":163,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":210,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":3,"org.easymock.tests2.CaptureTest.testCaptureNone":143,"org.easymock.tests.UsageUnorderedTest.message":40,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":93,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":88,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":108,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests2.CaptureTest.testCapture_2617107":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":102,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests2.StubTest.stub":120,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.SerializationTest.testClass":168,"org.easymock.tests.LimitationsTest.mockNativeMethod":194,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":192,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":154,"org.easymock.tests2.NameTest.nameForMocksControl":131,"org.easymock.tests2.MockedExceptionTest.testMockedException":20,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":211,"org.easymock.tests.MockingTest.testNicePartialClassMocking":189,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":219,"org.easymock.tests2.CaptureTest.testCaptureLast":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":10,"org.easymock.tests.MockingTest.testTwoMocks":187,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":14,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":174,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":62,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":207,"org.easymock.samples.PartialClassMockTest.testGetArea":184,"org.easymock.samples.ExampleTest.voteAgainstRemoval":80,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":221,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":203,"org.easymock.tests2.UsageTest.niceToStrict":12,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":162,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":150,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":59,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":112,"org.easymock.tests.UsageVarargTest.differentLength":23,"org.easymock.tests2.CallbackTest.callback":46,"org.easymock.tests2.UsageConstraintsTest.equals":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":173,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":101,"org.easymock.tests.UsageCallCountTest.tooFewCalls":106,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":164,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":5,"org.easymock.tests2.EasyMockSupportClassTest.testAll":205,"org.easymock.tests.MockClassControlTest.testEquals":201,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":109,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":8,"org.easymock.tests2.CaptureTest.testCaptureAll":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":176,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":72,"org.easymock.samples.ExampleTest.voteForRemovals":82,"org.easymock.tests2.NameTest.nameForNiceMock":130,"org.easymock.tests.UsageVarargTest.allKinds":95,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":9,"org.easymock.samples.ExampleTest.addDocument":81,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.AnswerTest.stubAnswer":71,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":98,"org.easymock.tests.UsageVarargTest.varargLongAccepted":92,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":99,"org.easymock.samples.ExampleTest.voteForRemoval":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":148,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":172,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":140,"org.easymock.tests2.SerializationTest.test":169,"org.easymock.samples.SupportTest.addDocument":75,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":121,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":53,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":183,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":114,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":94,"org.easymock.tests.GenericTest.testBridgedEquals":193,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":38,"org.easymock.tests2.NameTest.nameForMock":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":6,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":96,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":136,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":157,"org.easymock.tests.UsageCallCountTest.tooManyCalls":39,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":105,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":213,"org.easymock.tests.MockingTest.testNiceClassMocking":1,"org.easymock.tests2.NameTest.nameForStrictMock":129,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":218,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":119,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":220,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":58,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":170,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":90,"org.easymock.tests.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":111,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":116,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":181,"org.easymock.tests2.UsageConstraintsTest.testOr":180,"org.easymock.tests.UsageRangeTest.combination":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":151,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":153,"org.easymock.tests.MockClassControlTest.testHashCode":200,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":196,"org.easymock.tests2.EasyMockSupportTest.testVerify":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":110,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":117,"org.easymock.tests.UsageVarargTest.varargShortAccepted":91,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":13,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":37,"org.easymock.tests.UsageVarargTest.varargCharAccepted":89,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":125,"org.easymock.tests.DefaultClassInstantiatorTest.object":11,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":123,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":209,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":107,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":156,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.samples.ExampleTest.addAndChangeDocument":83,"org.easymock.tests.UsageStrictMockTest.testVerify":100,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":208,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":198,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":7,"org.easymock.tests2.UsageTest.resumeIfFailure":52,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":185,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":44,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":177}}]
