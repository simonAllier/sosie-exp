[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,52,53,53,54,55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.Capture:134","failures":[61,62],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[3,7,63,64,65,66,8,67,68,9,69,70,71,72,73,74,75,76,77,10,78,79,80,81,82,11,83,84,85,86,87,88,89,90,91,92,93,18,94,52,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[98,99,100,101,102,103],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[104],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[105,106,107,108,109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[111,112,113,114,115,116,117,118,119],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[120,121,122,123,124,87,90,91,18,94],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[125,126,127,128],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[87,129,130,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,98,172,173,174,59,175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[99,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[187],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[188,189,190,191],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[192,193,194],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[87,129,130],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[120,121,122,195,196,90,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[197,198,0,199,200,201,202,203,204,205,206,207,188,95,208,209,210,211,212,189,125,213,214,215,190,216,126,217,104,218,219,191,220,221,222,223,224,225,127,226,227,228,229,230,132,231,232,233,234,235,236,111,237,238,239,240,241,242,243,133,244,245,246,112,1,2,3,4,5,6,7,247,248,249,250,251,252,113,253,254,255,256,64,65,66,8,67,68,9,69,70,71,72,73,74,75,76,77,10,78,79,80,81,82,11,83,84,257,258,259,260,261,134,262,263,264,265,266,267,114,268,269,270,12,271,272,273,274,275,276,87,129,130,135,13,277,278,14,136,15,16,91,137,17,138,139,140,141,142,18,94,279,280,281,19,282,20,283,21,22,284,23,143,194,285,286,287,144,288,289,290,291,292,145,146,293,96,147,294,295,296,297,298,299,148,300,301,302,303,149,304,305,306,307,56,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,24,325,326,150,151,152,327,328,329,330,331,332,333,334,25,26,335,27,336,337,338,339,28,29,340,30,153,154,155,156,341,342,343,344,345,346,347,348,349,157,350,351,352,353,354,115,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,158,159,160,161,162,375,376,377,378,379,380,116,381,382,383,384,163,164,165,166,167,168,169,170,171,31,32,385,33,386,387,388,389,34,35,98,99,100,101,390,102,103,391,392,393,105,394,395,396,397,398,399,106,400,110,401,107,402,403,57,404,108,109,405,406,407,58,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,97,424,425,172,426,173,174,59,175,176,177,178,179,180,181,182,183,427,428,429,60,430,431,432,433,434,435,436,437,438,439,117,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,118,119,461,462,463,36,37,38,39,40,464,465,466,41,42,467,468,469,470,471,43,44,45,46,47,472,473,184,474,475,476,477,185,478,479,480,481,482,187,483,48,484,49,50,485,51,186,486,52,52,53,53,487,54,488,489,55,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[272,273,283,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[390,492,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[375,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[125,126,127,128],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests2.UsageTest.argumentsOrdered":245,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":348,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":110,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":241,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":342,"org.easymock.tests.MockingTest.testPartialClassMocking":25,"org.easymock.tests.MockClassControlTest.testToString":166,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":272,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":355,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":427,"org.easymock.tests2.UsageTest.wrongArguments":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":155,"org.easymock.samples.ExampleTest.answerVsDelegate":484,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":435,"org.easymock.tests2.UsageConstraintsTest.testNull":210,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":22,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":301,"org.easymock.tests2.CaptureTest.testPrimitive":312,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":430,"org.easymock.tests.UsageTest.moreThanOneArgument":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":374,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":385,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":480,"org.easymock.tests.UsageTest.argumentsOrdered":354,"org.easymock.tests.UsageVarargTest.varargIntAccepted":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":339,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":180,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests2.DependencyTest.testClassMocking":247,"org.easymock.tests2.AnswerTest.answer":114,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":142,"org.easymock.tests2.CaptureTest.testAnd":309,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":297,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":483,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":370,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":162,"org.easymock.tests2.DependencyTest.testClassMockingSupport":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":414,"org.easymock.tests2.CaptureTest.testCapture1_2446744":313,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":140,"org.easymock.tests.UsageThrowableTest.throwError":438,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":59,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":434,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":386,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":84,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":175,"org.easymock.tests.MockingTest.testInterfaceMocking":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":73,"org.easymock.tests2.UsageTest.niceToStrict":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":356,"org.easymock.tests2.ThreadingTest.testChangeDefault":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":364,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":153,"org.easymock.tests.UsageOverloadedMethodTest.overloading":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":82,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":126,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":468,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":492,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":318,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":451,"org.easymock.tests.MockClassControlTest.testEquals":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":372,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":141,"org.easymock.tests2.CaptureTest.testCaptureAll":310,"org.easymock.tests.MockNameTest.defaultName":347,"org.easymock.tests2.UsageConstraintsTest.testMatches":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":33,"org.easymock.samples.ExampleTest.voteForRemovals":51,"org.easymock.tests.UsageVarargTest.allKinds":459,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":460,"org.easymock.samples.BasicClassMockTest.testPrintContent":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":161,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":443,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":251,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":124,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":290,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":103,"org.easymock.samples.ExampleTest.voteForRemoval":49,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":143,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":426,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":295,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":341,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":197,"org.easymock.tests2.CaptureTest.testCaptureFirst":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":296,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":112,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":466,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":19,"org.easymock.tests2.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.CaptureTest.testCapture2_2446744":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":458,"org.easymock.tests.GenericTest.testBridgedEquals":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":478,"org.easymock.tests.UsageExpectAndReturnTest.longType":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":158,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":147,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":373,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":472,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":2,"org.easymock.tests.MockingTest.testNiceClassMocking":338,"org.easymock.tests.MockingTest.testClassMocking":333,"org.easymock.tests2.UsageConstraintsTest.testContains":190,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":184,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":293,"org.easymock.tests2.UsageConstraintsTest.testFind":209,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":331,"org.easymock.tests.MockTypeTest.fromEasyMockClass":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":205,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.object":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":300,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":121,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":152,"org.easymock.tests.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":481,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":94,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":423,"org.easymock.tests.MockClassControlTest.testHashCode":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":227,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":75,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":452,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastCall":242,"org.easymock.tests.DefaultClassInstantiatorTest.object":98,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":461,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":226,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":361,"org.easymock.tests.CapturesMatcherTest.test":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":375,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":11,"org.easymock.tests2.UsageTest.resumeIfFailure":246,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":344,"org.easymock.tests2.StubTest.stubWithReturnValue":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":223,"org.easymock.tests2.SerializationTest.testAllMockedMethod":130,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":404,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":367,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":131,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":58,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":268,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":447,"org.easymock.tests.UsageExpectAndThrowTest.object":365,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":220,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests.UsageStrictMockTest.range":382,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":306,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":366,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":64,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":317,"org.easymock.tests.UsageUnorderedTest.message":431,"org.easymock.tests.UsageVerifyTest.twoReturns":119,"org.easymock.tests.UsageVarargTest.varargByteAccepted":457,"org.easymock.tests2.ThreadingTest.testThreadSafe":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":78,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":490,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.UsageConstraintsTest.any":214,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":179,"org.easymock.tests2.StubTest.stub":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":343,"org.easymock.tests.UsageExpectAndThrowTest.longType":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":178,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests2.SerializationTest.testClass":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":24,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":259,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests2.NameTest.nameForMocksControl":276,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":352,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":27,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":20,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":16,"org.easymock.tests.MockingTest.testNicePartialClassMocking":26,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":257,"org.easymock.tests2.CaptureTest.testCaptureLast":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":415,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":221,"org.easymock.tests.MockingTest.testTwoMocks":334,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":363,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":244,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":225,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":192,"org.easymock.samples.ExampleTest.removeNonExistingDocument":186,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":263,"org.easymock.tests.UsageStrictMockTest.differentMethods":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":228,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":100,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":281,"org.easymock.tests2.MockBuilderTest.testCreateMockString":138,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":69,"org.easymock.tests.UsageExpectAndThrowTest.floatType":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":270,"org.easymock.tests.UsageVerifyTest.twoThrows":118,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":10,"org.easymock.samples.ExampleTest.voteAgainstRemoval":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":289,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":86,"org.easymock.tests2.UsageConstraintsTest.testNotNull":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":444,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests2.UsageTest.defaultResetToNice":133,"org.easymock.samples.ExampleTest.voteAgainstRemovals":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":43,"org.easymock.tests.UsageVarargTest.differentLength":454,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":258,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests2.UsageConstraintsTest.equals":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":286,"org.easymock.tests.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":429,"org.easymock.tests.UsageCallCountTest.tooFewCalls":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":4,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":156,"org.easymock.tests.UsageThrowableTest.throwCheckedException":441,"org.easymock.tests.MockingTest.testStrictClassMocking":332,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":5,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests.ObjectMethodsTest.testHashCode":151,"org.easymock.tests2.CompareToTest.testGreateOrEqual":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":195,"org.easymock.tests2.NameTest.nameForNiceMock":275,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":122,"org.easymock.samples.ExampleTest.addDocument":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":116,"org.easymock.tests.UsageVarargTest.varargLongAccepted":456,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":46,"org.easymock.tests.UsageExpectAndReturnTest.floatType":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests.UsageThrowableTest.noUpperLimit":439,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":234,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":207,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":304,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":493,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":37,"org.easymock.tests2.UsageConstraintsTest.testSame":211,"org.easymock.samples.SupportTest.addDocument":489,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":70,"org.easymock.tests.GenericTest.testPackageScope":410,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":233,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":336,"org.easymock.tests2.NameTest.nameForMock":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":469,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":369,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":420,"org.easymock.tests2.MockedExceptionTest.testRealException":96,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":402,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":428,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":183,"org.easymock.tests2.NameTest.nameForStrictMock":274,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":305,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":191,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":254,"org.easymock.tests2.UsageConstraintsTest.lessThan":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":74,"org.easymock.tests2.CaptureTest.testCaptureRightOne":319,"org.easymock.tests2.UsageConstraintsTest.testOr":212,"org.easymock.tests.UsageRangeTest.combination":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":283,"org.easymock.tests.UsageTest.wrongArguments":350,"org.easymock.tests2.MockBuilderTest.testWithConstructor":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":71,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":105,"org.easymock.tests.UsageVarargTest.varargShortAccepted":455,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":185,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests2.CaptureTest.testCaptureFromStub":320,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":174,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":277,"org.easymock.tests.UsageTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":476,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":471,"org.easymock.tests2.CaptureTest.testCapture":61,"org.easymock.tests2.UsageConstraintsTest.constraints":188,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":381,"org.easymock.samples.ExampleTest.addAndChangeDocument":486,"org.easymock.tests.UsageStrictMockTest.testVerify":163,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":488,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":159,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":465,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":340,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":299}}]
