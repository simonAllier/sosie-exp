[{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"leafClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,4,5,7,60,61,62,63,9,64,65,66,67,10,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,12,87,88,89,90,91,92,13,93,94,95,96,97,98,99,100],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[101,102,103,104,105,106],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[107,108,67,109],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[110,111,112,113,114,115],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[116,117,118,119,85],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[120,103,121,24,25,36,42,122,104,47,123,73,74,98],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[124,125,126,127,128,129,130,131,36,37,38,39,132,45,6,61,86,90,91,93,96],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[133,134],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[3,60,135,136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[138,139,140,141,142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[144,120,103,121,24,25,36,42,122,104,47,123,73,74,98],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[145,146,147,148,149],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[150,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[152,153,154,155,156,157,14,158,15,159,160,16,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,17,176,177,178,179,180,181,182,183,18,184,185,19,20,21,22,23,186,187,188,189,190,191,192,193,194,195,196,197,116,198,199,200,144,124,125,201,126,127,128,129,130,202,203,204,205,206,207,208,103,121,209,210,24,25,211,26,27,28,212,29,30,213,31,32,33,34,35,214,215,216,217,218,219,220,131,221,2,222,223,224,225,226,150,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,36,37,38,39,132,299,300,110,111,112,113,301,114,302,115,303,304,305,306,307,308,309,310,311,312,313,314,40,315,316,317,318,319,320,321,322,323,41,324,325,326,327,328,329,330,331,332,333,334,335,42,122,336,151,337,338,339,43,44,104,45,46,47,48,49,340,50,51,117,52,53,341,54,342,55,138,139,343,344,345,56,346,347,348,57,349,350,58,351,145,352,353,140,354,355,356,59,357,358,146,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,107,396,3,4,397,398,5,399,6,7,60,8,61,400,401,62,135,402,63,108,403,9,64,65,66,67,10,404,136,405,406,407,147,141,408,409,410,411,68,148,412,413,414,415,416,417,69,143,418,419,70,420,123,71,72,421,422,423,73,74,424,425,426,427,428,429,430,431,432,433,434,435,436,133,134,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,75,76,77,78,453,79,80,454,455,81,82,83,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,149,477,478,479,84,480,481,482,483,484,0,485,486,487,488,489,490,118,491,119,492,85,11,86,12,87,493,88,89,90,91,92,13,494,495,93,496,94,95,96,97,98,99,100],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[194,124,125,126,127,128,129,130,131,221,36,37,38,39,132,299,45,6,61,86,90,91,93,96],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[358,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[482],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[145,146,365,147,148,149],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[307,324],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[60,135,136,137],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[14,158,15,160,16,175,17,18,184,185,19,20,21,22,23,196,116,198,200,121,24,25,211,26,27,28,29,30,31,32,33,34,35,219,222,223,251,252,254,259,264,271,272,274,279,284,292,293,295,36,37,38,39,132,40,334,42,122,44,104,45,46,47,48,49,50,51,117,52,53,341,54,55,343,344,345,56,346,347,348,57,349,350,58,351,353,59,362,365,375,381,384,385,386,387,389,390,391,4,5,7,60,61,400,62,63,9,64,65,66,67,10,405,406,407,68,412,414,419,70,123,71,72,73,74,425,433,436,446,75,76,77,78,453,79,80,455,81,82,83,456,467,474,478,84,483,484,488,489,118,119,85,11,86,12,87,88,89,90,91,92,13,93,95,96,97,98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[497],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":74,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":235,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":72,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":343,"org.easymock.tests2.DelegateToTest.testReturnException":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":292,"org.easymock.tests.MockClassControlTest.testToString":328,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":457,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":365,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":37,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":188,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":169,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":350,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":333,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":299,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":320,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":428,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":467,"org.easymock.tests.ReplayStateInvalidUsageTest.times":311,"org.easymock.tests2.DependencyTest.testClassMocking":486,"org.easymock.tests2.AnswerTest.answer":433,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":440,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":166,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":316,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests.LimitationsTest.mockFinalMethod":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":206,"org.easymock.tests2.DependencyTest.testClassMockingSupport":487,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":41,"org.easymock.tests2.CaptureTest.testCapture1_2446744":493,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":438,"org.easymock.tests.UsageThrowableTest.throwError":18,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":305,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":168,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":383,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.MockingTest.testInterfaceMocking":294,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":306,"org.easymock.tests2.CompareToTest.testLessOrEqual":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":173,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":182,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":258,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":79,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":198,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":212,"org.easymock.tests.MockClassControlTest.testEquals":332,"org.easymock.tests2.EasyMockSupportClassTest.testAll":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":439,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":204,"org.easymock.tests.MockNameTest.defaultName":183,"org.easymock.tests2.UsageConstraintsTest.testMatches":402,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":321,"org.easymock.samples.ExampleTest.voteForRemovals":54,"org.easymock.tests.UsageVarargTest.allKinds":35,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":205,"org.easymock.samples.BasicClassMockTest.testPrintContent":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":22,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":195,"org.easymock.tests2.UsageConstraintsTest.greaterThan":108,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":357,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":115,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":481,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":419,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":334,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":77,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":190,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":490,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":78,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":425,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":276,"org.easymock.tests2.CaptureTest.testCapture2_2446744":495,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":483,"org.easymock.tests2.UsageTest.moreThanOneArgument":420,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":243,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":34,"org.easymock.tests.GenericTest.testBridgedEquals":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":160,"org.easymock.tests.UsageExpectAndReturnTest.longType":272,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":267,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":66,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":318,"org.easymock.tests.UsageCallCountTest.tooManyCalls":16,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":385,"org.easymock.tests.MockingTest.testNiceClassMocking":298,"org.easymock.tests.MockingTest.testClassMocking":290,"org.easymock.tests2.UsageConstraintsTest.testContains":401,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":478,"org.easymock.tests2.UsageConstraintsTest.testFind":398,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.MockTypeTest.fromEasyMockClass":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":395,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests.UsageExpectAndReturnTest.object":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":455,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":30,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":180,"org.easymock.tests.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":151,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":214,"org.easymock.tests2.ConstraintsToStringTest.findToString":497,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":475,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":116,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.MockClassControlTest.testHashCode":331,"org.easymock.tests2.EasyMockSupportTest.testVerify":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":372,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":153,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":437,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":29,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":300,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":248,"org.easymock.tests2.UsageTest.openCallCountByLastCall":421,"org.easymock.tests.DefaultClassInstantiatorTest.object":110,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":152,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":178,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":381,"org.easymock.tests2.UsageTest.resumeIfFailure":424,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":164,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.StubTest.stubWithReturnValue":485,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":413,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":278,"org.easymock.tests2.SerializationTest.testAllMockedMethod":407,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":241,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":106,"org.easymock.samples.SupportTest.voteForRemovals":56,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":247,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":434,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":216,"org.easymock.tests.UsageExpectAndThrowTest.object":259,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":64,"org.easymock.tests2.DelegateToTest.testWrongClass":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":138,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":431,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":454,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":412,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":187,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":101,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":174,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":122,"org.easymock.tests.UsageVarargTest.varargByteAccepted":33,"org.easymock.tests2.ThreadingTest.testThreadSafe":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":376,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":181,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":246,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":301,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":309,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests2.SerializationTest.testClass":405,"org.easymock.tests.LimitationsTest.mockNativeMethod":219,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests2.NameTest.nameForMocksControl":461,"org.easymock.tests2.MockedExceptionTest.testMockedException":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":364,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":394,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":348,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":414,"org.easymock.tests.MockingTest.testNicePartialClassMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.CompareToTest.testCompareEqual":1,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":324,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":391,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":65,"org.easymock.tests.MockingTest.testTwoMocks":291,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":257,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":404,"org.easymock.samples.ExampleTest.removeNonExistingDocument":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":112,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":482,"org.easymock.tests2.MockBuilderTest.testCreateMockString":418,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":476,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":375,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.LimitationsTest.privateConstructor":218,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":23,"org.easymock.tests2.UsageTest.defaultResetToNice":423,"org.easymock.samples.ExampleTest.voteAgainstRemovals":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.UsageVarargTest.differentLength":213,"org.easymock.tests2.CallbackTest.callback":84,"org.easymock.tests2.UsageConstraintsTest.equals":397,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":140,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":39,"org.easymock.tests.UsageCallCountTest.tooFewCalls":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":189,"org.easymock.tests.UsageThrowableTest.throwCheckedException":20,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":102,"org.easymock.tests.MockingTest.testStrictClassMocking":289,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":386,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":389,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ObjectMethodsTest.testHashCode":179,"org.easymock.tests2.CompareToTest.testGreateOrEqual":137,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":484,"org.easymock.tests2.NameTest.nameForNiceMock":460,"org.easymock.tests2.DependencyTest.testInterfaceMocking":488,"org.easymock.samples.ExampleTest.addDocument":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":377,"org.easymock.tests2.DelegateToTest.testStubDelegate":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":415,"org.easymock.tests.UsageVarargTest.varargLongAccepted":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":234,"org.easymock.tests.UsageExpectAndReturnTest.floatType":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":474,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":403,"org.easymock.tests.UsageThrowableTest.noUpperLimit":184,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":396,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":426,"org.easymock.tests2.SerializationTest.test":406,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":111,"org.easymock.tests2.UsageConstraintsTest.testSame":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":270,"org.easymock.samples.SupportTest.addDocument":345,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":388,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":367,"org.easymock.tests.GenericTest.testPackageScope":222,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":296,"org.easymock.tests2.NameTest.nameForMock":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":143,"org.easymock.tests2.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":263,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":317,"org.easymock.tests2.MockedExceptionTest.testRealException":479,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":314,"org.easymock.tests2.NameTest.nameForStrictMock":459,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":393,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":430,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":113,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":408,"org.easymock.tests2.UsageStrictMockTest.range":98,"org.easymock.tests2.UsageConstraintsTest.lessThan":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":233,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":371,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":121,"org.easymock.tests2.MockBuilderTest.testWithConstructor":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":368,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":114,"org.easymock.tests.UsageVarargTest.varargShortAccepted":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":159,"org.easymock.tests2.UsageConstraintsTest.cmpTo":400,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":422,"org.easymock.tests2.CaptureTest.testCaptureFromStub":494,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":304,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":409,"org.easymock.tests.UsageTest.unexpectedCallWithArray":103,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":158,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":55,"org.easymock.tests.UsageStrictMockTest.testVerify":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":344,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":203,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.LimitationsTest.abstractClass":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":80}}]
