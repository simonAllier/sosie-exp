[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[6,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[6,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[7,8],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,9,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[75,76,77,19,78,79,80,81,82,83,29,84,85,86,87,88,89,90],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[10,91,92,12,13,16,93,19,94,78,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,80,123,124,125,20,21,22,23,24,126,127,128,129,27,28,130,131,132,133,134,135,136,81,83,137,138,139,140,141,142,143,144,145,29,146,84,147,148,149,150,151,152,153,154,155,156,86,157,158,159,160,161,162,163,164,165,166,30,167,168,169,170,8,171,172,173,174,175,176,177,178,179,180,181,182,31,183,184,185,186,187,34,35,37,38,41,42,43,44,46,47,188,189,190,191,192,193,194,195,196,197,198,199,200,48,49,50,51,52,53,54,55,9,56,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[201,202,203,204,205,206,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:207","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[208,176],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[209,210,211,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[212,213,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[6,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[17,215,18,216,94,78,122,217,218,219,220,125,221,222,223,224,225,82,83,226,227,228,229,143,230,231,146,84,155,232,157,233,160,234,235,162,236,237,8,171,172,238,239,240,190,192,193,195,196,200,241,242,243,244,50],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[51,9,67],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[94,245,82,83,146],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[64],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[246,247,248,249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[34,36,44,50,51,55,9,57,67],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[250,251,252,253,254,32,33,255],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[17,18,19,94,78,256,257,80,217,218,219,220,258,259,260,261,262,263,7,264,265,266,267,268,269,81,82,83,143,270,29,146,84,149,150,153,154,86,232,234,235,87,88,89,90,236,271,8,171,172,238,178,240,185,272,191,194,196,200,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[105,111,118,119,24,225,274,275,276,277,278,279,280],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[201,202,203,281,282,168,206,207,283,3],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[10,11,12,13,14,15,16,17,284,93,215,18,19,216,94,78,79,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,257,122,80,217,218,123,124,219,220,125,20,21,22,23,24,126,127,128,129,285,275,286,287,288,27,28,131,132,289,290,291,276,292,293,294,295,296,277,297,298,299,300,301,302,278,279,303,304,133,81,82,83,305,280,306,307,308,251,138,140,144,230,29,231,146,84,85,147,149,150,153,154,155,156,86,232,157,233,158,159,234,235,162,164,166,30,167,168,170,172,238,177,179,180,182,252,253,186,254,32,33,309,187,310,311,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,9,56,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,3,4,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests2.UsageTest.argumentsOrdered":235,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":270,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":233,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests2.DelegateToTest.testReturnException":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":214,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests.MockClassControlTest.testToString":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":272,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":289,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":174,"org.easymock.tests.UsageExpectAndThrowTest.object":297,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":211,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":145,"org.easymock.tests2.DelegateToTest.testWrongClass":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":56,"org.easymock.tests2.UsageTest.wrongArguments":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":12,"org.easymock.tests.UsageStrictMockTest.range":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":228,"org.easymock.samples.ExampleTest.answerVsDelegate":251,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":8,"org.easymock.tests2.CaptureTest.testPrimitive":37,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.UsageTest.moreThanOneArgument":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":227,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":274,"org.easymock.tests2.CaptureTest.testCaptureNone":42,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":20,"org.easymock.tests2.CaptureTest.testCapture_2617107":36,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":237,"org.easymock.tests2.UsageConstraintsTest.any":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":286,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":231,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.ReplayStateInvalidUsageTest.times":212,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":121,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":244,"org.easymock.tests2.CaptureTest.testAnd":34,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests2.NameTest.nameForMocksControl":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.DelegateToTest.testDelegate":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":292,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":171,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":302,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests2.CaptureTest.testCaptureLast":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":225,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":256,"org.easymock.tests2.CaptureTest.testCapture1_2446744":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":242,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":234,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.tests.UsageThrowableTest.throwError":95,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":284,"org.easymock.tests.UsageStrictMockTest.differentMethods":78,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":263,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":166,"org.easymock.tests2.MockBuilderTest.testCreateMockString":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.tests.UsageExpectAndThrowTest.floatType":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":175,"org.easymock.samples.PartialClassMockTest.testGetArea":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":290,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":260,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":101,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":117,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":277,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":193,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":14,"org.easymock.tests.UsageCallCountTest.tooFewCalls":77,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":113,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":61,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":229,"org.easymock.tests.UsageThrowableTest.throwCheckedException":98,"org.easymock.tests2.EasyMockSupportClassTest.testAll":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureAll":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests.MockNameTest.defaultName":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":150,"org.easymock.tests2.UsageConstraintsTest.testMatches":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.samples.ExampleTest.voteForRemovals":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":204,"org.easymock.tests2.NameTest.nameForNiceMock":89,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests.UsageVarargTest.allKinds":25,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":224,"org.easymock.tests2.DelegateToTest.testStubDelegate":187,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":100,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":288,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":282,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":168,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":39,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":283,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":190,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":96,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":285,"org.easymock.tests2.CaptureTest.testCaptureFirst":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":191,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":109,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.CaptureTest.testCapture2_2446744":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":172,"org.easymock.tests2.NameTest.nameForMock":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":114,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":278,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":136,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":293,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests2.NameTest.nameForStrictMock":88,"org.easymock.tests2.UsageConstraintsTest.testContains":60,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":163,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests.MockTypeTest.fromEasyMockClass":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":181,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageExpectAndReturnTest.object":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":169,"org.easymock.tests2.UsageStrictMockTest.range":146,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":202,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":281,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":189,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":210,"org.easymock.tests2.UsageConstraintsTest.testOr":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":206,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":178,"org.easymock.tests.UsageTest.wrongArguments":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":241,"org.easymock.tests2.UsageConstraintsTest.cmpTo":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":249,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests2.CaptureTest.testCaptureFromStub":45,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":271,"org.easymock.tests.UsageTest.unexpectedCallWithArray":217,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":295,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":116,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":269,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":119,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":222,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":40,"org.easymock.tests2.UsageTest.resumeIfFailure":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":23,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":194}}]
