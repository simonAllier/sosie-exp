[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[7,8,144,145,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[242,243,244,245],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,247,248,1,2,3,5,7,8,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,249,53,54,55,250,56,57,59,60,63,64,65,66,251,67,68,69,70,71,72,73,74,75,76,252,77,78,79,80,253,254,82,255,256,83,84,85,257,86,87,88,89,91,93,94,258,259,97,98,99,100,101,102,103,104,105,260,106,107,108,109,110,111,112,113,261,114,262,115,116,117,263,263,264,264,120,122,123,124,125,127,128,131,132,133,134,135,265,266,267,268,136,269,137,138,139,270,271,142,144,145,147,272,148,273,274,275,276,242,243,277,244,245,149,150,151,152,278,279,280,281,282,153,154,155,156,157,158,159,160,283,284,285,286,287,161,288,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,221,289,290,291,292,293,294,222,223,224,225,226,227,228,229,230,231,232,295,233,234,235,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[296,297,298],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[0,1,3,23,24,25,123,150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[247,248],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[242,243,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[31,300,45,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[42,92,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"state","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[303],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[246],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[253,254,82,255,87,94,106,265,266,267,268,136,269,139,152,159,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,218,224,226,227,228,229,230,231,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[296,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":214,"org.easymock.tests2.UsageTest.argumentsOrdered":96,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":268,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":92,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests2.DelegateToTest.testReturnException":83,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":266,"org.easymock.tests.MockingTest.testPartialClassMocking":233,"org.easymock.samples.SupportTest.voteForRemovals":120,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":247,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":46,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":116,"org.easymock.tests2.DelegateToTest.testWrongClass":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":223,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests2.UsageTest.wrongArguments":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":263,"org.easymock.tests.UsageStrictMockTest.range":144,"org.easymock.samples.ExampleTest.answerVsDelegate":123,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":99,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":282,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":193,"org.easymock.tests.UsageVerifyTest.twoReturns":160,"org.easymock.tests.UsageVarargTest.varargByteAccepted":170,"org.easymock.tests2.ThreadingTest.testThreadSafe":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":165,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":239,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":129,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":156,"org.easymock.tests2.UsageConstraintsTest.any":36,"org.easymock.tests2.StubTest.stub":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":267,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests.LimitationsTest.mockNativeMethod":149,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageTest.strictResetToDefault":88,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":9,"org.easymock.tests2.MockedExceptionTest.testMockedException":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":74,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests2.DelegateToTest.testDelegate":86,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.CompareToTest.testCompareEqual":299,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":47,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.tests.UsageThrowableTest.throwError":224,"org.easymock.tests.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests.UsageVerifyTest.twoThrows":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.PartialClassMockTest.testGetArea":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":281,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests2.UsageTest.niceToStrict":91,"org.easymock.tests2.UsageConstraintsTest.testNotNull":50,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":231,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.UsageTest.defaultResetToNice":258,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":26,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":155,"org.easymock.tests.UsageCallCountTest.tooFewCalls":237,"org.easymock.tests.UsageOverloadedMethodTest.overloading":138,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":102,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":184,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageThrowableTest.throwCheckedException":228,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":286,"org.easymock.samples.ExampleTest.voteForRemovals":127,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":18,"org.easymock.tests.UsageVarargTest.allKinds":172,"org.easymock.tests2.DependencyTest.testInterfaceMocking":115,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":130,"org.easymock.samples.ExampleTest.addDocument":126,"org.easymock.tests2.DelegateToTest.testStubDelegate":84,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":230,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":269,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":142,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":262,"org.easymock.tests.UsageVarargTest.varargLongAccepted":169,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":15,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":264,"org.easymock.tests.UsageThrowableTest.noUpperLimit":225,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests2.SerializationTest.test":11,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":298,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":226,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.samples.SupportTest.addDocument":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":265,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":256,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":73,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests2.UsageTest.moreThanOneArgument":89,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":250,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":171,"org.easymock.tests.GenericTest.testBridgedEquals":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":240,"org.easymock.tests.UsageExpectAndReturnTest.longType":176,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":185,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":272,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageCallCountTest.tooManyCalls":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":275,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":236,"org.easymock.tests2.MockedExceptionTest.testRealException":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":139,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageExpectAndReturnTest.object":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":249,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":303,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":167,"org.easymock.tests.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":232,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":71,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":290,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.UsageTest.wrongArguments":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":151,"org.easymock.tests2.EasyMockSupportTest.testVerify":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":186,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.UsageVarargTest.varargShortAccepted":168,"org.easymock.tests2.UsageConstraintsTest.cmpTo":37,"org.easymock.tests.UsageVarargTest.varargCharAccepted":166,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":248,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":4,"org.easymock.tests2.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":276,"org.easymock.tests2.CaptureTest.testCaptureFromStub":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":227,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":141,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":261,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":128,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":22,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests2.UsageTest.resumeIfFailure":259,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":164}}]
