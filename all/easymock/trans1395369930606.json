[{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,16,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[81,82,83],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[84,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[45,46,47,48,16,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,86,87,88,79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,89,45,90,46,91,12,15,17,50,92,51,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:153","failures":[94,95,96,97,98,99,100,101,48,102,103,104],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,105,45,91,106,47,13,17,32,34,42,43,44,50,93,107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[109,110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,0,144,1,2,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,81,165,166,167,168,82,169,170,83,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,89,202,203,204,105,205,206,207,80,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,45,261,3,4,262,263,90,46,264,5,6,265,91,94,95,96,97,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,7,8,9,10,316,317,106,318,319,320,321,322,47,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,11,12,348,13,14,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,98,99,100,101,48,102,371,372,373,374,375,376,377,15,16,17,378,103,379,380,381,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,382,39,40,41,42,43,383,44,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,49,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,84,428,429,430,431,432,433,434,435,436,85,437,438,439,440,441,442,443,444,445,446,447,50,18,448,19,92,51,20,21,93,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,107,104,470,108,471,472,473,474,475,476,477,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,478,72,479,73,74,75,76,77,78,480,481,482,483,484,86,87,88,485,486,487,79,488,489,490],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[491,188,190,191,192,193,194,195,197,109,198,199,201],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[335,351,352,359,366,472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[111,112,113,114,115,116,118,121,122,123,124,125,126,127,130,131,139,141,142,143,0,144,1,2,145,155,162,163,164,81,166,167,168,82,169,170,83,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,89,204,105,205,207,80,208,209,210,211,214,218,219,220,223,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,250,252,254,258,45,261,3,4,262,263,90,46,264,5,6,265,91,96,271,278,279,280,281,283,284,285,287,288,289,293,296,306,312,7,8,9,10,317,106,318,320,321,322,47,328,329,346,347,11,12,348,13,14,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,48,371,372,373,374,15,16,17,378,24,31,35,382,39,40,387,388,390,398,399,49,416,418,420,421,422,423,425,426,50,18,19,92,51,20,21,93,449,450,451,453,454,455,456,457,458,459,460,461,462,463,464,465,468,469,107,104,470,108,471,472,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,478,72,479,73,74,75,76,77,78,481,482,485,487,79,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[321,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[81,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[153,269],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[202,105,205,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[228],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[320],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[287,288,289,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[188,189,190,191,192,193,194,195,197,198,199,200,201,110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":33,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":263,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":123,"org.easymock.tests2.DelegateToTest.testReturnException":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":99,"org.easymock.tests.MockingTest.testPartialClassMocking":387,"org.easymock.tests.MockClassControlTest.testToString":439,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":315,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":52,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":296,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":469,"org.easymock.tests2.UsageTest.wrongArguments":4,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":325,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":411,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":392,"org.easymock.tests2.UsageConstraintsTest.testNull":167,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":240,"org.easymock.tests2.CaptureTest.testPrimitive":191,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":108,"org.easymock.tests.UsageTest.moreThanOneArgument":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":71,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":480,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageVarargTest.varargIntAccepted":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":461,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":465,"org.easymock.tests.ReplayStateInvalidUsageTest.times":434,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests2.DependencyTest.testClassMocking":128,"org.easymock.tests2.AnswerTest.answer":89,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":149,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":408,"org.easymock.tests2.CaptureTest.testAnd":188,"org.easymock.tests2.UsageTest.strictResetToDefault":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":373,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":484,"org.easymock.tests2.DelegateToTest.testDelegate":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":67,"org.easymock.tests.LimitationsTest.mockFinalMethod":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":477,"org.easymock.tests2.DependencyTest.testClassMockingSupport":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":192,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":147,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":428,"org.easymock.tests.UsageThrowableTest.throwError":72,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":410,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":397,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":314,"org.easymock.samples.PartialClassMockTest.testGetArea":122,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":429,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":462,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":395,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":53,"org.easymock.tests2.UsageTest.niceToStrict":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":250,"org.easymock.tests2.MockBuilderTest.testCreateMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":61,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":88,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":418,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":323,"org.easymock.tests.UsageOverloadedMethodTest.overloading":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":175,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":79,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":362,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":174,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":197,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":452,"org.easymock.tests.MockClassControlTest.testEquals":443,"org.easymock.tests2.EasyMockSupportClassTest.testAll":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":475,"org.easymock.tests2.CaptureTest.testCaptureAll":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":148,"org.easymock.tests.MockNameTest.defaultName":467,"org.easymock.tests2.UsageConstraintsTest.testMatches":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.samples.ExampleTest.voteForRemovals":116,"org.easymock.tests.UsageVarargTest.allKinds":460,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":476,"org.easymock.samples.BasicClassMockTest.testPrintContent":127,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":77,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":273,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":319,"org.easymock.tests2.UsageConstraintsTest.greaterThan":178,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":220,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":221,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":468,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":98,"org.easymock.tests2.CaptureTest.testCaptureFirst":201,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":358,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.CaptureTest.testCapture2_2446744":200,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":459,"org.easymock.tests.GenericTest.testBridgedEquals":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":425,"org.easymock.tests.UsageExpectAndReturnTest.longType":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":473,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":70,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":466,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":183,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":68,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":426,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":76,"org.easymock.tests.MockingTest.testNiceClassMocking":393,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":279,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":419,"org.easymock.tests2.UsageConstraintsTest.testContains":173,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":96,"org.easymock.tests2.UsageConstraintsTest.testFind":166,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":49,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":141,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":346,"org.easymock.tests.UsageExpectAndReturnTest.object":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":239,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":454,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":481,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":224,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":449,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":487,"org.easymock.tests.MockClassControlTest.testHashCode":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":303,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":482,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":146,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":206,"org.easymock.tests.UsageVarargTest.varargCharAccepted":453,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":337,"org.easymock.tests2.CaptureTest.testCaptureMultiple":491,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":44,"org.easymock.tests2.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":242,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":86,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":58,"org.easymock.tests.CapturesMatcherTest.test":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":445,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":312,"org.easymock.tests2.UsageTest.resumeIfFailure":265,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":101,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":360,"org.easymock.tests2.SerializationTest.testAllMockedMethod":289,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.samples.SupportTest.voteForRemovals":125,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":64,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":202,"org.easymock.tests.UsageExpectAndThrowTest.object":62,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":181,"org.easymock.tests2.DelegateToTest.testWrongClass":318,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":471,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":472,"org.easymock.samples.ConstructorCalledMockTest.testTax":119,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":137,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":63,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":252,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":436,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":396,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests.UsageUnorderedTest.message":478,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":458,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":307,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":423,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":126,"org.easymock.tests2.CaptureTest.testCapture_2617107":190,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":381,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":42,"org.easymock.tests2.UsageConstraintsTest.any":171,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":433,"org.easymock.tests2.StubTest.stub":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":43,"org.easymock.tests.UsageExpectAndThrowTest.longType":55,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":432,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests2.SerializationTest.testClass":287,"org.easymock.tests.LimitationsTest.mockNativeMethod":416,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":152,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests2.NameTest.nameForMocksControl":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":154,"org.easymock.tests2.MockedExceptionTest.testMockedException":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":295,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":390,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":254,"org.easymock.tests.MockingTest.testNicePartialClassMocking":388,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":150,"org.easymock.tests2.CaptureTest.testCaptureLast":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":285,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":182,"org.easymock.tests.MockingTest.testTwoMocks":386,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":60,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":186,"org.easymock.samples.ExampleTest.removeNonExistingDocument":117,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":157,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":228,"org.easymock.tests2.MockBuilderTest.testCreateMockString":260,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":297,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":292,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":204,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":225,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":306,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests.LimitationsTest.privateConstructor":415,"org.easymock.tests2.UsageConstraintsTest.testNotNull":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":78,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests2.UsageTest.defaultResetToNice":264,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":366,"org.easymock.tests.UsageVarargTest.differentLength":455,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":151,"org.easymock.tests2.CallbackTest.callback":321,"org.easymock.tests2.UsageConstraintsTest.equals":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":215,"org.easymock.tests.UsageTest.openCallCountByLastCall":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":104,"org.easymock.tests.UsageCallCountTest.tooFewCalls":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":326,"org.easymock.tests.UsageThrowableTest.throwCheckedException":75,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":280,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":435,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":283,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.NameTest.nameForNiceMock":9,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":130,"org.easymock.samples.ExampleTest.addDocument":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":308,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.stubAnswer":105,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":457,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":32,"org.easymock.tests.UsageExpectAndReturnTest.floatType":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":223,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":120,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests.UsageThrowableTest.noUpperLimit":479,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":193,"org.easymock.tests2.SerializationTest.test":288,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":352,"org.easymock.samples.SupportTest.addDocument":124,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":282,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":298,"org.easymock.tests.GenericTest.testPackageScope":328,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":274,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":391,"org.easymock.tests2.NameTest.nameForMock":7,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":363,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":66,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":374,"org.easymock.tests2.MockedExceptionTest.testRealException":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":36,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":85,"org.easymock.tests2.NameTest.nameForStrictMock":8,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":136,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":180,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":246,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":31,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests2.CaptureTest.testCaptureRightOne":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":302,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.MockBuilderTest.testWithConstructor":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":299,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":364,"org.easymock.tests.UsageVarargTest.varargShortAccepted":456,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":424,"org.easymock.tests2.UsageConstraintsTest.cmpTo":172,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":26,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests2.CaptureTest.testCaptureFromStub":199,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":84,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":247,"org.easymock.tests.UsageTest.unexpectedCallWithArray":448,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":365,"org.easymock.tests2.CaptureTest.testCapture":109,"org.easymock.tests2.UsageConstraintsTest.constraints":164,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":348,"org.easymock.samples.ExampleTest.addAndChangeDocument":118,"org.easymock.tests.UsageStrictMockTest.testVerify":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":121,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":347,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":463,"org.easymock.tests.LimitationsTest.abstractClass":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":357,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":464,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":237}}]
