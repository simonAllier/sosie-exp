[{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[19,20,21,22,22,23,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,2,3,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22,22,23,23,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[160,126,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,137,184,185,186,187,76,188,87,18,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,9,205,206,207,150,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[224,225,226,126,161,162,163,164,165,166,167,227,168,169,170,228,229,230,231,55,56,57,61,62,64,65,66,232,233,234,235,236,237,68,69,71,72,238,239,240,241,186,242,187,76,85,18,89,189,192,193,194,195,196,243,244,93,94,95,245,207,150,246,208,209,210,113,247,248,114,249,250,251,212,213,214,216,217,252,218,253,254,255,256,257,219,220,258,259,260,221,222,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[162,167,169,170,194,204,207,208,213,214,216,217,219,222,223],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[261,262,263,264,265,266,19,20,21,267,268,269,270,271,272,24,273,25,274,275,224,160,161,164,165,276,167,227,168,169,170,229,182,277,278,279,280,281,282,283,284,285,286,183,287,288,289,290,0,231,291,292,293,294,295,33,36,46,52,296,56,59,61,62,232,3,67,68,69,70,297,71,72,298,299,73,300,301,302,239,185,240,303,241,186,242,187,304,305,306,75,76,188,77,78,79,82,87,307,190,191,193,308,309,310,311,312,313,314,315,316,196,90,317,318,319,320,321,322,323,324,325,326,205,327,328,329,330,107,108,206,207,246,210,214,216,217,252,331,332,256,257,333,334,335,336,337,338,339,117,222,223,122,123,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[107,109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[24,273,25,340],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[19,20,21,22,22,23,23,24,25,33,36,46,52,55,56,57,59,60,61,62,64,65,66,3,67,68,69,70,71,72,73,75,76,77,78,79,80,82,85,86,87,18,89,90,91,92,93,94,95,96,97,98,107,108,109,110,113,114,259,117,121,122,123,124],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[276,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[341,342,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[24,273,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[261,263,264,266,268,154,344],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[345,290,82],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[5,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[347,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[348,141],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[262,349,271,350,272,351,352,190],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[353,33,354,84],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[19,20,21,22,22,23,23,24,25,28,29,355,356,357,358,359,360,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,361,55,362,56,57,58,59,60,61,62,63,64,65,363,364,66,1,2,3,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,18,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,259,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[19,20,21,22,22,23,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,1,2,3,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,18,88,89,90,91,92,93,94,95,98,365,99,100,101,102,103,104,366,105,106,107,108,109,110,113,114,115,117,118,121,122,123,124],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[106],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[368,182,278,279,369,280,281,282,284,370,285,127,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[24,273,25,340],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[162,167,169,170,204,207,208,213,214,216,217,219,222,223],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[367],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.UsageTest.argumentsOrdered":170,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":12,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.tests2.StubTest.stubWithReturnValue":347,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":295,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":10,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.samples.SupportTest.voteForRemovals":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":179,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":106,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":340,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":36,"org.easymock.tests.UsageExpectAndThrowTest.object":320,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":292,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":275,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":158,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":142,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.tests.UsageStrictMockTest.range":208,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.samples.ExampleTest.answerVsDelegate":262,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":114,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":187,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":355,"org.easymock.tests2.CaptureTest.testPrimitive":279,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":30,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests2.CaptureTest.testCaptureNone":283,"org.easymock.tests.UsageUnorderedTest.message":219,"org.easymock.tests.UsageVerifyTest.twoReturns":223,"org.easymock.tests.UsageVarargTest.varargByteAccepted":328,"org.easymock.tests2.ThreadingTest.testThreadSafe":184,"org.easymock.tests.UsageTest.argumentsOrdered":217,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":47,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":332,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":258,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":180,"org.easymock.tests2.CaptureTest.testCapture_2617107":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":308,"org.easymock.tests2.UsageConstraintsTest.any":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":60,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.UsageExpectAndThrowTest.longType":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":11,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":103,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":175,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests2.DependencyTest.testClassMocking":26,"org.easymock.tests2.AnswerTest.answer":298,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":109,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":359,"org.easymock.tests2.CaptureTest.testAnd":182,"org.easymock.tests2.UsageTest.strictResetToDefault":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":85,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":237,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":35,"org.easymock.tests2.DelegateToTest.testDelegate":352,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":321,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":79,"org.easymock.tests.LimitationsTest.mockFinalMethod":118,"org.easymock.tests2.CompareToTest.testCompareEqual":345,"org.easymock.tests2.CaptureTest.testCaptureLast":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":196,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":287,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":293,"org.easymock.tests2.DependencyTest.testClassMockingSupport":27,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":195,"org.easymock.tests2.CaptureTest.testCapture1_2446744":369,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":81,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":169,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.tests.UsageThrowableTest.throwError":309,"org.easymock.tests.UsageStrictMockTest.differentMethods":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":248,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":101,"org.easymock.tests2.ConstraintsToStringTest.andToString":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":149,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":32,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":299,"org.easymock.tests.UsageVerifyTest.twoThrows":222,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":197,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":87,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":259,"org.easymock.tests2.UsageTest.niceToStrict":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":41,"org.easymock.tests.LimitationsTest.privateConstructor":116,"org.easymock.tests2.UsageConstraintsTest.testNotNull":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":316,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":341,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.UsageTest.defaultResetToNice":353,"org.easymock.tests2.MockBuilderTest.testCreateMock":64,"org.easymock.samples.ExampleTest.voteAgainstRemovals":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":339,"org.easymock.tests.UsageVarargTest.differentLength":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":49,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":83,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":172,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":128,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":8,"org.easymock.tests.UsageCallCountTest.tooFewCalls":254,"org.easymock.tests.UsageOverloadedMethodTest.overloading":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":191,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":284,"org.easymock.tests.UsageThrowableTest.throwCheckedException":313,"org.easymock.tests2.EasyMockSupportClassTest.testAll":33,"org.easymock.tests.MockClassControlTest.testEquals":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":200,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":356,"org.easymock.tests2.CaptureTest.testCaptureAll":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":16,"org.easymock.tests.MockNameTest.defaultName":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":225,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.samples.ExampleTest.voteForRemovals":266,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":301,"org.easymock.tests2.NameTest.nameForNiceMock":236,"org.easymock.tests.UsageVarargTest.allKinds":330,"org.easymock.tests2.DependencyTest.testInterfaceMocking":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":221,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.samples.ExampleTest.addDocument":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":48,"org.easymock.tests2.DelegateToTest.testStubDelegate":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":53,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":315,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":14,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":34,"org.easymock.tests.UsageVarargTest.varargLongAccepted":327,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.samples.ExampleTest.voteForRemoval":263,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":88,"org.easymock.tests.UsageExpectAndReturnTest.floatType":335,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":73,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests2.ConstraintsToStringTest.orToString":171,"org.easymock.tests.UsageThrowableTest.noUpperLimit":310,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":192,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests2.SerializationTest.test":273,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":311,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.samples.SupportTest.addDocument":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":9,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":349,"org.easymock.tests2.CaptureTest.testCaptureFirst":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":240,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":38,"org.easymock.tests.GenericTest.testPackageScope":107,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":300,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":65,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":329,"org.easymock.tests.GenericTest.testBridgedEquals":110,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":256,"org.easymock.tests2.NameTest.nameForMock":234,"org.easymock.tests.UsageExpectAndReturnTest.longType":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":344,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":302,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":364,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":294,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":84,"org.easymock.tests.UsageCallCountTest.tooManyCalls":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":199,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":50,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":250,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":319,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":314,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testNiceClassMocking":125,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":362,"org.easymock.tests2.NameTest.nameForStrictMock":235,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":130,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":343,"org.easymock.tests.MockTypeTest.fromEasyMockClass":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":78,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":245,"org.easymock.tests.UsageExpectAndReturnTest.object":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":29,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":56,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests2.UsageConstraintsTest.lessThan":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":242,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":239,"org.easymock.tests2.CaptureTest.testCaptureRightOne":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":203,"org.easymock.tests2.UsageConstraintsTest.testOr":133,"org.easymock.tests.UsageRangeTest.combination":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":74,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":76,"org.easymock.tests.UsageTest.wrongArguments":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":39,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":337,"org.easymock.tests2.EasyMockSupportTest.testVerify":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":43,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":307,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":255,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":296,"org.easymock.tests2.UsageConstraintsTest.cmpTo":290,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":365,"org.easymock.tests2.CaptureTest.testCaptureMultiple":368,"org.easymock.tests2.CompareToTest.testLessThan":348,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":342,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":305,"org.easymock.tests.DefaultClassInstantiatorTest.object":99,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests2.CaptureTest.testCaptureFromStub":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":111,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":57,"org.easymock.tests.UsageTest.unexpectedCallWithArray":213,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":220,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":44,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":312,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":207,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":331,"org.easymock.tests2.CaptureTest.testCapture":370,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":86,"org.easymock.tests2.ConstraintsToStringTest.notToString":173,"org.easymock.tests.CapturesMatcherTest.test":17,"org.easymock.tests.UsageStrictMockTest.testVerify":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":5,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":269,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":206,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":176,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests2.UsageTest.resumeIfFailure":228,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":113,"org.easymock.tests.LimitationsTest.abstractClass":115,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":186}}]
