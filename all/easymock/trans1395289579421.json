[{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:117","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[198,200,208,308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[330,331,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,85,88,89,90,91,92,96,99,114,119,298],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[333,230,231,232],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[65,334,335,336,95,110,111,112,113,114,115,337,164,222,223,224,225,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,123,124,125,126,127,128,129,131,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[338,339,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[89,90,99],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[341,300,317,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,106,109,110,111,112,113,114,115,116,118,119,123,125,126,127,128,129,143,144,145,146,147,148,149,150,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,187,190,196,198,199,205,206,208,211,212,213,214,216,221,226,227,228,230,231,233,234,235,236,237,238,239,241,242,243,244,246,258,259,260,261,264,266,267,271,272,273,275,276,277,278,282,283,285,286,287,288,289,290,295,296,297,298,299,303,305,307,308,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[2,116,221,226,342,343,227,228,229,327,328],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[335,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[335,336,344,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[39,347,99,100,103,104,107,108,124,127,274,280,281,288],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[60,61,62,63,86,98,127,128,136,145,282,288,289,297,301,302,304,306,307,312,315,318,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[0,348,349,350,192,230,262,351,263,352,264,265,266,267,268,269,353,270],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[354,355,356],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,357,358,359,360,361,362,363,37,38,348,345,364,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,365,366,367,368,369,370,66,371,67,372,373,374,354,375,376,377,378,68,69,70,71,72,73,74,75,76,334,335,336,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,349,379,380,381,382,350,383,384,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,385,120,121,122,123,124,125,126,127,128,129,130,386,387,388,131,132,389,133,390,391,392,393,394,395,396,397,398,399,337,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,416,151,152,153,417,418,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,419,344,346,171,172,173,420,174,175,176,177,178,179,180,181,182,183,421,422,184,423,424,185,425,186,187,188,189,190,191,192,426,193,427,428,194,195,196,197,429,430,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,431,432,433,217,434,435,218,436,437,438,439,440,441,442,443,444,219,445,446,447,448,449,220,450,451,221,222,223,224,225,226,342,343,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,452,453,454,455,456,246,457,458,459,460,461,462,247,248,249,250,463,251,252,253,464,465,254,255,256,257,466,258,259,260,467,261,262,468,263,352,469,470,264,265,266,471,267,472,473,268,269,474,270,475,476,477,478,479,480,481,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,482,483,295,296,297,298,484,485,486,487,488,299,489,490,491,492,493,494,300,301,302,303,495,304,305,306,307,308,309,496,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,497,327,498,328,329,499,500],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[160,190,276,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[157],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[127,128,288,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,6,8,10,12,12,13,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,357,358,359,361,37,348,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,365,366,367,368,369,370,66,334,335,336,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,124,125,126,127,128,131,132,133,408,414,136,140,141,142,143,144,145,146,147,148,149,150,166,167,168,169,170,419,344,346,176,182,183,184,424,185,186,187,188,189,190,191,193,195,196,197,198,199,201,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,342,343,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,466,258,259,260,467,261,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[472],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":303,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.UsageTest.argumentsOrdered":281,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":276,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":111,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":79,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":465,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":296,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":93,"org.easymock.tests2.UsageTest.wrongArguments":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":70,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":350,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":84,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests2.CaptureTest.testPrimitive":201,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":97,"org.easymock.tests.UsageTest.moreThanOneArgument":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests.UsageTest.argumentsOrdered":108,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":477,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":162,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":226,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests2.CaptureTest.testAnd":198,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":380,"org.easymock.tests2.UsageTest.strictResetToDefault":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests2.DelegateToTest.testDelegate":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests.LimitationsTest.mockFinalMethod":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":76,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":424,"org.easymock.tests2.CaptureTest.testCapture1_2446744":202,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":156,"org.easymock.tests.UsageThrowableTest.throwError":85,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":382,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":494,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":451,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":167,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":440,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":418,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests2.UsageTest.niceToStrict":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":264,"org.easymock.tests2.MockBuilderTest.testCreateMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":447,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":346,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":68,"org.easymock.tests.UsageOverloadedMethodTest.overloading":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":355,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":207,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests.MockClassControlTest.testEquals":83,"org.easymock.tests2.EasyMockSupportClassTest.testAll":217,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":74,"org.easymock.tests2.CaptureTest.testCaptureAll":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.MockNameTest.defaultName":364,"org.easymock.tests2.UsageConstraintsTest.testMatches":315,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":181,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":75,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":91,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":490,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests2.UsageConstraintsTest.greaterThan":317,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":61,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":197,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":429,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":192,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":66,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":271,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":466,"org.easymock.tests2.CaptureTest.testCaptureFirst":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":215,"org.easymock.tests2.UsageTest.moreThanOneArgument":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":269,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":180,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":141,"org.easymock.tests.UsageExpectAndReturnTest.longType":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":72,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":353,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.UsageCallCountTest.tooManyCalls":142,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":90,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":248,"org.easymock.tests.MockingTest.testClassMocking":387,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":135,"org.easymock.tests2.UsageConstraintsTest.testContains":312,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":351,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":224,"org.easymock.tests2.UsageConstraintsTest.testFind":304,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":145,"org.easymock.tests.MockTypeTest.fromEasyMockClass":381,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageExpectAndReturnTest.object":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":175,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":153,"org.easymock.tests.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":360,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":499,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":118,"org.easymock.tests.ResultTest.createThrowResultToString":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.MockClassControlTest.testHashCode":82,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":442,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":497,"org.easymock.tests.UsageVarargTest.varargCharAccepted":174,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":277,"org.easymock.tests.DefaultClassInstantiatorTest.object":67,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":419,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":151,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":443,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":81,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":334,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests2.UsageTest.resumeIfFailure":282,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.StubTest.stubWithReturnValue":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":323,"org.easymock.tests2.SerializationTest.testAllMockedMethod":232,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":362,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":320,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.tests.UsageStrictMockTest.range":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":480,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":164,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":69,"org.easymock.tests2.CaptureTest.testCaptureNone":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":179,"org.easymock.tests2.ThreadingTest.testThreadSafe":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":445,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":417,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":96,"org.easymock.tests2.UsageConstraintsTest.any":310,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":161,"org.easymock.tests2.StubTest.stub":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":160,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":287,"org.easymock.tests2.SerializationTest.testClass":230,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":59,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":454,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests2.NameTest.nameForMocksControl":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":456,"org.easymock.tests2.MockedExceptionTest.testMockedException":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":435,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":498,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":267,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":191,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":452,"org.easymock.tests2.CaptureTest.testCaptureLast":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":253,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":308,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":321,"org.easymock.tests.MockingTest.testTwoMocks":388,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":280,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":325,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":373,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":214,"org.easymock.tests2.MockBuilderTest.testCreateMockString":270,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":436,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests.ResultTest.createReturnResultToString":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":500,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":219,"org.easymock.tests.ResultTest.createDelegateResultToString":338,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests.LimitationsTest.privateConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testNotNull":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":222,"org.easymock.tests2.UsageTest.defaultResetToNice":279,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":453,"org.easymock.tests.UsageVarargTest.differentLength":176,"org.easymock.tests2.CallbackTest.callback":221,"org.easymock.tests2.UsageConstraintsTest.equals":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":427,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":95,"org.easymock.tests.UsageCallCountTest.tooFewCalls":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":71,"org.easymock.tests.UsageThrowableTest.throwCheckedException":89,"org.easymock.tests.MockingTest.testStrictClassMocking":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":249,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":251,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests.ObjectMethodsTest.testHashCode":152,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests2.NameTest.nameForNiceMock":256,"org.easymock.tests2.DependencyTest.testInterfaceMocking":295,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatType":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":329,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":492,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests.UsageThrowableTest.noUpperLimit":86,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":301,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":475,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":203,"org.easymock.tests2.SerializationTest.test":231,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":356,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":41,"org.easymock.tests2.UsageConstraintsTest.testSame":306,"org.easymock.samples.SupportTest.addDocument":9,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":463,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":437,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":491,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests2.NameTest.nameForMock":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":474,"org.easymock.tests2.UsageStrictMockTest.differentMethods":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":63,"org.easymock.tests2.MockedExceptionTest.testRealException":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":94,"org.easymock.tests2.NameTest.nameForStrictMock":255,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":319,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":263,"org.easymock.tests2.UsageStrictMockTest.range":288,"org.easymock.tests2.UsageConstraintsTest.lessThan":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":441,"org.easymock.tests2.CaptureTest.testCaptureRightOne":208,"org.easymock.tests2.UsageConstraintsTest.testOr":307,"org.easymock.tests.UsageRangeTest.combination":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":187,"org.easymock.tests.UsageTest.wrongArguments":104,"org.easymock.tests2.MockBuilderTest.testWithConstructor":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":438,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests.UsageVarargTest.varargShortAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":140,"org.easymock.tests2.UsageConstraintsTest.cmpTo":311,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests2.CaptureTest.testCaptureFromStub":209,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":155,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":103,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":54,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.UsageConstraintsTest.constraints":302,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":130,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":73,"org.easymock.tests2.CompareToTest.testGreateThan":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":168,"org.easymock.tests.LimitationsTest.abstractClass":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":169,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239}}]
