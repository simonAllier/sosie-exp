[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[48,49,50,18,19,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,25,71,72,73,27,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,31,32,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,38,120,121,122,123,124,125,126],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[48,49,127,128,50,18,19,129,130,131,132,133,134,135,136,137,138,20,139,140,141,142,143,51,144,52,145,146,147,53,54,55,56,57,58,59,7,148,149,150,151,152,153,9,154,155,156,157,158,159,160,161,162,163,24,164,60,165,166,10,11,167,12,168,13,14,169,170,171,172,173,174,175,176,177,178,16,179,180,181,17,182,183,61,62,63,64,65,66,67,184,68,69,70,185,25,71,72,73,26,27,28,186,187,74,75,76,77,78,79,80,81,188,189,189,190,190,82,83,191,84,85,86,87,192,90,31,32,93,193,194,94,195,95,96,97,196,197,198,199,98,99,100,101,102,103,200,201,104,105,202,106,107,108,203,109,110,111,112,113,204,115,116,117,118,119,205,38,120,121,122,206,42,207,208,209,210,211,212,213,125,126,214],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[215],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[18,29,31,216,217,41,42],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[18,31,217,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[218],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[48,49,127,219,220,50,221,18,19,222,129,130,131,132,133,134,135,136,138,20,139,140,223,51,144,52,224,145,146,225,53,54,55,56,57,58,59,7,148,8,149,226,227,151,152,153,9,156,157,158,21,160,228,22,23,164,229,230,231,11,12,14,169,170,171,173,176,16,179,180,232,181,17,61,62,63,64,65,66,67,69,71,72,73,186,187,74,75,76,77,233,234,235,78,236,79,80,237,81,238,239,82,240,83,29,88,241,242,30,90,243,31,32,244,245,246,247,34,35,93,193,248,249,250,251,252,253,254,94,95,96,97,196,255,197,256,198,199,257,258,100,101,103,202,109,205,259,260,261,262,263,264,265,266,267,38,41,42,124,207,44,45,46,213,268,269,270,271,272,214,273],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[274,275],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[276,277],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[11,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[50,148,151,152,156,13,170,29,90,93,193,248,249,194,204,278,115,116,117,118,119,125,126,279],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[50,154,165,166,167,12,168,13,172,174,175,177,178,17,182,183,189,189,190,190,84,85,86,87,192,90,93,193,194,204,115,116,117,118,119,125,126],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[145,146,225,280],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,281,282,283,284,285,286,287,288,55,59,289,290,291,6,292,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[294],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(this.java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[295,290,292,293,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[296,297,30,298,299,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[296,297,30,298,299,43],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[300,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[303,183],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[300,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[145,146,225,280],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":139,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":228,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":240,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":181,"org.easymock.tests2.SerializationTest.testAllMockedMethod":225,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.MockingTest.testPartialClassMocking":95,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":297,"org.easymock.samples.SupportTest.voteForRemovals":82,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":274,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":280,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.UsageExpectAndThrowTest.object":253,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":49,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":179,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":126,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":93,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":189,"org.easymock.samples.ExampleTest.answerVsDelegate":236,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":285,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":72,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":20,"org.easymock.tests2.CaptureTest.testPrimitive":149,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":194,"org.easymock.tests.UsageTest.moreThanOneArgument":210,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":63,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":92,"org.easymock.tests2.CaptureTest.testCaptureNone":152,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":36,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":247,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.UsageConstraintsTest.any":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":119,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.tests2.SerializationTest.testClass":145,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests.LimitationsTest.mockNativeMethod":94,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":113,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":15,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":291,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests2.CompareToTest.testNotComparable":294,"org.easymock.tests2.CaptureTest.testCaptureLast":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":180,"org.easymock.tests.MockingTest.testTwoMocks":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":268,"org.easymock.tests2.CaptureTest.testCapture1_2446744":150,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":182,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.samples.ExampleTest.removeNonExistingDocument":188,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":37,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":219,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":116,"org.easymock.samples.ExampleTest.voteAgainstRemoval":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":283,"org.easymock.tests2.UsageConstraintsTest.testNotNull":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":109,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":295,"org.easymock.tests.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":296,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":248,"org.easymock.tests.UsageCallCountTest.tooFewCalls":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":286,"org.easymock.tests.UsageOverloadedMethodTest.overloading":207,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":272,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":173,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":153,"org.easymock.tests.UsageThrowableTest.throwCheckedException":198,"org.easymock.tests2.EasyMockSupportClassTest.testAll":74,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":241,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":299,"org.easymock.tests2.CaptureTest.testCaptureAll":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":278,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.testMatches":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":87,"org.easymock.samples.ExampleTest.voteForRemovals":81,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":144,"org.easymock.tests.UsageVarargTest.allKinds":267,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.BasicClassMockTest.testPrintContent":235,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.UsageConstraintsTest.greaterThan":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":120,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.samples.ExampleTest.voteForRemoval":79,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":190,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":178,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":226,"org.easymock.tests2.SerializationTest.test":146,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.samples.SupportTest.addDocument":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":51,"org.easymock.tests2.CaptureTest.testCapture2_2446744":155,"org.easymock.tests2.UsageTest.moreThanOneArgument":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.GenericTest.testBridgedEquals":275,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":293,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageCallCountTest.tooManyCalls":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":302,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":193,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.testContains":172,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":187,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":216,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":215,"org.easymock.tests2.UsageConstraintsTest.lessThan":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":288,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":204,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageRangeTest.combination":38,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":271,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.MockBuilderTest.testWithConstructor":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":270,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":33,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":39,"org.easymock.tests2.UsageConstraintsTest.cmpTo":171,"org.easymock.tests.UsageVarargTest.varargCharAccepted":261,"org.easymock.tests2.CompareToTest.testLessThan":303,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":140,"org.easymock.tests2.CaptureTest.testCaptureFromStub":154,"org.easymock.tests.UsageTest.unexpectedCallWithArray":43,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":191,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":246,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":203,"org.easymock.tests2.CaptureTest.testCapture":276,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.samples.ExampleTest.addAndChangeDocument":238,"org.easymock.tests.CapturesMatcherTest.test":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":111,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":233,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":227,"org.easymock.tests2.UsageTest.resumeIfFailure":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":118,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136}}]
