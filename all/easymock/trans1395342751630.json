[{"position":"org.easymock.internal.InjectionPlan:51","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[29,30,44,81,82,83,84,85,86,87,88,89,58,90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[92,93],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[81,82,83,85,86,90,73,76,109,110,111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[26,92,33,41,42,115,46,48,49,116,50,51,52,53,54,55,57,65,68,69,117,78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[26,118,119,120,121,122,123,124,113,34,94,125,126,127,128,97,129,130,98,99,131,132,133,134,135,136,137,138,139,37,38,39,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,100,101,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,103,197,198,104,199,200,201,202,203,204,205,206,207,208,43,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,7,235,236,237,238,19,239,240,241,242,243,244,245,246,247,248,249,44,250,251,252,253,254,50,52,53,55,255,256,257,105,258,259,260,261,106,107,262,58,263,264,265,266,267,268,60,269,62,64,71,72,73,74,270,75,76,271,272,273,274,275,108,276,277,78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[124,113,165,104,199,108,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[92,93],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,6,8,9,10,13,14,15,16,18,20,21,22,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[225],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[278,279,280,94,128,97,98,99,165,100,101,103,197,104,199,257,105,106,107,281,282,283,284,274,108,276],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:48","sourceCode":"for (final java.util.Iterator<org.easymock.IArgumentMatcher> java.util.Iterator<org.easymock.IArgumentMatcher> = java.util.List<org.easymock.IArgumentMatcher>.iterator() ; java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext() ; ) {\n    java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer);\n    if (java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext()) {\n        java.lang.StringBuffer.append(\", \");\n    } \n}","type":"CtForImpl"},"failures":[285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[26,27,28,29,29,30,30,92,31,32,33,93,286,287,34,288,35,289,290,291,292,293,294,295,296,297,36,37,38,39,298,299,40,300,301,302,303,304,305,41,42,306,307,308,115,309,43,44,45,46,47,48,49,116,50,51,52,53,84,54,55,56,57,58,90,59,60,61,62,63,64,65,66,91,310,67,68,69,70,311,117,71,72,73,74,75,76,312,313,314,77,315,316,78,317,318,319,320,321,322,323,324,325,79,326,327,328,329,330,80,331,332],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[333,103,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[290,294],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[119,120,121,122,334,123,335,336,337,338,339,340,31,32,34,341,342,343,344,345,346,347,348,349,350,351,352,94,353,35,354,355,356,357,358,359,125,126,127,128,97,129,130,98,99,131,132,360,133,361,134,135,136,137,138,139,37,38,39,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,100,101,362,363,364,365,366,367,368,369,370,333,166,167,168,169,170,371,171,172,372,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,373,374,375,195,376,377,378,379,380,103,197,198,104,199,200,115,309,43,381,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,382,231,232,233,234,235,383,236,237,238,239,240,241,242,243,244,245,384,385,246,247,386,387,388,248,44,250,45,251,252,253,254,389,390,391,392,46,50,51,255,256,257,105,258,259,260,261,393,106,107,394,262,58,263,264,265,266,267,268,60,61,269,62,63,64,65,66,67,69,72,73,75,76,395,271,272,396,274,275,108,276,277],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[225],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[26,27,28,29,29,30,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,48,50,51,52,53,54,55,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[345,94,132,360,160,161,162,163,164,169,170,371,171,172,193,194,197,216,219,240,384,385,388,274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":8,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":259,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":342,"org.easymock.tests.MockingTest.testPartialClassMocking":37,"org.easymock.tests.MockClassControlTest.testToString":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":173,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":278,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":169,"org.easymock.tests2.UsageTest.wrongArguments":105,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":378,"org.easymock.samples.ExampleTest.answerVsDelegate":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":42,"org.easymock.tests2.UsageConstraintsTest.testNull":214,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":305,"org.easymock.tests2.CaptureTest.testPrimitive":242,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":192,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":356,"org.easymock.tests.UsageTest.argumentsOrdered":99,"org.easymock.tests.UsageVarargTest.varargIntAccepted":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":160,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":164,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests2.AnswerTest.answer":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":392,"org.easymock.tests2.CaptureTest.testAnd":239,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":204,"org.easymock.tests2.DelegateToTest.testDelegate":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":188,"org.easymock.tests.LimitationsTest.mockFinalMethod":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":340,"org.easymock.tests2.CaptureTest.testCapture1_2446744":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":390,"org.easymock.tests.UsageThrowableTest.throwError":133,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":358,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":87,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":332,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":174,"org.easymock.tests2.UsageTest.niceToStrict":258,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":321,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":182,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":223,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":151,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":359,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":246,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.MockClassControlTest.testEquals":304,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":391,"org.easymock.tests2.CaptureTest.testCaptureAll":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":357,"org.easymock.samples.ExampleTest.voteForRemovals":123,"org.easymock.tests.UsageVarargTest.allKinds":333,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":339,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":138,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":346,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.samples.ExampleTest.voteForRemoval":121,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":311,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":65,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":35,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":202,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":341,"org.easymock.tests2.CaptureTest.testCaptureFirst":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":203,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":387,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.UsageTest.moreThanOneArgument":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":114,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":370,"org.easymock.tests.GenericTest.testBridgedEquals":93,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":351,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":191,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":56,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":352,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":72,"org.easymock.tests.MockingTest.testNiceClassMocking":298,"org.easymock.tests.MockingTest.testClassMocking":297,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":47,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":213,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":268,"org.easymock.tests.UsageExpectAndReturnTest.object":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":206,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":366,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":156,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":362,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests.MockClassControlTest.testHashCode":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":323,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":113,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":389,"org.easymock.tests.UsageVarargTest.varargCharAccepted":365,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":396,"org.easymock.tests2.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":208,"org.easymock.tests.DefaultClassInstantiatorTest.object":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":301,"org.easymock.tests2.UsageTest.resumeIfFailure":394,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":344,"org.easymock.tests2.StubTest.stubWithReturnValue":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":231,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":89,"org.easymock.samples.SupportTest.voteForRemovals":118,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.object":183,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":229,"org.easymock.tests2.DelegateToTest.testWrongClass":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":377,"org.easymock.tests2.CaptureTest.testCaptureNone":385,"org.easymock.tests.UsageUnorderedTest.message":94,"org.easymock.tests.UsageVerifyTest.twoReturns":101,"org.easymock.tests.UsageVarargTest.varargByteAccepted":369,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":326,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests2.CaptureTest.testCapture_2617107":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":171,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests2.StubTest.stub":395,"org.easymock.tests.UsageExpectAndThrowTest.longType":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":293,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests2.NameTest.nameForMocksControl":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":18,"org.easymock.tests2.MockedExceptionTest.testMockedException":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":316,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":177,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":39,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":38,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CaptureTest.testCaptureLast":384,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":372,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":76,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.MockingTest.testTwoMocks":36,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":181,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":21,"org.easymock.tests.UsageStrictMockTest.differentMethods":199,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":291,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.ConstraintsToStringTest.andToString":285,"org.easymock.tests2.MockBuilderTest.testCreateMockString":57,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":299,"org.easymock.tests.UsageExpectAndThrowTest.floatType":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":317,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":264,"org.easymock.tests.UsageVerifyTest.twoThrows":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.LimitationsTest.privateConstructor":287,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":111,"org.easymock.tests2.UsageConstraintsTest.testNotNull":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests2.UsageTest.defaultResetToNice":393,"org.easymock.samples.ExampleTest.voteAgainstRemovals":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests2.CallbackTest.callback":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":91,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":371,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":379,"org.easymock.tests.UsageThrowableTest.throwCheckedException":136,"org.easymock.tests.MockingTest.testStrictClassMocking":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":75,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":270,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":266,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":283,"org.easymock.tests2.DependencyTest.testInterfaceMocking":248,"org.easymock.samples.ExampleTest.addDocument":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":327,"org.easymock.tests2.DelegateToTest.testStubDelegate":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.stubAnswer":265,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests.UsageVarargTest.varargLongAccepted":368,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":11,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.UsageThrowableTest.noUpperLimit":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":210,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":307,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":244,"org.easymock.tests2.SerializationTest.test":250,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.tests2.UsageConstraintsTest.testSame":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":318,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests2.NameTest.nameForMock":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":86,"org.easymock.tests2.UsageStrictMockTest.differentMethods":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":168,"org.easymock.tests2.MockedExceptionTest.testRealException":381,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":88,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":170,"org.easymock.tests2.NameTest.nameForStrictMock":282,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":308,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":228,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":279,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.UsageConstraintsTest.lessThan":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests2.CaptureTest.testCaptureRightOne":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":322,"org.easymock.tests2.UsageConstraintsTest.testOr":216,"org.easymock.tests.UsageRangeTest.combination":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":97,"org.easymock.tests2.MockBuilderTest.testWithConstructor":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":319,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":153,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":294,"org.easymock.tests.UsageVarargTest.varargShortAccepted":367,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests2.CaptureTest.testCaptureFromStub":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.UsageConstraintsTest.constraints":211,"org.easymock.samples.ExampleTest.addAndChangeDocument":335,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":337,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.LimitationsTest.abstractClass":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":163,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":195,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":280,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":363}}]
