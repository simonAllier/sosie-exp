[{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[1,17,6,7,8,9,10,11,13,14,15,16],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,13,14,15,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[142,143,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[146,147],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[148,149,150,151,152,66,67,153,77,122],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[154,155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[146,1,157,158,159,160,161,162,19,20,163,164,17,165,166,167,168,24,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,26,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,142,31,32,33,6,7,8,9,10,11,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,12,61,62,64,65,291,292,293,294,295,296,297,298,299,300,301,302,303,13,14,15,16,304,305,306,143,307,66,68,73,74,107,108,308,109,110,111,112,113,116,118,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,144,342,343,344,345,147,346,347,348,349,350,351,352,353,354,355,356,145,357,358,359,360,122,361,123,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,17,6,7,8,9,10,11,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[32,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[146,1,363,364,365,366,367,157,158,159,160,368,161,162,18,19,20,21,0,163,164,17,165,166,167,369,370,371,372,168,373,374,375,376,377,378,379,22,24,380,169,170,171,172,173,174,175,381,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,382,204,383,384,205,206,385,207,208,209,210,211,212,386,387,3,4,5,26,213,214,215,216,217,218,219,220,221,222,223,388,224,225,389,226,390,227,228,229,230,231,391,232,233,234,235,142,392,393,394,395,396,397,398,399,400,28,29,30,31,401,402,403,34,6,7,8,9,10,11,404,405,406,407,408,35,409,410,36,411,412,236,237,413,37,38,39,40,41,42,43,44,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,414,262,263,264,265,266,267,268,269,270,415,45,46,47,48,49,50,416,51,271,272,273,274,275,276,277,278,279,280,281,417,282,54,124,125,55,56,418,419,126,127,128,129,420,130,131,132,133,421,422,283,423,424,284,285,286,287,288,289,290,12,58,59,425,426,60,61,63,427,428,291,292,293,294,295,296,297,298,299,300,301,302,303,13,14,15,16,304,305,306,143,307,66,429,430,431,432,433,68,70,71,72,73,74,75,76,78,79,81,82,83,85,87,88,89,90,93,96,98,99,100,101,102,103,104,107,108,308,109,110,111,112,155,113,115,116,117,118,119,120,121,309,434,435,310,311,312,313,314,436,315,316,317,437,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,438,439,440,441,442,443,444,445,446,447,448,449,450,451,134,135,136,137,452,138,139,140,141,333,334,335,336,337,338,339,340,341,144,342,343,344,345,453,147,346,347,348,349,350,351,352,353,354,355,356,145,357,358,359,360,122,361,123,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[31,32,33,64,428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[454,455,456,156],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[167,185,191,197,201,203,205,457,406,242,248,254,258,260,323,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[170,458,459,385,460,461],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[146,1,363,364,365,366,367,157,158,159,160,368,161,162,18,19,20,21,0,163,164,17,165,166,167,369,370,371,372,168,373,374,375,376,377,378,379,22,23,24,25,380,169,170,171,172,173,174,175,381,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,382,204,383,462,384,463,205,206,385,207,208,209,210,211,212,464,465,466,467,468,469,470,2,471,472,473,474,475,476,477,478,386,479,457,480,481,482,387,483,3,4,5,26,213,214,215,216,217,218,219,220,221,222,223,388,224,225,389,226,390,227,228,229,484,230,231,391,232,233,234,235,142,392,393,394,395,396,397,398,399,27,400,28,29,30,31,32,401,33,402,403,34,6,7,8,9,10,11,404,405,406,407,408,35,409,410,36,411,412,236,237,413,37,38,39,40,41,42,43,44,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,414,262,263,264,265,266,267,268,269,270,45,46,47,48,49,50,51,271,272,273,274,275,276,277,278,279,280,281,417,282,52,52,53,53,54,124,125,55,56,418,419,126,127,128,485,129,420,130,131,132,486,487,133,421,422,283,423,424,284,285,286,287,288,289,290,12,58,59,425,426,60,61,62,63,427,64,65,291,292,293,294,295,296,297,298,299,300,301,302,303,13,14,15,16,304,305,306,143,307,66,67,429,430,431,432,433,68,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,308,109,110,111,112,155,113,114,115,116,117,118,119,120,121,309,434,435,310,311,312,313,488,314,436,315,316,317,437,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,438,439,440,441,442,443,444,445,446,447,448,449,450,134,135,136,489,137,452,138,139,140,490,491,141,333,334,335,336,337,338,339,340,492,341,144,342,343,344,345,453,147,346,347,348,349,350,351,352,353,354,355,356,145,357,358,359,360,122,361,123,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[170,458,459,385,460,461],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[462,463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[18,0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,17,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[165,205,209,467,10,240,241,242,245,247,248,249,250,252,253,254,255,257,258,259,260,265,12,291,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[319,321,329,339,340,144,343,344,453,354,358],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[167,170,173,494,495,385,207,210,211,390,265,266,287,294,300,301],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[165,371,478,387,290],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[319,321,329,339,340,144,343,344,453,354,358],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[144,342,453,147,354,355,358,359],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"position":"org.easymock.ConstructorArgs:54","failures":[52,53,62,65,428,66,67,493,496,153,77,497,498,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,499,500,122],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[319,321,322,323,324,325,326,328,501,329,330,332],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":340,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.UsageTest.argumentsOrdered":301,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":473,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":296,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":124,"org.easymock.tests2.DelegateToTest.testReturnException":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":7,"org.easymock.tests.MockingTest.testPartialClassMocking":31,"org.easymock.tests.MockClassControlTest.testToString":39,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":429,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":241,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":163,"org.easymock.tests2.UsageTest.wrongArguments":294,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":269,"org.easymock.samples.ExampleTest.answerVsDelegate":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":36,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":403,"org.easymock.tests2.UsageConstraintsTest.testNull":144,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":447,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":44,"org.easymock.tests2.CaptureTest.testPrimitive":322,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageTest.moreThanOneArgument":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":404,"org.easymock.tests.UsageTest.argumentsOrdered":211,"org.easymock.tests.UsageVarargTest.varargIntAccepted":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":217,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":376,"org.easymock.tests2.DependencyTest.testClassMocking":421,"org.easymock.tests2.AnswerTest.answer":309,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":336,"org.easymock.tests2.CaptureTest.testAnd":319,"org.easymock.tests2.UsageTest.strictResetToDefault":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":262,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":408,"org.easymock.tests2.DelegateToTest.testDelegate":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests.LimitationsTest.mockFinalMethod":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":222,"org.easymock.tests2.DependencyTest.testClassMockingSupport":422,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":323,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":334,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":371,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":410,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":106,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":393,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":242,"org.easymock.tests2.UsageTest.niceToStrict":295,"org.easymock.tests2.ThreadingTest.testChangeDefault":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":73,"org.easymock.tests2.MockBuilderTest.testCreateMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":140,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":460,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":250,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":267,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":195,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":348,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":328,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":484,"org.easymock.tests.MockClassControlTest.testEquals":43,"org.easymock.tests2.EasyMockSupportClassTest.testAll":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureAll":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":335,"org.easymock.tests.MockNameTest.defaultName":413,"org.easymock.tests2.UsageConstraintsTest.testMatches":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":369,"org.easymock.samples.ExampleTest.voteForRemovals":281,"org.easymock.tests.UsageVarargTest.allKinds":142,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":264,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":221,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":182,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":424,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":11,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":152,"org.easymock.tests2.UsageConstraintsTest.greaterThan":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":119,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":51,"org.easymock.samples.ExampleTest.voteForRemoval":278,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":120,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":112,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":26,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":440,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":6,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":436,"org.easymock.tests2.CaptureTest.testCaptureFirst":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":441,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":191,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":293,"org.easymock.tests2.CaptureTest.testCapture2_2446744":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":235,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":161,"org.easymock.tests.UsageExpectAndReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":218,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":259,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.UsageCallCountTest.tooManyCalls":162,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":181,"org.easymock.tests.MockingTest.testNiceClassMocking":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":61,"org.easymock.tests.MockingTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":69,"org.easymock.tests2.UsageConstraintsTest.testContains":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":367,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":341,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":314,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":380,"org.easymock.tests.UsageExpectAndReturnTest.object":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":446,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":231,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":398,"org.easymock.tests.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":200,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":127,"org.easymock.tests.MockClassControlTest.testHashCode":42,"org.easymock.tests2.EasyMockSupportTest.testVerify":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":95,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":406,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":333,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":451,"org.easymock.tests.UsageVarargTest.varargCharAccepted":230,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":415,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":483,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":449,"org.easymock.tests.DefaultClassInstantiatorTest.object":45,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":363,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":396,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":40,"org.easymock.tests2.UsageTest.resumeIfFailure":302,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":9,"org.easymock.tests2.StubTest.stubWithReturnValue":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":193,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":357,"org.easymock.tests2.SerializationTest.testAllMockedMethod":123,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":386,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":461,"org.easymock.samples.SupportTest.voteForRemovals":419,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":253,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":387,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":434,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":463,"org.easymock.tests.UsageExpectAndThrowTest.object":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":355,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":425,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":82,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":394,"org.easymock.tests2.CaptureTest.testCaptureNone":327,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":455,"org.easymock.tests.UsageUnorderedTest.message":167,"org.easymock.tests.UsageVerifyTest.twoReturns":266,"org.easymock.tests.UsageVarargTest.varargByteAccepted":234,"org.easymock.tests2.ThreadingTest.testThreadSafe":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":99,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":160,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":399,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":165,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests2.StubTest.stub":290,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":8,"org.easymock.tests.UsageExpectAndThrowTest.longType":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":49,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":420,"org.easymock.tests2.SerializationTest.testClass":122,"org.easymock.tests.LimitationsTest.mockNativeMethod":24,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":136,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests2.NameTest.nameForMocksControl":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":137,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":87,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":245,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":76,"org.easymock.tests.MockingTest.testNicePartialClassMocking":32,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":134,"org.easymock.tests2.CaptureTest.testCaptureLast":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":344,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":356,"org.easymock.tests.MockingTest.testTwoMocks":30,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":249,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":359,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":156,"org.easymock.samples.ExampleTest.removeNonExistingDocument":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":128,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":47,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":306,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":89,"org.easymock.tests.UsageExpectAndThrowTest.floatType":243,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":310,"org.easymock.tests.UsageVerifyTest.twoThrows":265,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests.LimitationsTest.privateConstructor":23,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":183,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":199,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":135,"org.easymock.tests2.CallbackTest.callback":362,"org.easymock.tests2.UsageConstraintsTest.equals":492,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":114,"org.easymock.tests.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.UsageCallCountTest.tooFewCalls":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":270,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":456,"org.easymock.tests.UsageThrowableTest.throwCheckedException":180,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":459,"org.easymock.tests.MockingTest.testStrictClassMocking":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":62,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":427,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":312,"org.easymock.tests.ObjectMethodsTest.testHashCode":397,"org.easymock.tests2.NameTest.nameForNiceMock":432,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":150,"org.easymock.samples.ExampleTest.addDocument":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":105,"org.easymock.tests2.DelegateToTest.testStubDelegate":316,"org.easymock.tests2.AnswerTest.stubAnswer":311,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests.UsageVarargTest.varargLongAccepted":233,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.floatType":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":66,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageThrowableTest.noUpperLimit":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":338,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":58,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":324,"org.easymock.tests2.SerializationTest.test":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":46,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":185,"org.easymock.tests2.UsageConstraintsTest.testSame":342,"org.easymock.samples.SupportTest.addDocument":418,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":90,"org.easymock.tests.GenericTest.testPackageScope":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":132,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":402,"org.easymock.tests2.NameTest.nameForMock":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":498,"org.easymock.tests2.UsageStrictMockTest.differentMethods":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":188,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":255,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":263,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":476,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":164,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":379,"org.easymock.tests2.NameTest.nameForStrictMock":431,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":72,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":59,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":48,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":354,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":287,"org.easymock.tests2.UsageConstraintsTest.lessThan":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":94,"org.easymock.tests2.CaptureTest.testCaptureRightOne":329,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":454,"org.easymock.tests2.UsageConstraintsTest.testOr":343,"org.easymock.tests.UsageRangeTest.combination":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":108,"org.easymock.tests.UsageTest.wrongArguments":207,"org.easymock.tests2.MockBuilderTest.testWithConstructor":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":91,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":197,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":50,"org.easymock.tests.UsageVarargTest.varargShortAccepted":232,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":346,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests2.CaptureTest.testCaptureFromStub":330,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":370,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":71,"org.easymock.tests.UsageTest.unexpectedCallWithArray":385,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":159,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":198,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.UsageConstraintsTest.constraints":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":381,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":125,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":219,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":325,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":190,"org.easymock.tests.LimitationsTest.abstractClass":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":216,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":444,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":228}}]
