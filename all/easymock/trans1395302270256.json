[{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[5],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,9,10,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,57,118,58,59,60,61,62,63,119,64,66,67,120,68,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,16,137,138,139,6,9,140,17,141,142,143,144,145,146,147,148,149,150,7,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,44,167,168,45,169,170,171,172,54,55,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,56,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,18,238,239,43,240,241,242,243,41,42,244,245,246,247,248,249,250,251,252,253,254,255,1,256,257,258,259,260,2,261,10,262,263,264,265,266,267,268,269,270,3,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,19,307,308,309,310,311,312,313,314,315,11,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,20,21,343,344,22,345,23,24,25,26,346,27,28,29,30,347,31,32,33,34,35,348,349,350,351,36,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,37,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,38,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,39,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,5,463,464,465,466,467,468,469,40,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,8,90,91,93,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,57,118,58,59,60,61,62,63,119,64,66,67,120,68,126,133,134,135,136,16,137,138,139,6,9,140,17,141,142,143,144,145,146,147,148,149,150,7,151,152,153,154,155,156,157,158,160,164,165,166,167,169,170,172,54,174,175,176,177,179,180,181,190,193,194,195,56,197,198,204,214,217,227,233,236,237,18,239,43,240,242,243,41,42,244,245,246,247,248,249,251,252,253,254,255,1,257,258,259,260,2,261,10,262,263,264,265,266,267,268,269,270,3,273,274,275,277,278,280,281,283,284,288,289,291,295,296,297,298,299,300,301,302,303,304,305,306,19,307,308,309,310,311,312,313,314,315,11,316,317,318,319,320,321,322,323,324,325,326,327,328,329,338,339,340,341,342,20,21,343,344,22,345,23,24,25,26,346,27,28,29,30,347,31,32,33,34,35,348,349,350,351,36,352,353,354,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,403,404,38,406,407,408,412,421,422,423,425,426,427,428,429,430,431,432,437,438,39,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,466,467,468,469,40,470,473,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[503,504],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[459],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[44,48,49,50,52,505,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[69,69,70,70,71,73,74,86,87,89,8,90,91,93,94,95,96,97,98,99,100,101,102,103,104,158,506,160,161,163,164,165,166,167,45,169,170,507,172,508,54,55,174,175,176,177,180,181,183,187,56,198,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,285,286,287,288,289,291,294,355,360,368,369,370,371,372,373,374,375,410,412,413,414,415,416,417,419,458,459,460,461,462,5,471,472,473,474],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[69,69,70,70,108,67,246,247,251,252,253,254,259,2,261,262,263,269,270,3,298,304,305,307,308,309,448,449,450,451,452,453,454,455,456,457,481],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[124,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[56,197,198],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":249,"org.easymock.tests2.UsageTest.argumentsOrdered":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":389,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":467,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.tests.MockClassControlTest.testToString":370,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":113,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":217,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests2.UsageTest.wrongArguments":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":366,"org.easymock.samples.ExampleTest.answerVsDelegate":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":360,"org.easymock.tests2.UsageConstraintsTest.testNull":252,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":154,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":375,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.UsageTest.moreThanOneArgument":348,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":450,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":330,"org.easymock.tests.UsageTest.argumentsOrdered":353,"org.easymock.tests.UsageVarargTest.varargIntAccepted":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":505,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":209,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests.ReplayStateInvalidUsageTest.times":317,"org.easymock.tests2.DependencyTest.testClassMocking":271,"org.easymock.tests2.AnswerTest.answer":190,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":136,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":357,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":378,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":347,"org.easymock.tests.LimitationsTest.mockFinalMethod":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":342,"org.easymock.tests2.DependencyTest.testClassMockingSupport":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":335,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":134,"org.easymock.tests.UsageThrowableTest.throwError":440,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":312,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":359,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":436,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":235,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.MockingTest.testInterfaceMocking":290,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":476,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":410,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.MockBuilderTest.testCreateMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":12,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":7,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":435,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":364,"org.easymock.tests.UsageOverloadedMethodTest.overloading":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":494,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":403,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":260,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":64,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":424,"org.easymock.tests2.EasyMockSupportClassTest.testAll":214,"org.easymock.tests.MockClassControlTest.testEquals":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":461,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":135,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":340,"org.easymock.tests.MockNameTest.defaultName":420,"org.easymock.tests2.UsageConstraintsTest.testMatches":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":451,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":310,"org.easymock.samples.ExampleTest.voteForRemovals":80,"org.easymock.tests.UsageVarargTest.allKinds":432,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":438,"org.easymock.samples.BasicClassMockTest.testPrintContent":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":341,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":446,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":206,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":241,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":53,"org.easymock.tests2.UsageConstraintsTest.greaterThan":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":377,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":99,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":419,"org.easymock.samples.ExampleTest.voteForRemoval":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":100,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":458,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":148,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":466,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":490,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":397,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":170,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":431,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests.UsageExpectAndReturnTest.longType":486,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":338,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":267,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":448,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":491,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":445,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":175,"org.easymock.tests.MockingTest.testNiceClassMocking":294,"org.easymock.tests.MockingTest.testClassMocking":286,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests2.UsageConstraintsTest.testContains":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests.MockTypeTest.fromEasyMockClass":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":277,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.object":493,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":153,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":49,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":408,"org.easymock.tests.UsageTest.exactCallCountByLastCall":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":499,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":421,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests.MockClassControlTest.testHashCode":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":224,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":434,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":133,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":196,"org.easymock.tests.UsageVarargTest.varargCharAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":411,"org.easymock.tests2.CaptureTest.testCaptureMultiple":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests.DefaultClassInstantiatorTest.object":412,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":156,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":433,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":443,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":500,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":233,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":371,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":469,"org.easymock.tests2.StubTest.stubWithReturnValue":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":492,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":198,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":395,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":13,"org.easymock.samples.SupportTest.voteForRemovals":84,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":28,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":401,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":191,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":465,"org.easymock.tests.UsageExpectAndThrowTest.object":346,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":265,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":309,"org.easymock.samples.ConstructorCalledMockTest.testTax":69,"org.easymock.tests.UsageStrictMockTest.range":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":188,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":319,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":365,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":477,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.UsageUnorderedTest.message":437,"org.easymock.tests.UsageVerifyTest.twoReturns":439,"org.easymock.tests.UsageVarargTest.varargByteAccepted":430,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":326,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":73,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests2.UsageConstraintsTest.any":257,"org.easymock.tests2.StubTest.stub":237,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndThrowTest.longType":344,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":416,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":11,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":109,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests.LimitationsTest.mockNativeMethod":473,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":502,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":462,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":123,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests2.NameTest.nameForMocksControl":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":125,"org.easymock.tests2.MockedExceptionTest.testMockedException":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":216,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":22,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":276,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":167,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":47,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":336,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":181,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":266,"org.easymock.tests.MockingTest.testTwoMocks":287,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":270,"org.easymock.samples.ExampleTest.removeNonExistingDocument":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":504,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":414,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":42,"org.easymock.tests2.MockBuilderTest.testCreateMockString":172,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":173,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":227,"org.easymock.samples.ExampleTest.voteAgainstRemoval":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":390,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests.LimitationsTest.privateConstructor":472,"org.easymock.tests2.UsageConstraintsTest.testNotNull":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":447,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":102,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":391,"org.easymock.tests.UsageVarargTest.differentLength":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":122,"org.easymock.tests2.CallbackTest.callback":236,"org.easymock.tests2.UsageConstraintsTest.equals":250,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":94,"org.easymock.tests.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":306,"org.easymock.tests.UsageCallCountTest.tooFewCalls":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":367,"org.easymock.tests.UsageThrowableTest.throwCheckedException":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.MockingTest.testStrictClassMocking":285,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":127,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":179,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests.ObjectMethodsTest.testHashCode":407,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":52,"org.easymock.tests2.NameTest.nameForNiceMock":116,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":245,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":50,"org.easymock.samples.ExampleTest.addDocument":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":234,"org.easymock.tests2.AnswerTest.stubAnswer":194,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":168,"org.easymock.tests.UsageVarargTest.varargLongAccepted":429,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":501,"org.easymock.tests.UsageExpectAndReturnTest.floatType":485,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":70,"org.easymock.tests.UsageThrowableTest.noUpperLimit":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":208,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":263,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":247,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":183,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":484,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.samples.SupportTest.addDocument":83,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":178,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":219,"org.easymock.tests.GenericTest.testPackageScope":460,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":207,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":292,"org.easymock.tests2.NameTest.nameForMock":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":495,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":171,"org.easymock.tests2.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":487,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":379,"org.easymock.tests2.MockedExceptionTest.testRealException":105,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":392,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":305,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":320,"org.easymock.tests2.NameTest.nameForStrictMock":115,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":8,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":187,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":264,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":110,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":51,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":223,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":503,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":350,"org.easymock.tests2.MockBuilderTest.testWithConstructor":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":220,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":488,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":381,"org.easymock.tests.UsageVarargTest.varargShortAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":417,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":258,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":37,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":311,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":161,"org.easymock.tests.UsageTest.unexpectedCallWithArray":349,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":497,"org.easymock.tests2.CaptureTest.testCapture":65,"org.easymock.tests2.UsageConstraintsTest.constraints":248,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":82,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":85,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":489,"org.easymock.tests.LimitationsTest.abstractClass":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":456,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":151}}]
