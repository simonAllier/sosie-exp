[{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[16,65,18,19,66,67,68,69,70,71,72,73,25,74,27,28,29,30,75,76,77,33,34,78,35,36,79,45,46,48,80,81,82,83,84,85,86,87,88,89,90,91,54,57,58],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,65,92,93,94,95,96,97,98,99,100,34,101,102,103,104,105,106,107,1,2,3,4,5,6,7,8,9,10,11,12,13,14,108,79,109,110,47,111,112,113,114,115,116,117,118,119,120,121,122,123,124,48,125,126,127,128,129,130,131,132,133,134,135,136,137],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[65,138,31,35,36,79,53,60,139],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[97,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[100,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[141,142,143,144,145,146,147,148,149,41,150,151,152,153,154,155,156,157,158,159,160,61,161,162,163,164,165,166,167,168,169,170,62,63,171,64,172],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[16,68,70,73,74,27,28,29,30,81,86,88,90,91,54,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,15,196,16,65,17,18,19,197,198,199,200,201,202,203,204,205,206,207,208,20,21,22,209,210,211,212,213,66,67,92,93,94,95,96,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,144,23,239,240,241,242,243,244,245,246,138,247,248,249,250,251,97,98,252,253,254,255,256,99,257,258,259,260,26,74,27,28,261,262,29,30,31,263,264,265,266,267,268,269,270,271,272,273,274,275,32,276,277,278,279,100,280,281,282,75,283,284,76,77,33,34,285,286,287,288,289,78,35,36,290,101,102,103,104,105,106,107,291,292,293,145,294,295,146,146,147,147,296,297,298,299,300,301,302,303,304,305,306,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,307,40,308,309,310,311,148,108,312,41,150,42,313,314,315,316,317,318,43,319,79,44,45,46,320,152,321,322,323,324,325,326,155,156,157,109,110,47,111,112,113,114,115,116,117,118,119,120,121,122,123,124,48,125,126,127,128,129,130,131,132,133,134,327,328,329,330,331,332,333,334,335,336,337,135,338,339,340,49,341,342,343,50,51,344,345,52,346,347,348,158,349,350,53,351,91,54,55,56,352,353,354,57,58,59,60,136,137,355,356,357,358,359,360,361,159,61,164,165,166,168,62,63,64,172,362,363,364,139,365,366,367,368,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[66,67,75,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[16,65,92,93,94,95,96,97,98,99,100,34,101,102,103,104,105,106,107,1,2,3,4,5,6,7,8,9,10,11,12,13,14,108,79,109,110,47,111,112,113,114,115,116,117,118,119,120,121,122,123,124,48,125,126,127,128,129,130,131,132,133,134,135,136,137],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[158,349,350],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[336,337],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[301,136,370,137,139,367,368],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[1,3,11,47,111,113,115,116,118,127,132],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"lastControl","this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[134,371],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[1,3,4,5,6,7,8,10,372,11,12,14],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[94,98,253,254,255,256,99,257,373,374,291,292,293,314,172,362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[375,376,174,377,378,175,379,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,141,380,381,382,383,142,384,385,15,196,16,65,17,18,19,197,198,199,200,201,202,203,204,386,205,206,207,208,20,21,22,209,210,211,212,213,66,67,387,92,93,94,95,96,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,143,237,238,144,388,23,239,240,241,389,390,391,392,393,394,395,396,397,398,399,400,401,402,242,243,244,245,246,138,247,248,249,250,251,97,98,252,253,254,255,256,99,257,258,259,260,26,74,27,28,261,262,29,30,31,403,404,263,264,265,405,266,406,407,408,267,268,269,270,409,410,411,412,413,414,415,416,417,271,272,273,418,274,275,32,276,277,278,279,100,419,420,421,422,423,424,425,373,426,427,428,429,430,431,432,433,280,434,435,436,437,438,281,439,440,441,442,443,444,445,446,447,448,449,374,450,451,282,75,283,284,76,77,33,34,285,286,287,288,289,78,35,36,290,101,102,38,103,104,105,106,107,291,292,293,145,294,295,146,147,296,297,298,299,300,301,302,303,304,305,452,306,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,307,40,308,309,310,311,148,453,108,149,454,312,41,150,42,455,151,313,314,456,315,316,317,318,43,319,79,44,45,46,320,152,153,154,321,322,323,324,457,458,459,460,461,462,325,463,464,465,466,467,468,469,470,471,326,472,473,155,474,475,476,477,478,479,480,481,482,156,483,484,485,486,487,157,488,489,109,110,47,111,490,112,113,114,115,116,117,118,119,120,121,122,123,124,48,125,126,127,128,129,130,131,132,133,134,327,328,329,330,331,332,491,492,333,334,335,336,337,135,338,493,494,495,496,497,339,498,499,500,501,502,503,340,49,341,342,343,50,51,344,345,52,346,347,348,158,349,350,53,351,91,54,55,56,352,353,354,57,58,59,60,136,370,137,504,505,506,507,508,509,510,355,356,357,358,511,359,360,361,512,159,160,61,161,162,163,164,165,166,167,168,169,170,62,63,171,64,172,362,363,364,139,365,366,367,368,369],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":111,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":428,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":297,"org.easymock.tests2.DelegateToTest.testReturnException":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":254,"org.easymock.tests.MockingTest.testPartialClassMocking":264,"org.easymock.tests.MockClassControlTest.testToString":397,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":456,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":334,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":269,"org.easymock.samples.ExampleTest.answerVsDelegate":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":142,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":309,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":402,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":52,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":96,"org.easymock.tests.UsageTest.moreThanOneArgument":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":199,"org.easymock.tests.UsageVarargTest.varargIntAccepted":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":433,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":103,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":107,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":84,"org.easymock.tests.ReplayStateInvalidUsageTest.times":448,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests2.DependencyTest.testClassMocking":491,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":324,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":381,"org.easymock.tests2.UsageTest.strictResetToDefault":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":343,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":203,"org.easymock.tests2.DelegateToTest.testDelegate":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests.LimitationsTest.mockFinalMethod":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":213,"org.easymock.tests2.DependencyTest.testClassMockingSupport":492,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":66,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":322,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":442,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":383,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":503,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":489,"org.easymock.samples.PartialClassMockTest.testGetArea":145,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":443,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":104,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":478,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests2.UsageTest.niceToStrict":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":485,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":465,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":267,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":187,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":10,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":418,"org.easymock.tests.MockClassControlTest.testEquals":401,"org.easymock.tests2.EasyMockSupportClassTest.testAll":326,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":238,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":323,"org.easymock.tests.MockNameTest.defaultName":451,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":305,"org.easymock.tests.UsageVarargTest.allKinds":100,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":212,"org.easymock.samples.BasicClassMockTest.testPrintContent":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":250,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":257,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":331,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":173,"org.easymock.tests2.UsageConstraintsTest.greaterThan":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":239,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":455,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":148,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":290,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":341,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":253,"org.easymock.tests2.CaptureTest.testCaptureFirst":14,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":342,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":13,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.GenericTest.testBridgedEquals":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":21,"org.easymock.tests.UsageExpectAndReturnTest.longType":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":209,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":130,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":292,"org.easymock.tests.UsageCallCountTest.tooManyCalls":22,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":69,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":249,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":356,"org.easymock.tests.MockingTest.testClassMocking":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":386,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":363,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests.MockTypeTest.fromEasyMockClass":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":137,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":15,"org.easymock.tests.UsageExpectAndReturnTest.object":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":345,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":275,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":200,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":378,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":192,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":494,"org.easymock.tests.MockClassControlTest.testHashCode":400,"org.easymock.tests2.EasyMockSupportTest.testVerify":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":480,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":83,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":282,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":321,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":457,"org.easymock.tests.UsageVarargTest.varargCharAccepted":274,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":409,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":352,"org.easymock.tests.DefaultClassInstantiatorTest.object":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":258,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":390,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":481,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":493,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":399,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":291,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":85,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":505,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":256,"org.easymock.tests2.StubTest.stubWithReturnValue":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":88,"org.easymock.samples.SupportTest.voteForRemovals":299,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":281,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":365,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":379,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":128,"org.easymock.tests2.DelegateToTest.testWrongClass":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":146,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":509,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":68,"org.easymock.tests2.CaptureTest.testCaptureNone":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":236,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":37,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests2.ThreadingTest.testThreadSafe":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":483,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":208,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":393,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":294,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":95,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":447,"org.easymock.tests2.StubTest.stub":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":255,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":414,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":446,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.SerializationTest.testClass":158,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":339,"org.easymock.tests.LimitationsTest.mockNativeMethod":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":460,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.tests2.NameTest.nameForMocksControl":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":462,"org.easymock.tests2.MockedExceptionTest.testMockedException":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":473,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":266,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":168,"org.easymock.tests.MockingTest.testNicePartialClassMocking":265,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":458,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":361,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":129,"org.easymock.tests.MockingTest.testTwoMocks":263,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":512,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":133,"org.easymock.samples.ExampleTest.removeNonExistingDocument":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":464,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":444,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":495,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":412,"org.easymock.tests2.ConstraintsToStringTest.andToString":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":337,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":474,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":154,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":150,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":132,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":251,"org.easymock.tests2.UsageTest.defaultResetToNice":354,"org.easymock.samples.ExampleTest.voteAgainstRemovals":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":191,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":459,"org.easymock.tests.UsageVarargTest.differentLength":32,"org.easymock.tests2.CallbackTest.callback":39,"org.easymock.tests2.UsageConstraintsTest.equals":490,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":149,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":94,"org.easymock.tests.UsageCallCountTest.tooFewCalls":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":270,"org.easymock.tests.UsageThrowableTest.throwCheckedException":248,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":463,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":357,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":359,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":369,"org.easymock.tests.ObjectMethodsTest.testHashCode":391,"org.easymock.tests2.NameTest.nameForNiceMock":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":338,"org.easymock.tests2.DependencyTest.testInterfaceMocking":333,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.DelegateToTest.testStubDelegate":329,"org.easymock.tests2.AnswerTest.stubAnswer":368,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":169,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":152,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":147,"org.easymock.tests2.ConstraintsToStringTest.orToString":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":501,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":126,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":504,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":177,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.samples.SupportTest.addDocument":298,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":511,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":475,"org.easymock.tests.GenericTest.testPackageScope":237,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":500,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":171,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":241,"org.easymock.tests2.MockedExceptionTest.testRealException":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":431,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":93,"org.easymock.tests2.NameTest.nameForStrictMock":316,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":508,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":413,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":127,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":61,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":497,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":479,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":476,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":189,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":415,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":20,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":366,"org.easymock.tests2.CompareToTest.testLessThan":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":353,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":441,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":161,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":190,"org.easymock.tests2.CaptureTest.testCapture":372,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.samples.ExampleTest.addAndChangeDocument":306,"org.easymock.tests2.ConstraintsToStringTest.notToString":82,"org.easymock.tests.UsageStrictMockTest.testVerify":198,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":182,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":106,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":51,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":272}}]
