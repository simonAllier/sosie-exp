[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:173","failures":[3],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[32,33],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[34,35,36,19,37,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[39,40,35,41,8,42,10,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,28,59,60,61,0,62,63,64,1,65,66,2,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[98,99,100,101,102,103,104,105,106,107,108,39,40,109,110,111,112,113,114,115,116,6,117,118,119,120,121,122,123,124,35,125,126,127,128,129,130,131,132,133,134,41,135,136,8,137,138,139,140,141,36,9,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,42,10,171,11,12,172,173,43,44,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,45,46,47,48,49,18,19,20,50,51,52,53,54,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,55,238,239,240,241,242,243,244,245,246,56,57,247,37,248,249,250,251,252,253,38,254,21,255,32,256,257,258,259,260,261,262,263,264,265,266,267,268,269,58,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,28,288,29,30,289,59,60,61,0,62,63,64,1,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,3,312,313,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[314,315,316,317,318,319,320,290,321,301],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[322,323,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[98,99,100,101,102,103,325,326,327,104,105,106,107,108,39,40,109,110,111,112,113,114,115,116,328,4,329,330,6,7,117,118,119,120,121,122,123,124,35,125,126,127,128,129,130,331,131,132,133,134,41,135,136,8,137,138,139,140,141,36,9,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,332,169,170,42,10,171,11,12,172,173,43,44,333,334,335,14,336,174,337,175,176,338,177,339,340,178,341,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,45,46,47,48,49,18,19,20,50,51,52,53,54,342,204,343,344,345,346,347,348,205,206,207,208,209,349,210,211,212,213,214,215,216,217,350,218,219,220,221,222,222,223,223,224,225,226,227,228,351,229,230,231,232,352,233,234,235,236,237,55,238,239,240,241,242,243,244,245,246,56,57,247,37,248,249,250,251,252,253,38,254,21,255,32,256,257,258,259,260,261,262,263,264,265,266,267,268,269,353,58,270,354,271,355,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,28,288,29,30,289,59,60,61,0,62,63,64,1,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,3,312,313,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[39,109,112,113,114,115,116,35,36,9,144,145,149,150,153,155,156,157,158,160,161,162,163,165,166,167,168,10,11,12,43,44,180,181,184,186,187,188,189,191,192,193,194,196,197,198,199,200,201,202,203,45,46,47,48,49,18,19,50,51,54,210,211,213,225,229,235,236,56,57,37,254,21,32,257,258,262,268,271,272,273,274,275,278,279,282,284,28,29,30,59,60,61,0,62,63,64,1,65,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,294,295,3,313,85,87,88,91,92,93,94,97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[357,358,98,100,101,102,103,326,327,108,39,40,109,110,111,112,113,114,115,116,328,4,329,330,5,6,7,359,117,118,119,120,121,122,123,124,35,125,126,127,128,129,130,331,131,132,133,134,41,135,136,360,8,137,361,322,362,36,9,143,144,145,146,147,148,363,364,365,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,323,169,170,42,10,171,11,12,172,173,43,44,13,14,366,367,368,369,370,371,372,373,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,45,46,47,48,49,18,19,20,324,50,51,52,53,54,342,205,206,207,208,209,349,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,223,224,225,226,227,351,229,231,232,233,235,236,237,55,238,239,243,244,245,246,56,57,247,37,248,249,250,251,252,253,38,254,21,255,32,256,257,258,259,260,261,262,263,264,265,266,267,268,269,353,58,270,354,271,355,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,28,288,29,30,289,59,60,61,0,62,63,64,1,65,66,2,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,290,291,292,374,375,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,376,311,3,312,377,313,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[39,40,109,110,111,112,113,114,115,116,328,6,7,117,118,119,120,135,136,8,36,9,142,144,145,148,363,10,171,11,12,172,43,44,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,45,46,47,48,49,18,20,324,50,51,54,342,349,210,211,212,213,214,215,216,217,350,221,222,222,225,226,351,229,231,232,352,233,234,235,236,237,55,238,239,243,244,245,246,37,252,253,38,254,21,32,256,257,258,259,260,262,263,264,265,266,267,268,269,58,270,354,271,355,272,273,274,275,276,277,278,279,280,281,282,283,284,285,28,288,29,30,289,59,60,61,0,62,63,64,1,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,290,291,292,294,298,300,301,302,303,304,305,306,307,308,309,310,3,84,85,87,88,91,92,93,94,96,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[326,104,131,137,9,143,147,369,201,20,229,233,32,261,264,265,266,271,273,275,279,282,0,74],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":261,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":256,"org.easymock.tests2.StubTest.stubWithReturnValue":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":314,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":189,"org.easymock.tests2.SerializationTest.testAllMockedMethod":303,"org.easymock.tests2.DelegateToTest.testReturnException":311,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":117,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests.MockClassControlTest.testToString":343,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":161,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":358,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":149,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.UsageExpectAndThrowTest.object":159,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":253,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":316,"org.easymock.tests2.DelegateToTest.testWrongClass":312,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":44,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":66,"org.easymock.tests2.UsageTest.wrongArguments":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":50,"org.easymock.samples.ConstructorCalledMockTest.testTax":222,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":106,"org.easymock.samples.ExampleTest.answerVsDelegate":213,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":304,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":348,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":231,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":168,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests2.CaptureTest.testCaptureNone":92,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":369,"org.easymock.tests.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageVarargTest.varargIntAccepted":128,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":103,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":226,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":27,"org.easymock.tests2.CaptureTest.testCapture_2617107":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":53,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":230,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":177,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.tests2.SerializationTest.testClass":301,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":300,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":120,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests2.AnswerTest.answer":292,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":199,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":242,"org.easymock.tests2.CaptureTest.testAnd":84,"org.easymock.tests2.UsageTest.strictResetToDefault":254,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":356,"org.easymock.tests2.NameTest.nameForMocksControl":251,"org.easymock.tests2.MockedExceptionTest.testMockedException":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":373,"org.easymock.tests2.DelegateToTest.testDelegate":313,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":153,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":264,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":232,"org.easymock.tests.MockingTest.testNicePartialClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":269,"org.easymock.tests2.CaptureTest.testCaptureLast":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":310,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":141,"org.easymock.tests.MockingTest.testTwoMocks":359,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":13,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":157,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":260,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":82,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":337,"org.easymock.tests.UsageThrowableTest.throwError":109,"org.easymock.samples.ExampleTest.removeNonExistingDocument":350,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":176,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":237,"org.easymock.tests2.ConstraintsToStringTest.andToString":26,"org.easymock.tests2.MockBuilderTest.testCreateMockString":234,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":209,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":293,"org.easymock.tests.UsageVerifyTest.twoThrows":19,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":245,"org.easymock.samples.PartialClassMockTest.testGetArea":225,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":271,"org.easymock.tests2.UsageTest.niceToStrict":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":81,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":116,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":352,"org.easymock.tests2.UsageTest.defaultResetToNice":259,"org.easymock.samples.ExampleTest.voteAgainstRemovals":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":195,"org.easymock.tests.UsageVarargTest.differentLength":331,"org.easymock.tests2.CallbackTest.callback":272,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":158,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":104,"org.easymock.tests.UsageCallCountTest.tooFewCalls":101,"org.easymock.tests.UsageOverloadedMethodTest.overloading":210,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":107,"org.easymock.tests.UsageThrowableTest.throwCheckedException":113,"org.easymock.tests.MockClassControlTest.testEquals":347,"org.easymock.tests2.EasyMockSupportClassTest.testAll":243,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":15,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":241,"org.easymock.tests2.CaptureTest.testCaptureAll":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":309,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":306,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":308,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":295,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":208,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests2.NameTest.nameForNiceMock":250,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests.UsageVarargTest.allKinds":41,"org.easymock.tests2.DependencyTest.testInterfaceMocking":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":318,"org.easymock.samples.BasicClassMockTest.testPrintContent":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":140,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":115,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":286,"org.easymock.tests2.AnswerTest.stubAnswer":294,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":355,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.samples.ExampleTest.voteForRemoval":214,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":198,"org.easymock.tests.UsageExpectAndReturnTest.floatType":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":290,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":223,"org.easymock.tests2.ConstraintsToStringTest.orToString":22,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":75,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests.UsageThrowableTest.noUpperLimit":110,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":108,"org.easymock.tests2.SerializationTest.test":302,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":275,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":181,"org.easymock.samples.SupportTest.addDocument":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":376,"org.easymock.tests2.CaptureTest.testCaptureFirst":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":187,"org.easymock.tests.GenericTest.testPackageScope":135,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":55,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.CaptureTest.testCapture2_2446744":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":233,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests2.NameTest.nameForMock":248,"org.easymock.tests.UsageExpectAndReturnTest.longType":183,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":167,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":79,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":184,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":100,"org.easymock.tests2.MockedExceptionTest.testRealException":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":188,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":16,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":305,"org.easymock.tests2.NameTest.nameForStrictMock":249,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":99,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":298,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":211,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests.UsageExpectAndReturnTest.object":190,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":351,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":317,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":130,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":319,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":274,"org.easymock.tests2.CaptureTest.testCaptureRightOne":94,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":370,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":321,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":196,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":329,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests.MockClassControlTest.testHashCode":346,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":204,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":193,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":239,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests.UsageVarargTest.varargCharAccepted":129,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":375,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":34,"org.easymock.tests2.UsageTest.openCallCountByLastCall":257,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":258,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":363,"org.easymock.tests2.CaptureTest.testCaptureFromStub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":174,"org.easymock.tests.UsageTest.unexpectedCallWithArray":142,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":156,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":102,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":194,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":354,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":345,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":155,"org.easymock.tests2.ConstraintsToStringTest.notToString":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":197,"org.easymock.tests.UsageStrictMockTest.testVerify":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":366,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":219,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":246,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":138,"org.easymock.tests2.UsageTest.resumeIfFailure":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":48,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":279,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":127}}]
