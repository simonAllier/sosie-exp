[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[28,0,29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,2,119,3,120,121,4,5,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,6,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,10,11,12,271,272,273,274,275,276,277,13,14,278,15,16,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,0,29,30,381,382,383,384,385,386,387,388,389,390,391,392,1,393,394,395,396,397,398,17,18,399,400,401,402,403,19,20,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,21,22,23,24,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,32,486,33,34,35,36,37,38,487,39,41,42,488,43,489,490,491,25,492,26,27,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[494,32,486,33,34,35,36,37,38,39,41,42,488,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[495,496,119,13,497,498],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[354,355,358,360,361,363,373,378,32,33,41],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.internal.RecordState:153","failures":[92,93,94,95,96,97,143,225,464,465,466,467],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[403],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[59,64,78,138,139,140,141,144,145,146,147,148,213,214,215,216,217,219,222,229,230,231,232,233,234,236,262,263,264,265,266,267,268,269,270,281,290,290,291,291,296,297,298,299,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,346,347,0,30,381,499,383,384,386,387,388,389,391,1,393,394,500,396,406,410,461,462,501,502,464,465,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[103,2,177,181,182,184,187,261,10,11,12,14,16,279,17,25,27,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[373,374],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[53,54,55,503,107,504,505,118,119,3,4,5,122,129,6,249,11,12,276,13,278,15,16,299,310,312,354,370,383,393,394,396,397,18,399,400,19,20,404,405,436,440,441,444,468,490,492,26,27],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[354,361,366,373],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"key"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[144,147,281,290,291,307,311,314,321,331,0,387,392,1,393,396,461,462],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[448],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[380,506],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[495,496,13,497,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[28,0,29,30],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[495,496,119,13,497,498],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[70,71,72,80,82,83,84,85,86,87,96,98,100,101,103,105,106,108,109,110,111,112,113,118,2,120,121,122,140,142,143,145,165,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,216,217,219,223,224,227,229,249,250,251,252,259,260,10,11,12,14,15,16,281,282,283,284,285,287,295,298,299,300,301,302,303,306,310,311,312,318,321,331,337,340,341,342,343,345,346,347,352,353,354,355,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,0,29,383,387,389,391,394,397,398,17,399,401,402,403,404,405,413,417,418,428,435,436,437,438,439,440,441,442,443,444,445,446,454,461,466,468,469,470,471,472,473,475,478,479,481,482,483,485,32,486,33,34,35,38,487,39,41,488,43,25,26,27],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[144,148],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[105,106,108,109,110,111,112,140,193,194,195,196,197,198,201,202,204,205,206,208,209,210,211,212,216,217,219,223,249,250,251,252,253,254,255,256,14,15,16,281,282,284,285,287,295,298,299,300,301,302,303,306,310,311,312,318,321,331,337,340,341,342,343,345,346,347,383,387,389,391,394,461,472,478,479,482,25,26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:222","failures":[99,102,259,260],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[424,425,426,427,430,431,432,433,434,450,451,452,453,456,457,458,459,460],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[354,361,32,33,41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[155,417,418],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[482],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":355,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.UsageTest.argumentsOrdered":20,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":159,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":400,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":292,"org.easymock.tests2.DelegateToTest.testReturnException":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":93,"org.easymock.tests.MockingTest.testPartialClassMocking":216,"org.easymock.tests.MockClassControlTest.testToString":264,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":173,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":321,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":7,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":479,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":362,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":90,"org.easymock.samples.ExampleTest.answerVsDelegate":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":64,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":221,"org.easymock.tests2.UsageConstraintsTest.testNull":358,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":301,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":444,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":269,"org.easymock.tests2.CaptureTest.testPrimitive":34,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":227,"org.easymock.tests.UsageTest.moreThanOneArgument":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":192,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.UsageTest.argumentsOrdered":5,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":271,"org.easymock.tests.UsageVarargTest.varargIntAccepted":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":408,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":454,"org.easymock.tests.ReplayStateInvalidUsageTest.times":245,"org.easymock.tests2.DependencyTest.testClassMocking":476,"org.easymock.tests2.AnswerTest.answer":413,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":422,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":61,"org.easymock.tests2.UsageTest.strictResetToDefault":398,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.DelegateToTest.testDelegate":485,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":188,"org.easymock.tests.LimitationsTest.mockFinalMethod":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":117,"org.easymock.tests2.DependencyTest.testClassMockingSupport":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":259,"org.easymock.tests2.CaptureTest.testCapture1_2446744":35,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":420,"org.easymock.tests.UsageThrowableTest.throwError":80,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":239,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":63,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":339,"org.easymock.samples.PartialClassMockTest.testGetArea":281,"org.easymock.tests.MockingTest.testInterfaceMocking":218,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":68,"org.easymock.tests2.UsageTest.niceToStrict":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":174,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":326,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":149,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":387,"org.easymock.tests2.MockBuilderTest.testCreateMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":182,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":440,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":88,"org.easymock.tests.UsageOverloadedMethodTest.overloading":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":336,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":101,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":368,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":367,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":39,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":126,"org.easymock.tests.MockClassControlTest.testEquals":268,"org.easymock.tests2.EasyMockSupportClassTest.testAll":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":190,"org.easymock.tests2.CaptureTest.testCaptureAll":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":115,"org.easymock.tests.MockNameTest.defaultName":79,"org.easymock.tests2.UsageConstraintsTest.testMatches":369,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":287,"org.easymock.tests.UsageVarargTest.allKinds":134,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":116,"org.easymock.samples.BasicClassMockTest.testPrintContent":297,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":86,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":490,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":97,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":235,"org.easymock.tests2.UsageConstraintsTest.greaterThan":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":312,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":236,"org.easymock.samples.ExampleTest.voteForRemoval":284,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":470,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":313,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":304,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":397,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":437,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":480,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":438,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":405,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests2.CaptureTest.testCapture2_2446744":488,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":472,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":167,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":133,"org.easymock.tests.GenericTest.testBridgedEquals":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":54,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":113,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":55,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":85,"org.easymock.tests.MockingTest.testNiceClassMocking":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":341,"org.easymock.tests.MockingTest.testClassMocking":214,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":48,"org.easymock.tests2.UsageConstraintsTest.testContains":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":466,"org.easymock.tests2.UsageConstraintsTest.testFind":357,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":72,"org.easymock.tests.MockTypeTest.fromEasyMockClass":62,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":351,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":443,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":128,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":76,"org.easymock.tests.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":135,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":462,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":424,"org.easymock.tests.MockClassControlTest.testHashCode":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":328,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":98,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":45,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":419,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":127,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":228,"org.easymock.tests2.CaptureTest.testCaptureMultiple":31,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":508,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":446,"org.easymock.tests.DefaultClassInstantiatorTest.object":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":44,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":74,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":423,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":179,"org.easymock.tests.CapturesMatcherTest.test":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":56,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":337,"org.easymock.tests2.UsageTest.resumeIfFailure":404,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":95,"org.easymock.tests2.StubTest.stubWithReturnValue":475,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":377,"org.easymock.tests2.SerializationTest.testAllMockedMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":165,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":295,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":185,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":171,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":414,"org.easymock.tests.UsageExpectAndThrowTest.object":183,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":137,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":374,"org.easymock.tests2.DelegateToTest.testWrongClass":483,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":105,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":106,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":290,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":411,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":442,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":89,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests2.CaptureTest.testCaptureNone":487,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":69,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":503,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":132,"org.easymock.tests2.ThreadingTest.testThreadSafe":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":332,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":52,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":77,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":296,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":226,"org.easymock.tests2.UsageConstraintsTest.any":364,"org.easymock.tests2.StubTest.stub":474,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":58,"org.easymock.tests.UsageExpectAndThrowTest.longType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":94,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":233,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":243,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":492,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":428,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":493,"org.easymock.tests2.NameTest.nameForMocksControl":24,"org.easymock.tests2.MockedExceptionTest.testMockedException":465,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":320,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":177,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":219,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":391,"org.easymock.tests.MockingTest.testNicePartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":260,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":347,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":361,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":375,"org.easymock.tests.MockingTest.testTwoMocks":215,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":181,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":379,"org.easymock.samples.ExampleTest.removeNonExistingDocument":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":241,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":425,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":231,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":471,"org.easymock.tests2.MockBuilderTest.testCreateMockString":396,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":262,"org.easymock.tests.UsageExpectAndThrowTest.floatType":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":463,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":331,"org.easymock.samples.ExampleTest.voteAgainstRemoval":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":67,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":311,"org.easymock.tests.LimitationsTest.privateConstructor":139,"org.easymock.tests2.UsageConstraintsTest.testNotNull":378,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":464,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":87,"org.easymock.tests2.UsageTest.defaultResetToNice":403,"org.easymock.samples.ExampleTest.voteAgainstRemovals":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":129,"org.easymock.tests2.CallbackTest.callback":468,"org.easymock.tests2.UsageConstraintsTest.equals":356,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":307,"org.easymock.tests.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":225,"org.easymock.tests.UsageCallCountTest.tooFewCalls":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":91,"org.easymock.tests.UsageThrowableTest.throwCheckedException":84,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":345,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":418,"org.easymock.tests.ObjectMethodsTest.testHashCode":75,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":473,"org.easymock.tests2.NameTest.nameForNiceMock":23,"org.easymock.tests2.DependencyTest.testInterfaceMocking":478,"org.easymock.samples.ExampleTest.addDocument":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":333,"org.easymock.tests2.DelegateToTest.testStubDelegate":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.AnswerTest.stubAnswer":417,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":392,"org.easymock.tests.UsageVarargTest.varargLongAccepted":131,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":158,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":461,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageThrowableTest.noUpperLimit":81,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":353,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":406,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":36,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.tests2.UsageConstraintsTest.testSame":359,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":344,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":323,"org.easymock.tests.GenericTest.testPackageScope":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":220,"org.easymock.tests2.NameTest.nameForMock":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":395,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":187,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests2.MockedExceptionTest.testRealException":467,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":162,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":248,"org.easymock.tests2.NameTest.nameForStrictMock":22,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":509,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":410,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":8,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":232,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":383,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":380,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":157,"org.easymock.tests2.CaptureTest.testCaptureRightOne":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":327,"org.easymock.tests2.UsageConstraintsTest.testOr":360,"org.easymock.tests.UsageRangeTest.combination":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":299,"org.easymock.tests.UsageTest.wrongArguments":3,"org.easymock.tests2.MockBuilderTest.testWithConstructor":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":324,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.UsageVarargTest.varargShortAccepted":130,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":53,"org.easymock.tests2.UsageConstraintsTest.cmpTo":365,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests2.CompareToTest.testLessThan":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":402,"org.easymock.tests2.CaptureTest.testCaptureFromStub":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":238,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":384,"org.easymock.tests.UsageTest.unexpectedCallWithArray":119,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests2.CaptureTest.testCapture":40,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.UsageConstraintsTest.constraints":354,"org.easymock.samples.ExampleTest.addAndChangeDocument":289,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":37,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.LimitationsTest.abstractClass":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":441,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":124,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":9}}]
