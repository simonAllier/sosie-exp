[{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ZERO_OR_MORE"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[36,37,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,45,46,47,36,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,37,71,72,38,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,40,92,93,94,95,96,44,45,46,47,36,48,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,7,8,9,143,144,145,146,147,148,30,31,149,150,151,152,153,154,155,156,157,158,72,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,10,38,178,179,180,181,182,183,184,185,186,187,11,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,75,76,77,78,21,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[252,79,81,82,83,84,253,254,89,90,39,255,91,40,256,257,258,41,42,259,260,43,92,93,94,95,96,36,97,98,99,100,101,261,102,103,104,105,106,107,108,22,49,114,24,262,50,25,26,263,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,264,115,27,116,265,28,117,118,119,120,121,266,267,268,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,7,8,9,143,144,145,146,147,148,30,31,149,150,37,71,151,269,270,158,72,159,160,161,162,163,164,165,271,272,273,274,275,276,277,278,167,279,280,281,169,170,282,283,171,284,285,286,287,176,177,10,38,178,179,180,181,182,288,73,183,184,32,185,186,289,74,187,33,34,11,290,188,291,189,190,191,192,193,292,195,293,196,294,295,296,297,298,299,300,301,302,303,304,305,306,307,197,198,308,35,199,200,201,202,203,204,205,206,207,208,209,210,309,211,212,213,214,215,216,217,218,219,220,221,222,310,223,224,225,226,227,311,228,229,230,231,77,312,21,232,233,313,234,235,314,315,236,237,238,239,316,240,241,242,243,244,317,245,246,247,248,249,250,318,251],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[21,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,6,335,336,337,338,339],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[340,341,167,342,14,343,344,345,195,346,227,20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":204,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":233,"org.easymock.tests2.DelegateToTest.testReturnException":238,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":45,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.samples.SupportTest.voteForRemovals":273,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":63,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":51,"org.easymock.tests.UsageExpectAndThrowTest.object":61,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":288,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":221,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":15,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":87,"org.easymock.samples.ExampleTest.answerVsDelegate":160,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":313,"org.easymock.tests2.UsageConstraintsTest.testNull":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":190,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":303,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":279,"org.easymock.tests2.CaptureTest.testPrimitive":244,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":70,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":86,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":155,"org.easymock.tests2.CaptureTest.testCaptureNone":248,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":12,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":31,"org.easymock.tests.UsageVarargTest.varargByteAccepted":104,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":99,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":84,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":71,"org.easymock.tests2.UsageConstraintsTest.any":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests2.StubTest.stub":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndThrowTest.longType":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":46,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":341,"org.easymock.tests2.AnswerTest.answer":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":175,"org.easymock.tests2.CaptureTest.testAnd":241,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":194,"org.easymock.tests2.NameTest.nameForMocksControl":181,"org.easymock.tests2.MockedExceptionTest.testMockedException":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":8,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":50,"org.easymock.tests2.DelegateToTest.testDelegate":240,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":55,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":280,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":66,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":192,"org.easymock.tests2.CaptureTest.testCaptureLast":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":209,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":347,"org.easymock.tests2.CaptureTest.testCapture1_2446744":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":173,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":225,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests.UsageStrictMockTest.differentMethods":117,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":2,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":282,"org.easymock.tests2.MockBuilderTest.testCreateMockString":344,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":269,"org.easymock.tests.UsageExpectAndThrowTest.floatType":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":157,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":229,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":286,"org.easymock.samples.PartialClassMockTest.testGetArea":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.samples.ExampleTest.voteAgainstRemoval":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":52,"org.easymock.tests2.UsageTest.niceToStrict":185,"org.easymock.tests2.UsageConstraintsTest.testNotNull":224,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":167,"org.easymock.tests2.MockBuilderTest.testCreateMock":343,"org.easymock.tests2.UsageTest.defaultResetToNice":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.UsageVarargTest.differentLength":261,"org.easymock.tests2.CallbackTest.callback":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":345,"org.easymock.tests.UsageTest.openCallCountByLastCall":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":60,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":299,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":37,"org.easymock.tests.UsageCallCountTest.tooFewCalls":82,"org.easymock.tests.UsageOverloadedMethodTest.overloading":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":215,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":214,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":88,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests2.EasyMockSupportClassTest.testAll":284,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":68,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":174,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":236,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":235,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":315,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":156,"org.easymock.samples.ExampleTest.voteForRemovals":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":18,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests2.NameTest.nameForNiceMock":180,"org.easymock.tests.UsageVarargTest.allKinds":106,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":148,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":17,"org.easymock.samples.BasicClassMockTest.testPrintContent":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":112,"org.easymock.samples.ExampleTest.addDocument":163,"org.easymock.tests2.DelegateToTest.testStubDelegate":239,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":41,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests2.AnswerTest.stubAnswer":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":48,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":116,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":7,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":293,"org.easymock.tests.UsageVarargTest.varargLongAccepted":103,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":5,"org.easymock.samples.ExampleTest.voteForRemoval":161,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":227,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":91,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":202,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":245,"org.easymock.tests2.SerializationTest.test":232,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":296,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":40,"org.easymock.tests2.UsageConstraintsTest.testSame":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.samples.SupportTest.addDocument":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":44,"org.easymock.tests2.CaptureTest.testCaptureFirst":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":297,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests.GenericTest.testPackageScope":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":318,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":253,"org.easymock.tests2.NameTest.nameForMock":178,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests2.UsageStrictMockTest.differentMethods":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":9,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":81,"org.easymock.tests2.MockedExceptionTest.testRealException":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":332,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":234,"org.easymock.tests2.UsageConstraintsTest.testContains":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":80,"org.easymock.tests2.NameTest.nameForStrictMock":179,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":205,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":72,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":191,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":177,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":220,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":278,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":16,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":101,"org.easymock.tests.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":295,"org.easymock.tests2.CaptureTest.testCaptureRightOne":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":267,"org.easymock.tests2.UsageConstraintsTest.testOr":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":20,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":291,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":260,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":152,"org.easymock.tests2.EasyMockSupportTest.testVerify":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":259,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":4,"org.easymock.tests.UsageVarargTest.varargShortAccepted":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests.UsageVarargTest.varargCharAccepted":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":322,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageTest.openCallCountByLastCall":289,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":305,"org.easymock.tests.DefaultClassInstantiatorTest.object":0,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":266,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.UsageConstraintsTest.constraints":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":57,"org.easymock.samples.ExampleTest.addAndChangeDocument":165,"org.easymock.tests.UsageStrictMockTest.testVerify":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":287,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":110,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":246,"org.easymock.tests2.UsageTest.resumeIfFailure":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":300,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":98}}]
