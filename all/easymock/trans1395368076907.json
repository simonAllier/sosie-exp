[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[123,123,124,124,125,5,6,8,9,10,11,12,14,15,16,17,126,127,18,19,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[146,147,148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[149,150,151,36,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[153,154],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[155,156,157,158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:773","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[161,162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[9,163,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[123,123,124,124,125,5,6,8,9,10,11,12,14,15,16,17,127,18,19,128,164,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[165,166,167,168],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[169,170,171,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[174],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[177,153,154,178],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[179,149,180,181,182,183,184,0,123,124,84,169,85,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,1,200,2,201,202,125,203,3,4,204,205,206,207,208,86,87,88,209,89,90,91,92,93,210,211,94,5,6,7,212,213,8,9,10,11,214,215,163,216,217,12,13,14,15,174,16,17,126,218,219,220,221,127,18,19,222,20,21,160,22,23,223,24,25,224,225,128,26,27,226,177,227,228,153,154,229,230,95,231,232,233,234,235,236,237,238,161,96,239,240,97,241,98,242,243,244,28,29,30,245,246,247,248,249,99,250,251,100,252,101,253,254,255,256,257,258,259,260,261,262,170,263,171,264,172,265,266,267,268,269,270,271,272,31,273,162,32,33,34,274,275,276,35,277,278,279,280,281,102,103,104,282,105,106,107,108,109,283,284,110,111,285,286,287,288,289,290,291,292,165,166,167,293,294,295,296,297,298,299,112,300,301,302,113,303,304,305,306,307,114,308,309,310,311,312,313,314,115,116,117,118,119,146,150,147,151,315,36,37,38,164,316,317,318,319,320,321,322,323,324,129,130,131,132,133,325,326,327,328,329,175,330,331,332,333,334,335,134,336,39,40,337,338,41,42,339,340,43,341,44,45,46,47,342,48,49,50,51,343,52,53,54,55,344,345,346,347,348,349,56,57,58,59,350,351,352,60,353,354,135,355,356,357,358,359,155,360,361,362,363,178,364,156,365,148,366,157,367,368,369,370,158,159,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,61,392,393,394,395,396,397,398,399,400,401,120,402,121,403,404,405,406,407,408,409,62,410,411,412,413,414,415,416,122,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,63,64,438,439,65,66,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,136,137,138,139,140,455,456,457,141,142,458,459,143,144,145,460,461,462,463,464,67,68,465,466,69,467,70,71,72,73,468,74,75,76,77,469,78,79,80,81,82,470,83,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,152,487,488,489,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[3,4,39,40,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[130,340,47,52,53,140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[491],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[492,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[435,436,437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[175,494,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[386],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[123,123,124,124,169,187,188,189,190,193,194,195,197,230,95,232,233,234,235,237,238,161,96,239,240,97,241,98,242,243,257,259,260,262,170,263,171,172,266,267,268,270,278,279,280,111,285,286,287,290,291,165,167,293,294,295,296,297,298,299,112,300,301,302,113,303,304,305,306,307,114,308,309,310,311,312,313,314,320,321,322,323,324,326,327,328,329,175,330,332,376,377,378,379,380,382,385,398,402,404,405,406,407,427,428,429,430,431,432,433,434,457],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[495,496,335,497,498,438],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[165,166,167,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":148,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":32,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":85,"org.easymock.tests2.DelegateToTest.testReturnException":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":345,"org.easymock.tests.MockingTest.testPartialClassMocking":379,"org.easymock.tests.MockClassControlTest.testToString":429,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":115,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":67,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":299,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageTest.wrongArguments":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":402,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":384,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":232,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":253,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":131,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":441,"org.easymock.tests.UsageVarargTest.varargIntAccepted":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":136,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":284,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":140,"org.easymock.tests.ReplayStateInvalidUsageTest.times":423,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests2.DependencyTest.testClassMocking":189,"org.easymock.tests2.AnswerTest.answer":226,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":208,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":400,"org.easymock.tests2.CaptureTest.testAnd":222,"org.easymock.tests2.UsageTest.strictResetToDefault":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":250,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":481,"org.easymock.tests2.DelegateToTest.testDelegate":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":469,"org.easymock.tests.LimitationsTest.mockFinalMethod":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":464,"org.easymock.tests2.DependencyTest.testClassMockingSupport":190,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":356,"org.easymock.tests2.CaptureTest.testCapture1_2446744":22,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":206,"org.easymock.tests.UsageThrowableTest.throwError":470,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":417,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":120,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":389,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":314,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":418,"org.easymock.tests.MockingTest.testInterfaceMocking":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":387,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":397,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.MockBuilderTest.testCreateMock":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":93,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":73,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":399,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageOverloadedMethodTest.overloading":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":311,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":487,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":48,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":494,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":13,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":224,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":446,"org.easymock.tests.MockClassControlTest.testEquals":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":462,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":207,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":132,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests.UsageVarargTest.allKinds":454,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":463,"org.easymock.samples.BasicClassMockTest.testPrintContent":188,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":475,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":108,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":349,"org.easymock.tests2.UsageConstraintsTest.greaterThan":16,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":97,"org.easymock.samples.ExampleTest.voteForRemoval":180,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":332,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":235,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":457,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":271,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":249,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":344,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":146,"org.easymock.tests2.CaptureTest.testCaptureFirst":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.CaptureTest.testCapture2_2446744":26,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":268,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":453,"org.easymock.tests.GenericTest.testBridgedEquals":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":414,"org.easymock.tests.UsageExpectAndReturnTest.longType":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":460,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":247,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":80,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":455,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":129,"org.easymock.tests.UsageCallCountTest.tooManyCalls":415,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":467,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":474,"org.easymock.tests.MockingTest.testNiceClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":285,"org.easymock.tests.MockingTest.testClassMocking":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":409,"org.easymock.tests2.UsageConstraintsTest.testContains":12,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":280,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":61,"org.easymock.tests.MockTypeTest.fromEasyMockClass":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests.UsageExpectAndReturnTest.object":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":101,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":448,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":395,"org.easymock.tests.UsageTest.exactCallCountByLastCall":442,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":243,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":52,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":152,"org.easymock.tests.MockClassControlTest.testHashCode":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":103,"org.easymock.tests2.EasyMockSupportTest.testVerify":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":304,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":479,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":205,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":229,"org.easymock.tests.UsageVarargTest.varargCharAccepted":447,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":325,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageTest.openCallCountByLastCall":33,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests.DefaultClassInstantiatorTest.object":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":482,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":102,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":70,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":435,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":312,"org.easymock.tests2.UsageTest.resumeIfFailure":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":347,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.tests2.SerializationTest.testAllMockedMethod":167,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":370,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":186,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":75,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":168,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":374,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":177,"org.easymock.tests.UsageExpectAndThrowTest.object":468,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":218,"org.easymock.tests2.DelegateToTest.testWrongClass":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":145,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":198,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":171,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":440,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":497,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":388,"org.easymock.tests2.CaptureTest.testCaptureNone":25,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":354,"org.easymock.tests.UsageVarargTest.varargByteAccepted":452,"org.easymock.tests2.ThreadingTest.testThreadSafe":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":114,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":412,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":396,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":187,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":372,"org.easymock.tests2.UsageConstraintsTest.any":216,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":422,"org.easymock.tests2.StubTest.stub":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageExpectAndThrowTest.longType":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":373,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":175,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":421,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.SerializationTest.testClass":165,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":55,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":88,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.NameTest.nameForMocksControl":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":89,"org.easymock.tests2.MockedExceptionTest.testMockedException":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":298,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":69,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":200,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":230,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":172,"org.easymock.tests.MockingTest.testNicePartialClassMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":234,"org.easymock.tests2.CaptureTest.testCaptureLast":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":86,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":357,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":214,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":219,"org.easymock.tests.MockingTest.testTwoMocks":378,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":72,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":18,"org.easymock.samples.ExampleTest.removeNonExistingDocument":184,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":104,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":328,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":30,"org.easymock.tests2.MockBuilderTest.testCreateMockString":270,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":112,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":244,"org.easymock.tests.UsageVerifyTest.twoThrows":353,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":307,"org.easymock.samples.ExampleTest.voteAgainstRemoval":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":240,"org.easymock.tests.LimitationsTest.privateConstructor":405,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":476,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":278,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":343,"org.easymock.tests.UsageVarargTest.differentLength":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":87,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.UsageConstraintsTest.equals":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":458,"org.easymock.tests.UsageCallCountTest.tooFewCalls":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":473,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":376,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":290,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":286,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":289,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":154,"org.easymock.tests.ObjectMethodsTest.testHashCode":394,"org.easymock.tests2.NameTest.nameForNiceMock":118,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":191,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":308,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.stubAnswer":153,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":134,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":265,"org.easymock.tests.UsageVarargTest.varargLongAccepted":451,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":54,"org.easymock.tests.UsageExpectAndReturnTest.floatType":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":283,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":193,"org.easymock.tests2.SerializationTest.test":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":23,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":176,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":42,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.samples.SupportTest.addDocument":185,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":288,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":300,"org.easymock.tests.GenericTest.testPackageScope":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":109,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":383,"org.easymock.tests2.NameTest.nameForMock":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":49,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":77,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":59,"org.easymock.tests2.MockedExceptionTest.testRealException":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":367,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":142,"org.easymock.tests2.NameTest.nameForStrictMock":117,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":262,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":197,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":259,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":248,"org.easymock.tests2.CaptureTest.testCaptureRightOne":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":303,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageTest.wrongArguments":439,"org.easymock.tests2.MockBuilderTest.testWithConstructor":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":50,"org.easymock.tests.UsageVarargTest.varargShortAccepted":450,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":330,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":413,"org.easymock.tests2.UsageConstraintsTest.cmpTo":217,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":361,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":122,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":260,"org.easymock.tests.UsageTest.unexpectedCallWithArray":438,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":51,"org.easymock.tests2.CaptureTest.testCapture":492,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":336,"org.easymock.samples.ExampleTest.addAndChangeDocument":0,"org.easymock.tests2.ConstraintsToStringTest.containsToString":491,"org.easymock.tests.UsageStrictMockTest.testVerify":338,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":84,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":138,"org.easymock.tests.LimitationsTest.abstractClass":404,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":44,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":100}}]
