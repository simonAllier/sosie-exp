[{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[5,6,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,0,32,33,34,35,36,37,38,39,1,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,15,16,17,18,19,75,76,77,20,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,21,22,23,24,25,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,26,27,28,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,29,30,142,143,144,145,146,147,31,148,149,150,151,152,153,154,0,32,155,156,33,34,35,36,157,158,159,160,37,161,38,39,162,1,40,163,164,165,2,41,42,43,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,45,220,221,222,223,224,225,46,226,227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[228,59,60,229,230],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[231,232,233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[234,235,236,237,238,239],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[66,67,240,241,20,242,243,21,22,23,24,25,103,115,231,26,27,244,245,28,29,30,237,31,0,32,155,156,33,34,35,36,157,158,246,159,160,37,161,38,39,162,1,40,163,164,165,247,2,41,42,43,248,249,250,251,169,170,171,172,252,173,174,175,176,177,178,44,253,179,181,205,206,212,213,46,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[48,255,256,184,185,257,186],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[38,165,43,258],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[259,260],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[4,261,7,47,48,49,50,51,52,262,59,60,61,263,75,76,264,77,236,265,266,267,20,268,78,79,269,270,271,272,273,274,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,21,22,23,24,25,103,105,106,117,118,119,120,26,27,28,275,29,30,142,276,31,277,278,148,149,279,280,281,8,282,283,284,285,286,287,9,10,288,153,0,32,155,156,33,34,35,36,157,158,159,160,37,161,38,39,162,1,40,163,164,165,2,41,42,43,249,166,167,289,250,168,251,169,170,171,172,252,175,176,177,178,253,179,180,11,181,182,183,185,290,192,291,292,293,294,295,296,194,195,196,197,297,298,198,299,199,300,200,201,203,207,301,208,209,210,211,212,213,302,214,303,304,215,216,305,306,217,218,45,46,254,307,226,227,308,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[0,1,164,309],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[169,171,172,252,173,174,175,177,310,178,44,179],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[278,148,307,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[311,312,313,314,315,316,317,291,216,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[213,318,223],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[4,261,319,320,321,322,7,47,48,49,50,51,52,53,59,60,61,66,70,71,72,73,323,324,240,74,263,75,76,264,77,325,265,266,326,327,267,20,268,78,79,269,270,271,272,273,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,21,22,23,24,25,103,104,105,106,107,108,109,110,111,112,113,114,115,117,26,27,244,245,28,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,29,30,328,256,329,147,237,31,277,278,148,149,279,280,281,8,282,283,284,286,287,9,10,288,153,0,32,155,156,33,34,35,36,157,158,159,160,37,161,38,39,162,1,40,163,164,165,247,2,41,42,43,249,166,167,289,250,168,251,169,170,171,172,252,173,174,175,176,177,178,253,179,180,11,181,182,183,184,185,257,186,192,291,292,296,194,195,330,196,197,297,298,299,331,300,200,201,202,203,204,205,206,207,301,208,209,210,211,212,214,304,215,216,305,306,217,218,45,220,225,46,254,307,226,227,308,12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:61","sourceCode":"for (final java.lang.Object java.lang.Object : org.easymock.internal.Invocation.getArguments()) {\n    java.util.List<org.easymock.IArgumentMatcher>.add(new org.easymock.internal.matchers.Equals(java.lang.Object));\n}","type":"CtForEachImpl"},"failures":[261,319,320,321,322,7,47,48,49,50,51,52,53,60,62,63,64,65,66,67,240,15,16,17,18,19,263,75,76,264,77,325,265,266,326,327,267,20,268,78,79,269,270,271,272,273,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,21,22,23,24,25,103,104,105,106,107,108,109,110,111,112,113,114,115,26,27,244,245,28,275,333,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,29,30,328,334,256,329,335,142,147,31,277,278,148,149,279,280,281,8,282,283,284,286,287,9,10,249,166,167,289,168,251,178,180,11,181,182,184,185,257,186,192,291,292,296,194,195,330,196,197,297,298,299,331,199,300,201,202,203,301,210,214,219,45,220,225,46,254,307,226,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:60","sourceCode":"return int","type":"CtReturnImpl"},"failures":[240,77,325,326,327,103,104,105,117,142,336,237,31,278,148,149,280,283,284,287,162,294,195,330,196,197,299,331,220,337,46,307,226,227],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[155,158,38,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[203,204],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests2.UsageTest.argumentsOrdered":331,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":65,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":2,"org.easymock.tests2.SerializationTest.testAllMockedMethod":183,"org.easymock.tests2.DelegateToTest.testReturnException":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":63,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":239,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":228,"org.easymock.tests.MockClassControlTest.testToString":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":134,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":122,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":260,"org.easymock.tests.UsageExpectAndThrowTest.object":132,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":11,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.DelegateToTest.testWrongClass":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":30,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":158,"org.easymock.tests2.UsageTest.wrongArguments":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":26,"org.easymock.tests.UsageStrictMockTest.range":278,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":145,"org.easymock.samples.ExampleTest.answerVsDelegate":48,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":285,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":304,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":291,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":287,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":28,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests.UsageTest.moreThanOneArgument":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":141,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":17,"org.easymock.tests2.CaptureTest.testCaptureNone":176,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":105,"org.easymock.tests.UsageVarargTest.varargByteAccepted":113,"org.easymock.tests2.ThreadingTest.testThreadSafe":166,"org.easymock.tests.UsageTest.argumentsOrdered":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":73,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":21,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":193,"org.easymock.tests2.UsageConstraintsTest.any":159,"org.easymock.tests2.StubTest.stub":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":64,"org.easymock.tests.UsageExpectAndThrowTest.longType":125,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests2.SerializationTest.testClass":181,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":229,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":102,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":190,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":213,"org.easymock.tests2.NameTest.nameForMocksControl":224,"org.easymock.tests2.MockedExceptionTest.testMockedException":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.DelegateToTest.testDelegate":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":126,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":292,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":137,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.CaptureTest.testCaptureLast":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":333,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":218,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":275,"org.easymock.tests2.CaptureTest.testCapture1_2446744":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":42,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.samples.ExampleTest.removeNonExistingDocument":262,"org.easymock.tests.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":311,"org.easymock.tests2.MockBuilderTest.testCreateMockString":295,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":19,"org.easymock.tests.UsageExpectAndThrowTest.floatType":124,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":162,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":104,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":13,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests2.CompareToTest.testLessOrEqual":3,"org.easymock.tests.ResultTest.createDelegateResultToString":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":50,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":316,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testNotNull":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":273,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":151,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":192,"org.easymock.tests2.MockBuilderTest.testCreateMock":293,"org.easymock.tests2.UsageTest.defaultResetToNice":198,"org.easymock.samples.ExampleTest.voteAgainstRemovals":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":98,"org.easymock.tests2.CallbackTest.callback":220,"org.easymock.tests.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":131,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":143,"org.easymock.tests.UsageCallCountTest.tooFewCalls":71,"org.easymock.tests.UsageOverloadedMethodTest.overloading":75,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":305,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":94,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":146,"org.easymock.tests.UsageThrowableTest.throwCheckedException":270,"org.easymock.tests2.EasyMockSupportClassTest.testAll":308,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":56,"org.easymock.tests2.CaptureTest.testCaptureAll":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":242,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":216,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":306,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":18,"org.easymock.tests.ObjectMethodsTest.testHashCode":233,"org.easymock.samples.ExampleTest.voteForRemovals":52,"org.easymock.tests2.NameTest.nameForNiceMock":223,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests.UsageVarargTest.allKinds":115,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":103,"org.easymock.tests2.DependencyTest.testInterfaceMocking":180,"org.easymock.samples.BasicClassMockTest.testPrintContent":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":57,"org.easymock.samples.ExampleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":185,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":272,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":67,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":31,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":303,"org.easymock.tests.UsageVarargTest.varargLongAccepted":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.samples.ExampleTest.voteForRemoval":49,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":167,"org.easymock.tests.UsageExpectAndReturnTest.floatType":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":200,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageThrowableTest.noUpperLimit":78,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":40,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":296,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":317,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":173,"org.easymock.tests2.SerializationTest.test":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":281,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":84,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.samples.SupportTest.addDocument":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":62,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":8,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":300,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":90,"org.easymock.tests.GenericTest.testPackageScope":59,"org.easymock.tests2.CaptureTest.testCapture2_2446744":253,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":250,"org.easymock.tests2.UsageTest.moreThanOneArgument":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":294,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":114,"org.easymock.tests.GenericTest.testBridgedEquals":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":323,"org.easymock.tests2.NameTest.nameForMock":221,"org.easymock.tests.UsageExpectAndReturnTest.longType":86,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":140,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":247,"org.easymock.tests2.UsageStrictMockTest.differentMethods":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":87,"org.easymock.tests.UsageCallCountTest.tooManyCalls":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":70,"org.easymock.tests2.MockedExceptionTest.testRealException":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":91,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":215,"org.easymock.tests2.NameTest.nameForStrictMock":222,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":69,"org.easymock.tests2.UsageConstraintsTest.testContains":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":153,"org.easymock.tests2.UsageConstraintsTest.testFind":33,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":206,"org.easymock.tests.UsageExpectAndReturnTest.object":93,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":212,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":290,"org.easymock.tests2.UsageStrictMockTest.range":307,"org.easymock.tests2.UsageConstraintsTest.lessThan":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":286,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":110,"org.easymock.tests.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests.UsageRangeTest.combination":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":99,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.UsageTest.wrongArguments":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests.MockClassControlTest.testHashCode":232,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":116,"org.easymock.tests2.EasyMockSupportTest.testVerify":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":187,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":248,"org.easymock.tests2.UsageConstraintsTest.cmpTo":160,"org.easymock.tests.UsageVarargTest.varargCharAccepted":109,"org.easymock.tests2.CompareToTest.testLessThan":258,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests.DefaultClassInstantiatorTest.object":274,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":10,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":243,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests.UsageTest.unexpectedCallWithArray":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":97,"org.easymock.tests2.CaptureTest.testCapture":310,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":314,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.tests2.UsageConstraintsTest.constraints":155,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":128,"org.easymock.tests.CapturesMatcherTest.test":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":100,"org.easymock.tests.UsageStrictMockTest.testVerify":150,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":321,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests2.CompareToTest.testGreateThan":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":55,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":24,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":284,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107}}]
