[{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[94,95],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[45,46,66,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[96,97,98,36,99,100,101,102,103,104,105],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:196","sourceCode":"if ((java.lang.Thread) == null) {\n    java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread();\n} else if ((java.lang.Thread) != java.lang.Thread.(java.lang.Thread.currentThread())) {\n    throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))));\n} ","type":"CtIfImpl"},"failures":[106,107,108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[29,32,33,45,109,64,67,68,73,82,83,84,85,88,91],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[110,111,112,113,114,115],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[129,7,130,131,132,133,134,135,136,8,137,138,9,139,10,140,141,142,143,144,17,18,19,145,146,147,20,21,148,22,23,24,149,38,39,150,40,41,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,51,52,53,186,187,188,189,190,191,192,193,194,195,196,116,58,61,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,214,215,215,216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[206,210],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[217,218,219,220,221,222,223,182],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[104,224],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,32,33,45,109,64,67,68,73,82,83,84,85,88,91],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[225,226,227,228,229,230,231,115],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[232,233,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[235,236,237,238,82,88],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":31,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.tests2.DelegateToTest.testReturnException":226,"org.easymock.tests.MockingTest.testPartialClassMocking":200,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":236,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":193,"org.easymock.tests.MockClassControlTest.testToString":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":161,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests2.DelegateToTest.testWrongClass":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":218,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":214,"org.easymock.tests.UsageStrictMockTest.range":91,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":128,"org.easymock.samples.ExampleTest.answerVsDelegate":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":149,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":16,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":155,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":237,"org.easymock.tests.UsageUnorderedTest.message":64,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageTest.argumentsOrdered":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":172,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":212,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":209,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":5,"org.easymock.tests2.SerializationTest.testClass":180,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":191,"org.easymock.tests2.DependencyTest.testClassMocking":143,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":196,"org.easymock.tests2.AnswerTest.answer":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":103,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":8,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests2.NameTest.nameForMocksControl":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":125,"org.easymock.tests2.MockedExceptionTest.testMockedException":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":160,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":202,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":21,"org.easymock.tests.MockingTest.testNicePartialClassMocking":201,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":132,"org.easymock.tests.LimitationsTest.mockFinalMethod":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":199,"org.easymock.tests2.DependencyTest.testClassMockingSupport":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":49,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":126,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":60,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":118,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":207,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.MockBuilderTest.testCreateMockString":24,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":122,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":111,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":171,"org.easymock.samples.PartialClassMockTest.testGetArea":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":138,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":56,"org.easymock.tests2.UsageTest.niceToStrict":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":166,"org.easymock.tests.LimitationsTest.privateConstructor":190,"org.easymock.tests2.ThreadingTest.testChangeDefault":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":140,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":146,"org.easymock.tests2.MockBuilderTest.testCreateMock":22,"org.easymock.tests.UsageVarargTest.differentLength":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":174,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":135,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":74,"org.easymock.tests.UsageCallCountTest.tooFewCalls":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.MockClassControlTest.testEquals":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":195,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":238,"org.easymock.tests.MockingTest.testStrictClassMocking":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":40,"org.easymock.tests.MockNameTest.defaultName":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":221,"org.easymock.tests2.NameTest.nameForNiceMock":3,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":220,"org.easymock.samples.BasicClassMockTest.testPrintContent":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":173,"org.easymock.tests2.DelegateToTest.testStubDelegate":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.AnswerTest.stubAnswer":112,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":120,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":223,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":9,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":93,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":211,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":182,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":215,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":204,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":148,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":156,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":12,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":163,"org.easymock.tests.GenericTest.testPackageScope":194,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":121,"org.easymock.tests.GenericTest.testBridgedEquals":116,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":78,"org.easymock.tests2.NameTest.nameForMock":1,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":136,"org.easymock.tests.UsageCallCountTest.tooManyCalls":79,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":234,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":63,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.MockingTest.testNiceClassMocking":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":38,"org.easymock.tests.MockingTest.testClassMocking":198,"org.easymock.tests2.NameTest.nameForStrictMock":2,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":142,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":145,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":113,"org.easymock.tests.MockTypeTest.fromEasyMockClass":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":208,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":134,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":18,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":119,"org.easymock.tests.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":11,"org.easymock.tests2.CaptureTest.testCaptureRightOne":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":167,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":7,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":231,"org.easymock.tests.UsageTest.wrongArguments":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":117,"org.easymock.tests.MockClassControlTest.testHashCode":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":164,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":168,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":232,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":77,"org.easymock.tests.DefaultClassInstantiatorTest.object":205,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":19,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":54,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":169,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":88,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":53,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":137,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests2.CompareToTest.testGreateThan":95,"org.easymock.tests2.UsageTest.resumeIfFailure":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests.LimitationsTest.abstractClass":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":14,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":152}}]
