[{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,174,175,175,176,177,15,178,179,180,181,182,183,184,20,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,29,220,221,222,223,224,225,226,31,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,33,255,256,34,257,35,258,259,260,40,1,261,2,262,263,264,265,266,267,268,269,270,271,272,273,274,275,3,276,277,278,279,4,280,281,282,283,284,285],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[58,286,61,287,288,289,290,291,161,162,181,292,293,294],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[295,296,297,298,0],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[299,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.ConstructorArgs:50","failures":[174,175,186,190,302,209,303,304,305,306,307,308,309,310,311,312,215,313,314,216,26,315,316,317,27,318,319,320,321,217,28,322,323,324,325,218,326,327,328,329,330,283],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[295,282],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[295,282],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[45,46,331,332,50,333,334,335,51,336,53,54,55,56,57,58,337,59,338,339,286,60,340,61,62,341,342,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,288,289,95,96,290,291,97,103,104,105,106,107,108,343,344,345,346,347,112,348,349,350,351,352,353,354,355,356,357,117,118,119,120,121,122,123,124,125,131,132,358,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,359,360,361,362,163,164,165,166,167,168,169,170,171,363,172,173,178,364,365,180,366,181,182,367,183,184,185,186,189,190,191,192,193,292,194,368,195,196,197,293,294,198,199,200,201,202,203,204,205,206,207,208,209,22,23,24,25,369,211,370,214,371,219,29,220,221,222,223,224,30,226,227,230,231,232,233,234,236,237,238,240,241,242,372,243,244,373,374,245,246,247,248,249,250,251,375,40,376,377,378,379,1,261,2,262,263,264,265,266,267,268,269,270,271,272,273,274,275,3,276,277,278,279,4,280,281,282,283,284,380,285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[381,382,383,384,385,303,306],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[262,266,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:40","failures":[45,46,47,48,49,331,332,50,333,334,335,387,388,389,390,51,336,52,391,392,53,54,55,56,57,58,393,6,394,395,337,396,397,398,399,400,401,402,403,404,59,405,338,339,286,60,340,61,62,341,342,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,406,91,407,408,92,409,93,94,288,289,95,96,290,291,97,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,98,426,427,428,429,430,99,431,100,101,102,103,104,105,106,107,108,343,344,345,346,347,109,432,110,111,433,112,434,348,349,350,435,351,352,436,353,354,355,356,357,113,114,115,437,438,439,440,441,442,116,443,444,445,117,118,446,119,447,448,449,120,121,122,123,124,125,126,127,128,129,130,450,451,452,453,7,454,8,455,131,132,456,457,358,458,459,460,461,462,463,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,359,360,361,362,464,465,466,467,468,299,469,470,471,163,164,165,166,167,168,169,170,171,363,172,472,173,174,175,176,9,10,473,474,475,177,11,12,13,476,14,15,16,17,18,477,478,19,479,480,178,179,364,365,180,366,181,182,367,183,184,481,482,483,484,485,486,487,20,185,186,187,488,188,189,190,302,191,192,193,292,194,368,195,196,197,293,294,198,199,200,201,202,203,204,205,206,207,208,209,303,489,21,22,23,24,25,369,304,210,490,305,491,211,370,212,306,213,492,307,493,214,309,371,310,311,312,215,313,314,216,26,315,316,317,27,318,319,320,321,217,28,322,323,324,325,218,326,327,219,29,220,221,222,223,494,495,224,496,497,30,225,226,31,498,32,227,228,229,230,231,232,233,499,234,235,236,237,238,239,240,241,242,372,243,244,373,374,245,246,247,248,249,250,251,252,253,254,33,255,256,34,257,35,258,259,260,500,375,36,37,38,501,39,40,41,42,43,502,503,44,376,377,378,379,1,261,2,262,504,263,264,265,266,267,268,386,269,270,271,272,273,274,275,3,276,277,278,279,505,4,280,281,282,283,284,380,285],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[58,286,60,61,62,94,289,290,291,112,160,161,162,180,181,182,193,292,293,294,22,23,24,25],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[390,51,336,52,391,403,404,59,405,103,442,443,444,445,117,118,119,449,450,454,457,358,458,459,460,461,462,463,465,466,467,468,299,469,471,174,174,175,175,176,473,474,481,485,20,185,186,187,189,190,200,201,202,209,303,369,210,490,491,211,370,212,213,307,493,214,371,310,311,312,215,313,314,216,26,315,316,317,27,318,319,320,321,217,28,322,323,324,325,218,326,327,219,29,221,222,223,494,224,496,497,30,225,226,31,498,32,283,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[439,457,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[58,60,61,62,406,91,94,289,290,291,432,433,112,160,161,162,180,181,182,193,292,293,294,506,507,508,509,510,511,512],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[513,283,284,380],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[277],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,331,50,51,52,53,54,55,56,57,58,59,338,286,60,340,61,62,341,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,406,91,92,93,94,288,289,95,96,290,291,97,98,99,100,101,102,103,104,105,106,107,108,343,344,345,346,347,109,432,110,111,433,112,434,357,113,114,115,438,439,441,442,116,445,117,118,119,120,121,122,123,124,125,126,127,128,129,130,450,453,7,454,8,455,131,132,456,457,458,459,460,461,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,359,360,361,362,163,164,165,166,167,168,169,170,171,172,173,174,174,175,175,176,177,15,16,178,179,364,180,366,181,182,367,183,184,20,185,186,187,188,189,190,191,192,193,292,194,368,195,196,197,293,294,198,199,200,201,202,203,204,205,206,207,208,209,22,369,210,490,211,370,212,213,493,214,371,215,216,217,218,219,29,220,221,222,223,494,224,30,225,226,31,32,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,372,243,244,373,374,245,246,247,248,249,250,251,252,253,254,33,255,256,34,257,35,258,259,260,500,40,41,376,377,378,379,1,261,2,262,263,264,265,266,267,268,386,269,270,271,272,273,274,275,3,276,277,278,279,505,4,280,281,282,283,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[45,46,51,53,54,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,95,96,97,104,105,106,107,108,343,112,117,118,119,131,132,457,133,134,135,156,157,158,159,160,162,168,170,171,172,176,177,15,178,179,180,181,182,184,20,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,29,220,221,222,223,224,225,226,31,227,231,237,241,242,372,243,244,245,246,247,248,250,251,252,253,254,33,255,256,34,257,35,258,259,260,40,1,261,2,262,263,264,265,266,267,268,269,270,271,272,273,274,275,3,276,277,278,279,505,4,280,281,282,283,284],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[390,51,336,52,391,403,404,59,405,103,442,443,444,445,117,118,119,449,450,454,457,358,458,459,460,461,462,463,465,466,467,468,299,469,471,174,174,175,175,176,473,474,514,481,485,20,185,186,187,189,190,200,201,202,209,303,369,515,210,490,491,211,370,212,213,307,493,214,516,371,310,311,312,215,313,314,216,26,315,316,317,27,318,319,320,321,217,28,322,323,324,325,218,326,327,219,29,221,222,223,494,224,496,497,30,225,226,31,498,32,283,380],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[295,282],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[52,450,454,176,514,369,515,210,490,211,370,212,213,493,214,516,371,494,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[233,234,505,280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[392,442,454,458,459,460,481,186,189,212],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[237],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[241,372,243,244,373,374,245,247,517,248,249,251],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[45,50,333,334,335,388,389,51,336,53,54,55,56,57,58,59,339,286,60,340,61,62,341,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,289,95,96,290,291,97,103,104,105,106,107,108,109,110,111,112,348,349,350,351,352,353,354,355,356,357,117,118,119,124,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,168,169,170,171,363,172,173,176,9,10,473,474,475,177,15,178,179,365,180,366,181,182,367,183,184,20,185,186,187,188,189,190,191,192,193,292,194,368,195,196,293,294,198,199,202,204,205,206,207,208,209,211,212,213,215,216,217,218,219,29,220,221,222,223,224,226,227,230,231,233,234,236,237,238,240,241,242,372,243,244,373,374,245,246,247,248,250,251,252,253,254,33,255,256,34,35,258,259,260,500,40,1,261,2,262,263,264,265,266,267,268,269,270,271,272,273,274,275,3,276,277,278,279,505,4,280,281,282,283,284,380,285],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[262,267,277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[333,334,335,388,389,336,55,58,339,286,340,61,62,341,64,406,91,289,290,291,103,348,349,350,351,352,353,354,355,356,357,168,170,171,363,172,173,9,10,473,474,475,177,365,366,181,182,367,292,368,293,294,211,242,372,373,374,245,246,251,33,258,259,260,500,505,380],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[385],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":262,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.UsageTest.argumentsOrdered":294,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":368,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testReturnException":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":121,"org.easymock.tests.MockingTest.testPartialClassMocking":117,"org.easymock.tests.MockClassControlTest.testToString":458,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":21,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":136,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":216,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":53,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":361,"org.easymock.samples.ExampleTest.answerVsDelegate":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":454,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":448,"org.easymock.tests2.UsageConstraintsTest.testNull":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":221,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":243,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":155,"org.easymock.tests.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":126,"org.easymock.tests.UsageTest.argumentsOrdered":291,"org.easymock.tests.UsageVarargTest.varargIntAccepted":350,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":385,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":478,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":108,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":508,"org.easymock.tests.ReplayStateInvalidUsageTest.times":399,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.DependencyTest.testClassMocking":479,"org.easymock.tests2.AnswerTest.answer":227,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":379,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":452,"org.easymock.tests2.CaptureTest.testAnd":241,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":255,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":130,"org.easymock.tests2.DelegateToTest.testDelegate":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":151,"org.easymock.tests.LimitationsTest.mockFinalMethod":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":347,"org.easymock.tests2.DependencyTest.testClassMockingSupport":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":406,"org.easymock.tests2.CaptureTest.testCapture1_2446744":244,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":377,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":394,"org.easymock.tests.UsageThrowableTest.throwError":63,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":7,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":392,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":327,"org.easymock.samples.PartialClassMockTest.testGetArea":176,"org.easymock.tests.MockingTest.testInterfaceMocking":446,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":395,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":114,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":27,"org.easymock.tests2.UsageTest.niceToStrict":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":145,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":451,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":359,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":325,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":273,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":300,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":247,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":435,"org.easymock.tests.MockClassControlTest.testEquals":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":215,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":153,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":378,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":166,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":357,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":69,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":17,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":239,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":470,"org.easymock.tests2.UsageConstraintsTest.greaterThan":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":31,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":471,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":498,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":8,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":494,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":103,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":254,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":120,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":235,"org.easymock.tests2.CaptureTest.testCaptureFirst":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":33,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":193,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":356,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":388,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":343,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":516,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":505,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":101,"org.easymock.tests.UsageCallCountTest.tooManyCalls":389,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":68,"org.easymock.tests.MockingTest.testNiceClassMocking":449,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testClassMocking":444,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":515,"org.easymock.tests2.UsageConstraintsTest.testContains":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":332,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":202,"org.easymock.tests2.UsageConstraintsTest.testFind":263,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests.MockTypeTest.fromEasyMockClass":453,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":234,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.object":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":502,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":35,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":382,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":440,"org.easymock.tests.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":330,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":408,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":87,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":110,"org.easymock.tests.MockClassControlTest.testHashCode":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests2.EasyMockSupportTest.testVerify":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":376,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":375,"org.easymock.tests.UsageVarargTest.varargCharAccepted":351,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":464,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":431,"org.easymock.tests2.UsageTest.openCallCountByLastCall":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":465,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":47,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":438,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":501,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":11,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":100,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":218,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":123,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":306,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":80,"org.easymock.tests2.SerializationTest.testAllMockedMethod":380,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":513,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":99,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":228,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":409,"org.easymock.tests.UsageExpectAndThrowTest.object":146,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":278,"org.easymock.tests2.DelegateToTest.testWrongClass":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":174,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":401,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":360,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":115,"org.easymock.tests2.CaptureTest.testCaptureNone":246,"org.easymock.tests.UsageUnorderedTest.message":58,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":355,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":28,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":335,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":473,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":441,"org.easymock.tests2.CaptureTest.testCapture_2617107":372,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":512,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests2.UsageConstraintsTest.any":269,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":398,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndThrowTest.longType":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":397,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":366,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":15,"org.easymock.tests2.SerializationTest.testClass":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":59,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":38,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":367,"org.easymock.tests2.NameTest.nameForMocksControl":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":39,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":314,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":119,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":118,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":36,"org.easymock.tests2.CaptureTest.testCaptureLast":245,"org.easymock.tests2.CompareToTest.testCompareEqual":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":267,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":279,"org.easymock.tests.MockingTest.testTwoMocks":445,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":144,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":281,"org.easymock.samples.ExampleTest.removeNonExistingDocument":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":62,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":467,"org.easymock.tests2.ConstraintsToStringTest.andToString":509,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.MockBuilderTest.testCreateMockString":371,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":26,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":489,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":217,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":226,"org.easymock.tests.LimitationsTest.privateConstructor":404,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":329,"org.easymock.tests2.UsageConstraintsTest.testNotNull":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests2.UsageTest.defaultResetToNice":197,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":86,"org.easymock.tests.UsageVarargTest.differentLength":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":37,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests2.UsageConstraintsTest.equals":504,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":496,"org.easymock.tests.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":55,"org.easymock.tests.UsageCallCountTest.tooFewCalls":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":362,"org.easymock.tests.UsageThrowableTest.throwCheckedException":67,"org.easymock.tests.MockingTest.testStrictClassMocking":443,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":41,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":232,"org.easymock.tests.ObjectMethodsTest.testHashCode":439,"org.easymock.tests2.CompareToTest.testGreateOrEqual":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":384,"org.easymock.tests2.NameTest.nameForNiceMock":24,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":383,"org.easymock.samples.ExampleTest.addDocument":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":322,"org.easymock.tests2.DelegateToTest.testStubDelegate":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.AnswerTest.stubAnswer":231,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":492,"org.easymock.tests.UsageVarargTest.varargLongAccepted":354,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":209,"org.easymock.tests2.ConstraintsToStringTest.orToString":506,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":477,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageThrowableTest.noUpperLimit":64,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":481,"org.easymock.tests2.SerializationTest.test":284,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":373,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":72,"org.easymock.tests2.UsageConstraintsTest.testSame":265,"org.easymock.samples.SupportTest.addDocument":475,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":488,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":315,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":18,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":447,"org.easymock.tests2.NameTest.nameForMock":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests2.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":497,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":150,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":159,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":423,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":54,"org.easymock.tests2.NameTest.nameForStrictMock":23,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":485,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":468,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":181,"org.easymock.tests2.UsageConstraintsTest.lessThan":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":253,"org.easymock.tests2.CaptureTest.testCaptureRightOne":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.UsageConstraintsTest.testOr":266,"org.easymock.tests.UsageRangeTest.combination":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":29,"org.easymock.tests.UsageTest.wrongArguments":289,"org.easymock.tests2.MockBuilderTest.testWithConstructor":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":469,"org.easymock.tests.UsageVarargTest.varargShortAccepted":353,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":387,"org.easymock.tests2.UsageConstraintsTest.cmpTo":270,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":229,"org.easymock.tests2.CompareToTest.testLessThan":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.CaptureTest.testCaptureFromStub":249,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":6,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":490,"org.easymock.tests.UsageTest.unexpectedCallWithArray":288,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":334,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":85,"org.easymock.tests2.CaptureTest.testCapture":517,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":340,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests2.ConstraintsToStringTest.notToString":507,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests2.CompareToTest.testGreateThan":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":344,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":374,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":514,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":106,"org.easymock.tests.LimitationsTest.abstractClass":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":34,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":349}}]
