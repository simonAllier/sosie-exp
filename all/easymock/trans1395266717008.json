[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[11,12,13,14],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[15,16,17,18,19,20,21,22,23,11],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[27,28,9,29,10,30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[39,33,34,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,2,90,3,91,92,93,94,95,96,97,4,98,99,22,11,12,13,100,101,102,5,6,103,27,28,7,8,104,9,29,105,106,107,108,109,110,111,112,10,30,113,114,115,31,32,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,271,37,272,273,274,275,276,277,278,279,280,281,282,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[285,286,287,288,289,290,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[2,3,4,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[292,293,153,294,295,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[297,298,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[302,303,48,304,305,306,307,308,186,309,234,238],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[310,39,311,312,33,313,34,35,314,16,315,40,316,41,42,43,44,45,46,47,302,303,48,304,317,318,319,49,320,321,50,322,323,324,325,326,327,328,329,330,51,331,332,333,334,335,52,336,337,338,339,340,341,342,53,343,344,345,346,347,348,297,298,349,299,350,300,54,351,55,56,57,58,352,59,60,61,62,63,64,353,354,65,66,67,68,69,70,355,71,72,73,356,74,357,75,358,76,77,78,359,79,80,81,82,83,84,85,360,361,86,362,363,364,87,88,89,365,366,2,90,3,91,92,93,94,95,96,97,4,367,98,99,368,22,23,11,12,13,100,101,102,5,6,369,103,27,28,7,8,104,9,29,105,106,107,108,109,110,111,112,10,30,113,114,115,31,32,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,370,371,372,373,374,375,143,376,377,144,145,146,378,379,380,381,382,383,384,385,386,147,387,388,389,390,391,392,393,394,395,148,149,396,150,397,398,399,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,171,172,173,174,175,176,177,436,437,438,178,439,440,179,441,442,0,443,444,445,1,446,285,180,447,181,182,448,183,449,450,184,185,451,452,305,306,307,308,186,309,453,454,455,456,457,458,459,460,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,286,461,462,463,287,288,464,465,466,467,468,469,470,471,289,472,473,474,475,290,476,477,478,479,480,481,482,483,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,484,485,486,487,488,239,240,241,242,489,243,244,245,246,490,247,248,491,492,493,494,495,496,497,498,499,500,501,249,502,503,504,291,505,506,507,508,509,510,511,512,513,514,515,250,251,296,252,253,254,255,256,257,516,258,259,517,518,519,520,521,260,261,262,522,263,264,265,266,267,268,269,270,271,523,37,272,273,274,275,276,277,278,279,524,280,281,282,283,284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[371,372,525],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[302,303,48,317,49,321,322,323,326,329,331,332,335,67,68,69,70,72,73,80,81,83,84,85,360,86,363,364,87,88,89,365,366,13,370,373,393,394,395,148,149,150,399,439,440,179,441,442,0,443,444,445,1,446,494,495,496,497,498,499,500,501,249,516,258,259,518,271,523,37,281,282],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[2,90,3,95,96,4,99,5,6,27,7,8,31,233,234,235,270],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:60","sourceCode":"org.easymock.internal.MocksBehavior.addBehaviorListIfNecessary(org.easymock.internal.ExpectedInvocation)","type":"CtInvocationImpl"},"failures":[39,33,34,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,2,90,3,91,92,93,94,95,96,97,4,98,99,103,28,104,29,108,111,30,114,31,170,233,238,271,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[358,359],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":468,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.tests.MockClassControlTest.testToString":496,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":352,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":66,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":401,"org.easymock.samples.ExampleTest.answerVsDelegate":275,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":458,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":398,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":83,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":91,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":405,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":450,"org.easymock.tests.UsageTest.argumentsOrdered":256,"org.easymock.tests.UsageVarargTest.varargIntAccepted":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":211,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":413,"org.easymock.tests.ReplayStateInvalidUsageTest.times":512,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":301,"org.easymock.tests2.DependencyTest.testClassMocking":353,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":455,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":488,"org.easymock.tests2.DependencyTest.testClassMockingSupport":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":436,"org.easymock.tests2.CaptureTest.testCapture1_2446744":92,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":379,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":506,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":457,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":416,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":507,"org.easymock.tests.MockingTest.testInterfaceMocking":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":492,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":326,"org.easymock.tests2.ThreadingTest.testChangeDefault":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.MockBuilderTest.testCreateMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":454,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":504,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":335,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":522,"org.easymock.tests.MockClassControlTest.testEquals":500,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":486,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":380,"org.easymock.tests.MockNameTest.defaultName":483,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":406,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":291,"org.easymock.samples.ExampleTest.voteForRemovals":279,"org.easymock.tests.UsageVarargTest.allKinds":270,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":487,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":359,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":417,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":276,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":525,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":360,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":409,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":99,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":475,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":269,"org.easymock.tests.GenericTest.testBridgedEquals":518,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":247,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":484,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":114,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":520,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":403,"org.easymock.tests.UsageCallCountTest.tooManyCalls":248,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests.MockingTest.testNiceClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testClassMocking":394,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":489,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":103,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests.MockTypeTest.fromEasyMockClass":456,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":75,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":264,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":433,"org.easymock.tests.UsageTest.exactCallCountByLastCall":257,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":184,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":181,"org.easymock.tests.MockClassControlTest.testHashCode":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":328,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":185,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":503,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":378,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":368,"org.easymock.tests.UsageVarargTest.varargCharAccepted":263,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":479,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":442,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":502,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":431,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":498,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.ReplayStateInvalidCallsTest.times":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":519,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":422,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":473,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":38,"org.easymock.samples.SupportTest.voteForRemovals":273,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":516,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":478,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":376,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":482,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":30,"org.easymock.tests2.DelegateToTest.testWrongClass":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":419,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":169,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":374,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":514,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":400,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":294,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":493,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":298,"org.easymock.tests.UsageUnorderedTest.message":178,"org.easymock.tests.UsageVerifyTest.twoReturns":241,"org.easymock.tests.UsageVarargTest.varargByteAccepted":268,"org.easymock.tests2.ThreadingTest.testThreadSafe":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":331,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":246,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":434,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":235,"org.easymock.tests2.UsageConstraintsTest.any":29,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":511,"org.easymock.tests2.StubTest.stub":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":445,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":510,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":517,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":427,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests2.NameTest.nameForMocksControl":62,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":386,"org.easymock.tests2.MockedExceptionTest.testMockedException":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":321,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":35,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":85,"org.easymock.tests2.CaptureTest.testCaptureLast":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":437,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":426,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":395,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":423,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":300,"org.easymock.samples.ExampleTest.removeNonExistingDocument":524,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":508,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":443,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":56,"org.easymock.tests2.MockBuilderTest.testCreateMockString":316,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":494,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":319,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":240,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":440,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":302,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests.UsageVarargTest.differentLength":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.CallbackTest.callback":100,"org.easymock.tests2.UsageConstraintsTest.equals":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":234,"org.easymock.tests.UsageCallCountTest.tooFewCalls":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":402,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.MockingTest.testStrictClassMocking":393,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":513,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":71,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.ObjectMethodsTest.testHashCode":432,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":425,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":58,"org.easymock.tests2.NameTest.nameForNiceMock":61,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":420,"org.easymock.tests2.DependencyTest.testInterfaceMocking":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.samples.ExampleTest.addDocument":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":332,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":314,"org.easymock.tests.UsageVarargTest.varargLongAccepted":267,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":523,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests.UsageThrowableTest.noUpperLimit":161,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":102,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":370,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":93,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.samples.SupportTest.addDocument":272,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":355,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":410,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":323,"org.easymock.tests.GenericTest.testPackageScope":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":397,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":408,"org.easymock.tests2.NameTest.nameForMock":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":430,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests2.MockedExceptionTest.testRealException":304,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":471,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":515,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests2.NameTest.nameForStrictMock":60,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":25,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":373,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":414,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":20,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":327,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":297,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":324,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":495,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":490,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":428,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":377,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":367,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":505,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":311,"org.easymock.tests.UsageTest.unexpectedCallWithArray":296,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":424,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.samples.ExampleTest.addAndChangeDocument":280,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":485,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":209,"org.easymock.tests.LimitationsTest.abstractClass":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":261}}]
