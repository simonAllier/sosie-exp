[{"position":"org.easymock.internal.ArgumentToString:83","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[51,52,40,53,54,55,56,57,58],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[59,60],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[76,77,78,79,80,81,82],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[83,84,85,86],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,8,70,106,107,108,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[87,0,1,2,3,140,4,5,141,142,143,144,110,7,8,9,145,10,146,11,147,148,149,107,12,150,151,13,14,152,153,154,155,156,157,158,159,160,51,161,162,163,164,165,120,166,167,15,168],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[87,88,89,90,169,170,91,171,92,93,94,95,172,96,97,98,99,173,100,101,102,103,174,104,105,8,175,176,177,178,179,180,181,70,107,108,109],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[8,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[182,183,184,112,185,154,186,118,187,188,189,155,156,157,190,159,191,192,84,193,194,195],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[196],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.RecordState:173","failures":[197],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[105,198],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[199,200,201,202,159,191,160,203,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[44,204],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[205],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[83,84,85,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[35,44,206,207],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[21,64,7,22,23,65,105,24,70,25,26,27,28,29,30,31,32,40,119,49,208,209,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[212],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[87,213,214,88,140,89,90,169,170,91,171,92,93,94,95,172,96,97,98,99,173,100,101,102,103,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,143,144,21,230,231,232,110,233,234,235,104,7,22,23,65,105,24,236,8,9,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,175,257,176,177,178,179,180,181,258,259,260,25,146,11,147,261,26,27,28,29,30,31,32,262,112,263,264,265,113,114,266,115,116,267,268,269,117,107,270,271,150,151,272,108,153,118,188,189,273,274,275,276,277,278,35,36,51,52,37,38,39,40,53,279,119,280,41,281,42,43,161,44,45,55,282,283,284,206,46,47,48,285,286,59,60,74,287,288,289,290,291,292,162,293,294,197,295,296,84,85,86,297,298,299,300,301,164,302,120,303,121,304,193,194,195,305,306,49,167,15,168,307,198,109,308,309,310,311,312,313,314,56,208,57,315,316,317,209,210,318,58,211],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[319,320,285,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,5,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":69,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":151,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":76,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":246,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":206,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":67,"org.easymock.tests.MockingTest.testPartialClassMocking":230,"org.easymock.samples.SupportTest.voteForRemovals":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":97,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":205,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.object":172,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":282,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests2.DelegateToTest.testWrongClass":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":22,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":139,"org.easymock.samples.ExampleTest.answerVsDelegate":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":183,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests2.CaptureTest.testPrimitive":315,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":24,"org.easymock.tests.UsageTest.moreThanOneArgument":213,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":103,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":18,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":148,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":289,"org.easymock.tests.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":229,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":267,"org.easymock.tests.InvocationTest.testEquals":111,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":129,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":187,"org.easymock.tests2.StubTest.stub":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":68,"org.easymock.tests.UsageExpectAndThrowTest.longType":170,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests2.SerializationTest.testClass":84,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":259,"org.easymock.tests2.AnswerTest.answer":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":54,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":132,"org.easymock.tests2.UsageTest.strictResetToDefault":270,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":202,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":233,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.DelegateToTest.testDelegate":296,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":173,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":278,"org.easymock.tests2.CaptureTest.testCaptureLast":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":70,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":314,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":135,"org.easymock.tests.UsageStrictMockTest.differentMethods":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":123,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":290,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":130,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":20,"org.easymock.tests.UsageExpectAndThrowTest.floatType":169,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":161,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":286,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":194,"org.easymock.samples.PartialClassMockTest.testGetArea":112,"org.easymock.tests2.CompareToTest.testLessOrEqual":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":90,"org.easymock.tests2.UsageTest.niceToStrict":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":131,"org.easymock.tests.UsageVarargTest.differentLength":141,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.UsageConstraintsTest.equals":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":136,"org.easymock.tests.UsageTest.openCallCountByLastCall":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":65,"org.easymock.tests.UsageCallCountTest.tooFewCalls":227,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.ConstraintsToStringTest.nullToString":61,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":281,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":318,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":101,"org.easymock.tests2.CaptureTest.testCaptureAll":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":313,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":310,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":312,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":19,"org.easymock.samples.ExampleTest.voteForRemovals":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":80,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":292,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":79,"org.easymock.samples.BasicClassMockTest.testPrintContent":268,"org.easymock.samples.ExampleTest.addDocument":266,"org.easymock.tests2.DelegateToTest.testStubDelegate":197,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests2.AnswerTest.stubAnswer":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":160,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":261,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests.UsageExpectAndReturnTest.floatType":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":257,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":316,"org.easymock.tests2.SerializationTest.test":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":62,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":238,"org.easymock.tests2.UsageConstraintsTest.testSame":39,"org.easymock.samples.SupportTest.addDocument":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":66,"org.easymock.tests2.CaptureTest.testCaptureFirst":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":300,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":291,"org.easymock.tests2.UsageTest.moreThanOneArgument":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":156,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":127,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":143,"org.easymock.tests.UsageExpectAndReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":102,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":100,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":241,"org.easymock.tests.UsageCallCountTest.tooManyCalls":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":234,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":226,"org.easymock.tests2.MockedExceptionTest.testRealException":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":138,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":309,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":287,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":145,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":199,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":154,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":137,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":302,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":125,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":21,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":163,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.ConstraintsToStringTest.findToString":196,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":122,"org.easymock.tests2.EasyMockSupportTest.testVerify":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":63,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":4,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":142,"org.easymock.tests2.UsageConstraintsTest.cmpTo":280,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":106,"org.easymock.tests2.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":108,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":322,"org.easymock.tests2.CaptureTest.testCaptureFromStub":50,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":186,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":93,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":321,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":262,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.CompareToTest.testGreateThan":204,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":317,"org.easymock.tests2.UsageTest.resumeIfFailure":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":31,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":165}}]
