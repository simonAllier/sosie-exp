[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[321,228,229,230],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[321,228,229,230],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[321,228,229,230],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"primitiveType","paramType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[70,71,211,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1621","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[179,196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[324,150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[285],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,71,73,74,75,325,76,326,77,78,79,80,81,82,83,87,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,111,112,113,115,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,199,201,202,203,206,207,209,211,212,214,219,220,221,222,223,224,228,229,231,232,233,234,236,237,239,240,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,299,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[327],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[329,13,13,14,14,330,15,16,331,17,18,19,20,332,21,333,22,334,335,336,337,338,339,340,341,342,343,344,345,26,28,29,30,31,32,33,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,346,67,68,69,70,71,72,347,77,78,79,80,81,82,83,348,349,350,351,352,353,354,355,356,357,358,359,360,84,85,86,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,361,115,116,117,118,119,120,121,122,362,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,363,364,365,366,367,368,369,370,371,372,373,374,153,154,155,156,157,158,159,160,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,375,209,210,211,212,213,214,215,216,217,218,219,222,223,224,376,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,377,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,316,317,318,319,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[378,379,27,33,34,35,36,37,38,39,40,41,42,67,68,380,381,235],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":259,"org.easymock.tests2.UsageTest.argumentsOrdered":205,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":331,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":280,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":55,"org.easymock.tests2.SerializationTest.testAllMockedMethod":230,"org.easymock.tests2.DelegateToTest.testReturnException":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":151,"org.easymock.tests.MockingTest.testPartialClassMocking":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":381,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":139,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":321,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":127,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":152,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":220,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":326,"org.easymock.tests.UsageExpectAndThrowTest.object":137,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.DelegateToTest.testWrongClass":314,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":149,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":265,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":85,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":244,"org.easymock.tests2.UsageConstraintsTest.testNull":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":138,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":239,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests2.CaptureTest.testPrimitive":299,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":146,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":84,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":168,"org.easymock.tests2.CaptureTest.testCaptureNone":304,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":75,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":323,"org.easymock.tests.UsageUnorderedTest.message":150,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":251,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":161,"org.easymock.tests.UsageVarargTest.varargIntAccepted":338,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":118,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":82,"org.easymock.tests2.UsageConstraintsTest.any":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":238,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":97,"org.easymock.tests.UsageExpectAndThrowTest.longType":130,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":295,"org.easymock.tests2.SerializationTest.testClass":228,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":310,"org.easymock.tests.LimitationsTest.mockNativeMethod":147,"org.easymock.tests2.AnswerTest.answer":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":65,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":227,"org.easymock.tests2.CaptureTest.testAnd":296,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":377,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":213,"org.easymock.tests2.NameTest.nameForMocksControl":218,"org.easymock.tests2.MockedExceptionTest.testMockedException":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.DelegateToTest.testDelegate":316,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":131,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":240,"org.easymock.tests.MockingTest.testNicePartialClassMocking":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":142,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":289,"org.easymock.tests2.CaptureTest.testCaptureLast":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":41,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":250,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":110,"org.easymock.tests.MockingTest.testTwoMocks":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":40,"org.easymock.tests2.CaptureTest.testCapture1_2446744":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":135,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":282,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.samples.ExampleTest.removeNonExistingDocument":333,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.floatType":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":170,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":273,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":222,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":233,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":102,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":293,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":128,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":327,"org.easymock.tests2.UsageConstraintsTest.testNotNull":281,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":7,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":237,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":61,"org.easymock.tests.UsageVarargTest.differentLength":341,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests.UsageTest.openCallCountByLastCall":35,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":136,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":360,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":81,"org.easymock.tests.UsageCallCountTest.tooFewCalls":116,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":271,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":86,"org.easymock.tests.UsageThrowableTest.throwCheckedException":157,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests2.EasyMockSupportClassTest.testAll":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":144,"org.easymock.tests2.CaptureTest.testCaptureAll":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":246,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":248,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":169,"org.easymock.tests.ObjectMethodsTest.testHashCode":373,"org.easymock.samples.ExampleTest.voteForRemovals":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests2.NameTest.nameForNiceMock":217,"org.easymock.tests.UsageVarargTest.allKinds":26,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":28,"org.easymock.samples.BasicClassMockTest.testPrintContent":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":109,"org.easymock.samples.ExampleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testStubDelegate":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":159,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests2.AnswerTest.stubAnswer":223,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.UsageConstraintsTest.greaterThan":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":172,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":64,"org.easymock.tests.UsageExpectAndReturnTest.floatType":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":214,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":275,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageThrowableTest.noUpperLimit":154,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":257,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":94,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":301,"org.easymock.tests2.SerializationTest.test":229,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":155,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":47,"org.easymock.samples.SupportTest.addDocument":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":95,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":53,"org.easymock.tests.GenericTest.testPackageScope":122,"org.easymock.tests2.CaptureTest.testCapture2_2446744":308,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":164,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":8,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":12,"org.easymock.tests2.NameTest.nameForMock":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":120,"org.easymock.tests.UsageExpectAndReturnTest.longType":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":106,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":279,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":27,"org.easymock.tests2.UsageStrictMockTest.differentMethods":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":50,"org.easymock.tests.UsageCallCountTest.tooManyCalls":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":115,"org.easymock.tests2.MockedExceptionTest.testRealException":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":10,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":245,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":361,"org.easymock.tests2.UsageConstraintsTest.testContains":269,"org.easymock.tests2.NameTest.nameForStrictMock":216,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":319,"org.easymock.tests2.UsageConstraintsTest.testFind":260,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageExpectAndReturnTest.object":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":324,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":236,"org.easymock.tests2.UsageStrictMockTest.range":211,"org.easymock.tests2.UsageConstraintsTest.lessThan":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":374,"org.easymock.tests.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests2.CaptureTest.testCaptureRightOne":306,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":325,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":162,"org.easymock.tests2.UsageConstraintsTest.testOr":263,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":89,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":51,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":59,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":163,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":119,"org.easymock.tests2.UsageConstraintsTest.cmpTo":268,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":221,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":371,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":23,"org.easymock.tests2.CaptureTest.testCaptureFromStub":307,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests.UsageTest.unexpectedCallWithArray":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":372,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":134,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests2.UsageConstraintsTest.constraints":258,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":133,"org.easymock.tests.UsageStrictMockTest.testVerify":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":111,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":329,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":234,"org.easymock.tests2.CompareToTest.testGreateThan":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":302,"org.easymock.tests2.UsageTest.resumeIfFailure":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":52,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185}}]
