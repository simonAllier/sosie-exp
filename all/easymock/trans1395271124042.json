[{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[7],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[8],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[9,10,3,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[21,22],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:41","sourceCode":"return org.easymock.internal.Results","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[24,25,9,10,26,27,28,29,30,31,8,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,3,52,53,54,55,56,57,13,58,59],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[67,68,69,70,71,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[73,74,75,9,76,77,78,79,80,81,82,83,84,85,86,87,88,89,3,4,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,1,143,52,144,53,11,145,15,146,147,148,149,150,151,152,153,154,155,156,157,158,159,69,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,72,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[255,73,74,256,257,75,258,259,260,261,262,263,264,265,9,76,77,78,79,80,81,82,83,266,84,85,267,86,268,87,29,8,41,47,269,88,89,3,4,5,270,271,272,273,274,275,276,277,278,279,280,281,282,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,283,116,117,118,119,120,284,121,122,123,124,125,285,286,287,288,126,127,128,129,130,131,132,133,134,135,136,137,289,138,139,141,142,1,290,291,143,52,292,293,144,53,294,11,7,21,145,146,295,147,296,148,149,297,150,298,299,17,300,301,151,302,152,153,154,303,155,304,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,305,306,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,307,200,201,202,203,204,205,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,308,309,310,311,312,313,314,233,315,72,234,235,236,237,238,316,317,318,319,239,240,241,242,320,248,249,250,251,252,253,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[10,60,61,62,64,65,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[24,25,55,59,16],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[255,73,74,256,257,75,337,258,259,260,261,262,263,264,24,24,25,25,265,9,10,76,77,78,79,80,81,82,83,266,84,85,267,86,338,268,87,26,29,31,8,33,34,37,38,39,40,41,43,46,47,48,49,339,340,269,341,88,342,89,3,4,5,270,271,272,274,275,277,279,280,281,282,343,90,91,92,344,93,94,95,96,97,345,98,99,100,101,102,103,346,104,105,106,107,108,109,110,111,112,113,114,115,283,116,117,118,119,120,284,121,122,123,124,125,347,126,348,349,127,128,129,130,131,132,133,134,135,136,137,289,138,139,140,141,142,350,351,352,353,1,354,355,356,357,358,290,359,360,361,362,363,364,52,292,293,144,294,365,11,366,7,13,14,146,295,367,368,369,370,147,296,148,149,297,150,371,298,16,372,373,299,17,300,374,375,376,377,378,379,301,380,381,382,383,384,385,151,302,152,153,154,303,386,387,155,388,389,390,391,392,393,394,395,396,397,398,399,400,304,156,157,158,159,69,160,161,162,163,164,165,166,167,168,169,170,171,401,402,403,172,173,404,174,405,406,407,175,176,19,305,306,20,408,409,177,410,411,412,413,414,415,416,417,418,419,420,421,422,423,2,424,425,426,427,428,429,430,431,432,433,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,434,435,436,437,198,438,439,440,441,442,443,444,199,307,200,201,202,203,204,205,206,207,208,209,210,211,212,445,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,446,447,448,449,450,451,308,452,309,310,311,312,453,313,314,233,315,72,234,235,236,237,238,316,317,454,318,319,455,239,456,240,241,242,457,458,459,460,461,462,463,243,244,245,246,320,247,248,249,250,251,252,253,321,322,323,464,465,466,467,468,469,470,471,324,325,472,473,326,327,328,474,329,330,331,332,333,334,335,336,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[51,489],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[96,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[267,427,321,322,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:314","failures":[450,451,465,466],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[73,88,89,126,127,128],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[79,84,85,123,124,69,160,163,164,171,490,491,72,236,237,241,242,492,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[24,25,87,94,95,98,99,100,101,106,108,109,111,112,117,118,119,121,140,166,167,170,175,176,206,207,208,209,210,211,234,248,249,250,251,252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":97,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.UsageTest.argumentsOrdered":85,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":421,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":81,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":244,"org.easymock.tests.MockingTest.testPartialClassMocking":172,"org.easymock.tests.MockClassControlTest.testToString":483,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":347,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":60,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":79,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":391,"org.easymock.samples.ExampleTest.answerVsDelegate":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":447,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":406,"org.easymock.tests2.UsageConstraintsTest.testNull":99,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":149,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":488,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":279,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":471,"org.easymock.tests.UsageTest.argumentsOrdered":164,"org.easymock.tests.UsageVarargTest.varargIntAccepted":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":252,"org.easymock.tests.ReplayStateInvalidUsageTest.times":441,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":301,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":353,"org.easymock.tests2.CaptureTest.testAnd":130,"org.easymock.tests2.UsageTest.strictResetToDefault":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":473,"org.easymock.tests2.DelegateToTest.testDelegate":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.LimitationsTest.mockFinalMethod":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":400,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":409,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":351,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":436,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":49,"org.easymock.samples.PartialClassMockTest.testGetArea":264,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.MockingTest.testInterfaceMocking":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":468,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":36,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":382,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":389,"org.easymock.tests.UsageOverloadedMethodTest.overloading":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":40,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":189,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":304,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":138,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":487,"org.easymock.tests2.EasyMockSupportClassTest.testAll":29,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":398,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":352,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":336,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":399,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":204,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":300,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":463,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":371,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":272,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":243,"org.easymock.tests2.CaptureTest.testCaptureFirst":142,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":273,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":145,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":335,"org.easymock.tests.GenericTest.testBridgedEquals":408,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":396,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":470,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":465,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests.MockingTest.testNiceClassMocking":407,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":143,"org.easymock.tests.MockingTest.testClassMocking":402,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":452,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":269,"org.easymock.tests2.UsageConstraintsTest.testFind":98,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":157,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":89,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests.UsageExpectAndReturnTest.object":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":61,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":330,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":194,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":318,"org.easymock.tests.MockClassControlTest.testHashCode":486,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":38,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":317,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":350,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":338,"org.easymock.tests.UsageVarargTest.varargCharAccepted":329,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastCall":82,"org.easymock.tests.DefaultClassInstantiatorTest.object":457,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":449,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":485,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":464,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests2.UsageTest.resumeIfFailure":267,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":246,"org.easymock.tests2.StubTest.stubWithReturnValue":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":68,"org.easymock.samples.SupportTest.voteForRemovals":260,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":432,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":395,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests.UsageStrictMockTest.range":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":369,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":443,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":70,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":469,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":0,"org.easymock.tests.UsageUnorderedTest.message":171,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":492,"org.easymock.tests.UsageVerifyTest.twoReturns":242,"org.easymock.tests.UsageVarargTest.varargByteAccepted":334,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":42,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":169,"org.easymock.tests2.UsageConstraintsTest.any":104,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":440,"org.easymock.tests2.StubTest.stub":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":461,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":439,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":155,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":20,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":377,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.NameTest.nameForMocksControl":288,"org.easymock.tests2.MockedExceptionTest.testMockedException":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":31,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":21,"org.easymock.tests.MockingTest.testNicePartialClassMocking":173,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":403,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":198,"org.easymock.tests.UsageStrictMockTest.differentMethods":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":459,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.ConstraintsToStringTest.andToString":254,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":32,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":241,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":17,"org.easymock.tests.LimitationsTest.privateConstructor":387,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":51,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":205,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":339,"org.easymock.tests2.UsageTest.defaultResetToNice":266,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":193,"org.easymock.tests.UsageVarargTest.differentLength":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":376,"org.easymock.tests2.CallbackTest.callback":1,"org.easymock.tests2.UsageConstraintsTest.equals":345,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":16,"org.easymock.tests.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":168,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":392,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.MockingTest.testStrictClassMocking":401,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":442,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":293,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":64,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.NameTest.nameForNiceMock":287,"org.easymock.tests2.DependencyTest.testInterfaceMocking":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":62,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.DelegateToTest.testStubDelegate":91,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":234,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":12,"org.easymock.tests.UsageVarargTest.varargLongAccepted":333,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests.UsageThrowableTest.noUpperLimit":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":367,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":135,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":179,"org.easymock.tests2.UsageConstraintsTest.testSame":100,"org.easymock.samples.SupportTest.addDocument":259,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":33,"org.easymock.tests.GenericTest.testPackageScope":305,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":405,"org.easymock.tests2.NameTest.nameForMock":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":190,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests2.MockedExceptionTest.testRealException":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests2.NameTest.nameForStrictMock":286,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":460,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":294,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":271,"org.easymock.tests2.CaptureTest.testCaptureRightOne":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":37,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":296,"org.easymock.tests.UsageTest.wrongArguments":160,"org.easymock.tests2.MockBuilderTest.testWithConstructor":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":34,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":482,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":191,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":462,"org.easymock.tests.UsageVarargTest.varargShortAccepted":332,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":453,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests2.CaptureTest.testCaptureFromStub":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":435,"org.easymock.tests.UsageTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.samples.ExampleTest.addAndChangeDocument":258,"org.easymock.tests.UsageStrictMockTest.testVerify":316,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":265,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":397,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":250,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":276,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":327}}]
