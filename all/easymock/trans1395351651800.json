[{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,125,126,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[260,7,261,262,8,263,9,10,264,265,11,266,24,267,26,27,29,30,31,268,32,269,270,271,33,34,35,272,273,36,274,275,276,277,278,279,86,280,281,87,282,283,284,285,286,287,288,289,290,88,291,292,293,294,295,89,296,297,112,113,114,115,117,118,119,120,121,125,125,126,126,127,298,299,300,301,302,303,304,305,152,306,153,307,154,308,309,188,189,190,310,311,312,313,314,315,316,317,318,319,234,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:203","sourceCode":"return java.io.ObjectInputStream.readObject()","type":"CtReturnImpl"},"failures":[315,323,324],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,3,4,5,6,260,7,8,263,9,10,265,11,266,12,13,14,15,16,17,18,19,20,21,22,23,325,24,25,267,26,27,28,29,30,31,268,32,271,33,34,35,36,37,39,40,41,43,326,327,44,328,45,46,329,47,48,49,330,50,331,51,52,53,332,333,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,334,335,336,337,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,338,127,339,340,128,129,130,131,132,341,133,134,298,299,135,342,343,344,345,346,347,136,137,138,139,140,141,142,143,144,145,348,147,148,149,150,151,152,153,307,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,349,350,192,193,351,194,195,352,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,219,220,353,354,221,222,355,356,223,224,225,227,228,229,230,231,232,233,234,240,241,242,243,244,245,357,358,359,360,361,362,363,364,365,250,251,252,253,254,255,256,257,366,367,368,369,370,371,372,373,374,375,259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,325,24,25,267,26,27,28,29,30,31,32,271,33,34,35,36,37,38,39,40,41,42,43,326,327,44,328,45,46,329,47,48,49,330,50,331,51,52,53,332,333,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,334,111,112,113,114,115,116,117,118,119,120,121,122,123,124,376,377,378,379,125,125,126,126,338,127,339,340,128,129,130,131,132,341,133,134,298,299,380,135,342,343,344,346,347,136,137,138,139,140,141,142,300,143,381,144,145,382,146,147,148,149,150,151,152,153,307,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,309,188,189,190,383,191,349,350,192,193,351,194,195,352,384,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,354,221,222,355,356,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,385,249,250,251,252,253,254,255,256,257,258,366,367,368,369,370,371,372,373,374,375,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,12,13,14,15,16,17,18,19,20,21,22,23,325,25,28,37,386,38,39,40,41,42,43,326,327,44,328,45,46,329,47,48,49,330,50,331,51,52,53,332,333,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,334,335,336,337,111,387,116,119,120,121,122,123,124,376,377,378,379,338,339,340,128,129,130,131,132,341,133,134,380,135,342,343,344,345,346,347,136,137,138,139,140,141,142,300,143,381,144,145,382,146,348,147,148,149,150,151,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,383,191,349,350,192,193,351,194,195,352,384,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,388,216,217,218,219,220,353,354,221,222,355,356,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,389,385,390,391,392,249,357,358,359,360,361,362,363,364,365,250,251,252,253,254,255,256,257,258,366,367,368,369,370,371,372,373,374,375,259,393,394,395,396],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[95,397,398,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[287],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[400,401,402,403,404,405,264,24,36,274],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[97,99,100,101,102,103,104,106,406,107,108,110],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[407,408,192,353,409,410],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[119,120,121,122,124,137,411,231,240,241,242,243,244,245,246,247,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,104,105,106,107,109,110,111,112,113,114,115,116,117,118,121,124,127,128,129,131,132,133,136,146,147,148,149,150,151,153,154,412,413,414,415,416,180,182,183,184,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,233,234,249,250,251,252,253,255,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[45,330,332,333,348,192,194,353,354,355,356,224,418,254,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[306,153,307,154,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[419],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[420,421,422,423,424,425,426,427],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[24,25,267],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[97,98,99,100,101,102,103,104,106,107,108,109,110,428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[407,408,192,353,409,410],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,3,4,5,6,260,8,263,9,10,265,11,266,12,13,14,15,16,17,18,19,20,21,22,23,325,24,25,267,26,27,28,29,30,31,268,32,271,33,34,35,36,37,39,40,41,43,326,327,44,328,45,46,329,47,48,49,330,50,331,51,52,53,332,333,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,334,335,336,337,111,112,113,114,115,116,117,118,119,120,121,122,123,124,376,377,378,379,125,125,126,126,338,127,339,340,128,129,130,131,132,341,133,429,134,298,299,380,430,135,342,343,344,345,136,137,138,139,140,141,142,300,301,302,303,304,431,432,305,143,381,144,145,146,348,147,148,149,150,151,152,153,307,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,433,434,435,436,437,397,438,439,440,441,442,443,191,349,350,192,193,351,194,195,352,384,311,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,219,220,353,354,221,222,355,356,223,224,225,226,227,228,229,230,231,232,233,234,240,241,242,243,244,245,385,390,391,357,358,359,360,361,362,363,364,365,250,251,252,253,254,255,256,257,366,367,368,369,370,372,373,374,375,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:175","sourceCode":"java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[260,7,261,262,8,263,9,10,265,11,266,267,26,27,29,30,31,268,32,270,271,33,34,35,272,273,36,276,86,87,88,89,112,113,115,117,119,120,121,127,298,299,300,301,302,303,304,431,432,305,152,153,307,154,444,445,309,188,189,190,446,234,321,322],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.UsageTest.argumentsOrdered":333,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":386,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":331,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":338,"org.easymock.tests2.DelegateToTest.testReturnException":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":241,"org.easymock.tests.MockingTest.testPartialClassMocking":188,"org.easymock.tests.MockClassControlTest.testToString":302,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":160,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":87,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":400,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageTest.wrongArguments":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":359,"org.easymock.samples.ExampleTest.answerVsDelegate":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":322,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":29,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":21,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":305,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":179,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":140,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":235,"org.easymock.tests.UsageTest.argumentsOrdered":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests.ReplayStateInvalidUsageTest.times":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":337,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":16,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":227,"org.easymock.tests2.DelegateToTest.testDelegate":43,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":175,"org.easymock.tests.LimitationsTest.mockFinalMethod":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":383,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":335,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":435,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":297,"org.easymock.samples.PartialClassMockTest.testGetArea":127,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":161,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":286,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":427,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":293,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":407,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":169,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":17,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":424,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":295,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":323,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":86,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":177,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":363,"org.easymock.tests.MockNameTest.defaultName":388,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":141,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests.UsageVarargTest.allKinds":259,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":253,"org.easymock.samples.BasicClassMockTest.testPrintContent":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":186,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":404,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.samples.ExampleTest.voteForRemoval":131,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":318,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":268,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":152,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":14,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":240,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":15,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":375,"org.easymock.tests.GenericTest.testBridgedEquals":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":425,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":346,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":178,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":79,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":347,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":185,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":113,"org.easymock.tests.MockingTest.testClassMocking":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":430,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":252,"org.easymock.tests.MockTypeTest.fromEasyMockClass":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":85,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":401,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":370,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":426,"org.easymock.tests.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":366,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":144,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockSupportTest.testVerify":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":288,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":334,"org.easymock.tests.UsageVarargTest.varargCharAccepted":369,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":310,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":420,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":23,"org.easymock.tests.DefaultClassInstantiatorTest.object":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":157,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":385,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":33,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":166,"org.easymock.tests.CapturesMatcherTest.test":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":89,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":303,"org.easymock.tests2.UsageTest.resumeIfFailure":54,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":243,"org.easymock.tests2.StubTest.stubWithReturnValue":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":405,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":267,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":417,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":408,"org.easymock.samples.SupportTest.voteForRemovals":128,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":172,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":156,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":399,"org.easymock.tests.UsageExpectAndThrowTest.object":170,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":77,"org.easymock.tests2.DelegateToTest.testWrongClass":41,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":257,"org.easymock.samples.ConstructorCalledMockTest.testTax":125,"org.easymock.tests.UsageStrictMockTest.range":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":19,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":112,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":9,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":277,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":358,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":409,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":218,"org.easymock.tests.UsageUnorderedTest.message":224,"org.easymock.tests.UsageVerifyTest.twoReturns":255,"org.easymock.tests.UsageVarargTest.varargByteAccepted":374,"org.easymock.tests2.ThreadingTest.testThreadSafe":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":291,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":344,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":232,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":439,"org.easymock.tests2.StubTest.stub":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndThrowTest.longType":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":438,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":37,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests2.NameTest.nameForMocksControl":379,"org.easymock.tests2.MockedExceptionTest.testMockedException":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":281,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":164,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":10,"org.easymock.tests.MockingTest.testNicePartialClassMocking":189,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":31,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":78,"org.easymock.tests.MockingTest.testTwoMocks":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":168,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":82,"org.easymock.samples.ExampleTest.removeNonExistingDocument":429,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":437,"org.easymock.tests.UsageStrictMockTest.differentMethods":195,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":313,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":94,"org.easymock.tests2.MockBuilderTest.testCreateMockString":266,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":282,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":279,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":254,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":34,"org.easymock.tests2.UsageConstraintsTest.testNotNull":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests2.UsageTest.defaultResetToNice":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.UsageVarargTest.differentLength":371,"org.easymock.tests2.CallbackTest.callback":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":269,"org.easymock.tests.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":231,"org.easymock.tests.UsageCallCountTest.tooFewCalls":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":360,"org.easymock.tests.UsageThrowableTest.throwCheckedException":184,"org.easymock.tests.MockingTest.testStrictClassMocking":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":410,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":137,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":114,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":116,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.ObjectMethodsTest.testHashCode":390,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":378,"org.easymock.tests2.DependencyTest.testInterfaceMocking":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":402,"org.easymock.samples.ExampleTest.addDocument":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":292,"org.easymock.tests2.DelegateToTest.testStubDelegate":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":193,"org.easymock.tests.UsageVarargTest.varargLongAccepted":373,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":126,"org.easymock.tests.UsageThrowableTest.noUpperLimit":181,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":75,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":275,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":25,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":312,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":340,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":283,"org.easymock.tests.GenericTest.testPackageScope":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":238,"org.easymock.tests2.NameTest.nameForMock":376,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":174,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":228,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":230,"org.easymock.tests2.NameTest.nameForStrictMock":377,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":276,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":314,"org.easymock.tests.ErrorMessageTest.testGetters":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":7,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":13,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":287,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":284,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":345,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":434,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":261,"org.easymock.tests.UsageTest.unexpectedCallWithArray":353,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.CaptureTest.testCapture":406,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":351,"org.easymock.samples.ExampleTest.addAndChangeDocument":134,"org.easymock.tests.UsageStrictMockTest.testVerify":384,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":339,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.LimitationsTest.abstractClass":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":18,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":367}}]
