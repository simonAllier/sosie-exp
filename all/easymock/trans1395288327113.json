[{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[21,22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:195","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,3,4,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[97,98,99,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[101,102,103,104,105,106],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[107,108,109,6,7,110,111,112,8,113,114,115,116,79,9,11,12,117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[119,120,121,122,122,123,123,97,99,124,125,126,127,128,129,27,28,130,131,132,29,133,42,43,134,44,135,136,45,137,138,46,47,139,140,141,142,143,48,144,49,50,145,146,147,148,149,0,1,150,2,151,152,153,154,3,155,156,4,157,51,158,159,160,161,162,71,163,72,164,165,166,167,73,168,169,74,75,76,170,101,102,103,104,23,105,106,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[119,196,197,14,198,199,200,201,202,203,204,120,121,205,122,122,123,123,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,206,15,207,16,17,18,208,209,124,210,211,212,213,214,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,96,233,234,27,28,130,131,235,132,29,236,237,238,239,240,241,35,134,136,143,146,242,243,244,107,245,246,247,248,249,108,109,250,251,149,0,252,1,150,2,152,155,156,4,253,254,255,256,257,258,259,5,260,6,7,261,262,263,264,265,266,52,267,268,53,269,54,270,271,272,273,55,56,57,58,274,64,160,161,162,275,163,165,167,73,74,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,110,173,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,113,332,333,114,115,334,186,187,188,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,9,10,352,11,12,353,13,191,192,193,195,354,355,356,357,358,359,360,361,362,363,364,365,366,117,118,367,368,20,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[209,242,248,160,161,162,275,298,300,301,302,303,304,305,317,318,319,320,321,322,330,333,345,346,349,356,117,369,376,377,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[122,123,97,124,125,130,29,408,133,42,43,134,44,135,136,45,137,138,46,47,139,140,141,142,143,48,144,49,50,145,146,147,148,409,410,411,412,413,168,414,415],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[119,97,151,416,71,417,163,72,165,166,167,73,169,74,418,75,76,170,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[244,107,108,109,419,420,421,422,423,424,425,331,8,113,114,115,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[107,108,109,6,110,112,8,113,114,115,9,11,117,118,426],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[119,120,121,122,122,123,123,97,99,124,125,126,129,27,28,130,131,132,29,133,42,43,134,44,135,136,45,137,138,46,47,139,140,141,142,143,48,144,49,50,145,146,147,148,149,0,1,150,2,151,152,153,154,3,155,156,4,157,51,416,160,161,162,71,417,163,72,164,165,166,167,73,168,169,74,418,75,76,170,101,102,103,104,23,105,106,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,427],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:197","sourceCode":"java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[119,196,197,14,198,199,200,201,202,203,204,120,121,205,122,122,123,123,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,206,15,207,16,17,18,208,209,124,210,211,212,213,214,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,96,233,234,27,28,130,131,235,132,29,236,237,238,239,240,241,35,134,136,143,146,242,243,244,107,245,246,247,248,249,108,109,250,251,149,0,252,1,150,2,152,155,156,4,253,254,255,256,257,258,259,5,260,6,7,261,262,263,264,265,266,52,267,268,53,269,54,270,271,272,273,55,56,57,58,274,64,160,161,162,275,163,165,167,73,74,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,110,173,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,429,430,19,431,432,433,434,435,436,437,438,439,440,441,442,443,328,444,445,446,447,448,329,449,330,331,113,332,333,114,115,334,186,187,188,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,9,10,352,11,12,353,13,191,192,193,195,354,355,356,357,358,359,360,361,362,363,364,365,366,117,118,367,20,369,371,372,373,374,375,376,377,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[450,108,114],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[213,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[451,452,453],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[119,196,197,14,198,199,200,201,454,202,203,204,120,121,205,122,123,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,206,15,207,16,17,18,208,209,124,125,455,210,211,212,213,450,214,215,216,217,21,22,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,96,233,234,126,127,128,456,129,457,458,27,28,130,131,459,235,132,29,408,236,237,238,239,240,241,30,31,32,33,34,35,36,37,38,39,40,41,133,42,43,134,44,135,136,45,137,138,46,47,139,140,141,142,143,48,144,49,50,145,146,147,148,242,243,244,107,245,246,247,248,249,108,109,250,251,460,149,0,252,1,150,2,151,461,152,153,154,3,155,156,4,157,51,253,254,255,256,257,258,259,5,260,6,7,261,158,159,262,263,264,265,266,52,267,268,53,269,54,270,271,272,273,462,55,56,57,58,274,463,464,465,466,59,60,61,62,63,64,65,66,67,68,69,70,160,161,162,275,71,411,163,72,412,164,165,166,167,413,73,467,168,169,74,415,75,276,95,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,110,76,468,469,470,77,170,78,471,472,101,102,103,104,23,105,473,106,171,172,173,174,306,307,308,474,309,310,311,312,313,314,315,316,317,318,319,320,321,322,175,176,177,178,179,180,181,182,323,324,325,326,327,429,430,19,431,432,433,434,435,436,437,438,439,440,441,442,443,328,444,445,446,447,448,329,449,330,331,8,113,332,333,114,115,334,475,476,477,478,479,183,184,185,186,187,480,188,481,482,189,335,336,337,338,483,484,485,486,339,340,341,342,343,344,345,346,79,487,347,488,348,349,350,351,9,10,352,11,12,353,13,190,191,192,193,194,195,354,355,356,489,357,358,490,491,359,492,360,361,362,363,493,364,365,366,117,118,367,368,20,369,370,371,426,372,373,374,375,376,377,378,379,494,495,496,497,498,499,500,501,502,503,504,505,506,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,507,508,509,510,511,427,512],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[80,82,90,212,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[228],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":213,"org.easymock.tests2.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":196,"org.easymock.tests2.DelegateToTest.testReturnException":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":318,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests.MockClassControlTest.testToString":177,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":462,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":385,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":136,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":263,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests2.UsageTest.wrongArguments":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":380,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":485,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":170,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":1,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":270,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":404,"org.easymock.tests.UsageTest.moreThanOneArgument":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":489,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageVarargTest.varargIntAccepted":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":339,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":69,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":343,"org.easymock.tests.ReplayStateInvalidUsageTest.times":503,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.DependencyTest.testClassMocking":158,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":466,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":469,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":491,"org.easymock.tests2.DelegateToTest.testDelegate":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":400,"org.easymock.tests.LimitationsTest.mockFinalMethod":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":479,"org.easymock.tests2.DependencyTest.testClassMockingSupport":159,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":378,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":464,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":497,"org.easymock.tests.UsageThrowableTest.throwError":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":77,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":70,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":148,"org.easymock.samples.PartialClassMockTest.testGetArea":119,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":498,"org.easymock.tests.MockingTest.testInterfaceMocking":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":340,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":373,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":427,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":47,"org.easymock.tests2.UsageTest.niceToStrict":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":165,"org.easymock.tests2.MockBuilderTest.testCreateMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":38,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":419,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":394,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":468,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":483,"org.easymock.tests.UsageOverloadedMethodTest.overloading":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":142,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":223,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":289,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":24,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":181,"org.easymock.tests2.EasyMockSupportClassTest.testAll":134,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":465,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests.MockNameTest.defaultName":512,"org.easymock.tests2.UsageConstraintsTest.testMatches":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":495,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":326,"org.easymock.samples.ExampleTest.voteForRemovals":201,"org.easymock.tests.UsageVarargTest.allKinds":316,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":478,"org.easymock.samples.BasicClassMockTest.testPrintContent":121,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":304,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":322,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":473,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":106,"org.easymock.samples.ExampleTest.voteForRemoval":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":157,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":151,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":195,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":242,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":266,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":317,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":52,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":251,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":285,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests2.UsageTest.moreThanOneArgument":244,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":315,"org.easymock.tests.GenericTest.testBridgedEquals":194,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":26,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":364,"org.easymock.tests.UsageExpectAndReturnTest.longType":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":264,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":418,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":403,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":407,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":365,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":390,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":303,"org.easymock.tests.MockingTest.testNiceClassMocking":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":184,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":417,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":162,"org.easymock.tests2.UsageConstraintsTest.testFind":214,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":356,"org.easymock.tests.MockTypeTest.fromEasyMockClass":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":277,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests.UsageExpectAndReturnTest.object":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":54,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":310,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":510,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":487,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":294,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":306,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":20,"org.easymock.tests.MockClassControlTest.testHashCode":180,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":60,"org.easymock.tests2.EasyMockSupportTest.testVerify":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":140,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":463,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":111,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":460,"org.easymock.tests.UsageVarargTest.varargCharAccepted":309,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":472,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":451,"org.easymock.tests.DefaultClassInstantiatorTest.object":101,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":375,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":508,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":33,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":391,"org.easymock.tests.CapturesMatcherTest.test":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":344,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":146,"org.easymock.tests2.UsageTest.resumeIfFailure":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":320,"org.easymock.tests2.StubTest.stubWithReturnValue":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":413,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":232,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":287,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":328,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":428,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":421,"org.easymock.samples.SupportTest.voteForRemovals":204,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":397,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":329,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":237,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":488,"org.easymock.tests.UsageExpectAndThrowTest.object":395,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":229,"org.easymock.tests2.DelegateToTest.testWrongClass":16,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":405,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":406,"org.easymock.samples.ConstructorCalledMockTest.testTax":122,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":457,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":396,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":167,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":133,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":484,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":423,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":374,"org.easymock.tests.UsageUnorderedTest.message":110,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":116,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":314,"org.easymock.tests2.ThreadingTest.testThreadSafe":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":48,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":363,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":511,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":422,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":383,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":502,"org.easymock.tests2.StubTest.stub":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":319,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":501,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.tests2.SerializationTest.testClass":97,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.LimitationsTest.mockNativeMethod":173,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":32,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":261,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.MockedExceptionTest.testMockedException":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":389,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":30,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":379,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.MockingTest.testTwoMocks":185,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":393,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":233,"org.easymock.samples.ExampleTest.removeNonExistingDocument":454,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":499,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":37,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":61,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":103,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":175,"org.easymock.tests.UsageExpectAndThrowTest.floatType":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":45,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":43,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":455,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":143,"org.easymock.samples.ExampleTest.voteAgainstRemoval":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":156,"org.easymock.tests.LimitationsTest.privateConstructor":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":410,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":305,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":31,"org.easymock.tests.UsageVarargTest.differentLength":311,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests2.UsageConstraintsTest.equals":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":153,"org.easymock.tests.UsageTest.openCallCountByLastCall":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":382,"org.easymock.tests.UsageCallCountTest.tooFewCalls":361,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":486,"org.easymock.tests.UsageThrowableTest.throwCheckedException":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":424,"org.easymock.tests.MockingTest.testStrictClassMocking":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":504,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":509,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":257,"org.easymock.tests2.DependencyTest.testInterfaceMocking":262,"org.easymock.samples.ExampleTest.addDocument":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":147,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":467,"org.easymock.tests.UsageVarargTest.varargLongAccepted":313,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.floatType":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":124,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":68,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.UsageThrowableTest.noUpperLimit":299,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":126,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":102,"org.easymock.tests2.UsageConstraintsTest.testSame":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":279,"org.easymock.samples.SupportTest.addDocument":203,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":459,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":137,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":67,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":415,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":399,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":507,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests2.MockedExceptionTest.testRealException":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":441,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":5,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":506,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":381,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":104,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":139,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests2.UsageConstraintsTest.testOr":217,"org.easymock.tests.UsageRangeTest.combination":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":113,"org.easymock.tests2.MockBuilderTest.testWithConstructor":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":138,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":291,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":105,"org.easymock.tests.UsageVarargTest.varargShortAccepted":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":493,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":431,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.CaptureTest.testCaptureFromStub":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":496,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":362,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":292,"org.easymock.tests2.UsageConstraintsTest.constraints":212,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":352,"org.easymock.samples.ExampleTest.addAndChangeDocument":202,"org.easymock.tests.UsageStrictMockTest.testVerify":13,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":205,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":476,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":341,"org.easymock.tests.LimitationsTest.abstractClass":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":342,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":53,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":307}}]
