[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[33,2,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[51],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,0,1,103,104,105,106,107,2,108,109,110,111,112,113,3,114,115,116,4,117,118,119,120,18,19,20,21,22,23,24,25,26,27,28,29,30,31,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,5,176,177,178,179,34,180,181,6,182,7,183,184,8,185,186,35,187,37,38,188,189,39,40,41,190,42,9,43,44,191,46,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,10,210,11,211,212,213,214,215,12,216,217,218,219,13,220,221,222,223,224,225,226,14,15,227,228,229,230,231,232,233,234,235,236,237,16,16,17,17,238,239,240,47,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,48,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,51,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,49,463,464,50,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[60,104,105,107,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[60,64,68,70,71,98,99,100,111,19,22,25,26,30,31,121,123,127,128,132,133,136,141,142,143,146,147,148,149,153,155,157,158,159,160,161,167,168,169,44,295,297,298,322,324,333,334,336,338,341,383,389,390,393,395,396,397,398,400,401,402,403,405,406,407,408,436,437,438,439,440,442,446,447,448,451,452,455,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[147],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[130,145,453],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[70,71,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3,5,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[111,121,128,340,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,381,383,384,385,386,387,388,441,446,447,452,472,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.MocksControl:189","failures":[52,53,54,55,66,69,70,71,78,87,89,90,92,93,121,124,125,126,129,130,131,133,143,34,7,35,40,41,42,44,46,197,256,292,294,296,297,298,414,415,416,417,418,441,442,447,449,450,453,454,455,456,457,458,459],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,30,256,347,353,359,363,365,390,396,402,406,408,447],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,6,9,16,16,17,17],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[488],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[489,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,108,109,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[126,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[134,136,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[68,70,71,78,119,123,124,130,131,197,242,245,256,294,295,297,298,370,440,441,442,448,449,450,453,454,460,461,463,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[159],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[42],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Invocation:195","failures":[73,74,75,76,77,78,79,80,81,82,83,84,88,91,93,112,113,4,171,172,173,174,5,7,8,186,35,38,42,44,46,192,193,194,195,196,197,198,199,200,201,202,203,209,10,11,213,12,216,221,223,224,491,49,464,465],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,0,104,105,107,2,108,109,110,111,112,113,3,114,115,116,4,18,19,20,21,22,23,24,25,26,27,28,29,30,31,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,5,176,177,178,179,34,181,7,183,184,8,37,39,41,42,44,197,204,205,206,207,210,212,220,226,227,228,229,230,231,232,233,234,235,237,16,16,17,17,238,239,240,47,256,257,269,270,271,272,273,274,275,276,277,278,279,281,282,48,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,311,312,329,335,337,338,339,340,341,51,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,373,374,375,377,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,412,419,420,421,422,423,424,425,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,460,461,467,468,469,470,471,472,473,474,476,477,478,479,480,481,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[66,70,71,86,90,91,94,104,125,44,292,297,298,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[492,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[70,124,130,131,256,294,297,495,441,442,449,450,453,454,475],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,0,1,103,104,105,106,107,2,108,109,110,111,112,113,3,114,496,115,116,4,497,117,498,499,500,118,119,120,18,19,20,21,22,23,24,25,26,27,28,29,30,31,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,5,176,177,178,179,34,180,181,6,182,7,183,184,8,185,186,35,187,37,38,188,189,39,40,41,190,42,501,9,43,44,191,46,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,10,210,11,211,212,213,214,215,12,216,217,218,219,13,220,221,222,223,224,225,226,14,15,227,228,229,230,231,232,233,234,235,236,237,16,17,238,239,240,47,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,48,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,51,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,491,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,49,502,503,463,464,50,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":144,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":447,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":323,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":240,"org.easymock.tests2.DelegateToTest.testReturnException":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":478,"org.easymock.tests.MockingTest.testPartialClassMocking":374,"org.easymock.tests.MockClassControlTest.testToString":286,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":170,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":337,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":458,"org.easymock.samples.ExampleTest.answerVsDelegate":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests2.UsageConstraintsTest.testNull":147,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":291,"org.easymock.tests2.CaptureTest.testPrimitive":21,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":341,"org.easymock.tests.UsageTest.moreThanOneArgument":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":365,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests.UsageTest.argumentsOrdered":454,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":51,"org.easymock.tests.UsageVarargTest.varargIntAccepted":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":485,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":423,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":493,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests.ReplayStateInvalidUsageTest.times":265,"org.easymock.tests2.DependencyTest.testClassMocking":56,"org.easymock.tests2.AnswerTest.answer":60,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":55,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":503,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests2.DelegateToTest.testDelegate":139,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":361,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":418,"org.easymock.tests2.DependencyTest.testClassMockingSupport":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":460,"org.easymock.tests2.CaptureTest.testCapture1_2446744":22,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":53,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":259,"org.easymock.tests.UsageThrowableTest.throwError":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":464,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":15,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":260,"org.easymock.tests.MockingTest.testInterfaceMocking":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":302,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":216,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":456,"org.easymock.tests.UsageOverloadedMethodTest.overloading":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":225,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":472,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":157,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":400,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":156,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":427,"org.easymock.tests2.EasyMockSupportClassTest.testAll":210,"org.easymock.tests.MockClassControlTest.testEquals":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":363,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":54,"org.easymock.tests.MockNameTest.defaultName":370,"org.easymock.tests2.UsageConstraintsTest.testMatches":158,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.samples.ExampleTest.voteForRemovals":235,"org.easymock.tests.UsageVarargTest.allKinds":435,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":417,"org.easymock.samples.BasicClassMockTest.testPrintContent":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":387,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":482,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":199,"org.easymock.tests2.UsageConstraintsTest.greaterThan":160,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":8,"org.easymock.samples.ExampleTest.voteForRemoval":232,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":185,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":99,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":476,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":87,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":477,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":134,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":88,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":396,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":101,"org.easymock.tests2.CaptureTest.testCapture2_2446744":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":434,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":414,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":85,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":364,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":443,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":494,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":113,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests2.UsageConstraintsTest.testContains":155,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":36,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":206,"org.easymock.tests2.UsageConstraintsTest.testFind":146,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":446,"org.easymock.tests.MockTypeTest.fromEasyMockClass":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":107,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":93,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":429,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":244,"org.easymock.tests.UsageTest.exactCallCountByLastCall":455,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":342,"org.easymock.tests2.ConstraintsToStringTest.findToString":488,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":405,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":193,"org.easymock.tests.MockClassControlTest.testHashCode":289,"org.easymock.tests2.EasyMockSupportTest.testVerify":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":218,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":492,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":52,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":140,"org.easymock.tests.UsageVarargTest.varargCharAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":247,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":96,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":269,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":242,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":192,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":183,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":352,"org.easymock.tests.CapturesMatcherTest.test":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":406,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":226,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":287,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":480,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":398,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":166,"org.easymock.tests2.SerializationTest.testAllMockedMethod":109,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":487,"org.easymock.samples.SupportTest.voteForRemovals":239,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":358,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":61,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":413,"org.easymock.tests.UsageExpectAndThrowTest.object":356,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":163,"org.easymock.tests2.DelegateToTest.testWrongClass":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":467,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":468,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":119,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":357,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":457,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":303,"org.easymock.tests.UsageUnorderedTest.message":256,"org.easymock.tests.UsageVerifyTest.twoReturns":442,"org.easymock.tests.UsageVarargTest.varargByteAccepted":433,"org.easymock.tests2.ThreadingTest.testThreadSafe":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":221,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":228,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":340,"org.easymock.tests2.UsageConstraintsTest.any":153,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndThrowTest.longType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":252,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":263,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":408,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.NameTest.nameForMocksControl":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests2.MockedExceptionTest.testMockedException":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":211,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":452,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":350,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":483,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":164,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":354,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":168,"org.easymock.samples.ExampleTest.removeNonExistingDocument":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":261,"org.easymock.tests.UsageStrictMockTest.differentMethods":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":194,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":250,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":100,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":63,"org.easymock.tests.UsageVerifyTest.twoThrows":441,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":103,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.ExampleTest.voteAgainstRemoval":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":184,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.UsageConstraintsTest.testNotNull":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":388,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":204,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.differentLength":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":6,"org.easymock.tests.UsageTest.openCallCountByLastCall":451,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":339,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":459,"org.easymock.tests.UsageThrowableTest.throwCheckedException":385,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":116,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":115,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":65,"org.easymock.tests.ObjectMethodsTest.testHashCode":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":484,"org.easymock.tests2.NameTest.nameForNiceMock":173,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.samples.ExampleTest.addDocument":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":222,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":14,"org.easymock.tests2.AnswerTest.stubAnswer":64,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":501,"org.easymock.tests.UsageVarargTest.varargLongAccepted":432,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":407,"org.easymock.tests.UsageExpectAndReturnTest.floatType":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":201,"org.easymock.tests.UsageThrowableTest.noUpperLimit":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":142,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":117,"org.easymock.tests2.SerializationTest.test":108,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":390,"org.easymock.tests2.UsageConstraintsTest.testSame":148,"org.easymock.samples.SupportTest.addDocument":238,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":496,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":214,"org.easymock.tests.GenericTest.testPackageScope":281,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":200,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":378,"org.easymock.tests2.NameTest.nameForMock":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":401,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":360,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":439,"org.easymock.tests2.MockedExceptionTest.testRealException":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":486,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":326,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":338,"org.easymock.tests2.NameTest.nameForStrictMock":172,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":118,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":162,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":37,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests2.UsageConstraintsTest.lessThan":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":321,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":217,"org.easymock.tests2.UsageConstraintsTest.testOr":149,"org.easymock.tests.UsageRangeTest.combination":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":5,"org.easymock.tests.UsageTest.wrongArguments":450,"org.easymock.tests2.MockBuilderTest.testWithConstructor":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":215,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":314,"org.easymock.tests.UsageVarargTest.varargShortAccepted":431,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":258,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":38,"org.easymock.tests.UsageTest.unexpectedCallWithArray":449,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":403,"org.easymock.tests2.CaptureTest.testCapture":489,"org.easymock.tests2.UsageConstraintsTest.constraints":143,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":237,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":415,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":421,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":395,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":422,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":91}}]
