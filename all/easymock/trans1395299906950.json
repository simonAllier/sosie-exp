[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[75,76,77],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[79,80,81],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[82,79,83,80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[84,85,86,87],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[85,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[88,89,90,91,92,93,94,95,96,85],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[82,79,83,80,81,97,98,99,100,101,34,102,103,104,105,106,107,108,109,36,110,111,39,40,41,112,113,114,75,76,115,116,117,77,118,119,119,120,120,121,122,123,124,125,126,127,128,53,129,54,130,131,132,133,134,95,135,136,0,137,138,139,140,64,141,142,65,1,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,66,171,172,173,174,175,176,177,178,2,179,67,180,3,85,87],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[119,120,134,95,181,182,96,142,183,184,185,186,187,176,85],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"failures":[188,189,190,72,191],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[192,193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[194],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[195,196,197,198],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[188,189,190,72,199,197,200,191,201,202,203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[188,189,190,72,199,197,200,191,201,202,203],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[119,120,181,184,176],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[24,60,204],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[205,206,207],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"t":"t"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[210,178,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[136,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[211,212,213,214,215,4,5,79,80,216,217,218,219,220,10,99,11,12,13,14,15,16,17,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,18,19,249,20,21,22,23,250,251,24,25,26,252,253,254,255,256,101,257,258,259,260,261,262,263,264,265,266,208,27,209,267,28,29,30,195,268,269,270,271,104,105,106,107,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,42,308,309,310,43,44,45,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,119,119,120,120,121,326,46,327,328,47,48,49,50,51,52,329,330,127,128,53,129,331,54,130,55,332,56,57,58,59,333,334,335,60,61,62,63,131,132,133,336,337,338,339,196,340,134,341,135,0,139,140,64,141,65,1,144,148,151,161,167,170,66,342,171,172,173,174,175,178,2,179,67,343,344,345,346,347,348,349,350,351,352,353,354,355,356,188,357,189,358,359,360,361,362,363,364,190,365,366,367,368,68,369,370,371,69,372,373,374,70,375,376,377,71,378,379,380,381,382,383,72,199,384,197,385,200,191,386,201,387,388,389,194,390,391,73,392,393,202,78,394,198,395,203,396,397,85,86,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[211,212,216,217,218,219,220,10,12,13,257,258,259,260,261,195,276,283,284,48,196,175,349,350,188,357,189,358,359,360,361,362,363,364,190,365,366,367,398,382,383,72,199,384,197,385,200,191,386,201,387,388,389,194,390,391,73,392,393,202,78,394,198,395,203,396,397],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[12,399,400,22,401,402],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[209,321,351,352,353,354,355,356],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[403,382,392,395],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[404,209,321,352,354,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[405,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"value","methodName":"value"}},{"position":"org.easymock.internal.LastControl:95","failures":[188,189,190,72,199,197,200,191,201,202,203],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[188,189,190,72,199,197,200,191,201,202,203],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[356],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[119,120,134,95,181,182,96,142,183,184,185,186,187,176,85],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[202],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":199,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageTest.argumentsOrdered":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":375,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":59,"org.easymock.tests2.DelegateToTest.testReturnException":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":273,"org.easymock.tests.MockingTest.testPartialClassMocking":105,"org.easymock.tests.MockClassControlTest.testToString":39,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":155,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":288,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":386,"org.easymock.tests2.UsageTest.wrongArguments":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":321,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":36,"org.easymock.tests2.UsageConstraintsTest.testNull":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":171,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":70,"org.easymock.tests2.CaptureTest.testPrimitive":358,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageTest.moreThanOneArgument":21,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":317,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":93,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests2.AnswerTest.answer":343,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests2.CaptureTest.testAnd":188,"org.easymock.tests2.UsageTest.strictResetToDefault":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":371,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":282,"org.easymock.tests2.DelegateToTest.testDelegate":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":303,"org.easymock.tests.LimitationsTest.mockFinalMethod":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":266,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":18,"org.easymock.tests2.CaptureTest.testCapture1_2446744":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":379,"org.easymock.tests.UsageThrowableTest.throwError":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":319,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":169,"org.easymock.samples.PartialClassMockTest.testGetArea":121,"org.easymock.tests2.CompareToTest.testLessOrEqual":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":156,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":34,"org.easymock.tests2.UsageTest.niceToStrict":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":289,"org.easymock.tests2.ThreadingTest.testChangeDefault":405,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":207,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":139,"org.easymock.tests2.MockBuilderTest.testCreateMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":164,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":297,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":4,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":390,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":285,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":194,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":364,"org.easymock.tests2.EasyMockSupportClassTest.testAll":148,"org.easymock.tests.MockClassControlTest.testEquals":113,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":264,"org.easymock.tests2.CaptureTest.testCaptureAll":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":380,"org.easymock.tests.MockNameTest.defaultName":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":318,"org.easymock.samples.ExampleTest.voteForRemovals":324,"org.easymock.tests.UsageVarargTest.allKinds":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":43,"org.easymock.samples.BasicClassMockTest.testPrintContent":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":265,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":227,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":277,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":355,"org.easymock.tests2.UsageConstraintsTest.greaterThan":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":118,"org.easymock.samples.ExampleTest.voteForRemoval":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":180,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":369,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":272,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":351,"org.easymock.tests2.CaptureTest.testCaptureFirst":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":370,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":196,"org.easymock.tests2.CaptureTest.testCapture2_2446744":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":1,"org.easymock.tests.GenericTest.testBridgedEquals":81,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":8,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":262,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":368,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":306,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":315,"org.easymock.tests.UsageCallCountTest.tooManyCalls":9,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":226,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests.MockingTest.testNiceClassMocking":108,"org.easymock.tests.MockingTest.testClassMocking":103,"org.easymock.tests2.UsageConstraintsTest.testContains":389,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":136,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":133,"org.easymock.tests2.UsageConstraintsTest.testFind":384,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":287,"org.easymock.tests.MockTypeTest.fromEasyMockClass":35,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":11,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":350,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":90,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":209,"org.easymock.tests.MockClassControlTest.testHashCode":112,"org.easymock.tests2.EasyMockSupportTest.testVerify":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":158,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":208,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":378,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":398,"org.easymock.tests2.UsageTest.openCallCountByLastCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":205,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":213,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":224,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":2,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":294,"org.easymock.tests.CapturesMatcherTest.test":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":40,"org.easymock.tests2.UsageTest.resumeIfFailure":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":275,"org.easymock.tests2.StubTest.stubWithReturnValue":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.tests2.SerializationTest.testAllMockedMethod":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":187,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":402,"org.easymock.samples.SupportTest.voteForRemovals":326,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":300,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":253,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":344,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":78,"org.easymock.tests2.DelegateToTest.testWrongClass":354,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":283,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":284,"org.easymock.samples.ConstructorCalledMockTest.testTax":119,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":299,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":145,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":270,"org.easymock.tests2.CaptureTest.testCaptureNone":363,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":45,"org.easymock.tests2.ThreadingTest.testThreadSafe":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":162,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":122,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests2.UsageConstraintsTest.any":387,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":274,"org.easymock.tests.UsageExpectAndThrowTest.longType":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":117,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests2.SerializationTest.testClass":85,"org.easymock.tests.LimitationsTest.mockNativeMethod":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests2.MockedExceptionTest.testMockedException":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":150,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":141,"org.easymock.tests.MockingTest.testNicePartialClassMocking":106,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":88,"org.easymock.tests2.CaptureTest.testCaptureLast":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":19,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":394,"org.easymock.tests.MockingTest.testTwoMocks":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":296,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":396,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":406,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":115,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":339,"org.easymock.tests2.MockBuilderTest.testCreateMockString":144,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":152,"org.easymock.tests.UsageExpectAndThrowTest.floatType":290,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":346,"org.easymock.tests.UsageVerifyTest.twoThrows":44,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.ExampleTest.voteAgainstRemoval":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":268,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":179,"org.easymock.tests.LimitationsTest.privateConstructor":98,"org.easymock.tests2.UsageConstraintsTest.testNotNull":203,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":228,"org.easymock.tests2.UsageTest.defaultResetToNice":335,"org.easymock.samples.ExampleTest.voteAgainstRemovals":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.UsageVarargTest.differentLength":31,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.UsageConstraintsTest.equals":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":176,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":382,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":6,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests.UsageThrowableTest.throwCheckedException":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":400,"org.easymock.tests.MockingTest.testStrictClassMocking":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":331,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":92,"org.easymock.tests2.NameTest.nameForNiceMock":210,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.DelegateToTest.testStubDelegate":353,"org.easymock.tests2.AnswerTest.stubAnswer":347,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":120,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":393,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests.UsageThrowableTest.noUpperLimit":222,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":383,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":125,"org.easymock.tests2.SerializationTest.test":86,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":76,"org.easymock.tests2.UsageConstraintsTest.testSame":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":153,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":281,"org.easymock.tests2.NameTest.nameForMock":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":184,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":310,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":186,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":217,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":206,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":126,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":68,"org.easymock.tests2.CaptureTest.testCaptureRightOne":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":157,"org.easymock.tests2.UsageConstraintsTest.testOr":200,"org.easymock.tests.UsageRangeTest.combination":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":66,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":154,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":77,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":7,"org.easymock.tests2.UsageConstraintsTest.cmpTo":388,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":345,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests2.CaptureTest.testCaptureFromStub":365,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":137,"org.easymock.tests.UsageTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests2.CaptureTest.testCapture":193,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.samples.ExampleTest.addAndChangeDocument":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":263,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":361,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests.LimitationsTest.abstractClass":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":372}}]
