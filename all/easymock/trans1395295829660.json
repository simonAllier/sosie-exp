[{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[105,106,107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[75,108,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,1,110,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,111,30,31,33,34,35,36,38,39,40,41,112,43,44,45,46,47,48,113,49,114,50,51,52,53,54,115,55,56,57,58,116,59,60,61,62,63,64,65,117,118,66,67,68,68,69,69,70,119,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[157,158,159,160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,3,161,162,7,10,163,29,32,37,39,164,42,47,48,113,49,114,50,51,52,53,54,115,55,56,57,58,116,59,60,61,62,63,64,65,117,118,68,69],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[4,5,8,11,12,13,14,15,16,17,19,21,22,25,26,27,45,46,47,49,50,52,53,55,58,60,61,64,66,67,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,104],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[165,166,167,168,158,159,169,170,171,172,120,121,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,0,193,194,195,3,196,4,122,197,5,6,7,8,198,9,10,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,123,124,218,219,220,125,221,222,223,224,225,226,126,127,105,128,227,129,130,106,228,229,230,231,131,232,233,132,234,235,133,107,236,237,238,239,240,134,241,242,243,244,245,13,14,246,15,16,17,19,23,24,25,30,34,36,38,41,247,46,49,51,59,65,248,66,67,249,250,251,252,253,254,255,256,257,258,70,259,79,80,260,261,262,263,264,135,136,265,266,267,137,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,138,285,286,287,139,140,288,141,289,290,142,291,292,293,294,295,93,98,99,100,296,143,297,298,299,300,301,302,303,304,305,306,144,307,308,309,145,146,310,147,311,312,148,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,149,150,151,152,153,336,337,338,339,154,340,341,342,155,156,343,344,345,346,347,348,349,350,351,104,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[165,166,171,120,121,191,0,5,6,7,8,198,9,10,223,13,14,246,15,16,17,19,23,24,25,30,34,36,38,41,49,51,59,65,249,251,252,254,257,70,353,354,355,356,263,135,136,273,93,98,99,100,303,304,305,306,144,307,145,146,147,311,312,313,314,315,316,317,320,321,322,323,324,149,150,151,152,346,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[165,166,167,168,158,170,171,172,120,121,173,174,175,176,177,178,179,180,181,183,184,185,186,188,189,190,192,193,3,196,122,197,199,200,206,207,209,211,212,213,214,216,217,123,124,125,221,222,223,224,225,105,227,130,106,240,14,16,24,34,36,38,247,248,66,67,249,250,251,252,253,254,255,256,257,258,259,353,354,355,356,357,80,261,263,264,135,136,265,273,274,275,276,277,281,282,283,284,138,285,286,287,139,140,288,141,289,290,142,291,292,293,294,295,296,143,297,298,299,300,301,302,303,304,305,306,144,307,308,309,145,146,310,147,311,312,148,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,153,336,337,338,339,154,340,341,155,156,345,346,347,348,349,350,358,359,360,361,352,362],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[363,364,0,1,3,4,5,6,7,8,9,10,11,365,366,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,34,35,36,38,39,40,41,43,44,45,46,47,48,113,49,114,50,51,52,53,54,115,55,56,57,58,116,59,60,61,62,63,64,65,117,118,66,67,68,68,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,30,31,33,34,35,36,38,39,40,41,43,44,45,46,47,48,113,49,114,50,51,52,53,54,115,55,56,57,58,116,59,60,61,62,63,64,65,117,118,66,67,68,68,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[367],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,1,110,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,111,30,31,33,34,35,36,38,39,40,41,112,43,44,45,46,47,48,113,49,114,50,51,52,53,54,115,55,56,57,58,116,59,60,61,62,63,64,65,117,118,66,67,68,68,69,69,70,119,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[1,368,369,370,371,372,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[1,161,162,373,7,10,163,29,32,37,164,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[165,166,167,168,170,171,172,120,121,173,174,175,176,177,178,179,180,181,183,184,185,186,187,191,192,0,193,3,196,4,5,6,7,8,198,9,10,199,200,201,202,204,205,206,207,208,209,211,212,213,215,216,217,219,220,221,222,224,225,105,227,106,228,230,231,232,234,107,236,237,238,239,240,13,14,246,15,16,17,19,24,34,36,38,247,46,49,51,59,65,248,66,67,249,250,251,252,253,254,255,256,257,258,70,259,79,80,261,262,263,264,135,136,265,268,269,270,271,272,273,274,275,276,283,284,285,288,291,93,98,99,100,296,143,297,298,299,300,301,302,305,306,307,310,313,325,326,327,328,329,331,332,333,334,335,149,336,337,338,339,342,343,344,345,348,349,350,351,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[374],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[78,79,80,81,82],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[120,121,188,189,190,193,194,195,122,200,201,203,204,206,207,210,211,214,217,123,124,125,225,226,126,127,128,227,129,130,131,232,233,132,235,133,134,241,255,259,135,136,137,281,282,138,286,287,139,140,141,289,290,142,292,293,294,295,143,303,304,144,308,309,145,146,147,311,312,148,314,315,316,317,149,150,151,152,153,154,340,341,155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[0,1,3,20,24,27,34,375,39,40,43,51,59,68,69,70,78,81],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[374],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[3,196,4,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":105,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":340,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":146,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests2.DelegateToTest.testReturnException":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":359,"org.easymock.tests.MockingTest.testPartialClassMocking":98,"org.easymock.samples.SupportTest.voteForRemovals":257,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":78,"org.easymock.tests.MockClassControlTest.testToString":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":115,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":281,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":51,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":157,"org.easymock.tests.UsageExpectAndThrowTest.object":288,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":236,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":368,"org.easymock.tests2.DelegateToTest.testWrongClass":224,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":347,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests2.UsageTest.wrongArguments":215,"org.easymock.samples.ConstructorCalledMockTest.testTax":68,"org.easymock.tests.UsageStrictMockTest.range":135,"org.easymock.samples.ExampleTest.answerVsDelegate":250,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":103,"org.easymock.tests2.UsageConstraintsTest.testNull":227,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":90,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests2.CaptureTest.testPrimitive":202,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":277,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":343,"org.easymock.tests.UsageTest.moreThanOneArgument":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":47,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":355,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests.UsageUnorderedTest.message":259,"org.easymock.tests.UsageVerifyTest.twoReturns":337,"org.easymock.tests.UsageVarargTest.varargByteAccepted":333,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests.UsageTest.argumentsOrdered":344,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":278,"org.easymock.tests.UsageVarargTest.varargIntAccepted":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":60,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":270,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":276,"org.easymock.tests2.UsageConstraintsTest.any":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests2.StubTest.stub":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":360,"org.easymock.tests.UsageExpectAndThrowTest.longType":284,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":75,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":247,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.DependencyTest.testClassMocking":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":317,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests2.AnswerTest.answer":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":229,"org.easymock.tests2.CaptureTest.testAnd":199,"org.easymock.tests2.UsageTest.strictResetToDefault":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":32,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.tests2.NameTest.nameForMocksControl":245,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":179,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.DelegateToTest.testDelegate":225,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":367,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":291,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":17,"org.easymock.tests.LimitationsTest.mockFinalMethod":94,"org.easymock.tests2.CaptureTest.testCaptureLast":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":352,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":10,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":237,"org.easymock.tests2.DependencyTest.testClassMockingSupport":364,"org.easymock.tests.MockingTest.testTwoMocks":97,"org.easymock.tests2.CaptureTest.testCapture1_2446744":203,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.tests.UsageThrowableTest.throwError":296,"org.easymock.tests.UsageStrictMockTest.differentMethods":136,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":73,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":357,"org.easymock.tests.UsageExpectAndThrowTest.floatType":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":52,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":168,"org.easymock.tests.UsageVerifyTest.twoThrows":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":321,"org.easymock.samples.ExampleTest.voteAgainstRemoval":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":282,"org.easymock.tests2.UsageTest.niceToStrict":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":119,"org.easymock.tests.LimitationsTest.privateConstructor":92,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":162,"org.easymock.tests2.UsageConstraintsTest.testNotNull":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":302,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.samples.ExampleTest.voteAgainstRemovals":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":313,"org.easymock.tests.UsageVarargTest.differentLength":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":62,"org.easymock.tests2.CallbackTest.callback":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":140,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":116,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":350,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":233,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":8,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":147,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests.UsageThrowableTest.throwCheckedException":299,"org.easymock.tests.MockClassControlTest.testEquals":89,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":293,"org.easymock.tests.MockingTest.testStrictClassMocking":95,"org.easymock.tests2.CaptureTest.testCaptureAll":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":319,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":7,"org.easymock.tests2.UsageConstraintsTest.testMatches":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":198,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":356,"org.easymock.samples.ExampleTest.voteForRemovals":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":371,"org.easymock.tests2.NameTest.nameForNiceMock":244,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":192,"org.easymock.tests.UsageVarargTest.allKinds":335,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":153,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":370,"org.easymock.samples.BasicClassMockTest.testPrintContent":67,"org.easymock.samples.ExampleTest.addDocument":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":61,"org.easymock.tests2.DelegateToTest.testStubDelegate":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":117,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":301,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":362,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":263,"org.easymock.tests2.UsageConstraintsTest.greaterThan":235,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.samples.ExampleTest.voteForRemoval":251,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":26,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":316,"org.easymock.tests.UsageExpectAndReturnTest.floatType":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":69,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":104,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":11,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":204,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":39,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":177,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":304,"org.easymock.tests2.UsageConstraintsTest.testSame":129,"org.easymock.samples.SupportTest.addDocument":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":358,"org.easymock.tests2.CaptureTest.testCaptureFirst":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":178,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":53,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests2.UsageTest.moreThanOneArgument":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":334,"org.easymock.tests.GenericTest.testBridgedEquals":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests2.NameTest.nameForMock":242,"org.easymock.tests.UsageExpectAndReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":294,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":112,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":42,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":152,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":285,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":6,"org.easymock.tests.MockingTest.testNiceClassMocking":101,"org.easymock.tests.MockingTest.testClassMocking":96,"org.easymock.tests2.NameTest.nameForStrictMock":243,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":111,"org.easymock.tests2.UsageConstraintsTest.testContains":131,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":128,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":154,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":195,"org.easymock.tests.UsageExpectAndReturnTest.object":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":74,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":369,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":329,"org.easymock.tests.UsageTest.exactCallCountByLastCall":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":318,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":176,"org.easymock.tests2.CaptureTest.testCaptureRightOne":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":56,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.UsageConstraintsTest.testOr":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageRangeTest.combination":149,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":349,"org.easymock.tests.UsageTest.wrongArguments":342,"org.easymock.tests2.MockBuilderTest.testWithConstructor":29,"org.easymock.tests.MockClassControlTest.testHashCode":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":54,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":57,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":348,"org.easymock.tests.UsageVarargTest.varargShortAccepted":331,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":76,"org.easymock.tests2.UsageConstraintsTest.cmpTo":231,"org.easymock.tests.UsageVarargTest.varargCharAccepted":328,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests.DefaultClassInstantiatorTest.object":71,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":298,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":269,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":148,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":255,"org.easymock.tests2.ConstraintsToStringTest.containsToString":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":315,"org.easymock.tests.UsageStrictMockTest.testVerify":266,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":248,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":65,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":205,"org.easymock.tests2.UsageTest.resumeIfFailure":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":308,"org.easymock.tests.LimitationsTest.abstractClass":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":323,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":365}}]
