[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[19,20,21],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,3,5,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.RecordState:183","failures":[22,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,24,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,28,29,30,145,146,147,148,149,150,151,152,153,154,155,156,157,158,31,159,160,161,162,163,164,165,32,33,34,166,167,168,169,170,171,172,173,174,175,176,177,7,178,8,9,11,12,13,179,14,16,18,37,180,39,41,181,182,183,184,185,186,187,188,48,189,50,51,52,19,190,20,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,3,4,5,236,237,238,239,240,241,242,243,244,245,53,54,55,56,246,57,58,61,63,64,68,247,248,249,250],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[251,252,253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[251,252,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,131,134,135,136,137,138,254,255,157,182],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[222],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[256,257,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:45","sourceCode":"org.easymock.internal.Results.add(org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[179,15,16,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[32,35,36,50,51,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[35,36,48,278,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[179,15,16,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[279,280,91,92,93,281,99,100,126,140,282,283,284,285,144,286,155,157,158,177,38,45,47,287,185,186,187,20,204,222,288,230,289,232,236,290,239,240,291,292,293,243,60,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[22,295,296,23,24,25,26,27,28,29,30,31,32,33,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,297,298,299,300,49,50,51,52,3,5,53,54,55,56,57,58,59,301,60,302,61,62,63,64,65,66,303,67,68],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[2,3,4,5],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[256,257,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[280,304,305,282,306,307],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[22,71,72,74,79,84,89,280,91,94,97,98,99,100,308,104,108,109,111,116,121,23,24,309,129,131,132,133,134,135,136,137,138,283,284,285,144,28,29,30,145,146,147,148,149,150,151,152,153,154,310,311,312,255,313,157,158,31,32,33,34,166,167,168,169,170,171,172,173,174,175,7,178,8,9,11,12,13,179,14,16,18,37,38,180,39,40,41,43,46,183,185,188,48,189,49,50,51,52,191,196,197,198,199,201,204,207,208,209,210,211,215,217,219,220,223,224,225,226,288,227,228,229,230,289,231,232,233,234,235,3,4,5,236,237,290,239,240,291,292,243,53,54,55,56,246,57,58,61,63,64,68,247,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":191,"org.easymock.tests2.UsageTest.argumentsOrdered":292,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":233,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":240,"org.easymock.tests2.StubTest.stubWithReturnValue":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":211,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.MockingTest.testPartialClassMocking":28,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":307,"org.easymock.samples.SupportTest.voteForRemovals":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":208,"org.easymock.tests2.DelegateToTest.testWrongClass":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":197,"org.easymock.tests2.UsageTest.wrongArguments":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":269,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests2.UsageConstraintsTest.testNull":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":63,"org.easymock.tests2.CaptureTest.testPrimitive":9,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":105,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":304,"org.easymock.tests2.CaptureTest.testCaptureNone":179,"org.easymock.tests.UsageUnorderedTest.message":155,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":152,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":147,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":98,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":104,"org.easymock.tests2.UsageConstraintsTest.any":198,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":62,"org.easymock.tests2.StubTest.stub":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests.LimitationsTest.mockNativeMethod":22,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.AnswerTest.answer":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":88,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":25,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":263,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":127,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.DelegateToTest.testDelegate":218,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":64,"org.easymock.tests.MockingTest.testNicePartialClassMocking":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.CaptureTest.testCaptureLast":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":254,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":209,"org.easymock.tests.MockingTest.testTwoMocks":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":291,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":213,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":265,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":271,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":222,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":277,"org.easymock.tests2.MockBuilderTest.testCreateMockString":67,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":204,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":248,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":261,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests2.CompareToTest.testLessOrEqual":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":162,"org.easymock.samples.ExampleTest.voteAgainstRemoval":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests2.UsageTest.niceToStrict":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":258,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":61,"org.easymock.tests2.MockBuilderTest.testCreateMock":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests.UsageVarargTest.differentLength":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":262,"org.easymock.tests2.CallbackTest.callback":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":266,"org.easymock.tests.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":103,"org.easymock.tests.UsageCallCountTest.tooFewCalls":96,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":255,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":201,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":14,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":24,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":297,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.testMatches":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":246,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":250,"org.easymock.samples.ExampleTest.voteForRemovals":175,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests.UsageVarargTest.allKinds":154,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":34,"org.easymock.samples.ExampleTest.addDocument":174,"org.easymock.tests2.DelegateToTest.testStubDelegate":216,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests2.AnswerTest.stubAnswer":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":273,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.UsageConstraintsTest.greaterThan":205,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests.UsageVarargTest.varargLongAccepted":151,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.samples.ExampleTest.voteForRemoval":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":87,"org.easymock.tests.UsageExpectAndReturnTest.floatType":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":275,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":206,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":31,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":190,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":11,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.testSame":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":70,"org.easymock.samples.SupportTest.addDocument":168,"org.easymock.tests2.CaptureTest.testCaptureFirst":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":228,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":76,"org.easymock.tests.GenericTest.testPackageScope":23,"org.easymock.tests2.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":66,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":99,"org.easymock.tests.UsageExpectAndReturnTest.longType":72,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":226,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests2.UsageStrictMockTest.differentMethods":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":73,"org.easymock.tests.UsageCallCountTest.tooManyCalls":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":128,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":301,"org.easymock.tests2.UsageConstraintsTest.testContains":200,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":68,"org.easymock.tests2.UsageConstraintsTest.testFind":192,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":279,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":245,"org.easymock.tests.UsageExpectAndReturnTest.object":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":267,"org.easymock.tests2.UsageStrictMockTest.range":186,"org.easymock.tests2.UsageConstraintsTest.lessThan":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":231,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":294,"org.easymock.tests.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":288,"org.easymock.tests2.CaptureTest.testCaptureRightOne":16,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests2.UsageConstraintsTest.testOr":195,"org.easymock.tests.UsageRangeTest.combination":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":145,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":312,"org.easymock.tests.UsageTest.wrongArguments":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":270,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":26,"org.easymock.tests2.EasyMockSupportTest.testVerify":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":311,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":150,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":281,"org.easymock.tests2.UsageConstraintsTest.cmpTo":199,"org.easymock.tests.UsageVarargTest.varargCharAccepted":148,"org.easymock.tests2.CaptureTest.testCaptureMultiple":6,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests2.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":256,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":234,"org.easymock.tests2.CaptureTest.testCaptureFromStub":17,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":302,"org.easymock.tests.UsageTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":300,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":83,"org.easymock.tests2.CaptureTest.testCapture":15,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.samples.ExampleTest.addAndChangeDocument":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":166,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.UsageTest.resumeIfFailure":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":12,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":75,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":289,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":146}}]
