[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,256,7,257,8,258,259,260,261,262,9,10,263,264,265,266,267,268,269,11,270,12,13,14,15,16,271,17,18,19,20,21,22,272,23,24,25,26,27,28,29,30,31,32,33,34,273,35,36,37,38,274,275,276,277,278,279,39,280,281,282,40,283,41,284,42,285,286,287,43,288,289,44,45,290,46,47,291,292,48,49,50,51,52,53,54,55,56,57,58,59,60,293,294,61,295,296,297,62,63,64,298,299,65,66,67,68,69,70,71,72,73,300,301,302,303,304,74,305,306,307,308,309,310,75,76,77,311,78,312,79,80,81,313,314,82,83,315,316,84,85,86,317,318,319,320,321,322,87,323,324,325,326,327,328,88,89,90,91,92,93,329,330,331,332,333,334,335,94,95,96,97,98,99,336,100,101,102,337,103,104,105,106,107,108,109,110,111,112,113,114,338,339,340,341,115,342,343,116,344,345,346,347,348,349,350,351,352,117,353,354,355,356,357,118,358,359,119,120,121,122,123,124,360,361,125,362,126,127,363,128,129,364,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,365,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,366,367,368,173,174,369,175,370,371,372,373,374,375,376,377,176,378,379,380,381,382,383,177,178,179,180,181,384,385,386,387,388,389,390,391,182,392,183,184,393,185,394,395,186,396,187,188,189,190,191,192,193,397,398,194,195,399,400,196,197,198,199,200,201,202,401,402,403,404,405,406,407,408,409,410,411,412,413,414,203,204,205,206,207,208,415,209,210,211,212,213,214,215,216,416,217,417,218,418,219,220,221,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,222,435,436,437,438,439,223,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,224,463,225,226,227,228,229,464,465,466,467,230,231,232,233,234,235,236,237,468,469,470,471,472,473,238,239,240,241,242,243,244,245,246,474,475,247,476,477,478,479,480,481,248,249,482,483,484,250,485,251,252,486,487,253,254,255],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[18,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[128,129,364,488],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[489,13,30,35],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[408,412],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,1,2,2,259,260,10,278,39,280,40,283,41,42,287,43,289,55,56,58,59,60,293,61,297,62,63,64,299,72,96,97,98,99,101,102,115,116,117,118,128,364,368,173,174,175,384,389,197,217,417,218,453,454,455,456,457,458,224,473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[490,27,34,38],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[128,129,364],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[263,284,491,492,493,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[29,59,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[15,29,39,287,43,289,56,62,64,75,311,78,312,313,314,82,83,86,104,108,109,112,360,362,126,127,496,365,497,498,188,192,397,398,399,400,196,203,447,245,246,479,480,481,482,484,485,251,252],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[10,263,284,491,492,493,499,500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[29,59,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[151,152,205,206,209,212,213,214,245],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[501,502,503,504,397,484],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[506],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,3,4,5,6,256,7,257,8,258,259,260,261,262,9,10,266,267,268,269,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,273,35,36,37,38,274,275,276,277,278,39,40,283,41,42,287,43,289,44,45,290,46,47,291,292,48,49,50,51,52,53,54,55,56,57,58,59,60,293,61,297,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,311,78,312,79,80,81,313,314,82,83,84,85,86,87,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,338,115,116,117,118,119,122,123,124,360,361,125,362,126,127,363,128,129,364,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,373,374,375,376,377,176,378,379,380,381,382,383,177,178,179,180,181,182,183,184,185,394,188,189,190,191,192,193,397,398,194,195,399,400,196,197,401,402,403,404,405,407,203,207,208,209,210,211,212,213,214,215,216,217,417,219,220,221,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,224,225,226,227,228,229,464,465,466,467,230,231,232,233,234,469,470,471,238,239,240,241,242,243,244,245,246,474,475,247,476,477,478,479,480,481,248,249,482,483,484,250,485,251,252,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[0,155,157,171,172,177,248],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[507,508,509,494,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[128,129,364,488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[489,13,30,35],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[408,412],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[200,436],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[278,283,293,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[3,4,5,6,256,7,257,8,10,266,267,268,269,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,273,35,36,37,38,274,275,276,277,278,39,280,282,40,283,287,43,289,44,45,290,46,47,291,292,48,49,50,51,52,53,54,55,56,57,58,59,60,293,61,296,297,62,63,64,298,65,66,67,68,69,70,71,72,73,75,76,77,311,78,312,79,80,81,313,314,82,83,84,86,317,87,89,90,91,93,330,331,332,333,335,94,95,97,98,101,102,119,122,123,124,360,361,125,362,126,127,363,128,129,364,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,366,367,173,174,369,175,370,371,372,373,374,375,376,377,176,378,379,380,381,382,383,177,178,179,180,181,384,387,388,389,390,391,182,392,183,184,185,394,186,396,188,189,190,191,192,193,397,398,194,195,399,400,196,197,401,402,403,404,405,407,203,207,208,209,210,211,212,213,214,215,216,217,417,219,220,221,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,224,225,226,227,228,229,464,465,466,467,230,231,232,233,234,469,470,471,238,239,240,241,242,243,244,245,246,474,475,247,476,477,478,479,480,481,248,249,482,483,484,250,485,251,252,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[265,266,56,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[15,29,39,287,43,289,56,62,64,67,75,311,78,312,313,314,82,83,86,104,108,109,112,360,362,126,127,188,192,397,398,399,400,196,203,447,245,246,479,480,481,482,484,485,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.UsageTest.argumentsOrdered":314,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":429,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":312,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":258,"org.easymock.tests2.DelegateToTest.testReturnException":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":239,"org.easymock.tests.MockingTest.testPartialClassMocking":173,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":265,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":491,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageTest.wrongArguments":311,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":466,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":389,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":179,"org.easymock.tests.UsageTest.argumentsOrdered":400,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":198,"org.easymock.tests.UsageVarargTest.varargIntAccepted":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":309,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":331,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":234,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":315,"org.easymock.tests2.AnswerTest.answer":119,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":435,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":277,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":386,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests2.DelegateToTest.testDelegate":93,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":405,"org.easymock.tests2.DependencyTest.testClassMockingSupport":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":395,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.UsageThrowableTest.throwError":209,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":375,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":359,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":369,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":376,"org.easymock.tests2.CompareToTest.testLessOrEqual":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":254,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":473,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests2.UsageTest.niceToStrict":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.MockBuilderTest.testCreateMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":325,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":206,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":464,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":357,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":184,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":219,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":26,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":444,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":115,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":417,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests.MockNameTest.defaultName":415,"org.easymock.tests2.UsageConstraintsTest.testMatches":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":180,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":373,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":452,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":404,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":360,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":413,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":189,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":64,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":414,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":293,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":197,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":238,"org.easymock.tests2.CaptureTest.testCaptureFirst":54,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests2.CaptureTest.testCapture2_2446744":53,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":451,"org.easymock.tests.GenericTest.testBridgedEquals":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":480,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":401,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":187,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":151,"org.easymock.tests.UsageCallCountTest.tooManyCalls":481,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":372,"org.easymock.tests.MockingTest.testClassMocking":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":475,"org.easymock.tests2.UsageConstraintsTest.testContains":25,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":17,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":221,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":482,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":12,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":492,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":446,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":471,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":199,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":263,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":183,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":301,"org.easymock.tests2.EasyMockSupportTest.testVerify":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":350,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":205,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":317,"org.easymock.tests.UsageVarargTest.varargCharAccepted":445,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":406,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests.DefaultClassInstantiatorTest.object":407,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":204,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":469,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":150,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests2.UsageTest.resumeIfFailure":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":241,"org.easymock.tests2.StubTest.stubWithReturnValue":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":35,"org.easymock.tests2.SerializationTest.testAllMockedMethod":364,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":508,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":223,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":120,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DelegateToTest.testWrongClass":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":249,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":334,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":339,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":465,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests2.CaptureTest.testCaptureNone":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":255,"org.easymock.tests.UsageUnorderedTest.message":203,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":496,"org.easymock.tests.UsageVerifyTest.twoReturns":246,"org.easymock.tests.UsageVarargTest.varargByteAccepted":450,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":353,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":478,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":472,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":23,"org.easymock.tests2.StubTest.stub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":240,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":411,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":362,"org.easymock.tests2.SerializationTest.testClass":128,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests.LimitationsTest.mockNativeMethod":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":363,"org.easymock.tests2.NameTest.nameForMocksControl":269,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":343,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":174,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":509,"org.easymock.tests2.CompareToTest.testCompareEqual":505,"org.easymock.tests2.CaptureTest.testCaptureLast":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":368,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":37,"org.easymock.samples.ExampleTest.removeNonExistingDocument":257,"org.easymock.tests.UsageStrictMockTest.differentMethods":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":324,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":302,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":409,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":289,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":344,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":122,"org.easymock.tests.UsageVerifyTest.twoThrows":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":264,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":117,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":63,"org.easymock.tests.LimitationsTest.privateConstructor":462,"org.easymock.tests2.UsageConstraintsTest.testNotNull":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":81,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests.UsageVarargTest.differentLength":447,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests2.UsageConstraintsTest.equals":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":295,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":506,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.UsageCallCountTest.tooFewCalls":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":467,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":124,"org.easymock.tests.ObjectMethodsTest.testHashCode":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.NameTest.nameForNiceMock":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":493,"org.easymock.samples.ExampleTest.addDocument":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":354,"org.easymock.tests2.DelegateToTest.testStubDelegate":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.AnswerTest.stubAnswer":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":250,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":449,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":329,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.tests2.UsageConstraintsTest.testSame":19,"org.easymock.samples.SupportTest.addDocument":262,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":345,"org.easymock.tests.GenericTest.testPackageScope":217,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":370,"org.easymock.tests2.NameTest.nameForMock":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests2.MockedExceptionTest.testRealException":73,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":335,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":226,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":267,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":333,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":126,"org.easymock.tests2.UsageConstraintsTest.lessThan":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":349,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageTest.wrongArguments":398,"org.easymock.tests2.MockBuilderTest.testWithConstructor":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":346,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.UsageVarargTest.varargShortAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":412,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":479,"org.easymock.tests2.UsageConstraintsTest.cmpTo":24,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":121,"org.easymock.tests2.CompareToTest.testLessThan":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":374,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":397,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":477,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":485,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":487,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":261,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":483,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":402,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":232,"org.easymock.tests.LimitationsTest.abstractClass":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":233,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109}}]
