[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[25,26],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[75,76,77,78],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[79,80,81,82,83,84,85,85,86,86,87,88,89,90,91,92,93,94,95,96,97,98,12,99,100,101,102,103,13,28,104,105,106,107,25,108,11,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,0,135,136,1,2,3,4,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,29,163,164,165,166,30,167,168,169,31,32,33,34,170,5,171,172,6,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,35,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,36,37,38,39,40,41,220,221,222,223,224,225,42,226,227,43,228,229,230,231,232,233,234,235,236,237,238,44,239,240,241,242,243,45,244,245,46,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,10,67,261,68,69,70,71,72,73,262,263,264,265,266,267,268,269,270,271,74,272],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[93,95,274,164,197,199,275,225,42,226,276,244,51,55,56,58,61,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[277],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[79,80,81,82,279,83,280,84,85,85,86,86,281,87,282,283,88,284,285,286,287,89,90,288,289,290,291,91,292,92,293,294,93,295,94,95,274,296,297,298,299,300,301,302,303,304,96,305,306,307,308,309,310,97,98,12,99,311,100,101,102,103,13,28,312,104,105,106,107,25,108,11,109,110,111,112,113,313,114,115,116,117,118,119,314,120,121,315,316,122,123,124,125,126,127,128,129,130,131,132,133,134,317,0,135,136,1,2,3,14,277,4,318,319,320,137,138,139,321,15,140,18,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,322,16,158,323,324,159,17,160,161,325,326,162,327,29,163,164,328,165,329,166,30,167,330,331,168,169,31,32,33,34,332,333,334,335,336,170,337,338,339,340,341,342,5,171,172,6,173,174,175,176,177,343,344,345,346,178,347,348,179,349,350,351,352,353,354,355,356,357,180,358,359,360,361,362,181,363,364,365,366,367,368,369,182,183,184,185,186,187,188,189,35,370,371,372,373,374,190,375,191,7,192,193,194,195,196,376,377,378,379,380,381,382,383,384,385,197,386,198,199,275,387,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,36,37,38,39,40,41,220,221,222,223,388,224,389,225,42,226,227,43,390,228,276,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,229,407,408,409,410,411,230,412,413,414,415,231,232,416,233,417,418,419,234,235,236,237,238,44,420,421,422,423,424,425,426,427,428,429,430,431,432,433,239,434,435,436,240,437,438,439,440,441,442,443,444,445,27,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,8,241,242,243,45,244,461,462,245,46,463,464,246,465,466,467,468,469,470,471,472,473,474,475,476,247,248,249,250,251,252,477,253,254,255,256,257,258,259,260,478,479,480,481,482,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,10,67,261,68,69,70,71,72,73,262,263,264,265,266,267,268,269,270,483,271,74,484,272,485],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[12,99,101,103,13,312,111,115,118,314,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[79,81,82,83,88,249],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[85,86,93,97,98,100,101,102,103,106,25,108,109,110,115,116,117,126,35,192,193,194,195,196,197,227,247,248,249,250,251,254,255,258,259,260],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageTest.argumentsOrdered":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":401,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":329,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":282,"org.easymock.tests2.DelegateToTest.testReturnException":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.tests.MockClassControlTest.testToString":456,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":365,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":47,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":254,"org.easymock.tests2.UsageTest.wrongArguments":328,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":372,"org.easymock.samples.ExampleTest.answerVsDelegate":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":429,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":418,"org.easymock.tests2.UsageConstraintsTest.testNull":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":1,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":8,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":66,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":194,"org.easymock.tests.UsageTest.argumentsOrdered":464,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":341,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.DependencyTest.testClassMocking":286,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":299,"org.easymock.tests2.CaptureTest.testAnd":118,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":222,"org.easymock.tests2.DelegateToTest.testDelegate":187,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":62,"org.easymock.tests.LimitationsTest.mockFinalMethod":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":482,"org.easymock.tests2.DependencyTest.testClassMockingSupport":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":390,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":297,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":67,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":428,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.samples.PartialClassMockTest.testGetArea":87,"org.easymock.tests.MockingTest.testInterfaceMocking":416,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":235,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":425,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":159,"org.easymock.tests2.MockBuilderTest.testCreateMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":56,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":75,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":370,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":211,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":124,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":468,"org.easymock.tests.MockClassControlTest.testEquals":460,"org.easymock.tests2.EasyMockSupportClassTest.testAll":178,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":480,"org.easymock.tests2.CaptureTest.testCaptureAll":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":298,"org.easymock.tests.MockNameTest.defaultName":477,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":195,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":476,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":481,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":72,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":338,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":139,"org.easymock.samples.ExampleTest.voteForRemoval":81,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":253,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":148,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":182,"org.easymock.tests2.CaptureTest.testCaptureFirst":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":207,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":162,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":475,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":441,"org.easymock.tests.UsageExpectAndReturnTest.longType":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":478,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":442,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":71,"org.easymock.tests.MockingTest.testNiceClassMocking":419,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":171,"org.easymock.tests.MockingTest.testClassMocking":414,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":436,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":33,"org.easymock.tests2.UsageConstraintsTest.testFind":100,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":44,"org.easymock.tests.MockTypeTest.fromEasyMockClass":427,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":92,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":383,"org.easymock.tests.UsageExpectAndReturnTest.object":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":154,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":21,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":423,"org.easymock.tests.UsageTest.exactCallCountByLastCall":246,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":271,"org.easymock.tests.MockClassControlTest.testHashCode":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":355,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":296,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":317,"org.easymock.tests.UsageVarargTest.varargCharAccepted":469,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":157,"org.easymock.tests.DefaultClassInstantiatorTest.object":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":267,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":332,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":458,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":241,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":181,"org.easymock.tests2.UsageTest.resumeIfFailure":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":343,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":229,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":76,"org.easymock.samples.SupportTest.voteForRemovals":88,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":130,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests.UsageExpectAndThrowTest.object":57,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":260,"org.easymock.samples.ConstructorCalledMockTest.testTax":85,"org.easymock.tests.UsageStrictMockTest.range":198,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":290,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":160,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":463,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":371,"org.easymock.tests2.CaptureTest.testCaptureNone":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":236,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":226,"org.easymock.tests.UsageVarargTest.varargByteAccepted":474,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":358,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":439,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":424,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":257,"org.easymock.tests2.UsageConstraintsTest.any":104,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests.UsageExpectAndThrowTest.longType":50,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":176,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.LimitationsTest.mockNativeMethod":239,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests2.NameTest.nameForMocksControl":369,"org.easymock.tests2.MockedExceptionTest.testMockedException":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":348,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":0,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":161,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":3,"org.easymock.tests2.CaptureTest.testCaptureLast":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":228,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":175,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":55,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":330,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":116,"org.easymock.samples.ExampleTest.removeNonExistingDocument":280,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":334,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":378,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":327,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":454,"org.easymock.tests.UsageExpectAndThrowTest.floatType":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":349,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":402,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":138,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.UsageConstraintsTest.testNotNull":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":73,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":215,"org.easymock.tests.UsageVarargTest.differentLength":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":301,"org.easymock.tests2.CallbackTest.callback":188,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":256,"org.easymock.tests.UsageCallCountTest.tooFewCalls":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":373,"org.easymock.tests.UsageThrowableTest.throwCheckedException":70,"org.easymock.tests.MockingTest.testStrictClassMocking":413,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":305,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":173,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ObjectMethodsTest.testHashCode":422,"org.easymock.tests2.CompareToTest.testGreateOrEqual":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":23,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests2.NameTest.nameForNiceMock":368,"org.easymock.tests2.DependencyTest.testInterfaceMocking":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":22,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":359,"org.easymock.tests2.DelegateToTest.testStubDelegate":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests.UsageVarargTest.varargLongAccepted":473,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.floatType":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":140,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":86,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":98,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":288,"org.easymock.tests2.SerializationTest.test":177,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":315,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":377,"org.easymock.tests2.UsageConstraintsTest.testSame":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":201,"org.easymock.samples.SupportTest.addDocument":283,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":350,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":339,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":417,"org.easymock.tests2.NameTest.nameForMock":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":212,"org.easymock.tests2.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":61,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":223,"org.easymock.tests2.MockedExceptionTest.testRealException":34,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":404,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":255,"org.easymock.tests2.NameTest.nameForStrictMock":367,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":324,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":289,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":111,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":379,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":158,"org.easymock.tests2.UsageStrictMockTest.range":94,"org.easymock.tests2.UsageConstraintsTest.lessThan":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":354,"org.easymock.tests2.UsageConstraintsTest.testOr":103,"org.easymock.tests.UsageRangeTest.combination":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":462,"org.easymock.tests2.MockBuilderTest.testWithConstructor":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":351,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":213,"org.easymock.tests.UsageVarargTest.varargShortAccepted":472,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":440,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":394,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":30,"org.easymock.tests2.CaptureTest.testCaptureFromStub":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":323,"org.easymock.tests.UsageTest.unexpectedCallWithArray":461,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":214,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":386,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.samples.ExampleTest.addAndChangeDocument":84,"org.easymock.tests.UsageStrictMockTest.testVerify":387,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":281,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":479,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":152}}]
