[{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[43],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,41,41,42,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.Range:83","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,45,93,94,95,49,96,97,57,60,98,99,100,101,102,103,104,105,106,64,65,107,66,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[68,127,128,129,130,77],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:124","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[94,100,103,104,107,109,131,114,132,117,120,121,133,125,126],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[134,78,79,80,81,135,136,137,138,139,140,141,142,143,144,82,83,145,84,85,86,87,88,146,147,44,148,89,90,149,150,151,91,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,92,169,170,171,172,173,174,175,176,177,178,179,180,181,182,45,93,94,95,183,184,185,46,47,186,187,43,48,49,50,51,188,189,190,96,191,52,192,53,54,97,55,56,193,194,195,196,197,57,58,59,198,199,200,201,202,203,204,205,60,206,207,98,208,99,100,209,210,101,102,211,103,104,212,105,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,106,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,61,62,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,63,64,282,283,65,284,285,286,287,288,289,107,66,108,109,110,290,291,292,293,111,294,295,296,297,298,67,68,69,70,71,299,300,301,302,303,304,305,306,307,308,112,309,310,311,312,313,314,315,316,317,72,318,319,320,321,127,322,323,324,325,326,128,327,328,329,330,331,332,129,130,333,334,335,336,337,338,339,340,341,342,343,344,345,113,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,114,73,74,75,76,77,115,116,132,117,118,119,120,121,122,379,380,381,382,383,384,133,385,386,123,387,388,389,390,391,392,393,394,395,396,397,124,125,126,398,399,400,401,402,403,404,405,406,407,408,409],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[410,411,412,413,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[165,166,167,168,60,98,102,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,282,283,285,286,287,292,111,294,295,296,297,298,305,306,307,308,112,309,315,316,317,318,115,119,382,123,125],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[415,144,83,145,84,85,86,87,146,416,147,44,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[31,37,417,418,419,420,421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[165,11,422,423,424,425],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[200,201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[192],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[55,426],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[427],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[1,142,428],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[49,190,193,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[138,45,94,95,206,207,231,240,246,247,248,263,264,265,266,63,66,109,110,69,307,323,328,329,330,371,377],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[187,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[134,78,79,80,81,153,154,155,156,157,158,159,160,161,162,163,164,169,170,171,172,173,174,175,176,177,178,179,180,12,16,22,429,430,431,423,432,216,219,221,311,312,400,401],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[78,79,80,81,135,137,138,139,140,141,142,143,144,82,83,145,84,85,86,87,88,146,147,44,148,89,90,149,150,151,91,152,153,154,155,157,158,159,160,161,164,165,166,167,168,92,169,170,171,173,174,175,176,177,180,181,182,45,93,94,95,183,184,185,46,47,186,187,48,49,50,51,188,189,190,96,191,52,192,53,54,97,55,56,193,194,195,196,197,57,58,59,433,198,199,200,201,202,203,432,204,205,60,206,207,98,208,99,100,209,210,101,102,211,103,104,212,105,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,106,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,61,62,263,264,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,63,64,282,283,65,284,285,286,287,288,289,107,66,108,109,110,290,291,292,293,111,294,295,296,297,298,434,67,68,69,70,71,299,300,301,302,303,304,305,306,307,308,112,309,310,311,312,313,314,315,316,317,72,318,319,320,321,127,322,323,324,325,326,128,327,328,329,330,331,332,129,130,333,334,335,336,337,339,340,341,342,343,344,345,113,346,347,348,349,350,351,352,353,354,371,377,114,73,74,75,76,77,435,115,116,132,117,118,119,120,121,122,379,380,381,382,383,384,133,385,386,123,387,388,389,390,391,392,393,394,395,396,124,125,126,398,399,400,401,402,403,404,405,406,407,408,409],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[1,428,165,166,167,8,11,21,27,30,436,433,429,437,438,439,422,440,441,430,442,431,443,423,199,432,444,32,445,446,33,424,447,448,449,410,425,411,412,450,451,452,453,454,434,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,435,474,475,414,41,41,42,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.LastControl:95","failures":[144,83,147,186,187,49,51,188,190,193,57],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[31,37,417,418,419,420,421],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[1,428,165,166,167,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,476,436,433,429,437,438,439,422,440,477,441,430,442,478,431,443,423,432,444,32,445,446,33,424,479,447,448,449,410,425,411,412,38,450,451,413,452,480,453,454,481,482,483,484,485,486,434,455,456,457,458,459,460,461,487,462,463,464,488,465,466,467,468,469,470,471,472,473,489,490,435,491,397,474,475,414,41,41,42,42],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[78,79,80,81,135,136,137,138,139,140,141,1,142,428,143,144,82,83,145,84,85,86,87,88,146,147,44,148,89,90,149,150,151,91,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,92,169,170,171,172,173,174,175,176,177,178,179,180,181,182,45,93,94,95,183,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,476,436,184,185,46,47,186,187,43,48,49,50,51,188,189,190,96,191,52,192,53,54,97,55,56,193,194,195,196,197,57,58,59,433,429,198,437,438,439,422,440,477,441,430,442,478,431,443,423,199,200,201,202,203,432,444,32,445,204,446,33,205,60,206,207,424,447,448,449,410,425,411,412,38,450,451,452,98,208,99,100,209,210,101,102,211,103,104,212,105,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,106,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,453,255,256,257,258,259,260,261,262,61,62,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,454,481,482,483,484,485,486,63,64,282,283,65,284,285,286,287,288,289,107,66,108,109,110,290,291,292,293,111,294,295,296,297,298,434,455,456,457,458,459,460,461,487,462,463,464,488,67,68,69,70,71,299,300,301,465,466,467,468,469,302,470,303,304,471,305,306,307,308,112,309,472,310,311,473,312,313,314,315,316,317,72,318,319,320,321,127,322,323,324,325,326,128,327,328,329,330,331,332,129,130,333,334,335,336,337,338,339,340,341,342,343,344,345,113,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,114,73,74,75,76,77,489,490,435,491,115,116,132,117,118,119,120,121,122,379,380,381,382,383,384,133,385,386,123,387,388,389,390,391,392,393,394,395,396,397,124,125,126,398,399,474,475,400,414,401,41,41,42,42,402,403,404,405,406,407,408,409],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[92,181,93,94,95,186,97,429,442,431,447,450,451,452,98,100,209,210,103,104,212,105,214,218,219,222,263,492,493,288,107,108,109,110,494,131,341,352,353,354,114,115,132,117,120,121,122,125,126],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[91,152],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[135,137,90,151,152,92,379,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[94,100,103,104,107,109,494,131,114,132,117,120,121,133,125,126],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[134,78,79,80,81,135,136,137,138,139,140,141,1,142,428,143,144,82,83,145,84,85,86,87,88,146,147,44,148,89,90,149,150,151,91,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,92,169,170,171,172,173,174,175,176,177,178,179,180,181,182,45,93,94,95,183,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,495,476,496,497,498,436,184,185,46,47,186,187,43,48,49,50,51,188,189,190,96,191,52,192,53,54,97,55,56,193,194,195,196,197,57,58,59,433,429,198,437,438,439,422,499,440,477,441,430,442,478,431,443,423,199,200,201,202,203,432,444,32,445,500,204,446,33,34,205,60,501,502,206,207,424,35,447,448,36,449,410,425,411,37,412,503,38,450,451,40,452,98,208,99,100,209,210,101,102,211,103,104,212,105,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,106,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,453,255,256,257,258,259,260,261,262,61,62,263,264,265,266,493,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,504,454,481,482,483,484,485,505,486,63,64,282,283,65,284,285,286,287,288,289,107,66,108,109,110,290,291,292,293,111,294,295,296,297,298,434,455,456,457,458,459,460,461,487,462,463,464,488,67,68,69,70,71,299,300,301,465,466,467,468,469,302,470,303,304,471,305,306,307,308,112,309,472,506,507,310,311,473,312,313,314,315,316,317,72,318,319,320,321,127,322,323,324,325,326,128,327,328,329,330,331,332,129,130,333,334,335,336,337,338,339,340,341,342,343,344,345,113,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,114,73,74,75,76,77,489,490,435,491,115,116,132,117,118,119,120,121,122,379,380,381,382,383,384,133,385,386,123,387,388,389,390,391,392,393,394,395,396,397,124,125,126,398,399,474,475,400,414,401,41,42,402,403,404,405,406,407,408,409],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[189,53,59,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":187,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.UsageTest.argumentsOrdered":104,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":365,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":210,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":400,"org.easymock.tests2.DelegateToTest.testReturnException":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":306,"org.easymock.tests.MockingTest.testPartialClassMocking":468,"org.easymock.tests.MockClassControlTest.testToString":456,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":134,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":235,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":417,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":403,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":473,"org.easymock.tests2.UsageConstraintsTest.testNull":49,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":437,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":461,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageTest.moreThanOneArgument":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":69,"org.easymock.tests.UsageTest.argumentsOrdered":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":179,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":77,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests.ReplayStateInvalidUsageTest.times":278,"org.easymock.tests2.DependencyTest.testClassMocking":501,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":141,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":507,"org.easymock.tests2.CaptureTest.testAnd":144,"org.easymock.tests2.UsageTest.strictResetToDefault":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests.LimitationsTest.mockFinalMethod":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":391,"org.easymock.tests2.DependencyTest.testClassMockingSupport":502,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":139,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":272,"org.easymock.tests.UsageThrowableTest.throwError":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":311,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":71,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":29,"org.easymock.samples.PartialClassMockTest.testGetArea":414,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":273,"org.easymock.tests.MockingTest.testInterfaceMocking":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":256,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":16,"org.easymock.tests2.UsageTest.niceToStrict":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":410,"org.easymock.tests2.MockBuilderTest.testCreateMock":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":244,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":506,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":382,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":328,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":192,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":146,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":338,"org.easymock.tests.MockClassControlTest.testEquals":460,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":140,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests.MockNameTest.defaultName":314,"org.easymock.tests2.UsageConstraintsTest.testMatches":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":270,"org.easymock.samples.ExampleTest.voteForRemovals":407,"org.easymock.tests.UsageVarargTest.allKinds":113,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":124,"org.easymock.samples.BasicClassMockTest.testPrintContent":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":390,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":297,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":309,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":505,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":431,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":486,"org.easymock.samples.ExampleTest.voteForRemoval":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":312,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":422,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":453,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":89,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":325,"org.easymock.tests2.CaptureTest.testCapture2_2446744":148,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":488,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":353,"org.easymock.tests.UsageExpectAndReturnTest.longType":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":387,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":413,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":196,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":286,"org.easymock.tests.UsageCallCountTest.tooManyCalls":354,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":296,"org.easymock.tests.MockingTest.testNiceClassMocking":471,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":444,"org.easymock.tests.MockingTest.testClassMocking":466,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":479,"org.easymock.tests2.UsageConstraintsTest.testContains":52,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":167,"org.easymock.tests2.UsageConstraintsTest.testFind":48,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":123,"org.easymock.tests.MockTypeTest.fromEasyMockClass":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":137,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":418,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":395,"org.easymock.tests.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":267,"org.easymock.tests2.ConstraintsToStringTest.findToString":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":129,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":381,"org.easymock.tests.MockClassControlTest.testHashCode":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":170,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":18,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":379,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":138,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":143,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":504,"org.easymock.tests2.CaptureTest.testCaptureMultiple":415,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastCall":101,"org.easymock.tests.DefaultClassInstantiatorTest.object":454,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":315,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":393,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":156,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":169,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":458,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":442,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":285,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":27,"org.easymock.tests2.UsageTest.resumeIfFailure":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":308,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.tests2.SerializationTest.testAllMockedMethod":428,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":371,"org.easymock.samples.SupportTest.voteForRemovals":399,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":247,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":377,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":149,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.DelegateToTest.testWrongClass":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":62,"org.easymock.tests.UsageStrictMockTest.range":109,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":184,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":5,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":257,"org.easymock.tests.UsageUnorderedTest.message":114,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":492,"org.easymock.tests.UsageVerifyTest.twoReturns":126,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":22,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":351,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":396,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":287,"org.easymock.tests.UsageExpectAndThrowTest.longType":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":484,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":276,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":93,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":435,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":464,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":155,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.NameTest.nameForMocksControl":81,"org.easymock.tests2.MockedExceptionTest.testMockedException":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":10,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":470,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":239,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":433,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":412,"org.easymock.tests.MockingTest.testNicePartialClassMocking":469,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":153,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":300,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":195,"org.easymock.tests.MockingTest.testTwoMocks":467,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":243,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.samples.ExampleTest.removeNonExistingDocument":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":160,"org.easymock.tests.UsageStrictMockTest.differentMethods":110,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":171,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":482,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.MockBuilderTest.testCreateMockString":452,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":12,"org.easymock.tests.UsageExpectAndThrowTest.floatType":237,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":495,"org.easymock.tests.UsageVerifyTest.twoThrows":125,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":478,"org.easymock.tests.LimitationsTest.privateConstructor":490,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":3,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":298,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":154,"org.easymock.tests.UsageVarargTest.differentLength":341,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests2.UsageConstraintsTest.equals":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":477,"org.easymock.tests.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":46,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":282,"org.easymock.tests.UsageCallCountTest.tooFewCalls":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":445,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests.UsageThrowableTest.throwCheckedException":295,"org.easymock.tests.MockingTest.testStrictClassMocking":465,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":446,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":152,"org.easymock.tests2.CompareToTest.testGreateOrEqual":508,"org.easymock.tests.ObjectMethodsTest.testHashCode":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":420,"org.easymock.tests2.NameTest.nameForNiceMock":80,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":419,"org.easymock.samples.ExampleTest.addDocument":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":23,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.AnswerTest.stubAnswer":91,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":66,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":503,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":364,"org.easymock.tests.UsageExpectAndReturnTest.floatType":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":333,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":178,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests.UsageThrowableTest.noUpperLimit":293,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":47,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":476,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":481,"org.easymock.tests2.UsageConstraintsTest.testSame":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":320,"org.easymock.samples.SupportTest.addDocument":398,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":500,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":13,"org.easymock.tests.GenericTest.testPackageScope":462,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":177,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":303,"org.easymock.tests2.NameTest.nameForMock":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":40,"org.easymock.tests2.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":249,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":281,"org.easymock.tests2.NameTest.nameForStrictMock":79,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":449,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":436,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":483,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":193,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":447,"org.easymock.tests2.UsageStrictMockTest.range":94,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":363,"org.easymock.tests2.CaptureTest.testCaptureRightOne":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":17,"org.easymock.tests2.UsageConstraintsTest.testOr":51,"org.easymock.tests.UsageRangeTest.combination":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":429,"org.easymock.tests.UsageTest.wrongArguments":117,"org.easymock.tests2.MockBuilderTest.testWithConstructor":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":14,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":356,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":485,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":352,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":358,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":271,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":448,"org.easymock.tests.UsageTest.unexpectedCallWithArray":132,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":350,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":331,"org.easymock.tests2.CaptureTest.testCapture":416,"org.easymock.tests2.UsageConstraintsTest.constraints":186,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.samples.ExampleTest.addAndChangeDocument":409,"org.easymock.tests.UsageStrictMockTest.testVerify":291,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":401,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests2.CompareToTest.testGreateThan":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":75,"org.easymock.tests.LimitationsTest.abstractClass":489,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":324,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":336}}]
