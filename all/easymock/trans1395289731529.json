[{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"this.org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[14,14,15,15,50,51,52,53,54,55,56,57,58,59,60,16,61,62,63,17,64,65,18,19,20,21,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,0,94,13,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,1,127,128,129,130,131,2,3,132,133,134,135,4,136,137,138,139,140,141,142,143,144,145,146,147,148,23,24,26,149,27,28,29,31,150,32,151,152,153,154,155,156,34,35,36,157,158,159,160,161,162,163,164,165,166,42,167,168,169,170,171,172,173,5,174,175,176,177,178,179,180,181,182,183,184,185,43,44,45,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,46,212,47,213,214,215,216,217,218,219,220,221,222,223,224,225,226,48,227,228,229,230,231,6,232,233,234,7,8,235,236,9,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,10,260,11,261,262,263,264,265,266,267,268,269,270,271,272,273,274,49,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,12,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[17,64,65,322],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,84,1,128,130,4,137,141,142,145,323,324,325,326,327,328,32,34,36,5,175,176,329,330,331,206,207,332,6,232,9,10,260,11,333,334,278,335,294,12,299,300],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[336,337],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[338,339,340,341,342,343,344,345,346,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[14,15,348,349,350,351,352],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[71,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[66,67,353,91],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[337,354,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:314","failures":[265,266,292,293],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[356,128,129,133,134,166,167,5,175,176,357,206,207,358,359,232,233,234,235,236,10,260,11,360,361,294,297,12,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[226,362,363,364,365,366,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[14,14,15,15,57,58,16,17,65,368,369,370,371,372,18,373,374,19,375,376,377,378,379,380,381,382,383,20,384,385,386,387,388,21,389,390,23,391,24,25,392,26,149,27,28,393,394,29,395,31,150,32,152,153,154,33,155,352,396,156,34,35,36,397,398,157,158,159,160,162,163,399,39,42,347,168,169,170,400,401,402,403,404,405,406,407,408,409,43,44,45,410,411,412,413,414,415,416,417,418,419,420,46,212,47,421,48,422,423,424,425,49,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[110,427,112,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[401,402,403,405,406],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[14,14,15,15,50,51,52,53,54,55,56,57,58,59,60,16,61,62,63,17,64,65,18,19,20,21,66,67,68,69,70,71,72,73,74,75,76,77,428,78,79,80,81,82,83,84,85,86,87,88,89,353,90,91,92,93,0,94,13,95,96,97,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,1,127,128,129,130,131,2,3,132,133,134,135,4,136,137,138,139,140,141,142,143,144,145,146,147,148,24,26,27,28,29,150,32,151,152,153,154,155,34,35,36,157,158,159,160,161,162,163,164,165,166,429,430,431,432,42,167,168,169,170,171,172,173,5,174,175,176,177,178,179,184,185,43,44,45,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,46,212,47,213,214,215,216,217,218,332,219,220,221,222,223,224,225,226,48,227,228,229,230,231,6,232,234,7,8,235,236,9,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,10,260,11,261,262,263,264,265,266,267,268,269,270,271,272,273,274,49,275,276,277,278,279,280,281,282,283,363,433,434,435,364,365,436,437,438,439,440,441,442,443,366,444,284,445,446,367,447,448,285,449,291,292,293,294,295,296,297,12,298,299,300,301,450,302,303,304,305,306,307,309,310,313,314,315,316,317,451,318,319,320,321,452,453],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[207,454],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[1,3,179,230,6,8,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,259,260,267,269,270,271,272,273,274,277,306],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[84,131,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[50,52,53,55,16,62,17,64,18,19,20,21,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,0,96,102,103,105,106,109,110,111,112,114,115,116,117,118,119,120,123,1,127,128,130,2,3,132,135,4,136,137,138,139,140,141,142,143,144,145,146,147,24,26,27,28,29,150,32,151,152,153,154,155,34,35,36,157,158,159,160,161,162,163,164,165,166,42,167,170,5,175,176,179,184,43,44,45,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,46,47,213,224,225,227,228,231,6,232,7,8,9,257,258,259,10,11,262,263,267,269,270,271,272,273,274,49,278,279,280,281,282,283,439,441,447,448,449,12,299,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[455,326,456],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[213,261,262,263],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[337],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[14,14,15,15,57,58,16,17,65,368,457,458,369,370,371,372,18,373,374,19,375,376,377,378,379,380,381,382,383,20,384,385,386,387,388,21,389,390,23,24,25,392,26,149,27,28,393,394,29,31,150,32,152,153,154,33,155,352,396,156,34,35,36,397,398,157,158,159,160,162,163,459,460,42,347,168,169,170,400,401,402,403,404,405,406,407,408,409,43,44,45,410,412,413,414,415,416,417,418,419,420,46,212,47,421,48,422,423,424,425,49,426],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[461,462,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[291,292,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[324,464,465,329,233,297],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[338,340,341,342,344,345,347],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[466,336,348,467,338,349,351,159,163,468,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[404,469,470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":440,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":131,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":60,"org.easymock.tests2.DelegateToTest.testReturnException":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":303,"org.easymock.tests.MockingTest.testPartialClassMocking":43,"org.easymock.tests.MockClassControlTest.testToString":414,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":237,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":182,"org.easymock.samples.ExampleTest.answerVsDelegate":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":423,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":37,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":231,"org.easymock.tests.UsageTest.moreThanOneArgument":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.UsageTest.argumentsOrdered":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":308,"org.easymock.tests.UsageVarargTest.varargIntAccepted":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":444,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":458,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":283,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.DependencyTest.testClassMocking":459,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":101,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.DelegateToTest.testDelegate":126,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":252,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":290,"org.easymock.tests2.DependencyTest.testClassMockingSupport":460,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":206,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":99,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":280,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":262,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":411,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":379,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":26,"org.easymock.tests2.MockBuilderTest.testCreateMock":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":246,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":324,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":180,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":469,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests.MockClassControlTest.testEquals":418,"org.easymock.tests2.EasyMockSupportClassTest.testAll":18,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":212,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":456,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":38,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":288,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":350,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":362,"org.easymock.samples.ExampleTest.voteForRemovals":55,"org.easymock.tests.UsageVarargTest.allKinds":223,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.samples.BasicClassMockTest.testPrintContent":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":289,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":406,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":397,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":117,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":33,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":138,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":302,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":121,"org.easymock.tests2.CaptureTest.testCaptureFirst":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":139,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":4,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":222,"org.easymock.tests.GenericTest.testBridgedEquals":421,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":452,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":286,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":395,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":255,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":226,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":453,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests.MockingTest.testNiceClassMocking":410,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testClassMocking":408,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":391,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":170,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.MockTypeTest.fromEasyMockClass":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":144,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.MockClassControlTest.testHashCode":417,"org.easymock.tests2.EasyMockSupportTest.testVerify":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":381,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":455,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":98,"org.easymock.tests.UsageVarargTest.varargCharAccepted":217,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":2,"org.easymock.tests.DefaultClassInstantiatorTest.object":400,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":291,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":358,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":382,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":264,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":21,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":326,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":305,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":338,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":65,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":284,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":464,"org.easymock.samples.SupportTest.voteForRemovals":62,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":249,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":322,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":285,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":94,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DelegateToTest.testWrongClass":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":224,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":225,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":299,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":356,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":248,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":181,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":465,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":263,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":461,"org.easymock.tests.UsageUnorderedTest.message":294,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":221,"org.easymock.tests2.ThreadingTest.testThreadSafe":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":384,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":321,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":57,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":359,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":230,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests2.StubTest.stub":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndThrowTest.longType":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":404,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":40,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.NameTest.nameForMocksControl":432,"org.easymock.tests2.MockedExceptionTest.testMockedException":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":374,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":241,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests.MockingTest.testTwoMocks":409,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":245,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":92,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":463,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":300,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":462,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":402,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":118,"org.easymock.tests2.ConstraintsToStringTest.andToString":327,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":412,"org.easymock.tests.UsageExpectAndThrowTest.floatType":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":95,"org.easymock.tests.UsageVerifyTest.twoThrows":260,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":261,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":336,"org.easymock.tests2.UsageConstraintsTest.testNotNull":91,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":332,"org.easymock.tests2.CallbackTest.callback":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":352,"org.easymock.tests.UsageTest.openCallCountByLastCall":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":229,"org.easymock.tests.UsageCallCountTest.tooFewCalls":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":183,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests.MockingTest.testStrictClassMocking":407,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":329,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":344,"org.easymock.tests2.NameTest.nameForNiceMock":431,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":342,"org.easymock.samples.ExampleTest.addDocument":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":123,"org.easymock.tests2.AnswerTest.stubAnswer":96,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests.UsageVarargTest.varargLongAccepted":220,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.ConstraintsToStringTest.orToString":323,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests2.SerializationTest.test":64,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":470,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.samples.SupportTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":376,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.NameTest.nameForMock":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":351,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests2.MockedExceptionTest.testRealException":171,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":228,"org.easymock.tests2.NameTest.nameForStrictMock":430,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":403,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":24,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":93,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":399,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":343,"org.easymock.tests2.CaptureTest.testCaptureRightOne":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":380,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":32,"org.easymock.tests.UsageTest.wrongArguments":234,"org.easymock.tests2.MockBuilderTest.testWithConstructor":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":377,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":405,"org.easymock.tests.UsageVarargTest.varargShortAccepted":219,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":113,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":25,"org.easymock.tests.UsageTest.unexpectedCallWithArray":233,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":320,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests2.CaptureTest.testCapture":427,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":56,"org.easymock.tests2.ConstraintsToStringTest.notToString":325,"org.easymock.tests.UsageStrictMockTest.testVerify":450,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":59,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":287,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":281,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":142,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":215}}]
