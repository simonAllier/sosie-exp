[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,0,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,1,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,2,3,135,136,4,5,6,7,137,138,139,140,141,8,142,9,10,143,11,12,144,145,146,147,148,13,14,15,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,16,167,168,169,170,171,172,173,174,175,176,177,17,17,18,18,178,179,180,181,19,182,183,184,185,186,187,188,189,20,21,22,190,191,23,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,24,25,26,27,28,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,29,30,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,36,37,38,39,40,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,41,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[50,53,54,58,328,59,173],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[60,63,64,65,69,70,71,72,74,78,79,82,85,100,106,107,108,123,131,133,135,143,166,167,168,169,219,221,222,225,226,227,329,330,331,232,332,292,293,333,334,335,336,309,313,314,315,316,317],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[337,281,338,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.Capture:83","failures":[339],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[58,59,60,340,109,110,111,112,113,114,115,116,117,118,119,1,120,121,129,130,2,3,135,136,4,5,6,7,137,138,139,140,141,8,142,9,10,143,11,12,144,145,146,147,148,13,14,15,164,166,16,167,19,182,183,21,22,190,191,23,24,25,26,27,28,232,341,29,30,278,279,280,314,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[42,44,45,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,0,100,102,104,105,107,109,110,112,113,116,117,118,119,1,120,121,122,123,124,125,126,127,129,131,132,133,2,3,135,136,4,5,6,7,137,138,140,141,8,142,9,10,143,11,12,144,145,146,148,13,14,15,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,16,168,169,171,172,173,174,175,176,177,17,17,18,18,178,179,180,181,19,182,183,184,185,20,21,22,190,191,23,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,224,227,228,229,230,231,24,25,26,27,28,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,29,30,265,266,267,274,275,276,277,278,279,281,282,291,292,293,36,37,38,39,40,294,296,297,299,301,302,303,309,310,311,312,41,316,317,320,321,322,323,324,325,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[341,342,343,344,345,346],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[5,144,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[12],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[347,348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[44,350,351,352,86,89,353,354,355,356,94,357,358,95,359,360,361,362,363,364,365,366,367,96,368,369,370,371,372,97,373,374,375,99,100,101,376,102,103,104,105,106,107,377,108,378,379,380,122,125,126,127,128,129,381,131,132,382,134,150,151,17,17,18,18,178,383,384,192,195,343,346,385,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[44,350,86,87,88,89,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,122,123,125,126,127,128,129,130,131,132,133,134,151,17,17,18,18,178,383,384,192,195,218,234,273,281,338,282,283,284,386,285,286,287,288,289,290,319,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[64,74,78,79,82,85,387,107,130,166,168,169,309,313,316,317,388,320,321,389,390,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[392,11],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[337],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[129,393,381,130,131,132,133,382,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[337,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[42,44,45,350,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,394,85,86,87,88,89,90,91,92,93,94,95,96,97,98,0,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,1,120,121,122,123,124,125,126,127,128,129,130,131,132,133,2,3,135,136,4,5,6,7,137,138,140,141,8,142,9,10,143,11,12,144,145,146,147,148,13,14,15,149,150,151,152,153,156,157,158,160,161,162,163,164,165,166,395,16,167,168,169,170,396,171,397,172,173,174,175,398,176,177,399,17,18,178,383,384,19,182,183,184,185,186,187,188,189,21,22,190,191,23,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,231,400,401,402,329,330,331,24,25,26,27,28,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,257,258,259,260,261,262,263,264,29,30,274,275,276,277,278,279,403,404,405,406,407,332,408,409,410,411,280,281,338,291,292,293,36,37,38,39,40,294,296,297,300,304,305,306,307,308,309,311,312,412,412,313,413,314,41,315,316,317,318,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[54,55,58,59,61,62,64,66,67,71,73,74,75,78,79,82,84,85,0,102,110,112,113,116,117,118,119,121,126,132,2,3,135,136,4,5,6,7,137,138,140,8,142,9,10,143,11,12,144,145,146,148,13,14,15,157,160,161,162,16,168,169,173,178,19,184,185,21,22,23,198,199,202,204,205,206,207,209,210,211,212,214,215,216,217,219,220,223,224,24,25,26,27,28,235,236,239,241,242,243,244,246,247,248,249,251,252,253,254,257,260,261,262,263,264,29,30,278,291,292,309,310,311,312,41,316,317],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[99,103,128,134,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,394,85,86,87,88,89,90,91,92,93,94,95,96,97,414,415,416,417,98,0,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,1,120,121,122,123,124,125,126,127,128,129,130,131,132,133,2,3,135,136,4,5,6,7,137,138,139,140,141,8,142,9,10,143,11,12,144,145,146,147,148,13,14,15,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,166,395,16,167,168,169,170,396,171,397,172,173,174,175,398,176,418,177,399,17,17,18,18,178,383,384,179,180,181,19,182,183,184,185,186,187,188,189,20,21,22,190,191,23,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,419,420,231,400,401,402,329,330,331,24,25,26,27,28,232,341,421,422,423,424,425,426,427,428,429,430,431,432,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,29,30,265,266,267,269,270,271,274,275,276,277,278,279,403,404,405,406,407,332,408,409,410,411,280,281,338,282,284,386,285,286,287,288,289,290,291,292,293,36,37,38,39,40,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,413,314,41,315,316,317,318,433,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[347,434,435],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:326","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[50,60,66,67,72,16,219,223,224,227,291,293,41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[44,93,353,436,437,438,439,440,441],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:60","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests2.UsageTest.argumentsOrdered":70,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":154,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":65,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":397,"org.easymock.tests2.DelegateToTest.testReturnException":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":320,"org.easymock.tests.MockClassControlTest.testToString":285,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":235,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":438,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests2.UsageTest.wrongArguments":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":188,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":195,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":390,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":378,"org.easymock.tests2.CaptureTest.testPrimitive":112,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":38,"org.easymock.tests.UsageTest.argumentsOrdered":226,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":323,"org.easymock.tests.UsageVarargTest.varargIntAccepted":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":28,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":434,"org.easymock.tests.ReplayStateInvalidUsageTest.times":429,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests2.AnswerTest.answer":50,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":49,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":311,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":47,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":423,"org.easymock.tests.UsageThrowableTest.throwError":257,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":194,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":374,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":424,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":180,"org.easymock.tests2.UsageTest.niceToStrict":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":236,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.MockBuilderTest.testCreateMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":244,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":372,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":9,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":297,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":142,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests2.EasyMockSupportClassTest.testAll":94,"org.easymock.tests.MockClassControlTest.testEquals":289,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":349,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":379,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests.MockNameTest.defaultName":233,"org.easymock.tests2.UsageConstraintsTest.testMatches":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":39,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests.UsageVarargTest.allKinds":280,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":291,"org.easymock.samples.BasicClassMockTest.testPrintContent":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":263,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":441,"org.easymock.tests2.UsageConstraintsTest.greaterThan":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":133,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":346,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":382,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":60,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":218,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":75,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":155,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":76,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":164,"org.easymock.tests2.CaptureTest.testCapture2_2446744":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":107,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":411,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":330,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":147,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":435,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":262,"org.easymock.tests.MockingTest.testNiceClassMocking":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testClassMocking":388,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":420,"org.easymock.tests2.UsageConstraintsTest.testContains":8,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":185,"org.easymock.tests.MockTypeTest.fromEasyMockClass":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":439,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":407,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":271,"org.easymock.tests.UsageTest.exactCallCountByLastCall":227,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":296,"org.easymock.tests.MockClassControlTest.testHashCode":288,"org.easymock.tests2.EasyMockSupportTest.testVerify":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":365,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":347,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":46,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":340,"org.easymock.tests.UsageVarargTest.varargCharAccepted":406,"org.easymock.tests2.CaptureTest.testCaptureMultiple":339,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":395,"org.easymock.tests2.UsageTest.openCallCountByLastCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":84,"org.easymock.tests.DefaultClassInstantiatorTest.object":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":269,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":260,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":131,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":241,"org.easymock.tests.CapturesMatcherTest.test":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":286,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":348,"org.easymock.tests2.UsageTest.resumeIfFailure":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":436,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":265,"org.easymock.samples.SupportTest.voteForRemovals":171,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":247,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":266,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":51,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":145,"org.easymock.tests2.DelegateToTest.testWrongClass":158,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":30,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.UsageStrictMockTest.range":316,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":181,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.UsageUnorderedTest.message":232,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":333,"org.easymock.tests.UsageVerifyTest.twoReturns":293,"org.easymock.tests.UsageVarargTest.varargByteAccepted":410,"org.easymock.tests2.ThreadingTest.testThreadSafe":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":368,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":402,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":272,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":191,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":428,"org.easymock.tests2.StubTest.stub":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":427,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":282,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests2.NameTest.nameForMocksControl":417,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":358,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":322,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":328,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":127,"org.easymock.tests2.CaptureTest.testCaptureLast":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":146,"org.easymock.tests.MockingTest.testTwoMocks":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":243,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":14,"org.easymock.samples.ExampleTest.removeNonExistingDocument":418,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":317,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":163,"org.easymock.tests2.MockBuilderTest.testCreateMockString":108,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":284,"org.easymock.tests.UsageExpectAndThrowTest.floatType":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":53,"org.easymock.tests.UsageVerifyTest.twoThrows":292,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":132,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":264,"org.easymock.tests2.UsageTest.defaultResetToNice":68,"org.easymock.samples.ExampleTest.voteAgainstRemovals":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests.UsageVarargTest.differentLength":332,"org.easymock.tests2.CallbackTest.callback":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":190,"org.easymock.tests.UsageCallCountTest.tooFewCalls":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":189,"org.easymock.tests.UsageThrowableTest.throwCheckedException":261,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":55,"org.easymock.tests.ObjectMethodsTest.testHashCode":270,"org.easymock.tests2.NameTest.nameForNiceMock":416,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":165,"org.easymock.tests2.DependencyTest.testInterfaceMocking":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":440,"org.easymock.samples.ExampleTest.addDocument":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":369,"org.easymock.tests2.DelegateToTest.testStubDelegate":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.stubAnswer":54,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":41,"org.easymock.tests.UsageVarargTest.varargLongAccepted":409,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":258,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":351,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":114,"org.easymock.tests2.SerializationTest.test":45,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":342,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":396,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":387,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":360,"org.easymock.tests.GenericTest.testPackageScope":281,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":32,"org.easymock.tests2.NameTest.nameForMock":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":381,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":249,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":312,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests2.NameTest.nameForStrictMock":415,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":376,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":352,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":144,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":168,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":375,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":74,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":364,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.UsageTest.wrongArguments":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.UsageVarargTest.varargShortAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":345,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":329,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":52,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.CaptureTest.testCaptureFromStub":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":101,"org.easymock.tests.UsageTest.unexpectedCallWithArray":221,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.samples.ExampleTest.addAndChangeDocument":177,"org.easymock.tests.UsageStrictMockTest.testVerify":433,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":399,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":413,"org.easymock.tests2.CompareToTest.testGreateThan":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":26,"org.easymock.tests.LimitationsTest.abstractClass":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":27,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":79}}]
