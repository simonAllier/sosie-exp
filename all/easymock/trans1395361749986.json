[{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,3,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod","finalizeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[236,237,309],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[310,311,48,154,312,313],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[314,315,316,317,318,319,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"i","java.lang.Integer.MAX_VALUE":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[215,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[322,323,283,324,325,284,285,286,287,321,288,289,290,291,292,294,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:158","sourceCode":"return ((java.lang.Class<?>.getSimpleName()) + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[34,326,47,48,49,52,53,96,97,98,112,113,154,155,157,158,257,258,264,265,300,302,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[4,327,328,329,5,5,6,6,330,331,7,8,9,10,11,332,12,333,13,19,20,21,22,23,24,334,26,27,28,29,30,31,32,335,336,33,337,338,339,340,341,342,34,343,344,1,345,346,347,348,349,350,351,352,353,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,60,61,62,63,64,65,66,67,354,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,355,356,357,358,359,360,361,362,363,364,99,365,366,100,101,102,367,368,369,103,104,105,106,107,108,109,110,111,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,370,150,151,152,371,153,372,154,155,156,157,158,159,373,163,374,375,167,168,169,170,171,172,173,174,175,176,177,178,376,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,377,211,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,309,239,240,241,243,244,245,246,378,247,248,250,379,251,252,380,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,272,273,274,275,276,277,278,279,280,281,282,381,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,382,383,384,385,299,386,300,301,302,303,304,305,306,307,308],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[310,311,48,154,312,313],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[96,157,158,302,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:593","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[55,194],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[388,389,390],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[193],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[34,47,49,52,53,97,98,154,155,158,257,258,264,265,382,383,384,385,300,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[391,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,5,6,6,36,37,38,39,40,55,91,92,93,94,95,107,108,111,140,141,142,155,393,394,395,396,397,183,184,187,188,189,190,196,198,199,201,202,208,209,210,231,297,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[195,283,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[4,327,328,5,5,6,6,24,334,25,26,35,399,68,69,70,366,114,117,181,236,309,247,391,248,249,250,379,251,252,380,253,392,254,268,400,401,402,277,278,280,281,282,381,283,284,285,286,287,289,290,291,292,294,295,305,306,307,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[403,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":329,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":28,"org.easymock.tests.MockingTest.testPartialClassMocking":68,"org.easymock.tests.MockClassControlTest.testToString":100,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":120,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":306,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":316,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.tests2.UsageTest.wrongArguments":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":152,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":117,"org.easymock.tests2.UsageConstraintsTest.testNull":188,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":280,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":176,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":369,"org.easymock.tests2.CaptureTest.testPrimitive":223,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":139,"org.easymock.tests.UsageTest.moreThanOneArgument":47,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":14,"org.easymock.tests.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":320,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":95,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests.ReplayStateInvalidUsageTest.times":350,"org.easymock.tests2.AnswerTest.answer":269,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":378,"org.easymock.tests2.CaptureTest.testAnd":220,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":105,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":18,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":112,"org.easymock.tests2.CaptureTest.testCapture1_2446744":224,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":245,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":1,"org.easymock.tests.UsageThrowableTest.throwError":60,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":116,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":40,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":121,"org.easymock.tests2.UsageTest.niceToStrict":259,"org.easymock.tests2.ThreadingTest.testChangeDefault":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":250,"org.easymock.tests2.MockBuilderTest.testCreateMock":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":129,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":312,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":150,"org.easymock.tests.UsageOverloadedMethodTest.overloading":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":198,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":82,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":389,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":197,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":229,"org.easymock.tests2.EasyMockSupportClassTest.testAll":305,"org.easymock.tests.MockClassControlTest.testEquals":368,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":137,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":21,"org.easymock.tests2.CaptureTest.testCaptureAll":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":246,"org.easymock.tests.MockNameTest.defaultName":45,"org.easymock.tests2.UsageConstraintsTest.testMatches":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":99,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":328,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":66,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":32,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":242,"org.easymock.tests2.UsageConstraintsTest.greaterThan":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":287,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":381,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":35,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":27,"org.easymock.tests2.CaptureTest.testCaptureFirst":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":78,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":216,"org.easymock.tests2.CaptureTest.testCapture2_2446744":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":253,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":19,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":138,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":140,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":36,"org.easymock.tests.UsageCallCountTest.tooManyCalls":342,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":290,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":391,"org.easymock.tests2.UsageConstraintsTest.testContains":196,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":336,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":181,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":43,"org.easymock.tests.MockTypeTest.fromEasyMockClass":115,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":276,"org.easymock.tests.UsageExpectAndReturnTest.object":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":317,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":375,"org.easymock.tests.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":315,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":87,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":144,"org.easymock.tests.MockClassControlTest.testHashCode":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":16,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":244,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":386,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests.DefaultClassInstantiatorTest.object":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":57,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":63,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":147,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":308,"org.easymock.tests2.UsageTest.resumeIfFailure":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":30,"org.easymock.tests2.StubTest.stubWithReturnValue":297,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":314,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":309,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":166,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":132,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":3,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":270,"org.easymock.tests.UsageExpectAndThrowTest.object":130,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":204,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":142,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":251,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":310,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.CaptureTest.testCaptureNone":228,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":98,"org.easymock.tests.UsageVarargTest.varargByteAccepted":363,"org.easymock.tests2.ThreadingTest.testThreadSafe":213,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":339,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":164,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests2.UsageConstraintsTest.any":194,"org.easymock.tests2.StubTest.stub":296,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":149,"org.easymock.tests.UsageExpectAndThrowTest.longType":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":29,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests2.SerializationTest.testClass":236,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":90,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests2.NameTest.nameForMocksControl":385,"org.easymock.tests2.MockedExceptionTest.testMockedException":180,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":124,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":70,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":277,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":252,"org.easymock.tests.MockingTest.testNicePartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":282,"org.easymock.tests2.CompareToTest.testCompareEqual":398,"org.easymock.tests2.CaptureTest.testCaptureLast":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":113,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":295,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":205,"org.easymock.tests.MockingTest.testTwoMocks":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":128,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":209,"org.easymock.samples.ExampleTest.removeNonExistingDocument":333,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":346,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":215,"org.easymock.tests2.MockBuilderTest.testCreateMockString":254,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":365,"org.easymock.tests.UsageExpectAndThrowTest.floatType":122,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":200,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":272,"org.easymock.tests.UsageVerifyTest.twoThrows":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":307,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":286,"org.easymock.tests2.UsageConstraintsTest.testNotNull":208,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":67,"org.easymock.tests2.UsageTest.defaultResetToNice":263,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":86,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":50,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.UsageCallCountTest.tooFewCalls":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":371,"org.easymock.tests.UsageThrowableTest.throwCheckedException":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":291,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":293,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":274,"org.easymock.tests.ObjectMethodsTest.testHashCode":374,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":319,"org.easymock.tests2.NameTest.nameForNiceMock":384,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":318,"org.easymock.samples.ExampleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.AnswerTest.stubAnswer":273,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests.UsageVarargTest.varargLongAccepted":362,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":268,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.UsageThrowableTest.noUpperLimit":61,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":202,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":225,"org.easymock.tests2.SerializationTest.test":237,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":390,"org.easymock.tests2.UsageConstraintsTest.testSame":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":72,"org.easymock.samples.SupportTest.addDocument":331,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":347,"org.easymock.tests.GenericTest.testPackageScope":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.NameTest.nameForMock":382,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests2.UsageStrictMockTest.differentMethods":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":106,"org.easymock.tests2.MockedExceptionTest.testRealException":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":353,"org.easymock.tests2.NameTest.nameForStrictMock":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":281,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":248,"org.easymock.tests2.UsageStrictMockTest.range":302,"org.easymock.tests2.UsageConstraintsTest.lessThan":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":0,"org.easymock.tests2.CaptureTest.testCaptureRightOne":230,"org.easymock.tests2.UsageConstraintsTest.testOr":190,"org.easymock.tests.UsageRangeTest.combination":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":278,"org.easymock.tests.UsageTest.wrongArguments":49,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":84,"org.easymock.tests.UsageVarargTest.varargShortAccepted":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":340,"org.easymock.tests2.UsageConstraintsTest.cmpTo":195,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":271,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":231,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":249,"org.easymock.tests.UsageTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":85,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageStrictMockTest.testVerify":373,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":330,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":372,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":20,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":226,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":173,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
