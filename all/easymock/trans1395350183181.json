[{"position":"org.easymock.internal.MockBuilder:80","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[0,19,20,21,22,23,24,1,3,4,5,6,7,8,9,10,13,25,26,27,28,29,30,31,32,33,34,35,36,37,14,38,39,40,41,42,15,43,43,44,44,45,46,47,48,49,50,18,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[55,56,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[58,59,25,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[105,21,106,107,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[7,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[109,110],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[111,112,113],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[114,115,116,117,118,119,120,121,29,32,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[123,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[126],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[127,128,61,129,62,130,131,132,133,95,134,96,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[127,136,137,138,139,140,128,141,142,143,144,0,145,19,146,147,148,149,105,150,21,22,23,24,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,55,174,175,176,177,178,179,180,181,182,183,1,3,5,6,7,8,9,10,13,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,58,59,25,60,212,213,214,215,216,217,218,219,61,220,221,222,223,56,129,62,224,225,226,227,130,26,27,28,29,30,228,31,32,229,63,33,34,230,35,36,37,14,38,39,40,41,42,231,232,15,233,43,43,44,44,234,235,236,237,238,239,240,241,242,243,244,45,46,245,246,247,248,249,64,65,66,67,68,69,250,251,70,252,253,254,131,255,256,257,258,259,260,261,262,263,47,264,265,266,267,268,269,270,271,272,273,106,274,275,276,277,278,279,48,280,281,282,71,283,284,285,286,72,73,287,132,74,133,288,289,290,291,292,293,294,295,296,297,49,50,298,299,300,301,302,303,304,305,306,307,308,309,111,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,332,333,334,134,96,335,336,135,337,338,339,97,340,98,99,100,101,102,103,341,104,52,53,54,342,343,344,345,346,347,348,349,350,112,351,352,353,354,113,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[127,137,128,142,143,0,145,146,147,148,149,105,150,21,22,23,24,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,55,174,175,176,177,178,180,181,182,183,5,7,8,184,185,187,188,191,192,193,194,196,197,198,199,200,201,202,203,204,205,207,208,209,210,213,61,220,221,223,129,62,227,130,26,27,28,29,30,228,31,32,63,33,34,230,35,36,37,38,41,231,232,15,235,237,239,240,242,245,246,247,248,249,250,251,70,131,256,257,264,266,267,48,285,286,287,132,133,49,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,95,332,134,96,135,338,339,97,98,99,100,101,102,103,341,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[127,136,137,138,139,140,128,141,142,143,144,0,145,19,146,147,148,149,105,150,21,22,23,24,151,357,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,55,174,175,176,177,178,179,180,181,182,183,1,3,5,6,7,8,9,10,13,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,58,59,25,60,212,213,214,215,216,217,218,219,61,220,221,222,223,56,129,62,224,225,226,227,130,26,27,28,29,30,228,31,32,229,63,33,34,230,35,36,37,14,38,39,40,41,42,231,232,15,233,43,44,234,235,236,237,238,239,240,241,242,244,45,46,245,246,247,248,249,64,65,66,67,68,69,250,251,70,252,253,254,131,255,256,257,258,260,261,262,263,47,264,266,267,48,280,282,71,284,285,286,72,73,287,132,74,133,288,289,290,291,292,293,294,295,296,297,49,50,298,299,300,301,302,303,304,305,306,307,308,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,332,333,334,134,96,335,336,135,338,339,97,340,98,99,100,101,102,103,341,104,52,53,54,344,345,346,347,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[0,19,21,22,23,24,1,3,4,358,5,6,7,8,9,10,13,58,59,25,359,26,27,28,29,30,31,32,33,34,35,36,37,14,38,360,39,40,41,42,361,362,15,43,43,44,44,45,46,47,268,48,16,17,49,50,18,363,364,51,52,53,54,365,112,351,352,353,354,113,355,356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[160,167,172,183],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[235,237,239,240,242,247,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[235,237,239,240,242,247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[6,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":161,"org.easymock.tests2.UsageTest.argumentsOrdered":226,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":67,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":56,"org.easymock.tests2.StubTest.stubWithReturnValue":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":320,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":180,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests2.DelegateToTest.testReturnException":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":65,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.samples.SupportTest.voteForRemovals":235,"org.easymock.tests.MockClassControlTest.testToString":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":75,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests.UsageExpectAndThrowTest.object":85,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":108,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.DelegateToTest.testWrongClass":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":285,"org.easymock.tests2.UsageTest.wrongArguments":222,"org.easymock.tests.UsageStrictMockTest.range":256,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":262,"org.easymock.samples.ExampleTest.answerVsDelegate":238,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":206,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests2.UsageConstraintsTest.testNull":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":35,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests2.CaptureTest.testPrimitive":187,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":287,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":335,"org.easymock.tests.UsageTest.moreThanOneArgument":332,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":290,"org.easymock.tests2.CaptureTest.testCaptureNone":192,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":123,"org.easymock.tests.UsageUnorderedTest.message":331,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests.UsageVarargTest.varargByteAccepted":306,"org.easymock.tests2.ThreadingTest.testThreadSafe":147,"org.easymock.tests.UsageTest.argumentsOrdered":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":300,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":347,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":6,"org.easymock.tests2.UsageConstraintsTest.any":168,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":275,"org.easymock.tests2.StubTest.stub":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests.UsageExpectAndThrowTest.longType":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":274,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.ReplayStateInvalidUsageTest.times":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":330,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":219,"org.easymock.tests2.CaptureTest.testAnd":184,"org.easymock.tests2.UsageTest.strictResetToDefault":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":117,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":157,"org.easymock.tests2.MockedExceptionTest.testMockedException":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":203,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.DelegateToTest.testDelegate":215,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":79,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":8,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":90,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":37,"org.easymock.tests2.CaptureTest.testCaptureLast":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":188,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":83,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":182,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":125,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":271,"org.easymock.tests.UsageThrowableTest.throwError":97,"org.easymock.samples.ExampleTest.removeNonExistingDocument":243,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":273,"org.easymock.tests.UsageStrictMockTest.differentMethods":257,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":124,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":13,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests.UsageExpectAndThrowTest.floatType":77,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":23,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.samples.ExampleTest.voteAgainstRemoval":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests2.UsageTest.niceToStrict":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":76,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":115,"org.easymock.tests2.UsageConstraintsTest.testNotNull":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":103,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":5,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.tests2.MockBuilderTest.testCreateMock":9,"org.easymock.samples.ExampleTest.voteAgainstRemovals":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":326,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests.UsageTest.openCallCountByLastCall":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":84,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":345,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":322,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":171,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":263,"org.easymock.tests.UsageThrowableTest.throwCheckedException":100,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests2.EasyMockSupportClassTest.testAll":21,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.MockingTest.testStrictClassMocking":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":92,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":218,"org.easymock.tests2.CaptureTest.testCaptureAll":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":277,"org.easymock.tests2.UsageConstraintsTest.testMatches":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":291,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":111,"org.easymock.samples.ExampleTest.voteForRemovals":242,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":150,"org.easymock.tests2.NameTest.nameForNiceMock":156,"org.easymock.tests.UsageVarargTest.allKinds":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.samples.BasicClassMockTest.testPrintContent":46,"org.easymock.samples.ExampleTest.addDocument":241,"org.easymock.tests2.DelegateToTest.testStubDelegate":213,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":102,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests2.AnswerTest.stubAnswer":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":69,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":131,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests.UsageVarargTest.varargLongAccepted":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.samples.ExampleTest.voteForRemoval":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":329,"org.easymock.tests.UsageExpectAndReturnTest.floatType":313,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":340,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":47,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":159,"org.easymock.tests2.SerializationTest.test":145,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":312,"org.easymock.tests2.UsageConstraintsTest.testSame":164,"org.easymock.samples.SupportTest.addDocument":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":64,"org.easymock.tests2.CaptureTest.testCaptureFirst":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":318,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests2.UsageTest.moreThanOneArgument":221,"org.easymock.tests2.CaptureTest.testCapture2_2446744":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":307,"org.easymock.tests.GenericTest.testBridgedEquals":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests2.NameTest.nameForMock":154,"org.easymock.tests.UsageExpectAndReturnTest.longType":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":93,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":12,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":120,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":315,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":344,"org.easymock.tests2.MockedExceptionTest.testRealException":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":80,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":101,"org.easymock.tests.MockingTest.testNiceClassMocking":365,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.NameTest.nameForStrictMock":155,"org.easymock.tests2.UsageConstraintsTest.testContains":170,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":25,"org.easymock.tests2.UsageConstraintsTest.testFind":162,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":70,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":152,"org.easymock.tests.UsageExpectAndReturnTest.object":321,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":359,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":3,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests2.UsageConstraintsTest.lessThan":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":207,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":302,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":310,"org.easymock.tests.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":341,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":200,"org.easymock.tests2.CaptureTest.testCaptureRightOne":194,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":107,"org.easymock.tests2.UsageConstraintsTest.testOr":165,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":327,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.UsageTest.wrongArguments":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor":116,"org.easymock.tests.MockClassControlTest.testHashCode":113,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":324,"org.easymock.tests.UsageVarargTest.varargShortAccepted":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":280,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":216,"org.easymock.tests2.UsageConstraintsTest.cmpTo":169,"org.easymock.tests.UsageVarargTest.varargCharAccepted":301,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests2.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests.DefaultClassInstantiatorTest.object":268,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests2.CaptureTest.testCaptureFromStub":195,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":270,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":4,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":82,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":346,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":325,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":354,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests2.UsageConstraintsTest.constraints":160,"org.easymock.samples.ExampleTest.addAndChangeDocument":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":328,"org.easymock.tests.UsageStrictMockTest.testVerify":259,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":236,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":353,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.UsageTest.resumeIfFailure":227,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":317,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":16,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":205}}]
