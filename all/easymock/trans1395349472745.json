[{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,10,11,12,13,14,15,16,17,19,247,248,249,250,251,252,253,254,20,21,255,256,257,22,23,258,7,259,260,261,262,263,264,265,266,267,268,269,270,9,271,272,273,274,275,276,277,278,279,280,281,282,283,284,24,25,26,27,285,286,287,288,289,290,28,29,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[84,85,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[293,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[297,32,33,298,34,299,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,61,62,63,64,65,300,66,67,68,69,70,71,301,73,77,78,302,79,80,81,82,83,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,303,110,111,112,113,114,304,115,116,123,124,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,170,171,172,173,174,175,176,305,177,178,306,307,179,308,182,309,310,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,311,312,313,314,201,202,203,204,205,315,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,316,238,239,240,241,242,243,244,245,246,10,11,12,13,14,15,16,17,19,247,248,249,250,251,252,253,254,20,21,255,256,257,22,23,258,7,259,260,263,264,265,268,270,9,271,317,272,273,274,275,276,277,278,280,281,282,284,24,25,26,27,285,286,287,288,289,290,28,291,292],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[318,319],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[38,55,56,57,58,59,60,119,120,121,200,266,267,268,269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[320,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[321,322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[320,73,77,88,94,100,104,106,124,128,134,140,144,146,285,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[11,15,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,30,339,320,340,341,342,31,343,297,344,32,33,298,34,345,299,35,346,347,348,349,350,351,352,353,354,355,36,37,38,39,40,41,42,43,44,45,46,47,356,48,49,357,50,358,359,360,361,51,52,362,53,363,364,365,366,367,54,368,55,56,57,58,59,60,61,62,63,369,64,65,300,66,67,68,69,70,370,71,301,72,371,73,372,373,374,375,376,74,75,76,77,78,377,302,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,378,107,379,380,381,382,383,384,385,386,108,109,303,110,111,112,113,114,304,115,116,387,388,389,390,391,392,117,118,393,119,120,121,394,395,396,397,398,399,400,401,402,403,404,405,406,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,407,408,409,410,411,412,413,414,165,166,167,168,169,170,171,172,173,174,175,176,305,177,415,178,306,307,179,180,180,181,181,308,182,309,310,416,183,417,418,184,419,185,186,1,420,187,421,188,189,190,191,192,422,423,424,425,426,427,428,193,429,430,194,431,432,433,434,435,436,437,438,439,195,440,441,442,443,444,196,445,446,197,447,198,199,200,448,311,312,313,314,321,322,201,202,203,204,205,315,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,449,295,221,450,451,452,222,223,224,453,454,225,226,227,228,229,230,231,232,233,234,235,236,237,316,238,239,240,241,242,243,244,455,456,457,458,245,246,10,11,459,12,13,14,15,16,17,18,19,247,248,249,250,251,252,253,254,20,21,255,256,257,22,23,258,7,8,460,461,462,293,463,259,464,465,466,467,468,469,260,261,262,263,264,265,266,267,268,269,470,471,472,294,473,270,474,475,476,477,478,479,9,271,317,272,273,274,275,276,277,278,279,280,281,282,283,284,24,25,26,27,285,286,287,288,289,290,28,29,291,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.UsageTest.argumentsOrdered":212,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":333,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":207,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":308,"org.easymock.tests2.DelegateToTest.testReturnException":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":56,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":409,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":87,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":194,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":315,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":354,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":218,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":235,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests.UsageTest.moreThanOneArgument":78,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":122,"org.easymock.tests.UsageTest.argumentsOrdered":82,"org.easymock.tests.UsageVarargTest.varargIntAccepted":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":478,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":155,"org.easymock.tests.ReplayStateInvalidUsageTest.times":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests2.DependencyTest.testClassMocking":321,"org.easymock.tests2.AnswerTest.answer":260,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":425,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":230,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":126,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests.LimitationsTest.mockFinalMethod":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":376,"org.easymock.tests2.DependencyTest.testClassMockingSupport":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":117,"org.easymock.tests2.CaptureTest.testCapture1_2446744":285,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":423,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":397,"org.easymock.tests.UsageThrowableTest.throwError":39,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":348,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":446,"org.easymock.samples.PartialClassMockTest.testGetArea":182,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.MockingTest.testInterfaceMocking":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":435,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":352,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":249,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":290,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":369,"org.easymock.tests.MockClassControlTest.testEquals":413,"org.easymock.tests2.EasyMockSupportClassTest.testAll":193,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":424,"org.easymock.tests2.CaptureTest.testCaptureAll":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":374,"org.easymock.tests.MockNameTest.defaultName":394,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":168,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":70,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":375,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":224,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":453,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":449,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":36,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":228,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":279,"org.easymock.tests2.CaptureTest.testCaptureFirst":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":229,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":191,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":69,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":299,"org.easymock.tests.UsageExpectAndReturnTest.longType":130,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":372,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":120,"org.easymock.tests.UsageCallCountTest.tooManyCalls":35,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":273,"org.easymock.tests.MockingTest.testNiceClassMocking":365,"org.easymock.tests.MockingTest.testClassMocking":360,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":268,"org.easymock.tests2.UsageConstraintsTest.testFind":12,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":198,"org.easymock.tests.UsageExpectAndReturnTest.object":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":65,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":390,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":123,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":143,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":61,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.MockClassControlTest.testHashCode":412,"org.easymock.tests2.EasyMockSupportTest.testVerify":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":437,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":47,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":422,"org.easymock.tests.UsageVarargTest.varargCharAccepted":64,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":237,"org.easymock.tests.DefaultClassInstantiatorTest.object":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":84,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":411,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":119,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":196,"org.easymock.tests2.UsageTest.resumeIfFailure":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":58,"org.easymock.tests2.StubTest.stubWithReturnValue":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":30,"org.easymock.samples.SupportTest.voteForRemovals":179,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":370,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":31,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":261,"org.easymock.tests.UsageExpectAndThrowTest.object":97,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":379,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":21,"org.easymock.tests2.DelegateToTest.testWrongClass":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":115,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":116,"org.easymock.samples.ConstructorCalledMockTest.testTax":180,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":457,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":426,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":353,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":76,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":68,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":440,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":34,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageConstraintsTest.any":19,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":402,"org.easymock.tests2.StubTest.stub":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":57,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":342,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":384,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":241,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":146,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":72,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests2.MockedExceptionTest.testMockedException":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":430,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":447,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":186,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":220,"org.easymock.tests2.CompareToTest.testNotComparable":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.CaptureTest.testCaptureLast":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":278,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":255,"org.easymock.tests.MockingTest.testTwoMocks":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":23,"org.easymock.samples.ExampleTest.removeNonExistingDocument":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":319,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":382,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.MockBuilderTest.testCreateMockString":421,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":431,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":195,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":223,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":266,"org.easymock.tests2.UsageTest.defaultResetToNice":210,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.UsageVarargTest.differentLength":300,"org.easymock.tests2.CallbackTest.callback":225,"org.easymock.tests2.UsageConstraintsTest.equals":459,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":450,"org.easymock.tests.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":162,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":355,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.MockingTest.testStrictClassMocking":359,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":38,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":274,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":276,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":265,"org.easymock.tests.ObjectMethodsTest.testHashCode":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":192,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.DelegateToTest.testStubDelegate":281,"org.easymock.tests2.AnswerTest.stubAnswer":264,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests.UsageVarargTest.varargLongAccepted":67,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":145,"org.easymock.tests.UsageExpectAndReturnTest.floatType":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":455,"org.easymock.tests2.SerializationTest.test":271,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":128,"org.easymock.tests2.UsageConstraintsTest.testSame":14,"org.easymock.samples.SupportTest.addDocument":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":432,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":476,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":363,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":139,"org.easymock.tests2.UsageStrictMockTest.differentMethods":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":150,"org.easymock.tests2.MockedExceptionTest.testRealException":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":418,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":456,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.UsageStrictMockTest.range":242,"org.easymock.tests2.UsageConstraintsTest.lessThan":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":5,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":436,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":318,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":216,"org.easymock.tests.UsageTest.wrongArguments":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":433,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":385,"org.easymock.tests.UsageVarargTest.varargShortAccepted":66,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":345,"org.easymock.tests2.UsageConstraintsTest.cmpTo":247,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":326,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":396,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":417,"org.easymock.tests.UsageTest.unexpectedCallWithArray":377,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":141,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":111,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests.UsageStrictMockTest.testVerify":304,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":306,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":373,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":133,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":154,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":232}}]
