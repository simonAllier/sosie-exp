[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,0,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[206,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[208,209,210,211,212,213,214,215,216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,217,218,219,8,9,10,11,12,13,14,15,16,220,221,222,17,223,18,224,225,19,20,21,22,23,24,226,227,228,25,229,230,231,232,26,27,28,29,233,30,234,235,31,236,237,32,33,34,35,36,238,239,240,37,38,39,40,241,41,42,43,44,45,46,242,243,47,48,49,244,245,50,51,52,53,54,55,56,57,58,246,59,247,60,248,249,250,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,251,77,78,79,80,81,252,82,83,84,253,85,86,87,254,255,88,89,90,256,91,92,93,94,257,95,96,97,98,99,100,101,102,0,103,104,105,106,107,108,109,258,110,259,260,261,262,111,112,113,114,115,116,263,264,265,266,267,268,118,119,269,120,270,271,121,272,273,123,124,274,125,275,276,277,278,126,279,280,281,282,127,283,284,285,286,287,288,289,290,291,292,293,294,295,296,128,129,297,298,131,132,133,299,299,134,135,300,139,301,302,141,142,143,144,145,303,304,166,167,305,306,168,169,170,171,172,173,174,175,307,176,177,178,179,180,308,309,310,311,312,181,313,314,315,182,316,317,318,183,184,185,186,187,319,320,188,189,321,190,322,323,324,325,191,326,327,328,329,192,330,331,332,333,334,193,194,195,196,197,198,199,200,201,202,203,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[223,224,225,253,336,337,338,339,340,341,269,270,271,296,128,129,342,130,343,344,345,304,334,346,347,204,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[218,219,9,56,349,246,59,350,60,351,352,76,353,251,354,355,356,77,78,79,357,80,358,359,81,252,360,82,92,0,106,107,108,361,362,363,364],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[261,365,366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[218,219,9,56,349,246,59,350,60,351,352,76,353,251,354,355,356,77,78,79,357,80,358,359,81,252,360,82,92,0,106,107,108,361,362,363,364],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[224,270,128,129,367],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[1,2,3,4,5,6,217,8,10,11,12,13,14,15,16,220,221,17,223,18,224,225,19,24,226,227,228,25,229,230,231,232,26,27,28,29,233,30,234,235,31,236,237,32,33,34,35,36,238,239,240,37,38,39,40,241,41,42,43,44,45,46,242,243,47,48,49,244,245,50,51,52,53,54,55,57,248,249,250,61,62,63,64,65,66,67,68,69,71,72,73,74,75,83,84,253,86,87,254,255,89,256,91,92,93,94,257,95,96,99,100,103,104,105,109,258,110,259,260,261,262,115,116,368,263,264,265,266,267,118,269,120,270,271,121,272,273,123,124,274,125,275,276,277,278,126,279,280,281,282,127,283,284,285,286,287,288,289,290,291,292,293,294,295,296,128,129,297,298,134,135,300,369,138,139,301,302,141,142,144,145,164,165,303,304,305,306,168,170,171,172,173,174,175,176,177,178,179,180,308,309,310,311,312,181,313,314,315,182,316,317,318,319,320,188,189,321,190,322,323,324,325,191,326,327,328,329,192,330,331,332,333,334,193,194,195,196,197,198,199,200,370,371,201,202,203],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[337,372,119,373,343,166],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,10,24,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":303,"org.easymock.tests2.UsageTest.argumentsOrdered":90,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":87,"org.easymock.tests2.StubTest.stubWithReturnValue":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":278,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":36,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests2.DelegateToTest.testReturnException":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":372,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests.MockClassControlTest.testToString":160,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":327,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":319,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":106,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":16,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DelegateToTest.testWrongClass":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":318,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageTest.wrongArguments":85,"org.easymock.tests.UsageStrictMockTest.range":270,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":113,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests2.UsageConstraintsTest.testNull":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":333,"org.easymock.tests.UsageTest.moreThanOneArgument":304,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":156,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":112,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.UsageUnorderedTest.message":334,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":178,"org.easymock.tests2.ThreadingTest.testThreadSafe":248,"org.easymock.tests.UsageTest.argumentsOrdered":169,"org.easymock.tests.UsageVarargTest.varargIntAccepted":173,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":142,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":365,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":78,"org.easymock.tests2.UsageConstraintsTest.any":28,"org.easymock.tests2.StubTest.stub":261,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":212,"org.easymock.tests.UsageExpectAndThrowTest.longType":189,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":139,"org.easymock.tests.ReplayStateInvalidUsageTest.times":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":286,"org.easymock.tests2.AnswerTest.answer":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":23,"org.easymock.tests2.CaptureTest.testAnd":37,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":58,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":19,"org.easymock.tests2.MockedExceptionTest.testMockedException":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":67,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":306,"org.easymock.tests2.DelegateToTest.testDelegate":259,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":321,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":55,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":130,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":187,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":239,"org.easymock.tests.UsageThrowableTest.throwError":193,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":148,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":271,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":150,"org.easymock.tests2.ConstraintsToStringTest.andToString":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":250,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":188,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":352,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":107,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":309,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":320,"org.easymock.tests2.UsageTest.niceToStrict":86,"org.easymock.tests2.UsageConstraintsTest.testNotNull":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":200,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":92,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.UsageTest.defaultResetToNice":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":81,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":127,"org.easymock.tests.UsageVarargTest.differentLength":307,"org.easymock.tests2.CallbackTest.callback":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":305,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":325,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":111,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":234,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":134,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":30,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":114,"org.easymock.tests.UsageThrowableTest.throwCheckedException":197,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":116,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":22,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":298,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.testMatches":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":146,"org.easymock.tests.ObjectMethodsTest.testHashCode":137,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":62,"org.easymock.tests.UsageVarargTest.allKinds":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":186,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testStubDelegate":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":199,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests2.AnswerTest.stubAnswer":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests2.UsageConstraintsTest.greaterThan":236,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":247,"org.easymock.tests.UsageVarargTest.varargLongAccepted":177,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":209,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":285,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":56,"org.easymock.tests2.ConstraintsToStringTest.orToString":336,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":237,"org.easymock.tests.UsageThrowableTest.noUpperLimit":194,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":227,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":181,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":41,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":65,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.tests2.UsageConstraintsTest.testSame":231,"org.easymock.samples.SupportTest.addDocument":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.CaptureTest.testCaptureFirst":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":66,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":276,"org.easymock.tests.GenericTest.testPackageScope":115,"org.easymock.tests2.UsageTest.moreThanOneArgument":253,"org.easymock.tests2.CaptureTest.testCapture2_2446744":243,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":252,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":179,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":144,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":330,"org.easymock.tests2.UsageStrictMockTest.differentMethods":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":274,"org.easymock.tests.UsageCallCountTest.tooManyCalls":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":329,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":301,"org.easymock.tests2.MockedExceptionTest.testRealException":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":277,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":344,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":198,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.testContains":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":94,"org.easymock.tests2.UsageConstraintsTest.testFind":229,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":300,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":221,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":251,"org.easymock.tests2.UsageStrictMockTest.range":224,"org.easymock.tests2.UsageConstraintsTest.lessThan":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":71,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":175,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":138,"org.easymock.tests.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":297,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":64,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":370,"org.easymock.tests2.UsageConstraintsTest.testOr":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":351,"org.easymock.tests.UsageRangeTest.combination":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":51,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests.UsageTest.wrongArguments":167,"org.easymock.tests2.MockBuilderTest.testWithConstructor":353,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":159,"org.easymock.tests2.EasyMockSupportTest.testVerify":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests.UsageVarargTest.varargShortAccepted":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":20,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":143,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests.UsageVarargTest.varargCharAccepted":174,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":213,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests.DefaultClassInstantiatorTest.object":117,"org.easymock.tests2.CaptureTest.testCaptureFromStub":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":147,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":354,"org.easymock.tests.UsageTest.unexpectedCallWithArray":166,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":136,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":196,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":246,"org.easymock.tests2.UsageConstraintsTest.constraints":228,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests2.ConstraintsToStringTest.notToString":338,"org.easymock.tests.CapturesMatcherTest.test":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":284,"org.easymock.tests.UsageStrictMockTest.testVerify":122,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":108,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":118,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":184,"org.easymock.tests2.UsageTest.resumeIfFailure":256,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":311,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":69,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":172}}]
