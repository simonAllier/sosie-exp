[{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[42,43,44,45],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[48,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[50],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,7,9,10,12,14,16,18,20,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[51],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[1,57,69,70,71,72,67,73,74,75,76,77,78,79,80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,42,105,43,106,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:613","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:920","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[110,111,112,113,114,115],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[117,95,118,119,4,5,7,9,10,16,18,19,20,120,121,22,122],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[4,5,9,10,12,14,18,20,22],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[123,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,82,83,84,85,86,87,88,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,117,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,94,95,118,119,96,219,220,221,222,98,99,100,101,102,223,224,225,226,227,228,113,104,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,52,249,53,250,251,42,252,4,5,6,7,8,9,10,11,13,253,254,47,105,255,256,43,106,14,15,257,258,44,16,17,107,1,2,3,259,260,261,262,263,46,264,265,266,267,268,269,270,271,272,273,274,72,275,276,277,278,279,280,281,282,283,284,285,108,286,287,125,288,289,18,19,20,21,290,291,292,120,121,293,22,23,294,122,295,109,296,297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[300,301,112,155,158,159,218,226,227,113,230,263,267,268,297],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[152,154,179,183,184,186,189,302,225,226,227,104,231,232,262,109,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[50,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[304,305,306,307,308,309,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[311,312,313,314,170,315,51,173,174,316,317,318,319,320,215,216,217,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,224,304,305,305,306,306,337,338,240,241,243,244,245,339,246,340,341,342,343,247,344,345,346,347,348,349,350,351,352,307,353,354,355,356,357,358,359,360,361,308,362,363,364,365,366,367,368,369,370,248,52,371,249,53,1,3,372,373,374,375,259,376,309,310,69,377,378,379,380,381,382,72,67,275,276,277,48,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[383,384,126,127,128,129,385,130,131,132,133,134,386,387,388,135,136,137,138,139,140,141,142,389,390,391,392,143,144,145,146,147,148,149,393,150,151,152,300,82,83,84,85,86,87,88,394,395,396,397,398,153,154,112,155,156,157,158,159,160,161,162,163,164,165,399,166,167,168,169,117,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,94,95,118,119,96,322,97,400,401,402,219,403,404,405,406,407,408,409,220,410,221,222,98,99,100,101,102,223,329,330,331,332,333,334,335,336,224,225,226,227,411,228,113,104,229,230,231,232,412,304,233,234,235,236,237,238,413,239,305,305,306,306,414,415,416,417,337,338,240,241,242,243,244,245,339,246,342,343,247,344,350,307,308,367,370,248,52,371,418,249,53,250,251,42,252,4,5,6,7,8,9,10,11,13,253,254,47,105,255,256,43,106,14,15,257,258,44,16,17,107,1,2,3,372,373,259,376,309,310,377,378,379,260,261,262,263,46,264,265,266,419,267,268,269,270,271,272,273,274,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,72,275,276,277,278,279,280,281,282,283,284,285,108,286,443,287,125,288,289,18,19,20,21,290,291,292,120,121,293,22,23,294,122,444,295,109,296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[311],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[445,446,447,383,384,126,127,128,129,385,130,131,448,449,450,311,451,452,453,454,312,455,456,457,458,459,132,133,134,460,386,387,388,461,462,463,135,136,137,138,139,140,141,142,389,390,391,392,143,144,145,146,147,148,149,393,150,151,464,152,300,82,83,465,84,85,86,87,88,394,395,396,397,398,153,154,112,155,156,157,158,159,160,161,162,163,466,164,165,399,166,167,168,169,117,467,468,469,313,314,170,315,171,172,51,173,174,316,317,89,470,471,472,90,91,473,474,475,476,123,477,478,479,92,480,481,482,483,93,484,485,486,487,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,318,319,320,215,216,488,217,489,490,321,218,94,95,118,119,96,491,322,323,324,325,326,327,492,328,97,400,401,402,219,403,404,405,406,407,408,409,220,410,221,222,98,99,100,101,102,103,493,223,302,329,330,331,332,333,334,335,336,224,225,226,227,494,495,496,497,498,411,228,113,104,229,230,231,232,412,304,233,234,235,236,237,238,413,239,305,306,414,415,416,417,337,338,240,241,242,243,244,245,339,499,246,340,341,342,343,247,344,345,346,347,348,349,350,351,352,307,353,354,355,356,357,358,359,360,361,308,362,363,364,365,366,367,368,369,370,248,52,371,500,418,249,53,54,250,501,251,42,252,4,5,502,6,7,8,9,10,11,12,13,253,254,47,105,255,256,43,106,14,15,257,258,44,16,17,107,1,2,3,372,55,373,374,56,375,259,376,309,57,310,503,69,377,378,59,379,260,261,262,263,46,264,265,266,419,267,268,269,270,380,381,504,505,382,506,507,271,508,509,272,273,274,420,421,422,423,510,24,25,26,27,424,511,28,29,30,31,32,425,426,427,428,429,430,431,432,433,434,435,436,437,512,438,439,440,441,513,33,34,35,36,442,514,37,38,39,40,41,72,67,73,275,276,277,278,279,280,281,282,283,284,285,108,48,49,286,443,124,287,125,288,515,289,18,19,20,21,290,291,292,120,121,293,22,23,294,122,516,444,295,109,296,297,298,299],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[154,155,158,159,218,517,518,519,225,226,227,113,104,230,231,262,263,267,268,438,439,440,441,109,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[383,126,127,154,225,226,227,104,231,232,262,438,439,440,441,109,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[82,83,84,85,86,87,88,170,195,196,197,198,199,200,203,204,206,207,208,210,211,212,213,214,215,216,217,94,220,410,221,222,98,99,100,101,104,230,231,304,233,235,236,238,417,240,241,242,243,244,245,246,343,247,344,350,307,308,367,370,248,52,371,418,249,53,373,259,309,310,378,72,283,286,443,125,109,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[134,147,153,157,472,175,176,179,181,182,183,184,186,187,188,189,191,192,193,194,119,226,260,266,108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[305,306,340,55,59],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.UsageTest.argumentsOrdered":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":123,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":264,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":414,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":144,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.tests.MockClassControlTest.testToString":331,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":512,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":307,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":517,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":75,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests2.UsageTest.wrongArguments":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":391,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":312,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":490,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":243,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":434,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":336,"org.easymock.tests2.CaptureTest.testPrimitive":21,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":96,"org.easymock.tests.UsageTest.moreThanOneArgument":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":100,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":494,"org.easymock.tests.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageVarargTest.varargIntAccepted":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":504,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":88,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":442,"org.easymock.tests.ReplayStateInvalidUsageTest.times":406,"org.easymock.tests2.DependencyTest.testClassMocking":48,"org.easymock.tests2.AnswerTest.answer":271,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":482,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":423,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":452,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests2.UsageTest.strictResetToDefault":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":221,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":498,"org.easymock.tests2.DelegateToTest.testDelegate":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":190,"org.easymock.tests.LimitationsTest.mockFinalMethod":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests2.DependencyTest.testClassMockingSupport":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":493,"org.easymock.tests2.CaptureTest.testCapture1_2446744":290,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":421,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":401,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":454,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":465,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":369,"org.easymock.samples.PartialClassMockTest.testGetArea":304,"org.easymock.tests.MockingTest.testInterfaceMocking":488,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":402,"org.easymock.tests2.CompareToTest.testLessOrEqual":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":458,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests2.UsageTest.niceToStrict":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":89,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":259,"org.easymock.tests2.MockBuilderTest.testCreateMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":184,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":114,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":430,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":451,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":447,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":389,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":64,"org.easymock.tests.UsageOverloadedMethodTest.overloading":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":366,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":151,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":105,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":293,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests.MockClassControlTest.testEquals":335,"org.easymock.tests2.EasyMockSupportClassTest.testAll":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":174,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests.MockNameTest.defaultName":463,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":97,"org.easymock.samples.ExampleTest.voteForRemovals":238,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":444,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":515,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":28,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":344,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":328,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":505,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":339,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":224,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":427,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":143,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":428,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":270,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":262,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.CaptureTest.testCapture2_2446744":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":483,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":378,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":169,"org.easymock.tests.GenericTest.testBridgedEquals":317,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":130,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":394,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":103,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":98,"org.easymock.tests.UsageCallCountTest.tooManyCalls":131,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":248,"org.easymock.tests.MockingTest.testNiceClassMocking":321,"org.easymock.tests.MockingTest.testClassMocking":319,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":384,"org.easymock.tests2.UsageConstraintsTest.testContains":254,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":277,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests.MockTypeTest.fromEasyMockClass":453,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":433,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":76,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":388,"org.easymock.tests.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":91,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":495,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":467,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":67,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":150,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests.MockClassControlTest.testHashCode":334,"org.easymock.tests2.EasyMockSupportTest.testVerify":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":359,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":446,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":420,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":516,"org.easymock.tests.UsageVarargTest.varargCharAccepted":164,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":491,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":487,"org.easymock.tests2.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":436,"org.easymock.tests.DefaultClassInstantiatorTest.object":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":445,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":386,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":35,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":510,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":448,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":367,"org.easymock.tests2.UsageTest.resumeIfFailure":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":146,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":481,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":71,"org.easymock.samples.SupportTest.voteForRemovals":417,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":115,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":187,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":486,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":508,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":469,"org.easymock.tests.UsageExpectAndThrowTest.object":185,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":15,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":82,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":83,"org.easymock.tests.UsageStrictMockTest.range":230,"org.easymock.samples.ConstructorCalledMockTest.testTax":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":506,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":370,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":408,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":459,"org.easymock.tests2.CaptureTest.testCaptureNone":121,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.UsageVerifyTest.twoReturns":227,"org.easymock.tests.UsageVarargTest.varargByteAccepted":168,"org.easymock.tests2.ThreadingTest.testThreadSafe":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":362,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":129,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":119,"org.easymock.tests2.UsageConstraintsTest.any":13,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":405,"org.easymock.tests2.StubTest.stub":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":145,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":326,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":404,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":424,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":34,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests2.NameTest.nameForMocksControl":441,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":36,"org.easymock.tests2.MockedExceptionTest.testMockedException":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":352,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":310,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":513,"org.easymock.tests2.CaptureTest.testCaptureLast":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":223,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":257,"org.easymock.tests.MockingTest.testTwoMocks":320,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":17,"org.easymock.samples.ExampleTest.removeNonExistingDocument":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":219,"org.easymock.tests.UsageStrictMockTest.differentMethods":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":303,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":324,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":282,"org.easymock.tests2.MockBuilderTest.testCreateMockString":379,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":329,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":73,"org.easymock.tests.UsageVerifyTest.twoThrows":226,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":308,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":457,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":247,"org.easymock.tests.LimitationsTest.privateConstructor":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":61,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":275,"org.easymock.tests2.UsageTest.defaultResetToNice":419,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":210,"org.easymock.tests.UsageVarargTest.differentLength":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":33,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.UsageConstraintsTest.equals":502,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":118,"org.easymock.tests.UsageCallCountTest.tooFewCalls":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":392,"org.easymock.tests.UsageThrowableTest.throwCheckedException":139,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":111,"org.easymock.tests.MockingTest.testStrictClassMocking":318,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":514,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":418,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":274,"org.easymock.tests.ObjectMethodsTest.testHashCode":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":79,"org.easymock.tests2.NameTest.nameForNiceMock":440,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":284,"org.easymock.tests2.DependencyTest.testInterfaceMocking":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":77,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":363,"org.easymock.tests2.DelegateToTest.testStubDelegate":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.stubAnswer":273,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":104,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":503,"org.easymock.tests.UsageVarargTest.varargLongAccepted":167,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":306,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests.UsageThrowableTest.noUpperLimit":136,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":30,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":323,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.samples.SupportTest.addDocument":416,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":500,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":354,"org.easymock.tests.GenericTest.testPackageScope":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":90,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":29,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":489,"org.easymock.tests2.NameTest.nameForMock":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":59,"org.easymock.tests2.UsageStrictMockTest.differentMethods":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":189,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":222,"org.easymock.tests2.MockedExceptionTest.testRealException":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":456,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":109,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests2.NameTest.nameForStrictMock":439,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":382,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":518,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":373,"org.easymock.tests2.UsageStrictMockTest.range":297,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":78,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":358,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":50,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":241,"org.easymock.tests.UsageTest.wrongArguments":155,"org.easymock.tests2.MockBuilderTest.testWithConstructor":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":355,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.UsageVarargTest.varargShortAccepted":166,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":327,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":385,"org.easymock.tests2.UsageConstraintsTest.cmpTo":253,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.CaptureTest.testCaptureFromStub":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":400,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":374,"org.easymock.tests.UsageTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":128,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.samples.ExampleTest.addAndChangeDocument":239,"org.easymock.tests.UsageStrictMockTest.testVerify":412,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":415,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CompareToTest.testGreateThan":116,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.LimitationsTest.abstractClass":313,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":87,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":519,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":431,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":162}}]
