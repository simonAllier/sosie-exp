[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,3,43,4,44,45,46,47,48,5,49,50,51,52,6,7,53,8,54,9,10,55,56,57,58,59,60,61,62,63,64,12,65,66,67,68,13,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[209,210,211,212,213,214,215],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","type":"CtThrowImpl"},"failures":[216,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[217,218,19,219,219,220,220,25,221,71,72,73,74,222,75,223,76,224,77,78,225,79,226,81,82,83,84,85,87,88,92,111,112,114,115,116,227,117,228,118,119,120,229,230,231,232,233,234,157,235,236,237,238,239,198,240,204,205,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.RecordState:314","failures":[241,242,243,244],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[245,246],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[14,15,16,17,247,18,248,249,217,218,19,250,20,251,219,220,252,253,21,22,23,254,24,25,26,221,255,256,27,28,257,258,259,260,261,29,262,263,264,265,266,267,268,269,270,271,272,273,274,275,30,276,277,278,279,280,281,282,283,284,31,285,32,33,286,34,35,36,287,37,288,38,39,40,289,290,41,42,3,43,4,44,45,291,292,46,47,48,5,293,49,50,51,52,6,7,294,53,8,54,9,10,55,11,56,57,58,59,60,61,62,63,64,12,65,66,67,68,13,69,70,295,296,297,71,298,299,72,300,301,302,303,304,305,306,307,308,73,309,310,311,312,313,74,314,315,316,222,317,75,223,318,319,76,224,77,214,78,320,321,225,79,322,226,323,324,325,326,327,80,328,329,330,331,332,333,334,335,81,336,337,338,339,340,341,82,83,84,85,342,86,87,88,343,89,344,345,346,90,91,92,215,347,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,348,111,112,113,114,115,116,227,349,117,350,351,228,118,119,120,352,229,121,353,122,123,354,124,355,356,241,242,125,126,357,358,127,128,359,360,361,129,362,130,131,132,133,134,135,363,243,244,364,365,366,367,368,369,370,371,372,373,374,230,375,376,377,378,136,379,380,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,231,232,233,234,399,400,401,402,403,404,405,406,407,408,409,410,0,157,235,236,1,411,412,413,158,414,159,160,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,237,430,431,432,433,238,434,435,161,162,436,437,163,164,438,439,165,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,239,166,167,168,455,456,457,458,459,460,461,462,463,464,2,465,466,467,468,469,470,471,472,473,474,475,476,477,169,170,171,172,478,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,479,480,198,481,199,200,201,482,483,484,485,486,202,203,487,488,240,204,205,489,206,490,491,492,207,208,493,494,495],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[496,70],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[29,262,283,31,285,32,33,286,34,36,287,37,288,289,290,41,42,6,62,222,75,223,77,78,225,79,226,80,328,338,339,340,341,83,84,87,88,93,100,102,104,105,107,108,112,228,120,229,353,354,124,355,364,365,380,387,232,233,234,411,413,158,414,159,160,415,237,432,433,238,434,435,161,162,436,437,438,439,165,440,442,443,446,447,448,449,451,454,239,169,199,200,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:156","sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\")","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:318","failures":[129,131],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[209,210,211,497,498,214,92,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"i"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[219,219,220,220,25,320,321,92,215,350],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[209,210,211,212,213,214,215],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[14,15,16,17,18,249,19,20,219,219,220,220,253,21,22,23,254,24,25,26,27,28,29,262,275,30,276,278,279,280,281,282,283,31,285,32,33,286,34,35,36,287,37,288,38,39,40,289,290,41,42,3,43,4,44,45,291,292,46,47,48,5,293,49,50,51,52,6,7,53,8,54,9,10,55,11,56,57,58,59,60,61,62,63,64,12,65,66,67,68,13,69,70,71,72,73,74,222,75,223,76,224,77,78,225,79,226,80,328,334,335,81,336,82,83,84,85,86,87,88,89,344,345,346,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,348,111,112,113,114,115,116,227,117,228,118,119,120,229,121,353,122,123,354,124,355,356,241,242,125,126,357,358,127,128,359,360,361,129,362,130,131,132,133,134,135,363,243,244,364,365,367,368,369,370,371,372,373,374,230,375,376,377,378,136,379,380,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,392,393,394,395,396,397,398,232,233,234,399,157,236,411,413,158,414,159,160,415,429,237,432,433,238,434,435,161,162,436,437,163,164,438,439,165,442,449,451,452,454,239,166,167,168,470,476,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,482,483,484,485,486,202,203,240,204,205,206,207,208,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[499,216,349],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[404,405,406,408,410],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[14,15,16,17,247,18,248,249,217,250,20,251,219,219,252,253,21,22,23,254,24,25,26,221,27,28,29,262,275,30,276,278,279,280,281,282,283,284,31,285,32,33,286,34,35,36,287,37,288,38,39,40,289,290,41,42,3,43,4,44,45,291,292,46,47,48,5,293,49,50,51,52,6,7,53,8,54,9,10,55,11,56,57,58,59,60,61,62,63,64,12,65,66,67,68,13,69,70,71,80,328,334,335,81,336,338,339,340,341,82,86,87,89,344,345,346,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,348,111,113,114,121,353,122,123,354,124,355,356,241,242,125,126,357,358,127,128,359,360,361,129,362,130,131,132,133,134,135,363,243,244,364,365,367,368,369,370,371,372,373,374,230,375,376,377,378,136,379,380,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,411,412,413,158,414,159,160,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,432,433,434,435,161,162,436,437,163,164,438,439,165,440,441,442,443,444,445,446,447,448,449,451,452,453,454,166,167,168,470,476,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,482,483,484,485,486,202,203,240,206,207,208,494],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[62],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[32,287,289,290,355,500,413,159,436,437,438,439,449,200,201],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[276,278,31,3,43,4,44,45,291,292,46,47,48,5,293,49,50,51,52,6,7,53,8,54,9,10,55,11,56,57,58,59,60,61,62,63,64,12,65,66,67,68,13,69,70,316,97,117,125,126,357,358,127,136,392,413,158,449,193,194,195,196,197,202,203,207,208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[14,16,17,18,19,20,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,3,43,4,44,45,46,47,48,5,49,50,51,52,6,7,53,8,54,9,10,55,56,57,58,59,60,61,62,63,64,12,65,66,67,68,13,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,135,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[14,15,16,17,247,18,249,217,218,19,250,20,251,219,220,252,21,22,23,24,25,26,221,27,28,29,275,30,276,278,279,280,281,282,283,284,31,285,32,33,286,34,35,36,287,37,288,38,39,40,289,290,41,42,3,43,4,44,45,291,292,46,47,48,5,293,49,50,51,52,6,7,53,8,54,9,10,55,56,57,58,59,60,61,62,63,64,12,65,66,67,68,13,69,70,71,72,73,74,222,75,76,224,77,78,225,79,226,80,334,335,81,336,82,83,84,85,86,87,88,89,346,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,348,111,112,113,114,115,116,227,117,228,118,119,120,121,122,123,355,125,126,357,358,127,128,359,360,361,129,362,130,131,132,133,134,135,370,371,372,373,374,230,375,376,377,378,136,379,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,381,382,383,385,386,387,388,389,390,391,392,157,235,411,412,413,158,414,159,160,415,161,162,436,437,163,164,438,439,165,442,443,444,445,446,447,448,449,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,482,483,484,485,486,202,203,204,205,206,207,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[31,32,33,36,287,289,290,501,502,503,504,505,506,507,508,509,510,511,62,353,354,124,355,364,365,512,513,514,515,516,517,500,413,158,159,160,162,436,437,438,439,449,199,200,201],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[3,4,5,6,7,9,10,11,12],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[275,358,469],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[3,4,44,45,291,292,46,48,245,5,293,50],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[25,518,209,210,211,212,213,498,214,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests2.UsageTest.argumentsOrdered":290,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":2,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":288,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testReturnException":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":376,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests.MockClassControlTest.testToString":232,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":137,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":209,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageTest.wrongArguments":287,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":360,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":238,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests2.CaptureTest.testPrimitive":44,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":127,"org.easymock.tests.UsageTest.moreThanOneArgument":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":156,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":372,"org.easymock.tests.UsageTest.argumentsOrdered":439,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":393,"org.easymock.tests.UsageVarargTest.varargIntAccepted":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":213,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":197,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests.ReplayStateInvalidUsageTest.times":425,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests2.DependencyTest.testClassMocking":255,"org.easymock.tests2.AnswerTest.answer":89,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":282,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":431,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":371,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":397,"org.easymock.tests2.DelegateToTest.testDelegate":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":152,"org.easymock.tests.LimitationsTest.mockFinalMethod":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":486,"org.easymock.tests2.DependencyTest.testClassMockingSupport":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":364,"org.easymock.tests2.CaptureTest.testCapture1_2446744":45,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":280,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":419,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":433,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":478,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":315,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":138,"org.easymock.tests2.UsageTest.niceToStrict":37,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":304,"org.easymock.tests2.ThreadingTest.testChangeDefault":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":264,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":146,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":244,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":128,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":313,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":184,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":48,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":384,"org.easymock.tests.MockClassControlTest.testEquals":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":235,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":484,"org.easymock.tests2.CaptureTest.testCaptureAll":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":281,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":373,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":392,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":485,"org.easymock.samples.BasicClassMockTest.testPrintContent":218,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":498,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":409,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":410,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":227,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":375,"org.easymock.tests2.CaptureTest.testCaptureFirst":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":391,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":447,"org.easymock.tests.UsageExpectAndReturnTest.longType":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":482,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":155,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":429,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":370,"org.easymock.tests.UsageCallCountTest.tooManyCalls":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":513,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests.MockingTest.testNiceClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testClassMocking":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":441,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests.MockTypeTest.fromEasyMockClass":432,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageExpectAndReturnTest.object":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":210,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":453,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":517,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":122,"org.easymock.tests.MockClassControlTest.testHashCode":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":306,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":395,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":279,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":316,"org.easymock.tests.UsageVarargTest.varargCharAccepted":385,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":402,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastCall":38,"org.easymock.tests.DefaultClassInstantiatorTest.object":403,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":363,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":451,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":143,"org.easymock.tests.CapturesMatcherTest.test":246,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":356,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":233,"org.easymock.tests2.UsageTest.resumeIfFailure":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":378,"org.easymock.tests2.StubTest.stubWithReturnValue":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":68,"org.easymock.tests2.SerializationTest.testAllMockedMethod":221,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":470,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":149,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":476,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":344,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":495,"org.easymock.tests.UsageExpectAndThrowTest.object":147,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.DelegateToTest.testWrongClass":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":208,"org.easymock.tests.UsageStrictMockTest.range":159,"org.easymock.samples.ConstructorCalledMockTest.testTax":219,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":273,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":359,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests2.CaptureTest.testCaptureNone":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests.UsageUnorderedTest.message":449,"org.easymock.tests.UsageVerifyTest.twoReturns":201,"org.easymock.tests.UsageVarargTest.varargByteAccepted":390,"org.easymock.tests2.ThreadingTest.testThreadSafe":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":309,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":445,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":454,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":217,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":511,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":358,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":424,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndThrowTest.longType":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":377,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":423,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests.LimitationsTest.mockNativeMethod":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":259,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests2.NameTest.nameForMocksControl":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":261,"org.easymock.tests2.MockedExceptionTest.testMockedException":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":299,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":141,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":277,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":518,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":257,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.MockingTest.testTwoMocks":240,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":69,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":499,"org.easymock.samples.ExampleTest.removeNonExistingDocument":248,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":421,"org.easymock.tests.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":325,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":405,"org.easymock.tests2.ConstraintsToStringTest.andToString":508,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":226,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":300,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":346,"org.easymock.tests.UsageVerifyTest.twoThrows":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":347,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests.LimitationsTest.privateConstructor":480,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":334,"org.easymock.tests2.UsageTest.defaultResetToNice":40,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests.UsageVarargTest.differentLength":387,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":258,"org.easymock.tests2.CallbackTest.callback":93,"org.easymock.tests2.UsageConstraintsTest.equals":294,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":515,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":350,"org.easymock.tests.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":357,"org.easymock.tests.UsageCallCountTest.tooFewCalls":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":361,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":514,"org.easymock.tests.MockingTest.testStrictClassMocking":487,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":87,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":426,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":86,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":91,"org.easymock.tests.ObjectMethodsTest.testHashCode":452,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":212,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests2.NameTest.nameForNiceMock":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":211,"org.easymock.samples.ExampleTest.addDocument":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":310,"org.easymock.tests2.DelegateToTest.testStubDelegate":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":320,"org.easymock.tests.UsageVarargTest.varargLongAccepted":389,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.tests2.ConstraintsToStringTest.orToString":501,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":220,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":331,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests.UsageThrowableTest.noUpperLimit":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":268,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.samples.SupportTest.addDocument":250,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":342,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":301,"org.easymock.tests.GenericTest.testPackageScope":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":330,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":185,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":151,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":274,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":126,"org.easymock.tests2.NameTest.nameForStrictMock":339,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":319,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":272,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":406,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":75,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests2.CaptureTest.testCaptureRightOne":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":305,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.UsageTest.wrongArguments":437,"org.easymock.tests2.MockBuilderTest.testWithConstructor":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":302,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":186,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":408,"org.easymock.tests.UsageVarargTest.varargShortAccepted":388,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":446,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":345,"org.easymock.tests2.CompareToTest.testLessThan":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests2.CaptureTest.testCaptureFromStub":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":418,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":223,"org.easymock.tests.UsageTest.unexpectedCallWithArray":436,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests2.CaptureTest.testCapture":245,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":414,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests2.ConstraintsToStringTest.notToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":483,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":195,"org.easymock.tests.LimitationsTest.abstractClass":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":382}}]
