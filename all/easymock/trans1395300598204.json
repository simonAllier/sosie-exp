[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1065","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.Range:40","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,7,8,9,144,145,146,147,148,149,150,151,152,5,153,154,155,156,157,158,159,160,161,162,163,164,6,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[39,67,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[234,313,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,13,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[33,150,201,203,494,375,479,480,482,484,488,491],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[137,138,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[49,495],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[50,51,52,54,56,57,58,61,121,122,123,125,127,128,129,132,487,489],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[12,13,14,16,17,18,20,21,22,23,24,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,81,82,86,88,89,90,91,92,93,94,120,126,133,136,137,138,140,141,142,143,7,8,9,144,150,151,157,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,179,182,184,188,189,190,191,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,230,239,240,244,245,247,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,304,305,306,307,308,309,310,311,312,314,321,322,323,324,325,329,330,340,341,368,369,373,375,376,377,378,384,386,391,399,400,401,402,403,404,413,414,415,416,417,418,419,420,424,425,426,428,429,431,432,433,434,435,436,437,438,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,463,464,465,466,467,468,477,478,479,480,481,482,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[17,18,20,133,134,135,136,137,138,379,478],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[13,17,27,33,39,47,62,64,65,68,69,71,72,74,90,91,92,93,133,137,140,141,142,143,213,215,216,218,219,220,221,222,227,240,264,267,268,270,271,272,273,274,275,306,307,308,309,310,400,403,404,415,435,436,437,438],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[188,189,190,191,260,261,262,263,264,265,341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[75,76,77,78,81,82,95,98,100,102,103,106,109,112,113,116,9,171,172,174,175,176,177,179,181,182,183,184,185,186,187,188,189,190,205,209,228,229,230,231,241,242,243,244,245,247,250,313,314,315,316,317,318,319,320,332,333,334,335,336,337,339,367,368,369,371,386,485,486,488,492,493],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[134,135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[39,67,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,7,8,9,144,145,146,147,148,149,150,151,152,5,153,154,155,156,157,158,159,160,161,162,163,164,6,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[21,40,46,499],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[92,309,500,501,404,437,438],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests2.UsageTest.argumentsOrdered":72,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":261,"org.easymock.tests.MockingTest.testPartialClassMocking":244,"org.easymock.tests.MockClassControlTest.testToString":315,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":139,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":105,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":399,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":478,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":410,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":174,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":201,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.CaptureTest.testPrimitive":217,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":403,"org.easymock.tests.UsageTest.moreThanOneArgument":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":295,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":323,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":472,"org.easymock.tests.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageVarargTest.varargIntAccepted":426,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":497,"org.easymock.tests.InvocationTest.testEquals":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests2.DependencyTest.testClassMocking":84,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":163,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":407,"org.easymock.tests2.CaptureTest.testAnd":214,"org.easymock.tests2.UsageTest.strictResetToDefault":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":377,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":476,"org.easymock.tests2.DelegateToTest.testDelegate":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":291,"org.easymock.tests.LimitationsTest.mockFinalMethod":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":300,"org.easymock.tests2.DependencyTest.testClassMockingSupport":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":372,"org.easymock.tests2.CaptureTest.testCapture1_2446744":218,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":161,"org.easymock.tests.UsageThrowableTest.throwError":413,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":389,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":409,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":61,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":119,"org.easymock.samples.PartialClassMockTest.testGetArea":488,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":390,"org.easymock.tests.MockingTest.testInterfaceMocking":246,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":106,"org.easymock.tests2.UsageTest.niceToStrict":66,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":150,"org.easymock.tests2.MockBuilderTest.testCreateMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":285,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":382,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":453,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":223,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":427,"org.easymock.tests2.EasyMockSupportClassTest.testAll":98,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":162,"org.easymock.tests2.CaptureTest.testCaptureAll":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":298,"org.easymock.tests.MockNameTest.defaultName":266,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":324,"org.easymock.samples.ExampleTest.voteForRemovals":482,"org.easymock.tests.UsageVarargTest.allKinds":435,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":436,"org.easymock.samples.BasicClassMockTest.testPrintContent":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":419,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":265,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":376,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":185,"org.easymock.samples.ExampleTest.voteForRemoval":479,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":186,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":177,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":386,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":260,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":11,"org.easymock.tests2.CaptureTest.testCaptureFirst":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":449,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.CaptureTest.testCapture2_2446744":226,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":434,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":470,"org.easymock.tests.UsageExpectAndReturnTest.longType":445,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":294,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":471,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests.MockingTest.testNiceClassMocking":250,"org.easymock.tests.MockingTest.testClassMocking":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":464,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests.MockTypeTest.fromEasyMockClass":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":20,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.object":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":200,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":421,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":458,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":424,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":51,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":108,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":474,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":120,"org.easymock.tests.UsageVarargTest.varargCharAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":331,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageTest.openCallCountByLastCall":68,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":203,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":439,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":183,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":459,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":117,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":316,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":263,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":451,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":46,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":359,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":496,"org.easymock.samples.SupportTest.voteForRemovals":491,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":288,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":365,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":134,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":423,"org.easymock.tests.UsageExpectAndThrowTest.object":286,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.samples.ConstructorCalledMockTest.testTax":485,"org.easymock.tests.UsageStrictMockTest.range":309,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":210,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":287,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":95,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests2.CaptureTest.testCaptureNone":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":328,"org.easymock.tests.UsageUnorderedTest.message":404,"org.easymock.tests.UsageVerifyTest.twoReturns":438,"org.easymock.tests.UsageVarargTest.varargByteAccepted":433,"org.easymock.tests2.ThreadingTest.testThreadSafe":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":112,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":468,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":492,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":236,"org.easymock.tests2.CaptureTest.testCapture_2617107":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":363,"org.easymock.tests2.UsageConstraintsTest.any":33,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":262,"org.easymock.tests.UsageExpectAndThrowTest.longType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":364,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":336,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":393,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":461,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":123,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.tests2.NameTest.nameForMocksControl":143,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":280,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":153,"org.easymock.tests.MockingTest.testNicePartialClassMocking":245,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":121,"org.easymock.tests2.CaptureTest.testCaptureLast":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":373,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests.MockingTest.testTwoMocks":243,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":284,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.samples.ExampleTest.removeNonExistingDocument":483,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":52,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":334,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":168,"org.easymock.tests2.MockBuilderTest.testCreateMockString":159,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":102,"org.easymock.tests.UsageExpectAndThrowTest.floatType":278,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":165,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.ExampleTest.voteAgainstRemoval":480,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":184,"org.easymock.tests.LimitationsTest.privateConstructor":229,"org.easymock.tests2.UsageConstraintsTest.testNotNull":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":420,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests2.UsageTest.defaultResetToNice":70,"org.easymock.samples.ExampleTest.voteAgainstRemovals":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.differentLength":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":122,"org.easymock.tests2.CallbackTest.callback":17,"org.easymock.tests2.UsageConstraintsTest.equals":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":180,"org.easymock.tests.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":401,"org.easymock.tests.UsageCallCountTest.tooFewCalls":466,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests.UsageThrowableTest.throwCheckedException":417,"org.easymock.tests.MockingTest.testStrictClassMocking":241,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":80,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":138,"org.easymock.tests.ObjectMethodsTest.testHashCode":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.NameTest.nameForNiceMock":142,"org.easymock.tests2.DependencyTest.testInterfaceMocking":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.ExampleTest.addDocument":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.DelegateToTest.testStubDelegate":13,"org.easymock.tests2.AnswerTest.stubAnswer":137,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":307,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":154,"org.easymock.tests.UsageVarargTest.varargLongAccepted":432,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":460,"org.easymock.tests.UsageExpectAndReturnTest.floatType":444,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":164,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":486,"org.easymock.tests.UsageThrowableTest.noUpperLimit":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":205,"org.easymock.tests2.SerializationTest.test":8,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":443,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.samples.SupportTest.addDocument":490,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":79,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":103,"org.easymock.tests.GenericTest.testPackageScope":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":58,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":248,"org.easymock.tests2.NameTest.nameForMock":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":454,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":158,"org.easymock.tests2.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":446,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":290,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":378,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":400,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":398,"org.easymock.tests2.NameTest.nameForStrictMock":141,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":209,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":500,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":146,"org.easymock.tests2.UsageStrictMockTest.range":92,"org.easymock.tests2.UsageConstraintsTest.lessThan":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":107,"org.easymock.tests2.CaptureTest.testCaptureRightOne":224,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":172,"org.easymock.tests.UsageTest.wrongArguments":270,"org.easymock.tests2.MockBuilderTest.testWithConstructor":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":104,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":344,"org.easymock.tests.UsageVarargTest.varargShortAccepted":431,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":469,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":135,"org.easymock.tests2.CompareToTest.testLessThan":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.CaptureTest.testCaptureFromStub":225,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":388,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":147,"org.easymock.tests.UsageTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":456,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":484,"org.easymock.tests2.ConstraintsToStringTest.containsToString":498,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":489,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":448,"org.easymock.tests.LimitationsTest.abstractClass":228,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":501,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198}}]
