[{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[203,381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[440,441],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[442,17,18,19,20,21,22,23,24,26,443,27,28,29,30,444],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[31,32,33,446],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[132,175],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[447,448,441],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[262,449,450],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[1,14,90,91,92,451,93,95,96,97,452,453,98,191,192,193,454,194,196,197,198,455,456,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[457,388,389,390],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[31,32,33,446],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"failures":[59,278,345],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[220],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[15,16,146,205,458,459,218],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,15,15,16,16,31,42,43,44,105,115,146,150,153,205,208,210,213,460,215,216,218,219,352,355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[338,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[17,19,27,47,48,50,52,53,55,65,70],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[127,133,134,163,250,461,302,303,306,307,345,348,376,377,384],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[62,126,127,133,134,462,463,464,465,466,467,468,469,470,471,472,161,163,164,250,473,474,475,476,477,478,461,301,302,303,306,307,345,346,348,349,375,376,377,379,382,383,384,391,392],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[250,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"argType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[224,226,240,241,293,431],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.Capture:82","failures":[17,19,20,21,22,23,24,26,443,27,28,30],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[43,481,482,483,484,485,213],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[154,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"threadSafe","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,2,4,5,7,11,36,42,77,78,79,80,81,82,83,102,105,115,121,138,139,140,141,142,143,145,149,150,151,157,161,163,164,166,167,206,210,212,214,217,222,223,224,225,226,227,230,231,233,234,235,237,238,239,240,241,267,293,294,295,296,317,318,320,324,325,326,327,332,333,334,335,336,346,348,349,406,431,432],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,39,40,41,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,80,81,84,87,88,89,94,102,124,125,126,127,128,129,130,131,133,134,135,136,138,139,140,141,142,143,145,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,186,195,200,201,202,203,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,258,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,291,292,293,294,295,296,297,300,301,303,304,305,306,307,308,324,326,327,332,333,334,335,336,341,342,343,344,345,346,347,348,349,350,351,353,354,356,357,358,359,360,362,363,368,369,370,371,373,374,375,376,377,378,380,381,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[51],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[442],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[127,133,134,163,250,461,302,303,306,307,345,348,376,377],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":196,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":129,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":317,"org.easymock.tests.MockClassControlTest.testToString":287,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":181,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":481,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":406,"org.easymock.tests2.UsageTest.wrongArguments":127,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":330,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":254,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":141,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":177,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.CaptureTest.testPrimitive":20,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":410,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":430,"org.easymock.tests.UsageTest.moreThanOneArgument":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":485,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":456,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":336,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":466,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests2.AnswerTest.answer":84,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":190,"org.easymock.tests2.CaptureTest.testAnd":17,"org.easymock.tests2.UsageTest.strictResetToDefault":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":326,"org.easymock.tests2.DelegateToTest.testDelegate":39,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":391,"org.easymock.tests2.CaptureTest.testCapture1_2446744":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":188,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":396,"org.easymock.tests.UsageThrowableTest.throwError":242,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":253,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":123,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":397,"org.easymock.tests.MockingTest.testInterfaceMocking":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":412,"org.easymock.tests2.UsageTest.niceToStrict":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":210,"org.easymock.tests2.MockBuilderTest.testCreateMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":118,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":97,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":420,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":328,"org.easymock.tests.UsageOverloadedMethodTest.overloading":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":381,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":233,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":449,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":26,"org.easymock.tests2.EasyMockSupportClassTest.testAll":102,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":354,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":428,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":189,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":311,"org.easymock.tests.MockNameTest.defaultName":439,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":375,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":284,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":151,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":265,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":155,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":144,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":357,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":170,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":34,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":229,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":157,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":217,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":277,"org.easymock.tests.GenericTest.testBridgedEquals":356,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":373,"org.easymock.tests.UsageExpectAndReturnTest.longType":225,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":429,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":433,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageCallCountTest.tooManyCalls":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":474,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":416,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":315,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":367,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":202,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":360,"org.easymock.tests.MockTypeTest.fromEasyMockClass":252,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":221,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":343,"org.easymock.tests.UsageExpectAndReturnTest.object":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":482,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":437,"org.easymock.tests.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":341,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":478,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":238,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":192,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":112,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":465,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":389,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":187,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":257,"org.easymock.tests2.CaptureTest.testCaptureMultiple":442,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":447,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":179,"org.easymock.tests.DefaultClassInstantiatorTest.object":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":388,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":435,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":461,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":149,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":417,"org.easymock.tests.CapturesMatcherTest.test":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":337,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":288,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.StubTest.stubWithReturnValue":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":213,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":231,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":298,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":470,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":423,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":446,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":299,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":85,"org.easymock.tests.UsageExpectAndThrowTest.object":421,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":431,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":432,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":348,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":75,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":473,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":387,"org.easymock.tests2.CaptureTest.testCaptureNone":25,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.UsageVerifyTest.twoReturns":377,"org.easymock.tests.UsageVarargTest.varargByteAccepted":276,"org.easymock.tests2.ThreadingTest.testThreadSafe":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":116,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":371,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":472,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":409,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":401,"org.easymock.tests2.StubTest.stub":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageExpectAndThrowTest.longType":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":241,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":92,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":445,"org.easymock.tests2.NameTest.nameForMocksControl":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":93,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":104,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":415,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":214,"org.easymock.tests.MockingTest.testNicePartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":143,"org.easymock.tests2.CaptureTest.testCaptureLast":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":419,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":96,"org.easymock.tests.UsageStrictMockTest.differentMethods":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":193,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":260,"org.easymock.tests2.ConstraintsToStringTest.andToString":469,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":156,"org.easymock.tests2.MockBuilderTest.testCreateMockString":219,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests.UsageExpectAndThrowTest.floatType":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":106,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":44,"org.easymock.tests.UsageVerifyTest.twoThrows":376,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":385,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":150,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":440,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":91,"org.easymock.tests.UsageVarargTest.differentLength":273,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":476,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":146,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":408,"org.easymock.tests.UsageCallCountTest.tooFewCalls":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":331,"org.easymock.tests.UsageThrowableTest.throwCheckedException":246,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":475,"org.easymock.tests.MockingTest.testStrictClassMocking":314,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":82,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":342,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":81,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":89,"org.easymock.tests.ObjectMethodsTest.testHashCode":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":484,"org.easymock.tests2.NameTest.nameForNiceMock":184,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":158,"org.easymock.tests2.DependencyTest.testInterfaceMocking":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":483,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.DelegateToTest.testStubDelegate":36,"org.easymock.tests2.AnswerTest.stubAnswer":88,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":346,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":460,"org.easymock.tests.UsageVarargTest.varargLongAccepted":275,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":350,"org.easymock.tests.UsageExpectAndReturnTest.floatType":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.tests2.ConstraintsToStringTest.orToString":462,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":73,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":22,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":450,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":259,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":223,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":107,"org.easymock.tests.GenericTest.testPackageScope":353,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":198,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":321,"org.easymock.tests2.NameTest.nameForMock":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":234,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":425,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":327,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":256,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":76,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":407,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":405,"org.easymock.tests2.NameTest.nameForStrictMock":183,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":448,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":142,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":74,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":206,"org.easymock.tests2.UsageStrictMockTest.range":163,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":194,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":480,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":139,"org.easymock.tests.UsageTest.wrongArguments":303,"org.easymock.tests2.MockBuilderTest.testWithConstructor":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":108,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":235,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":263,"org.easymock.tests.UsageVarargTest.varargShortAccepted":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":372,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":207,"org.easymock.tests.UsageTest.unexpectedCallWithArray":302,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":370,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":236,"org.easymock.tests2.CaptureTest.testCapture":443,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":347,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests2.ConstraintsToStringTest.notToString":464,"org.easymock.tests.UsageStrictMockTest.testVerify":351,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":344,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":310,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":228,"org.easymock.tests.LimitationsTest.abstractClass":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":335,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":174,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269}}]
