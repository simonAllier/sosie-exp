[{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[29,30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[8,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[38,39,52,53,54,55,56,57,58,59,60,61,62,63,64,47,48,65,66,67,68,69,70,71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,29,29,30,30,0,83,84,85,1,86,87,88,89,90,7,91,92,93,94,95,37,96,38,39,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,40,124,41,125,42,126,127,43,128,129,44,130,131,132,133,134,135,19,136,137,138,139,140,27,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,52,53,159,54,160,55,56,161,162,163,164,57,165,166,58,167,168,59,169,170,171,172,173,174,60,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,61,62,199,200,201,202,203,204,205,206,207,208,209,210,211,63,212,213,214,215,216,217,218,219,220,64,221,222,223,224,225,226,227,228,45,46,229,47,48,230,49,231,232,233,234,235,236,237,238,239,240,241,242,65,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,68,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,70,355,356,357,358,359,50,360,71,72,361,362,363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[37,38,39,365,366,367,368,369,370,371,195,196,200,201,63,212,213,372,219,46,47,48,309,359,360,361,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[135,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[374,375,376],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[74,75,77,78,80,83,86,87,88,89,90,7,91,92,93,37,38,39,98,99,102,103,104,105,106,107,108,109,110,112,113,116,117,118,119,121,122,123,40,124,41,125,42,127,128,129,44,134,19,27,143,144,145,146,147,148,149,150,151,152,153,154,157,158,52,53,159,54,160,55,56,161,162,163,164,57,165,166,58,167,168,59,169,170,171,173,174,60,175,180,182,185,186,188,189,191,193,194,195,197,61,62,199,202,203,204,205,206,207,377,378,379,208,63,213,214,215,216,217,218,380,220,221,222,223,224,225,226,46,47,48,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,287,310,311,318,319,322,323,324,68,336,337,343,344,345,70,355,356,357,358,359,71,72,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[73,74,75,76,77,78,79,80,82,29,30,0,83,84,85,1,86,87,89,90,7,91,92,93,94,95,37,96,38,39,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,40,124,41,125,42,126,127,43,128,129,44,130,131,132,133,134,135,19,136,137,138,139,140,27,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,52,53,159,54,160,55,56,161,162,163,164,57,165,166,58,167,168,59,169,170,171,172,173,174,60,175,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,61,62,199,200,201,202,203,204,205,206,207,208,209,210,211,63,212,213,214,215,216,217,218,220,64,221,222,223,224,225,226,227,228,45,46,229,47,48,230,235,236,237,238,239,240,65,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,283,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,68,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,354,70,356,357,358,359,50,360,71,72,361,362,363],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[109,111,112,113,114,115,116,118,381,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[29,30,83,93,382,98,31,129,383,186,32,384,190,192,205,206,385,386],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RuntimeExceptionWrapper:32","sourceCode":"return java.lang.RuntimeException","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[89,37,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,130,131,158,52,53,159,54,160,55,56,161,162,388,163,164,57,165,166,58,167,168,59,169,170,171,172,173,174,60,175,214,215,216,217,218,45,46,239,309,311,312,318,319,320,321,322,335,336,337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[74,75,76,77,78,80,82,29,29,30,30,83,86,87,88,89,90,7,8,91,92,93,94,37,96,38,39,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,40,124,41,125,42,126,127,43,128,129,44,383,130,131,132,133,134,135,19,20,136,137,138,139,26,140,27,141,389,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,52,53,159,54,160,55,56,161,162,388,163,164,57,165,166,58,167,168,59,169,170,171,172,173,174,60,175,176,180,390,391,181,182,183,184,185,392,186,187,188,189,190,191,192,193,194,195,196,197,198,61,62,199,200,201,202,203,204,205,206,207,393,377,378,379,208,209,210,211,63,212,213,214,215,216,217,218,380,372,219,220,64,221,222,223,224,225,226,227,45,46,229,47,48,230,394,395,396,397,232,233,234,398,399,235,236,237,238,239,240,400,401,402,403,404,405,65,249,386,406,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,283,284,285,286,407,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,408,66,67,409,410,311,312,411,313,314,315,316,317,318,319,320,321,322,323,324,68,335,336,337,338,339,340,341,342,412,343,344,345,346,348,349,350,351,352,353,354,413,414,415,364,416,70,355,356,357,358,359,50,360,71,72,361,362,363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[372,219,284,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,75,77,78,80,83,86,87,88,89,90,7,91,92,93,37,38,39,98,99,102,103,104,105,106,107,108,109,110,112,113,116,117,118,119,121,122,123,40,124,41,125,42,127,129,19,27,143,144,145,146,147,148,149,151,152,153,154,157,158,52,53,159,54,160,55,56,161,162,163,164,57,165,166,58,167,168,59,169,170,171,173,174,60,175,180,182,186,188,189,193,194,195,197,61,62,202,203,204,205,206,207,377,378,379,63,213,214,215,216,217,218,380,220,221,222,223,224,225,226,46,47,48,249,386,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,310,311,318,319,322,323,324,68,336,337,343,344,345,417,418,419,420,421,70,356,357,358,359,71,72,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[374,375,376],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[165,45,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[38,39,63,47,48,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":159,"org.easymock.tests2.UsageTest.argumentsOrdered":201,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":358,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":28,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":198,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":236,"org.easymock.tests.MockingTest.testPartialClassMocking":343,"org.easymock.tests.MockClassControlTest.testToString":348,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":289,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":92,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests2.UsageTest.wrongArguments":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":318,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":403,"org.easymock.tests2.UsageConstraintsTest.testNull":160,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":152,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":353,"org.easymock.tests2.CaptureTest.testPrimitive":112,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":308,"org.easymock.tests.UsageTest.moreThanOneArgument":359,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":340,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageTest.argumentsOrdered":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":327,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":214,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":367,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests.ReplayStateInvalidUsageTest.times":279,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":36,"org.easymock.tests2.AnswerTest.answer":180,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":139,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":372,"org.easymock.tests2.CaptureTest.testCapture1_2446744":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":137,"org.easymock.tests.UsageThrowableTest.throwError":220,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":273,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":402,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":342,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":35,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":378,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":399,"org.easymock.tests2.UsageTest.niceToStrict":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":290,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":186,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":298,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":148,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":208,"org.easymock.tests.UsageOverloadedMethodTest.overloading":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":166,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":165,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":375,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests2.EasyMockSupportClassTest.testAll":204,"org.easymock.tests.MockClassControlTest.testEquals":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":138,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":315,"org.easymock.tests.MockNameTest.defaultName":411,"org.easymock.tests2.UsageConstraintsTest.testMatches":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":341,"org.easymock.samples.ExampleTest.voteForRemovals":80,"org.easymock.tests.UsageVarargTest.allKinds":335,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":63,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":225,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":240,"org.easymock.tests2.UsageConstraintsTest.greaterThan":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.samples.ExampleTest.voteForRemoval":77,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":87,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":126,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":354,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":145,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":235,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":146,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":258,"org.easymock.tests2.CaptureTest.testCapture2_2446744":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests2.UsageTest.moreThanOneArgument":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":191,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":334,"org.easymock.tests.GenericTest.testBridgedEquals":406,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":247,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":307,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":172,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":338,"org.easymock.tests.UsageCallCountTest.tooManyCalls":248,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":224,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":242,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":68,"org.easymock.tests.MockTypeTest.fromEasyMockClass":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":227,"org.easymock.tests.UsageExpectAndReturnTest.object":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":329,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":234,"org.easymock.tests.UsageTest.exactCallCountByLastCall":363,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":311,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":382,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":267,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests.MockClassControlTest.testHashCode":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":155,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":136,"org.easymock.tests.UsageVarargTest.varargCharAccepted":328,"org.easymock.tests2.CaptureTest.testCaptureMultiple":373,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastCall":61,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests.DefaultClassInstantiatorTest.object":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":413,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":14,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":128,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":207,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":349,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":238,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":260,"org.easymock.tests2.SerializationTest.testAllMockedMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":364,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":51,"org.easymock.samples.SupportTest.voteForRemovals":74,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":369,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":301,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":416,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.UsageExpectAndThrowTest.object":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":170,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":336,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":337,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":102,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":300,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":281,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":209,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":379,"org.easymock.tests.UsageUnorderedTest.message":309,"org.easymock.tests.UsageVerifyTest.twoReturns":213,"org.easymock.tests.UsageVarargTest.varargByteAccepted":333,"org.easymock.tests2.ThreadingTest.testThreadSafe":86,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":245,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":398,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":321,"org.easymock.tests2.UsageConstraintsTest.any":163,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":237,"org.easymock.tests.UsageExpectAndThrowTest.longType":292,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":277,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.SerializationTest.testClass":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":310,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":270,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":293,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":344,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":42,"org.easymock.tests2.CaptureTest.testCaptureLast":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":219,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests.MockingTest.testTwoMocks":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":297,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":200,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":60,"org.easymock.samples.ExampleTest.removeNonExistingDocument":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":275,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":88,"org.easymock.tests2.ConstraintsToStringTest.andToString":368,"org.easymock.tests2.MockBuilderTest.testCreateMockString":192,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.floatType":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":167,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":181,"org.easymock.tests.UsageVerifyTest.twoThrows":212,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":206,"org.easymock.samples.ExampleTest.voteAgainstRemoval":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":174,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":226,"org.easymock.tests2.UsageTest.defaultResetToNice":199,"org.easymock.samples.ExampleTest.voteAgainstRemovals":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests.UsageVarargTest.differentLength":330,"org.easymock.tests2.CallbackTest.callback":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":31,"org.easymock.tests.UsageTest.openCallCountByLastCall":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":320,"org.easymock.tests.UsageCallCountTest.tooFewCalls":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests.UsageThrowableTest.throwCheckedException":223,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":312,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":8,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":106,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests.ObjectMethodsTest.testHashCode":233,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":90,"org.easymock.tests2.DependencyTest.testInterfaceMocking":91,"org.easymock.samples.ExampleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":27,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":32,"org.easymock.tests.UsageVarargTest.varargLongAccepted":332,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests2.ConstraintsToStringTest.orToString":365,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":59,"org.easymock.tests.UsageThrowableTest.noUpperLimit":64,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":114,"org.easymock.tests2.SerializationTest.test":99,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":376,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.samples.SupportTest.addDocument":73,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":276,"org.easymock.tests.GenericTest.testPackageScope":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":22,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":263,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":303,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":357,"org.easymock.tests2.MockedExceptionTest.testRealException":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":319,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":125,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":185,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":144,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":264,"org.easymock.tests.UsageVarargTest.varargShortAccepted":331,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":246,"org.easymock.tests2.UsageConstraintsTest.cmpTo":164,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CaptureTest.testCaptureFromStub":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":272,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":392,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":244,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":265,"org.easymock.tests2.CaptureTest.testCapture":381,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.samples.ExampleTest.addAndChangeDocument":82,"org.easymock.tests2.ConstraintsToStringTest.notToString":366,"org.easymock.tests.UsageStrictMockTest.testVerify":49,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":149,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":326}}]
