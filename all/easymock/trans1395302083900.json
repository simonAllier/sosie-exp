[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[0,1,2],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,105,106,107,108,109,110,111,112,113,114,115,116,117,118,1,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,2,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,105,106,107,108,109,110,111,112,113,115,116,117,118,1,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,234,235,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,2,455,456,457,458,459,460,461,462,463,464,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[54,55,488,489,490,491,492,61,174,177],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[493,117,124,130,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"position":"org.easymock.internal.Range:36","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,105,106,107,108,109,110,111,112,113,114,115,116,117,118,1,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,2,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[61,62,63,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[54,495,496,497,498,61,63,66,67,68,69,72,73,148,149,151,152,153,154,156,159,160,161,162,165,499,167,168,171,172,173,175,178,179,500,181,196,201,204,214,220,224,225,234,234,235,235,239,280,281,282,285,369,375,376,377,379,464,469,481],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[345],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[501,502,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"value"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[248,252],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[101,132,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[24,25,26,32,35,182,183,184,190,193,223,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[320,339],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[503,504,132,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[160,164,167,179,204],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[61,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[507,82,83,84,85,86,87,88,89,91,508,92,93,94,95,509],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[21,22,49,50,51,57,58,60,64,83,84,86,87,89,90,94,95,98,101,102,103,106,113,115,116,117,119,120,121,122,128,129,130,131,133,134,141,142,233,255,297,298,306,347,348,351,353,354,355,356,358,359,360,361,363,364,365,366,384,391,392,395,397,398,399,400,402,403,404,405,407,408,409,410,438,439,440,441,442,448,449,450,453,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,0,105,106,107,108,109,110,111,112,113,115,116,117,118,1,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,2,455,456,457,458,459,460,461,462,463,464,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[510],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[19,93,115,116,119,120,121,122,128,130,131,133,134,140,141,142,234,234,235,235,271,272,273,274,275,295,337,338,341,411,421,422,423,424,425,472,473],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[248,252],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:70","failures":[19,58,60,82,83,84,85,86,87,88,89,90,91,92,93,94,95,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,156,255,294,295,337,338,339,340,341,411,412,421,422,423,424,425,437,472,473,486],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[72,74,149,159,162,207,210,211,376,377,379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[503,504,294,511,505,451],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[101,132,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[251,512,513],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[108,110,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,99,0,105,255,294,297,514,443,444,451,452,2,455],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":118,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":449,"org.easymock.tests2.UsageTest.argumentsOrdered":105,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":323,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":238,"org.easymock.tests2.DelegateToTest.testReturnException":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":483,"org.easymock.tests.MockingTest.testPartialClassMocking":376,"org.easymock.tests.MockClassControlTest.testToString":286,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":143,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":347,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":337,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":459,"org.easymock.samples.ExampleTest.answerVsDelegate":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":469,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":45,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":291,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":341,"org.easymock.tests.UsageTest.moreThanOneArgument":450,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":366,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.UsageTest.argumentsOrdered":455,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":425,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests.ReplayStateInvalidUsageTest.times":264,"org.easymock.tests2.DependencyTest.testClassMocking":7,"org.easymock.tests2.AnswerTest.answer":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":6,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":466,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":40,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":362,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":420,"org.easymock.tests2.DependencyTest.testClassMockingSupport":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":461,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":4,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":258,"org.easymock.tests.UsageThrowableTest.throwError":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":468,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":193,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":222,"org.easymock.samples.PartialClassMockTest.testGetArea":239,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":259,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":302,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":209,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":348,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":356,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":457,"org.easymock.tests.UsageOverloadedMethodTest.overloading":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":219,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":402,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":512,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":429,"org.easymock.tests2.EasyMockSupportClassTest.testAll":201,"org.easymock.tests.MockClassControlTest.testEquals":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":5,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.MockNameTest.defaultName":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests.UsageVarargTest.allKinds":437,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":419,"org.easymock.samples.BasicClassMockTest.testPrintContent":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":389,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":189,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":162,"org.easymock.samples.ExampleTest.voteForRemoval":228,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":254,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":163,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":154,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":481,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":38,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":482,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":108,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":39,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":398,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":52,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":436,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":416,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":36,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":365,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":445,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests.MockingTest.testNiceClassMocking":382,"org.easymock.tests.MockingTest.testClassMocking":374,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":448,"org.easymock.tests.MockTypeTest.fromEasyMockClass":467,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":489,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":431,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":243,"org.easymock.tests.UsageTest.exactCallCountByLastCall":456,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":183,"org.easymock.tests.MockClassControlTest.testHashCode":289,"org.easymock.tests2.EasyMockSupportTest.testVerify":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":211,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":474,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":3,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":114,"org.easymock.tests.UsageVarargTest.varargCharAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":246,"org.easymock.tests2.CaptureTest.testCaptureMultiple":507,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":47,"org.easymock.tests.DefaultClassInstantiatorTest.object":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":268,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":241,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":354,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":498,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":160,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":353,"org.easymock.tests.CapturesMatcherTest.test":509,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":408,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":287,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":485,"org.easymock.tests2.StubTest.stubWithReturnValue":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":237,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":359,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":12,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":415,"org.easymock.tests.UsageExpectAndThrowTest.object":357,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":136,"org.easymock.tests2.DelegateToTest.testWrongClass":111,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":472,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":473,"org.easymock.samples.ConstructorCalledMockTest.testTax":234,"org.easymock.tests.UsageStrictMockTest.range":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":80,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":358,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":511,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":303,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":510,"org.easymock.tests.UsageUnorderedTest.message":255,"org.easymock.tests.UsageVerifyTest.twoReturns":444,"org.easymock.tests.UsageVarargTest.varargByteAccepted":435,"org.easymock.tests2.ThreadingTest.testThreadSafe":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":215,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":224,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":244,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":340,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests2.StubTest.stub":64,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndThrowTest.longType":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":251,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":262,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":187,"org.easymock.tests2.SerializationTest.testClass":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":410,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":282,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":26,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":23,"org.easymock.tests2.NameTest.nameForMocksControl":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":28,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":203,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":454,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":351,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":175,"org.easymock.tests.MockingTest.testNicePartialClassMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":24,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests.MockingTest.testTwoMocks":375,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":355,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":0,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":141,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests.UsageStrictMockTest.differentMethods":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":184,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":249,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":51,"org.easymock.tests2.MockBuilderTest.testCreateMockString":181,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":205,"org.easymock.tests.UsageExpectAndThrowTest.floatType":349,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":14,"org.easymock.tests.UsageVerifyTest.twoThrows":443,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.ExampleTest.voteAgainstRemoval":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":390,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests2.UsageTest.defaultResetToNice":104,"org.easymock.samples.ExampleTest.voteAgainstRemovals":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.differentLength":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":25,"org.easymock.tests2.CallbackTest.callback":57,"org.easymock.tests2.UsageConstraintsTest.equals":1,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":157,"org.easymock.tests.UsageTest.openCallCountByLastCall":453,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":339,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":460,"org.easymock.tests.UsageThrowableTest.throwCheckedException":387,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":373,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":412,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":71,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":16,"org.easymock.tests2.CompareToTest.testGreateOrEqual":493,"org.easymock.tests.ObjectMethodsTest.testHashCode":242,"org.easymock.tests2.NameTest.nameForNiceMock":146,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":53,"org.easymock.tests2.DependencyTest.testInterfaceMocking":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":490,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":216,"org.easymock.tests2.DelegateToTest.testStubDelegate":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.AnswerTest.stubAnswer":15,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":176,"org.easymock.tests.UsageVarargTest.varargLongAccepted":434,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":409,"org.easymock.tests.UsageExpectAndReturnTest.floatType":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":191,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":116,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":75,"org.easymock.tests2.SerializationTest.test":62,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":513,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":392,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.samples.SupportTest.addDocument":236,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":70,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":206,"org.easymock.tests.GenericTest.testPackageScope":280,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":190,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":380,"org.easymock.tests2.NameTest.nameForMock":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":403,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":180,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":361,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":441,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":326,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":338,"org.easymock.tests2.NameTest.nameForStrictMock":145,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":250,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":167,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":491,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":321,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":210,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":149,"org.easymock.tests.UsageTest.wrongArguments":452,"org.easymock.tests2.MockBuilderTest.testWithConstructor":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":207,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":314,"org.easymock.tests.UsageVarargTest.varargShortAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":257,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":168,"org.easymock.tests.UsageTest.unexpectedCallWithArray":451,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":405,"org.easymock.tests2.CaptureTest.testCapture":508,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":223,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":417,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":397,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":424,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":42}}]
