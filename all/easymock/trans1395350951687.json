[{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:48","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[58,59,16,17,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,27,77,78,79,80,43,44,81,82,83,84,54,85,86,87,88,89,90,91,92,93,94,95,96,97,98,55,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[161,162],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[54,85,87,89,90,92,101,106,111,113,121],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[163,163,164,164,165,4,166,167,168,169,128,135,145,170,171,172,173,174,154,175,176,177,178,179,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[60,93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[181],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[182,183,184,185,186,19,20,187,188,189,190,191,192,193,194,195,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[196,197,112,123,124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,198],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[161,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[200,182,201,202,75,203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[19,20,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[207,163,164,208,209,165,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,5,225,226,227,228,58,6,7,8,9,10,229,11,230,231,12,13,14,232,233,234,235,236,200,237,182,238,239,240,183,184,241,185,242,243,186,244,245,246,201,202,15,247,16,17,18,19,20,21,60,61,62,63,64,65,66,248,249,250,251,252,253,254,255,256,257,258,259,260,67,68,69,70,71,72,73,74,261,262,263,264,23,24,265,266,267,25,26,268,269,270,271,272,273,274,275,276,187,277,278,279,188,189,280,190,281,282,191,283,284,285,286,287,196,196,288,75,76,27,289,290,291,292,293,294,295,296,203,297,298,299,300,28,301,302,78,79,80,303,304,29,305,306,307,30,31,308,309,32,310,311,312,313,314,33,34,315,35,36,37,38,316,317,0,39,40,318,41,42,319,43,44,45,46,47,167,204,320,321,322,323,324,325,326,128,327,328,132,135,145,151,329,52,172,330,331,332,175,53,177,333,334,335,336,337,338,339,340,2,3,82,341,83,84,54,85,86,87,88,89,90,91,93,94,95,96,97,98,55,99,100,101,102,103,104,105,106,107,108,342,343,344,345,346,347,348,109,110,56,179,57,349,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,350,351,352,353,354,355,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"expected"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[359,360,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":85,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.UsageTest.argumentsOrdered":40,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":38,"org.easymock.tests2.StubTest.stubWithReturnValue":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":173,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.SerializationTest.testAllMockedMethod":328,"org.easymock.tests2.DelegateToTest.testReturnException":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":232,"org.easymock.samples.SupportTest.voteForRemovals":209,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":273,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":135,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":162,"org.easymock.tests.UsageExpectAndThrowTest.object":280,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":314,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":352,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":75,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":36,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":156,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":331,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":32,"org.easymock.tests2.CaptureTest.testPrimitive":114,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":287,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":129,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":227,"org.easymock.tests2.ThreadingTest.testThreadSafe":340,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":193,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":69,"org.easymock.tests2.CaptureTest.testCapture_2617107":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":361,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":330,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests2.StubTest.stub":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":73,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":349,"org.easymock.tests2.SerializationTest.testClass":128,"org.easymock.tests.LimitationsTest.mockNativeMethod":288,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.AnswerTest.answer":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":202,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":326,"org.easymock.tests2.CaptureTest.testAnd":111,"org.easymock.tests2.UsageTest.strictResetToDefault":315,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":171,"org.easymock.tests2.NameTest.nameForMocksControl":51,"org.easymock.tests2.MockedExceptionTest.testMockedException":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":134,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.DelegateToTest.testDelegate":353,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":195,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":187,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":342,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":332,"org.easymock.tests.MockingTest.testNicePartialClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":283,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":359,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":339,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":107,"org.easymock.tests.UsageThrowableTest.throwError":289,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests2.MockBuilderTest.testCreateMockString":177,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":136,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":320,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":145,"org.easymock.samples.PartialClassMockTest.testGetArea":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":70,"org.easymock.samples.ExampleTest.voteAgainstRemoval":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":274,"org.easymock.tests2.UsageTest.niceToStrict":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":296,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":160,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":172,"org.easymock.tests2.UsageTest.defaultResetToNice":0,"org.easymock.tests2.MockBuilderTest.testCreateMock":175,"org.easymock.samples.ExampleTest.voteAgainstRemovals":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.UsageVarargTest.differentLength":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":148,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":178,"org.easymock.tests.UsageTest.openCallCountByLastCall":230,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":24,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":157,"org.easymock.tests.UsageOverloadedMethodTest.overloading":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":150,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":336,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":293,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureAll":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":335,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":337,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":360,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":341,"org.easymock.tests2.NameTest.nameForNiceMock":50,"org.easymock.tests.UsageVarargTest.allKinds":58,"org.easymock.tests2.DependencyTest.testInterfaceMocking":313,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.samples.BasicClassMockTest.testPrintContent":219,"org.easymock.samples.ExampleTest.addDocument":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":147,"org.easymock.tests2.DelegateToTest.testStubDelegate":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":152,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":295,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.AnswerTest.stubAnswer":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":68,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":358,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":133,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":174,"org.easymock.tests.UsageVarargTest.varargLongAccepted":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":57,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":21,"org.easymock.samples.ExampleTest.voteForRemoval":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":198,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":201,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":1,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":167,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":164,"org.easymock.tests.UsageThrowableTest.noUpperLimit":290,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":100,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":256,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.SerializationTest.test":327,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":116,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":305,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":205,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":291,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":236,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.samples.SupportTest.addDocument":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":306,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":137,"org.easymock.tests.GenericTest.testPackageScope":268,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":158,"org.easymock.tests2.NameTest.nameForMock":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":25,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":155,"org.easymock.tests.UsageExpectAndReturnTest.longType":237,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":242,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":59,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":284,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":182,"org.easymock.tests.UsageCallCountTest.tooManyCalls":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":23,"org.easymock.tests2.MockedExceptionTest.testRealException":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":334,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.NameTest.nameForStrictMock":49,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":356,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":15,"org.easymock.tests.UsageExpectAndReturnTest.object":241,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":309,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":199,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":29,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":141,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":28,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":253,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":138,"org.easymock.tests2.EasyMockSupportTest.testVerify":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests.UsageVarargTest.varargShortAccepted":225,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":323,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":267,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":81,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.CaptureTest.testCaptureMultiple":197,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":319,"org.easymock.tests2.UsageTest.openCallCountByLastCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":317,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":126,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.UsageTest.unexpectedCallWithArray":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":292,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":186,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests.CapturesMatcherTest.test":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":207,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.UsageTest.resumeIfFailure":318,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":71,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":72,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":31}}]
