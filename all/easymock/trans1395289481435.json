[{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[48,49,50,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[53,54,55,56],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,50,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,47,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,81,82,36,37,38,39,40,41,42,43,44,45,46,47,83,84],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[107,108,109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[111,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","type":"type","this":"this"}},{"position":"org.easymock.internal.RecordState:183","failures":[112,113,114,115,57,58,59,116,117,118,119,120,107,121,122,123,53,124,125,126,127,54,128,129,130,131,109,132,133,134,135,110,136,55,137,0,138,66,139,52,140,1,141,142,143,144,145,146,147,148,149,150,151,67,152,68,69,153,85,86,87,154,60,62,49,50,88,155,156,92,94,95,157,158,159,160,161,162,163,164,165,4,166,167,168,169,170,171,172,173,174,175,176,6,177,178,179,180,181,182,183,184,185,186,187,188,189,7,190,191,192,193,194,195,196,197,14,70,198,15,199,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,200,71,201,72,73,202,203,204,205,206,207,208,209,210,211,212,38,39,213,78,40,214,41,42,43,44,45,46,215,216,217,218,219,220,221,222,223,224,79,47,80,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,65,252,253,254,255,256,257,106,258,259,260,261,262],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[263,264,265,266,267,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,257,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[142,143,144,145,147,148,285,286,287,288,289,290,291,292,85,293,294,295,296,297,298,299,300,301,86,302,303,304,305,306,87,307,308,88,156,89,90,91,309,92,93,94,95,310,96,97,98,157,311,162,312,164,313,165,99,314,315,316,317,100,101,318,319,102,2,3,4,320,321,322,323,324,325,188,326,327,328,329,190,191,192,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,206,103,348,210,104,105,349,349,350,350,106,261,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[352,177,179,180,353,181,182,183,185,354,186,355,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,50,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[356,112,113,114,357,115,57,58,59,116,117,118,119,120,107,121,122,123,53,124,125,126,127,54,128,129,130,131,109,132,133,135,110,136,55,137,0,138,66,358,139,52,140,1,359,360,361,362,141,142,143,144,145,146,147,148,149,150,363,151,67,152,68,69,153,290,85,86,87,154,60,48,61,62,49,50,364,365,366,367,88,155,156,90,92,94,95,97,157,158,368,159,160,161,162,312,163,164,313,165,314,100,101,318,2,3,4,5,166,369,167,168,169,170,370,371,171,172,173,174,175,176,6,177,178,179,180,353,181,182,183,184,185,186,355,372,187,188,373,189,7,329,190,191,192,193,194,195,196,197,8,9,10,11,12,13,14,70,374,198,15,375,376,199,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,377,81,82,378,200,379,71,201,72,73,202,380,381,382,383,384,385,386,387,388,203,204,205,36,389,390,347,206,103,391,392,207,393,208,209,64,394,395,37,396,397,210,211,212,38,39,213,78,40,214,41,42,43,44,45,46,398,215,216,217,218,219,399,220,221,222,223,224,79,47,80,400,83,84,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,401,402,245,246,247,248,249,250,403,404,405,406,407,251,65,252,253,254,255,256,349,349,350,350,257,106,258,259,260,261,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[181,182,183,185,354,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[377,400],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[88,155,156,408],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[0,1,6,7,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,42,43,44,45,46,47],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[358,360,361,68,409,410,374,375,376,379,72,78,47,80],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[129,52,313],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[137,154,411,257,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[89,93,99,102,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[85,86,87,88,89,90,91,309,92,94,95,412,310,97,98,157,311,99,315,100,101,102,2,346,103,104,105,349,349,350,350,106],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[112,114,115,395,65],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[122,124,67,178,183,184,187,193,194,195,196,197,12,71,203,204,205,36,211,212,38,39,213,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[356,112,113,114,357,115,57,58,59,116,117,118,119,120,107,121,122,123,53,108,124,125,126,127,54,128,129,130,131,109,132,133,134,135,110,136,55,137,0,138,66,358,139,52,140,1,359,360,361,362,141,142,143,144,145,146,147,148,149,150,363,151,67,152,68,69,153,290,85,86,87,413,154,60,48,61,62,49,50,364,365,366,367,88,155,156,89,90,92,93,94,95,96,97,98,414,415,416,417,157,158,368,159,160,161,162,312,163,164,313,165,99,314,317,100,101,318,2,3,4,5,166,369,167,168,169,170,370,371,171,172,173,174,175,176,6,177,178,179,180,353,181,182,183,184,185,186,355,372,187,188,418,419,420,373,189,7,329,190,191,192,193,194,195,196,197,421,422,423,424,8,9,10,11,12,13,14,70,410,374,198,15,375,376,199,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,425,426,427,428,429,377,81,82,378,200,379,71,201,72,73,202,380,331,332,333,334,335,336,337,338,381,382,383,384,385,386,387,388,203,204,339,205,36,389,390,347,206,103,391,392,207,393,208,209,64,394,395,37,396,397,430,210,431,432,433,434,435,436,437,438,439,440,441,442,211,212,38,39,213,78,40,214,41,42,43,44,45,46,398,215,216,217,218,219,399,220,221,222,223,224,79,47,80,400,83,84,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,401,402,443,245,246,247,248,444,249,250,403,404,405,406,407,251,65,252,253,254,255,445,256,349,349,350,350,257,106,258,259,260,261,262],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.UsageTest.argumentsOrdered":361,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":257,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":9,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests.MockClassControlTest.testToString":333,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":85,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":211,"org.easymock.tests2.UsageTest.wrongArguments":358,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":423,"org.easymock.samples.ExampleTest.answerVsDelegate":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":105,"org.easymock.tests2.UsageConstraintsTest.testNull":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":172,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":338,"org.easymock.tests2.CaptureTest.testPrimitive":180,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":35,"org.easymock.tests.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":383,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":403,"org.easymock.tests.UsageTest.argumentsOrdered":376,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":197,"org.easymock.tests.ReplayStateInvalidUsageTest.times":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests2.DependencyTest.testClassMocking":285,"org.easymock.tests2.AnswerTest.answer":60,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":417,"org.easymock.tests2.CaptureTest.testAnd":177,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":407,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":31,"org.easymock.tests.LimitationsTest.mockFinalMethod":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":429,"org.easymock.tests2.DependencyTest.testClassMockingSupport":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":391,"org.easymock.tests2.CaptureTest.testCapture1_2446744":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":415,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":40,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":308,"org.easymock.samples.PartialClassMockTest.testGetArea":106,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":387,"org.easymock.tests2.UsageTest.niceToStrict":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":297,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.MockBuilderTest.testCreateMock":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":170,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":421,"org.easymock.tests.UsageOverloadedMethodTest.overloading":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":306,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":373,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":185,"org.easymock.tests2.EasyMockSupportClassTest.testAll":290,"org.easymock.tests.MockClassControlTest.testEquals":337,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":416,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":384,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":351,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":428,"org.easymock.samples.BasicClassMockTest.testPrintContent":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":274,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":393,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":318,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":319,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":8,"org.easymock.tests2.CaptureTest.testCaptureFirst":187,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":168,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":97,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":249,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":425,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":34,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":401,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":32,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":381,"org.easymock.tests.UsageCallCountTest.tooManyCalls":250,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":143,"org.easymock.tests.MockingTest.testNiceClassMocking":330,"org.easymock.tests.MockingTest.testClassMocking":328,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":443,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":120,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":7,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":171,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":205,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":404,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":311,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":270,"org.easymock.tests.MockClassControlTest.testHashCode":336,"org.easymock.tests2.EasyMockSupportTest.testVerify":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":299,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":405,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":64,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":414,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":413,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests2.CaptureTest.testCaptureMultiple":352,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":174,"org.easymock.tests.DefaultClassInstantiatorTest.object":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":400,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":409,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":100,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":87,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":334,"org.easymock.tests2.UsageTest.resumeIfFailure":362,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":11,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":156,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":389,"org.easymock.samples.SupportTest.voteForRemovals":260,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":28,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":408,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":390,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":48,"org.easymock.tests.UsageExpectAndThrowTest.object":26,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":132,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":204,"org.easymock.tests.UsageStrictMockTest.range":72,"org.easymock.samples.ConstructorCalledMockTest.testTax":349,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":287,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":388,"org.easymock.tests2.CaptureTest.testCaptureNone":184,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":264,"org.easymock.tests.UsageUnorderedTest.message":78,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":302,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":39,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":438,"org.easymock.tests2.StubTest.stub":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":10,"org.easymock.tests.UsageExpectAndThrowTest.longType":19,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":437,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":137,"org.easymock.tests2.SerializationTest.testClass":88,"org.easymock.tests.LimitationsTest.mockNativeMethod":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":279,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":265,"org.easymock.tests2.NameTest.nameForMocksControl":367,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":292,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":20,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":95,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.CaptureTest.testCaptureLast":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":148,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":123,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":133,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":24,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":360,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":136,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":268,"org.easymock.samples.ExampleTest.removeNonExistingDocument":445,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":435,"org.easymock.tests.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":271,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":267,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":341,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":159,"org.easymock.tests2.MockBuilderTest.testCreateMockString":98,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.floatType":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":293,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests.UsageVerifyTest.twoThrows":47,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":101,"org.easymock.tests.LimitationsTest.privateConstructor":325,"org.easymock.tests2.UsageConstraintsTest.testNotNull":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests2.UsageTest.defaultResetToNice":359,"org.easymock.samples.ExampleTest.voteAgainstRemovals":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":278,"org.easymock.tests2.CallbackTest.callback":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":315,"org.easymock.tests.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":424,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":266,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.MockingTest.testStrictClassMocking":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":147,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":146,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":50,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.CompareToTest.testGreateOrEqual":56,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":161,"org.easymock.tests2.NameTest.nameForNiceMock":366,"org.easymock.tests2.DependencyTest.testInterfaceMocking":149,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":303,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.AnswerTest.stubAnswer":49,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":71,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":412,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":157,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":350,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":117,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.SerializationTest.test":155,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":340,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":259,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":294,"org.easymock.tests.GenericTest.testPackageScope":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":275,"org.easymock.tests2.NameTest.nameForMock":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.UsageStrictMockTest.differentMethods":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":63,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":212,"org.easymock.tests2.NameTest.nameForStrictMock":365,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":323,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":109,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":342,"org.easymock.tests.ErrorMessageTest.testGetters":76,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":90,"org.easymock.tests2.UsageStrictMockTest.range":68,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":272,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":369,"org.easymock.tests2.CaptureTest.testCaptureRightOne":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":298,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":263,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":312,"org.easymock.tests.UsageTest.wrongArguments":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":295,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":444,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":61,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.CaptureTest.testCaptureFromStub":355,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":91,"org.easymock.tests.UsageTest.unexpectedCallWithArray":410,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":379,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests2.CaptureTest.testCapture":354,"org.easymock.tests2.UsageConstraintsTest.constraints":118,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageStrictMockTest.testVerify":380,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":426,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":195,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.LimitationsTest.abstractClass":324,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":196,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":370}}]
