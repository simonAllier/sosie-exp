[{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[1,2,3,4,128,130,131,172,173,179,180,383,391,392,394,395,400,402,405,406,451,452,453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,51,53,54,60,61,62,63,64,65,66,67,68,71,76,84,85,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,107,108,116,117,118,119,122,124,127,128,129,130,131,132,136,139,149,155,163,170,171,172,173,174,175,176,177,179,180,181,182,183,186,187,194,201,203,204,205,206,207,208,210,211,212,214,215,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,248,249,250,251,252,253,255,256,258,259,260,261,262,264,265,268,270,271,272,274,275,276,277,278,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,315,316,317,318,320,321,330,331,333,334,351,383,390,391,392,393,394,395,396,398,399,400,402,403,404,405,406,407,415,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,451,452,453,463,464,466,470,472,473,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[477,478,479,480,481,482,125],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[421,422,423,424,426,427],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[425,483,484],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[36,485,486,487,488,489,490,491,492,493,494,495,128,130,131,172,173,179,180,496,497,498,499,500,501,502,383,391,392,394,395,400,401,402,405,406,448,449,451,452,453,471,474,475,476],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[187,216,216,217,217],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[24,29,39,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[202],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[18,37,43,503],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[28,34,46,504],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,505,506,507,508,509,510,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,511,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,512,513,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.LastControl:95","failures":[20,21,24,26,27,29,39,44,95,97,105],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[51,53,54,536,219],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[486,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[47,48,49,50,51,53,54,55,56,58,59,60,69,72,75,76,79,120,124,125,139,149,155,216,216,217,217,219,263,266,322,327],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[537],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[263,264,265,266,267],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[27,28],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[95,96,97,98,99,100,101,102,104,105,106,107,108,538],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[143],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[130,394,539,452,453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[486,493,496,498,391,401],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,540,48,49,541,50,51,52,53,477,54,55,56,57,58,542,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,512,513,543,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,544,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,545,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,546,421,422,423,424,425,426,547,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,53,54,58,60,61,62,63,64,65,66,67,68,71,75,76,77,84,85,86,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,107,108,116,117,118,119,122,124,126,127,128,129,130,131,132,136,139,149,155,163,170,171,172,173,174,175,176,177,178,179,180,181,182,183,186,187,188,194,201,203,204,205,206,207,208,210,211,212,214,215,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,248,249,250,251,252,253,255,256,257,258,259,260,261,262,264,265,268,269,270,271,272,273,274,275,276,277,278,280,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,313,315,316,317,318,320,321,330,331,332,333,334,351,383,389,390,391,392,393,394,395,396,397,398,399,400,402,403,404,405,406,407,415,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,451,452,453,463,464,466,470,472,473,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[548],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,540,48,49,541,50,51,52,53,477,54,55,56,57,58,542,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,512,513,543,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,544,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,545,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,546,421,422,423,424,425,426,547,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[130,131,173,179,180,549,545,550,502,383,391,394,395,401,402,405,406,452,453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":399,"org.easymock.tests2.UsageTest.argumentsOrdered":180,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":366,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":218,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":412,"org.easymock.tests.MockingTest.testPartialClassMocking":463,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":535,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":478,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":274,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":419,"org.easymock.samples.ExampleTest.answerVsDelegate":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":327,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":468,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":66,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":14,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":312,"org.easymock.tests2.CaptureTest.testPrimitive":98,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageTest.moreThanOneArgument":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":456,"org.easymock.tests.UsageTest.argumentsOrdered":406,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":482,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":513,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":519,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":489,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":548,"org.easymock.tests2.DependencyTest.testClassMocking":114,"org.easymock.tests2.AnswerTest.answer":183,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":83,"org.easymock.tests2.CaptureTest.testAnd":95,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":324,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":541,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":270,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":336,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":518,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":300,"org.easymock.tests.LimitationsTest.mockFinalMethod":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":388,"org.easymock.tests2.DependencyTest.testClassMockingSupport":115,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":448,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":81,"org.easymock.tests.UsageThrowableTest.throwError":231,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":326,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":545,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":157,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":522,"org.easymock.samples.PartialClassMockTest.testGetArea":219,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests2.CompareToTest.testLessOrEqual":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":144,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests2.ThreadingTest.testChangeDefault":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.tests2.MockBuilderTest.testCreateMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":294,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":382,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":417,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":473,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":439,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":483,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":254,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.MockClassControlTest.testEquals":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":265,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":386,"org.easymock.tests2.CaptureTest.testCaptureAll":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":82,"org.easymock.tests.MockNameTest.defaultName":459,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":457,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.samples.ExampleTest.voteForRemovals":228,"org.easymock.tests.UsageVarargTest.allKinds":262,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":387,"org.easymock.samples.BasicClassMockTest.testPrintContent":215,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":237,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":416,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":196,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":547,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":523,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":427,"org.easymock.samples.ExampleTest.voteForRemoval":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":78,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":328,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":543,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":69,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":515,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":398,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":7,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":411,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":8,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":435,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":261,"org.easymock.tests.GenericTest.testBridgedEquals":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":320,"org.easymock.tests.UsageExpectAndReturnTest.longType":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":384,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":5,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":536,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":42,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":454,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.UsageCallCountTest.tooManyCalls":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":497,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":236,"org.easymock.tests.MockingTest.testNiceClassMocking":469,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":206,"org.easymock.tests.MockingTest.testClassMocking":461,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":314,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":250,"org.easymock.tests.MockTypeTest.fromEasyMockClass":325,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":203,"org.easymock.tests.UsageExpectAndReturnTest.object":438,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":479,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":256,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":282,"org.easymock.tests.UsageTest.exactCallCountByLastCall":407,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":501,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":444,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":190,"org.easymock.tests.MockClassControlTest.testHashCode":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":146,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":488,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":470,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":381,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":550,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":80,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":113,"org.easymock.tests.UsageVarargTest.varargCharAccepted":255,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":546,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":380,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":280,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":189,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":521,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":291,"org.easymock.tests.CapturesMatcherTest.test":538,"org.easymock.tests.ReplayStateInvalidCallsTest.times":527,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":445,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":408,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":528,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests2.UsageTest.resumeIfFailure":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":414,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":437,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":62,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":372,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":222,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":297,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":378,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":184,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":246,"org.easymock.tests.UsageExpectAndThrowTest.object":295,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":525,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":331,"org.easymock.tests.UsageStrictMockTest.range":394,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":111,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":296,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":53,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":133,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":418,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":517,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":355,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":506,"org.easymock.tests.UsageUnorderedTest.message":383,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":549,"org.easymock.tests.UsageVerifyTest.twoReturns":453,"org.easymock.tests.UsageVarargTest.varargByteAccepted":260,"org.easymock.tests2.ThreadingTest.testThreadSafe":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":150,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":318,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":214,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":97,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.StubTest.stub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":425,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.SerializationTest.testClass":60,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":447,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":533,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":507,"org.easymock.tests2.NameTest.nameForMocksControl":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.MockedExceptionTest.testMockedException":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":138,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":404,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":466,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":289,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":63,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":54,"org.easymock.tests.MockingTest.testNicePartialClassMocking":464,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":449,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":532,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":41,"org.easymock.tests.MockingTest.testTwoMocks":462,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":529,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":293,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":510,"org.easymock.samples.ExampleTest.removeNonExistingDocument":229,"org.easymock.tests.UsageStrictMockTest.differentMethods":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":191,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":509,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ConstraintsToStringTest.andToString":492,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":86,"org.easymock.tests2.MockBuilderTest.testCreateMockString":59,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":140,"org.easymock.tests.UsageExpectAndThrowTest.floatType":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":544,"org.easymock.tests.UsageVerifyTest.twoThrows":452,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.LimitationsTest.privateConstructor":350,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":238,"org.easymock.tests2.UsageTest.defaultResetToNice":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests.UsageVarargTest.differentLength":257,"org.easymock.tests2.CallbackTest.callback":204,"org.easymock.tests2.UsageConstraintsTest.equals":22,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":499,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":72,"org.easymock.tests.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":420,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":508,"org.easymock.tests.UsageThrowableTest.throwCheckedException":235,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":460,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":210,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":188,"org.easymock.tests2.CompareToTest.testGreateOrEqual":504,"org.easymock.tests.ObjectMethodsTest.testHashCode":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":481,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":531,"org.easymock.tests2.NameTest.nameForNiceMock":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":88,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":526,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":480,"org.easymock.samples.ExampleTest.addDocument":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.DelegateToTest.testStubDelegate":91,"org.easymock.tests2.AnswerTest.stubAnswer":187,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":392,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":55,"org.easymock.tests.UsageVarargTest.varargLongAccepted":259,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":446,"org.easymock.tests.UsageExpectAndReturnTest.floatType":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":124,"org.easymock.tests2.ConstraintsToStringTest.orToString":485,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":198,"org.easymock.tests.UsageThrowableTest.noUpperLimit":232,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":109,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests2.SerializationTest.test":61,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":429,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.samples.SupportTest.addDocument":221,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":209,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":516,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":141,"org.easymock.tests.GenericTest.testPackageScope":264,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":197,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":514,"org.easymock.tests2.NameTest.nameForMock":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":542,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":299,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":271,"org.easymock.tests2.MockedExceptionTest.testRealException":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":500,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":2,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":110,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":520,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":193,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":64,"org.easymock.tests.UsageTest.wrongArguments":402,"org.easymock.tests2.MockBuilderTest.testWithConstructor":540,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":142,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":357,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":258,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":319,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":534,"org.easymock.tests2.UsageConstraintsTest.cmpTo":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":185,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":401,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":530,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":442,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":393,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.samples.ExampleTest.addAndChangeDocument":230,"org.easymock.tests2.ConstraintsToStringTest.notToString":487,"org.easymock.tests.UsageStrictMockTest.testVerify":397,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":220,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":390,"org.easymock.tests2.CompareToTest.testGreateThan":537,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":385,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":434,"org.easymock.tests.LimitationsTest.abstractClass":349,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":539,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":11,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252}}]
