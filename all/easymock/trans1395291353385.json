[{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,0,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[215,216,217,218,219,220,221],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[222,215,216,217,218,219,221,118,223,124,224,225,226],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[142],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[227,127,129,143,148],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,228,229,230,231,232,233,234,235,236,237,238,239,240],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,241,242,243,4,5,244,6,245,246,247,248,249,250,251,252,7,8,9,10,11,12,13,14,15,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,16,286,287,288,289,228,17,18,19,290,20,21,291,22,23,24,25,26,292,293,27,28,294,295,296,297,298,299,300,301,29,230,30,302,231,31,32,33,34,35,36,37,38,39,40,41,42,43,44,303,45,46,304,305,306,307,308,47,48,309,310,49,311,312,313,314,315,316,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,317,71,232,233,318,319,234,235,320,72,73,74,75,76,77,321,322,323,324,78,79,325,326,327,328,329,330,331,332,333,334,80,81,82,83,335,336,337,338,339,340,341,342,343,344,345,346,84,85,347,348,86,349,87,88,89,90,91,92,350,351,352,353,93,354,355,356,357,358,359,360,361,362,363,364,365,366,367,94,236,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,368,369,370,371,372,373,374,375,376,377,378,379,380,115,116,381,382,117,118,223,383,119,384,385,386,387,388,389,390,391,392,393,394,395,396,120,121,397,237,122,123,124,125,126,127,128,129,130,398,131,132,133,134,135,0,399,136,137,138,139,140,141,142,143,144,145,146,147,400,148,149,150,151,401,402,403,404,405,406,407,408,409,410,411,412,413,414,152,153,415,416,417,154,155,418,156,157,158,159,160,419,420,421,422,423,161,162,424,224,425,426,225,427,428,429,430,163,164,165,166,431,167,432,168,433,169,170,238,171,172,434,435,173,239,240,174,436,175,437,438,176,177,178,439,179,180,181,182,183,184,185,186,440,187,188,189,190,191,192,441,442,193,194,195,196,197,443,444,198,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,199,470,200,201,202,203,471,472,204,473,474,205,475,206,476,477,478,479,480,207,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,208,209,210,211,212,213,497,214,498],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[1,2,3,228,230,30,231,31,71,233,234,235,121,237,122,170,238,239,240,179,180,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[1,231,31,237,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[1,2,3,241,242,243,4,5,244,6,245,246,247,248,249,250,251,252,7,8,9,10,11,12,13,14,15,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,285,16,286,287,288,289,228,17,18,19,290,20,21,291,22,23,24,25,26,293,27,28,294,295,296,297,298,299,300,301,29,230,30,302,231,31,32,33,34,35,36,37,38,39,40,41,42,43,44,303,45,46,304,305,306,307,308,47,48,309,310,49,311,312,313,314,315,316,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,317,71,232,233,318,319,234,235,320,72,73,74,75,76,77,321,322,323,324,78,79,325,326,327,328,329,330,331,332,333,334,80,81,82,83,335,336,337,338,339,340,341,342,343,344,345,346,84,85,347,348,86,349,87,88,89,90,91,92,350,351,352,353,93,354,355,356,357,358,359,360,361,362,363,364,365,366,367,94,236,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,368,369,370,371,372,373,374,375,376,377,378,379,380,115,116,381,382,117,521,118,223,119,384,385,386,387,388,389,390,391,392,393,394,395,396,120,121,397,237,122,123,124,125,126,127,128,129,130,398,131,132,133,134,135,0,399,136,137,138,139,140,141,142,143,144,145,146,147,400,148,149,150,151,401,402,403,404,405,406,407,408,409,410,411,412,413,414,152,153,415,416,417,154,155,418,156,157,158,159,160,420,421,423,161,162,424,425,426,225,427,428,430,163,164,165,166,431,167,432,168,433,169,170,238,171,172,434,435,173,239,240,174,436,175,437,438,176,177,178,439,179,180,181,182,183,184,185,186,440,187,188,189,190,191,192,441,442,193,194,195,196,522,197,443,444,198,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,199,470,200,201,202,203,471,472,204,473,474,205,475,206,476,477,478,479,480,207,481,482,483,484,486,487,488,489,490,491,492,493,494,495,496,208,209,210,211,212,213,497,214,498],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[187,188,189,191,523,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[259,437,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[124,125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.Range:44","failures":[1,2,3,241,242,243,4,5,244,6,245,246,247,248,249,250,251,252,7,8,9,10,11,12,13,14,15,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,16,286,287,288,289,228,17,18,19,290,20,21,291,22,23,24,25,26,292,293,27,28,294,295,296,297,298,299,300,301,29,230,30,302,231,31,32,33,34,35,36,37,38,39,40,41,42,43,44,303,45,46,304,305,306,307,308,47,48,309,310,49,311,312,313,314,315,316,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,317,71,232,233,318,319,234,235,320,72,73,74,75,76,77,321,322,323,324,78,79,325,326,327,328,329,330,331,332,333,334,80,81,82,83,335,336,337,338,339,340,341,342,343,344,345,346,84,85,347,348,86,349,87,88,89,90,91,92,350,351,352,353,93,354,355,356,357,358,359,360,361,362,363,364,365,366,367,94,236,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,368,369,370,371,372,373,374,375,376,377,378,379,380,115,116,381,382,117,118,223,383,119,384,385,386,387,388,389,390,391,392,393,394,395,396,120,121,397,237,122,123,124,125,126,127,128,129,130,398,131,132,133,134,135,0,399,136,137,138,139,140,141,142,143,144,145,146,147,400,148,149,150,151,401,402,403,404,405,406,407,408,409,410,411,412,413,414,152,153,415,416,417,154,155,418,156,157,158,159,160,419,420,421,422,423,161,162,424,224,425,426,225,427,428,429,430,163,164,165,166,431,167,432,168,433,169,170,238,171,172,434,435,173,239,240,174,436,175,437,438,176,177,178,439,179,180,181,182,183,184,185,186,440,187,188,189,190,191,192,441,442,193,194,195,196,197,443,444,198,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,199,470,200,201,202,203,471,472,204,473,474,205,475,206,476,477,478,479,480,207,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,208,209,210,211,212,213,497,214,498],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:74","sourceCode":"if ((java.util.List<org.easymock.internal.UnorderedBehavior>.isEmpty()) || (!(org.easymock.internal.MocksBehavior.lastBehaviorList().allowsExpectedInvocation(org.easymock.internal.ExpectedInvocation, boolean)))) {\n    java.util.List<org.easymock.internal.UnorderedBehavior>.add(new org.easymock.internal.UnorderedBehavior(boolean));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,249,250,7,8,9,10,16,286,228,17,18,19,20,21,291,22,23,24,25,26,293,27,28,301,29,230,30,302,231,31,32,33,34,35,36,37,38,39,44,303,45,46,304,305,306,307,308,47,48,309,310,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,317,71,233,318,319,234,235,320,72,74,75,76,77,322,323,78,79,84,85,86,91,92,363,365,366,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,373,115,116,381,117,118,119,389,396,120,121,397,237,122,123,124,125,126,127,128,129,130,131,132,133,134,135,0,399,136,137,138,139,140,141,142,143,144,145,146,147,400,148,149,150,151,401,402,403,404,405,406,407,408,409,410,411,412,413,414,152,153,415,417,154,155,420,161,424,425,428,165,167,168,433,169,170,238,171,172,434,435,173,239,240,174,436,175,176,177,178,179,180,181,182,183,184,185,186,440,187,188,189,190,191,192,442,193,194,195,196,197,443,444,198,448,451,461,467,199,470,200,201,202,203,204,475,206,476,207,481,489,490,491,492,493,496,208,209,210,211,212,213,214,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[241,242,243,247,278,279,280,281,282,283,285,44,78,79,326,347,348,86,349,353,93,354,355,356,357,358,359,126,414,415,164,165,445,448,450,452,453,456,459,462,463,466,199,470,201,202,203,204,474,205,476,477,478,482,486,491,492],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[204,473,474,205,475,206,476,477,478,482,483,486,491,492,494,494,495,495,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,241,242,243,4,5,244,6,245,246,247,248,249,250,251,252,7,8,9,10,11,12,13,14,15,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,16,286,287,288,289,228,17,18,19,290,20,21,291,22,23,24,25,26,292,293,27,28,294,295,296,297,298,299,300,301,29,230,30,302,231,31,32,33,34,35,36,37,38,39,40,41,42,43,44,303,45,46,304,305,306,307,308,47,48,309,310,49,311,312,313,314,315,316,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,317,71,232,233,318,319,234,235,320,72,73,74,75,76,77,321,322,323,324,78,79,325,326,327,328,329,330,331,332,333,334,80,81,82,83,335,336,337,338,339,340,341,342,343,344,345,346,84,85,347,348,86,349,87,88,89,90,91,92,350,351,352,353,93,354,355,356,357,358,359,360,361,362,363,364,365,366,367,94,236,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,368,369,370,371,372,373,374,375,376,377,378,379,380,115,116,381,382,117,118,223,383,119,384,385,386,387,388,389,390,391,392,393,394,395,396,120,121,397,237,122,123,124,125,126,127,128,129,130,398,131,132,133,134,135,0,399,136,137,138,139,140,141,142,143,144,145,146,147,400,148,149,150,151,401,402,403,404,405,406,407,408,409,410,411,412,413,414,152,153,415,416,417,154,155,418,156,157,158,159,160,419,420,421,422,423,161,162,424,224,425,426,225,427,428,429,430,163,164,165,166,431,167,432,168,433,169,170,238,171,172,434,435,173,239,240,174,436,175,437,438,176,177,178,439,179,180,181,182,183,184,185,186,440,187,188,189,190,191,192,441,442,193,194,195,196,197,443,444,198,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,199,470,200,201,202,203,471,472,204,473,474,205,475,206,476,477,478,479,480,207,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,208,209,210,211,212,213,497,214,498],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[2,3,7,228,524,229,525,292,230,231,31,232,233,234,235,321,322,323,236,237,122,410,420,427,428,430,238,239,240,174],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[129,130,132,134,135,399,145,149,183,185,192],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":130,"org.easymock.tests2.UsageTest.argumentsOrdered":240,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":317,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":263,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":172,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":493,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":88,"org.easymock.tests.MockingTest.testPartialClassMocking":4,"org.easymock.tests.MockClassControlTest.testToString":354,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":439,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":451,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":51,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":481,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":47,"org.easymock.tests2.UsageTest.wrongArguments":238,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":82,"org.easymock.samples.ExampleTest.answerVsDelegate":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests2.UsageConstraintsTest.testNull":132,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":201,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":410,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":359,"org.easymock.tests2.CaptureTest.testPrimitive":186,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":70,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":41,"org.easymock.tests.UsageTest.argumentsOrdered":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":34,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":378,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":38,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":389,"org.easymock.tests.ReplayStateInvalidUsageTest.times":343,"org.easymock.tests2.DependencyTest.testClassMocking":479,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":159,"org.easymock.tests2.CaptureTest.testAnd":183,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":329,"org.easymock.tests2.UsageTest.strictResetToDefault":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":9,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":252,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":503,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":66,"org.easymock.tests.LimitationsTest.mockFinalMethod":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":15,"org.easymock.tests2.DependencyTest.testClassMockingSupport":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":440,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":157,"org.easymock.tests.UsageThrowableTest.throwError":303,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":337,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":331,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":292,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":507,"org.easymock.samples.PartialClassMockTest.testGetArea":496,"org.easymock.tests.MockingTest.testInterfaceMocking":244,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":338,"org.easymock.tests2.CompareToTest.testLessOrEqual":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":456,"org.easymock.tests2.UsageTest.niceToStrict":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":52,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":300,"org.easymock.tests2.ThreadingTest.testChangeDefault":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":60,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":406,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":80,"org.easymock.tests.UsageOverloadedMethodTest.overloading":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":191,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":290,"org.easymock.tests2.EasyMockSupportClassTest.testAll":448,"org.easymock.tests.MockClassControlTest.testEquals":358,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":68,"org.easymock.tests2.CaptureTest.testCaptureAll":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":13,"org.easymock.tests.MockNameTest.defaultName":311,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":335,"org.easymock.samples.ExampleTest.voteForRemovals":213,"org.easymock.tests.UsageVarargTest.allKinds":26,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":1,"org.easymock.samples.BasicClassMockTest.testPrintContent":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":14,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":307,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":375,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":221,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":8,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":476,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":508,"org.easymock.samples.ExampleTest.voteForRemoval":210,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":477,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":333,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":471,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":500,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":433,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":403,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":87,"org.easymock.tests2.CaptureTest.testCaptureFirst":193,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":404,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":436,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":444,"org.easymock.tests2.CaptureTest.testCapture2_2446744":442,"org.easymock.tests2.UsageTest.moreThanOneArgument":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":271,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":25,"org.easymock.tests.GenericTest.testBridgedEquals":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":322,"org.easymock.tests.UsageExpectAndReturnTest.longType":98,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":69,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":400,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":323,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":152,"org.easymock.tests.MockingTest.testNiceClassMocking":247,"org.easymock.tests.MockingTest.testClassMocking":242,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":73,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":165,"org.easymock.tests2.UsageConstraintsTest.testFind":131,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":28,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":168,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":409,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":216,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":298,"org.easymock.tests.UsageTest.exactCallCountByLastCall":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":249,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":111,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":17,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":365,"org.easymock.tests.MockClassControlTest.testHashCode":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":458,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":363,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":524,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":156,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":431,"org.easymock.tests.UsageVarargTest.varargCharAccepted":20,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":276,"org.easymock.tests2.UsageTest.openCallCountByLastCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":412,"org.easymock.tests.DefaultClassInstantiatorTest.object":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":350,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":296,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":506,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":475,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":57,"org.easymock.tests.ReplayStateInvalidCallsTest.times":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":467,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":355,"org.easymock.tests2.UsageTest.resumeIfFailure":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":90,"org.easymock.tests2.StubTest.stubWithReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":126,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":269,"org.easymock.samples.SupportTest.voteForRemovals":490,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":63,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":275,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":437,"org.easymock.tests.UsageExpectAndThrowTest.object":61,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":362,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":381,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":510,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":85,"org.easymock.samples.ConstructorCalledMockTest.testTax":494,"org.easymock.tests.UsageStrictMockTest.range":231,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":487,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":445,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":81,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":502,"org.easymock.tests2.CaptureTest.testCaptureNone":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":289,"org.easymock.tests.UsageUnorderedTest.message":228,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":525,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":24,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":462,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":77,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":491,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":299,"org.easymock.tests2.CaptureTest.testCapture_2617107":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":310,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":341,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":397,"org.easymock.tests2.SerializationTest.testClass":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":373,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":518,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests2.NameTest.nameForMocksControl":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests2.MockedExceptionTest.testMockedException":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":450,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":432,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":55,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":425,"org.easymock.tests.MockingTest.testNicePartialClassMocking":5,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests2.CaptureTest.testCaptureLast":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":517,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":155,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":135,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":243,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":514,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":59,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":150,"org.easymock.samples.ExampleTest.removeNonExistingDocument":497,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":521,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":280,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":443,"org.easymock.tests2.MockBuilderTest.testCreateMockString":430,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":53,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":176,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":383,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":461,"org.easymock.samples.ExampleTest.voteAgainstRemoval":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests.LimitationsTest.privateConstructor":348,"org.easymock.tests2.UsageConstraintsTest.testNotNull":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":308,"org.easymock.tests2.UsageTest.defaultResetToNice":173,"org.easymock.samples.ExampleTest.voteAgainstRemovals":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests.UsageVarargTest.differentLength":291,"org.easymock.tests2.CallbackTest.callback":119,"org.easymock.tests2.UsageConstraintsTest.equals":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":473,"org.easymock.tests.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":309,"org.easymock.tests.UsageCallCountTest.tooFewCalls":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":415,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":83,"org.easymock.tests.UsageThrowableTest.throwCheckedException":305,"org.easymock.tests.MockingTest.testStrictClassMocking":241,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":153,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":417,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":178,"org.easymock.tests.ObjectMethodsTest.testHashCode":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":219,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":516,"org.easymock.tests2.NameTest.nameForNiceMock":181,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":511,"org.easymock.tests2.DependencyTest.testInterfaceMocking":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":217,"org.easymock.samples.ExampleTest.addDocument":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.AnswerTest.stubAnswer":177,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":426,"org.easymock.tests.UsageVarargTest.varargLongAccepted":23,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":118,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":495,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.UsageThrowableTest.noUpperLimit":45,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":128,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":187,"org.easymock.tests2.SerializationTest.test":125,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":279,"org.easymock.tests2.UsageConstraintsTest.testSame":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":96,"org.easymock.samples.SupportTest.addDocument":489,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":453,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":376,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":245,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":499,"org.easymock.tests2.NameTest.nameForMock":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":429,"org.easymock.tests2.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":474,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":65,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":10,"org.easymock.tests2.MockedExceptionTest.testRealException":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":226,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":346,"org.easymock.tests2.NameTest.nameForStrictMock":180,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":202,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":420,"org.easymock.tests2.UsageStrictMockTest.range":237,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":505,"org.easymock.tests2.UsageConstraintsTest.lessThan":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":457,"org.easymock.tests2.CaptureTest.testCaptureRightOne":192,"org.easymock.tests2.UsageConstraintsTest.testOr":134,"org.easymock.tests.UsageRangeTest.combination":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":470,"org.easymock.tests.UsageTest.wrongArguments":233,"org.easymock.tests2.MockBuilderTest.testWithConstructor":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":454,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":254,"org.easymock.tests.UsageVarargTest.varargShortAccepted":22,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":321,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":519,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":438,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":256,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":435,"org.easymock.tests2.CaptureTest.testCaptureFromStub":441,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":336,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":421,"org.easymock.tests.UsageTest.unexpectedCallWithArray":232,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":515,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":109,"org.easymock.tests2.CaptureTest.testCapture":523,"org.easymock.tests2.UsageConstraintsTest.constraints":129,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.samples.ExampleTest.addAndChangeDocument":214,"org.easymock.tests.UsageStrictMockTest.testVerify":33,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":498,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":12,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.LimitationsTest.abstractClass":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":37,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":407,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":18}}]
