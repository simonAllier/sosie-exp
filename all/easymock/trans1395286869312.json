[{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[1,23,38,62,64,65,66,67,68,69,72,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,142,143,144,145,146,147,159,242,243,244,245,249,256,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[233,238,297,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[320,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[322,323,183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[324,325,326,327,328,329,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[183],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[3,4,332,11,21,333,334,335,336,337,338,61,115,116,339,340,341,141,342,148,149,150,151,152,153,154,155,197,343,344,243,244,345,346,347,348,349,350,351,352,353,354,291,292,294,295,296,298,299,300,303,304,319,355,309,356,357],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[44,45,47,48,50,99,190,192,193,292,294,296,300,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:773","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[133,214,254,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[3,4,332,5,6,8,11,21,333,334,335,336,337,338,61,358,115,116,359,339,117,120,340,341,141,342,148,149,150,151,152,153,154,155,186,360,195,197,343,225,226,344,227,228,233,234,235,236,237,238,361,362,363,239,240,241,242,243,244,345,364,365,346,366,347,367,348,349,368,369,350,370,371,351,372,373,352,353,374,375,354,376,377,378,291,292,294,295,296,297,298,379,299,300,301,302,303,304,319,380,381,355,306,307,309,356,357,382,382,383,383,384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"failures":[0,1,2,45,48,98,190,193,251,266,267,268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[385,386,387,388],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,2,45,97,101,102,105,190,249,255,256,261,262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[389,195,196,197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[390,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,12,13,14,15,24,38,47,48,63,77,78,81,83,84,85,86,88,89,90,91,93,94,95,96,97,98,101,102,108,162,163,166,168,169,170,171,173,174,175,176,178,179,180,181,185,187,192,193,198,199,200,202,203,204,205,210,211,212,213,215,216,223,224,247,248,251,254,255,256,260,271,272,274,275,277,278,282,283,284,286,287,288,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[332,5,6,8,392,61,115,116,359,117,120,141,148,149,150,151,152,153,186,195,197,343,225,226,344,227,228,233,234,235,237,238,361,362,239,240,241,244,346,367,373,376,291,292,294,295,296,297,298,300,301,302,303,319,356,357,382,382,383,383,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:315","failures":[23,38,64,68,69,72,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,142,143,144,145,146,147,159,242,243,244,245,249,256,285],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[393,215],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[0,47,48,192,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[336,394,395],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.RecordState:274","failures":[156,187,247,248,262,321,396,263,264,265,312],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[397,398,379,382,383],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[200,201,203,205,206,399,217,222,270,272,280],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[186,360,195,397,400,401,363,402,398,403,404,405,379,382,383],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[238,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[130,288,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":201,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.UsageTest.argumentsOrdered":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":143,"org.easymock.tests.MockingTest.testPartialClassMocking":5,"org.easymock.tests.MockClassControlTest.testToString":150,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageTest.wrongArguments":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":125,"org.easymock.samples.ExampleTest.answerVsDelegate":312,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":120,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":10,"org.easymock.tests2.UsageConstraintsTest.testNull":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":294,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":155,"org.easymock.tests2.CaptureTest.testPrimitive":273,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":74,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":96,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":58,"org.easymock.tests.UsageTest.argumentsOrdered":104,"org.easymock.tests.UsageVarargTest.varargIntAccepted":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":51,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":307,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":55,"org.easymock.tests.ReplayStateInvalidUsageTest.times":135,"org.easymock.tests2.DependencyTest.testClassMocking":380,"org.easymock.tests2.AnswerTest.answer":262,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":232,"org.easymock.tests2.CaptureTest.testAnd":270,"org.easymock.tests2.UsageTest.strictResetToDefault":250,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":57,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":14,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests.LimitationsTest.mockFinalMethod":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":20,"org.easymock.tests2.DependencyTest.testClassMockingSupport":381,"org.easymock.tests2.CaptureTest.testCapture1_2446744":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":230,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":129,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":60,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.samples.PartialClassMockTest.testGetArea":384,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":130,"org.easymock.tests.MockingTest.testInterfaceMocking":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":386,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":331,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":237,"org.easymock.tests2.MockBuilderTest.testCreateMock":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":123,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":328,"org.easymock.tests.UsageOverloadedMethodTest.overloading":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":173,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":36,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":394,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":211,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":279,"org.easymock.tests.MockClassControlTest.testEquals":154,"org.easymock.tests2.EasyMockSupportClassTest.testAll":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":231,"org.easymock.tests2.CaptureTest.testCaptureAll":271,"org.easymock.tests2.UsageConstraintsTest.testMatches":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":59,"org.easymock.samples.ExampleTest.voteForRemovals":316,"org.easymock.tests.UsageVarargTest.allKinds":35,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":19,"org.easymock.samples.BasicClassMockTest.testPrintContent":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":68,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":147,"org.easymock.tests2.UsageConstraintsTest.greaterThan":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":13,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":303,"org.easymock.samples.ExampleTest.voteForRemoval":313,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":338,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":304,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":297,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":61,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":142,"org.easymock.tests2.CaptureTest.testCaptureFirst":283,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":320,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":169,"org.easymock.tests2.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.CaptureTest.testCapture2_2446744":282,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":289,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":240,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":34,"org.easymock.tests.GenericTest.testBridgedEquals":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":113,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":95,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":56,"org.easymock.tests.UsageCallCountTest.tooManyCalls":114,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":67,"org.easymock.tests.MockingTest.testNiceClassMocking":11,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":225,"org.easymock.tests.MockingTest.testClassMocking":4,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":107,"org.easymock.tests2.UsageConstraintsTest.testContains":210,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":244,"org.easymock.tests2.UsageConstraintsTest.testFind":202,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests.MockTypeTest.fromEasyMockClass":118,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":248,"org.easymock.tests.UsageExpectAndReturnTest.object":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":29,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":41,"org.easymock.tests.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":330,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":178,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":25,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":158,"org.easymock.tests.MockClassControlTest.testHashCode":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":246,"org.easymock.tests.UsageVarargTest.varargCharAccepted":28,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.object":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":324,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":65,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":179,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":376,"org.easymock.tests2.UsageTest.resumeIfFailure":260,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":145,"org.easymock.tests2.StubTest.stubWithReturnValue":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":405,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":89,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":389,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":321,"org.easymock.tests.UsageExpectAndThrowTest.object":87,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":218,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":140,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":361,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":387,"org.easymock.tests2.CaptureTest.testCaptureNone":278,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":33,"org.easymock.tests2.ThreadingTest.testThreadSafe":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":352,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":111,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":73,"org.easymock.tests2.UsageConstraintsTest.any":208,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":134,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":144,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":336,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":133,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.SerializationTest.testClass":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":359,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.NameTest.nameForMocksControl":269,"org.easymock.tests2.MockedExceptionTest.testMockedException":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":347,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":362,"org.easymock.tests.MockingTest.testNicePartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":296,"org.easymock.tests2.CaptureTest.testCaptureLast":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":219,"org.easymock.tests.MockingTest.testTwoMocks":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":223,"org.easymock.samples.ExampleTest.removeNonExistingDocument":317,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":131,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":334,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":288,"org.easymock.tests2.MockBuilderTest.testCreateMockString":241,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":373,"org.easymock.samples.ExampleTest.voteAgainstRemoval":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":385,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":302,"org.easymock.tests.LimitationsTest.privateConstructor":341,"org.easymock.tests2.UsageConstraintsTest.testNotNull":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":69,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":242,"org.easymock.tests2.UsageTest.defaultResetToNice":257,"org.easymock.samples.ExampleTest.voteAgainstRemovals":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":177,"org.easymock.tests.UsageVarargTest.differentLength":30,"org.easymock.tests2.CallbackTest.callback":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":379,"org.easymock.tests.UsageTest.openCallCountByLastCall":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":126,"org.easymock.tests.UsageThrowableTest.throwCheckedException":66,"org.easymock.tests.MockingTest.testStrictClassMocking":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":136,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":265,"org.easymock.tests.ObjectMethodsTest.testHashCode":40,"org.easymock.tests2.NameTest.nameForNiceMock":268,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":290,"org.easymock.tests2.DependencyTest.testInterfaceMocking":305,"org.easymock.samples.ExampleTest.addDocument":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":353,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":264,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests.UsageVarargTest.varargLongAccepted":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.floatType":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":186,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":383,"org.easymock.tests.UsageThrowableTest.noUpperLimit":63,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":216,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":199,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":355,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":275,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":395,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":163,"org.easymock.tests2.UsageConstraintsTest.testSame":204,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":349,"org.easymock.tests.GenericTest.testPackageScope":115,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":9,"org.easymock.tests2.NameTest.nameForMock":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":398,"org.easymock.tests2.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":15,"org.easymock.tests2.MockedExceptionTest.testRealException":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":404,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":71,"org.easymock.tests2.NameTest.nameForStrictMock":267,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":309,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":217,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":234,"org.easymock.tests2.UsageStrictMockTest.range":192,"org.easymock.tests2.UsageConstraintsTest.lessThan":224,"org.easymock.tests2.CaptureTest.testCaptureRightOne":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":370,"org.easymock.tests2.UsageConstraintsTest.testOr":205,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":292,"org.easymock.tests.UsageTest.wrongArguments":100,"org.easymock.tests2.MockBuilderTest.testWithConstructor":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":368,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":175,"org.easymock.tests.UsageVarargTest.varargShortAccepted":31,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":112,"org.easymock.tests2.UsageConstraintsTest.cmpTo":209,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CaptureTest.testCaptureFromStub":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":128,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":235,"org.easymock.tests.UsageTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":110,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":176,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.UsageConstraintsTest.constraints":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":318,"org.easymock.tests.UsageStrictMockTest.testVerify":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests2.CompareToTest.testGreateThan":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":17,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":168,"org.easymock.tests.LimitationsTest.abstractClass":340,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":54,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":26}}]
