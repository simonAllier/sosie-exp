[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[36,37,38,39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[42,43,44,21,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[45,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[48,49,50,51,52,53,54,38,55,39,56,57,58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[13,61,62,63,64,65,66,67,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,12,121,122,13,61,62,63,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,48,167,168,169,170,171,172,173,174,64,175,176,49,177,178,179,65,180,50,51,181,182,183,66,184,185,186,187,188,189,190,191,192,193,194,195,196,14,197,198,199,200,201,202,203,204,205,15,206,207,208,209,210,16,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,45,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,0,260,1,2,3,4,5,6,261,7,9,10,262,11,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,17,285,18,19,286,20,21,22,23,287,24,288,289,25,26,290,27,291,292,293,294,295,296,28,297,298,299,300,301,29,30,302,303,31,304,305,67,306,307,308,309,310,311,312,313,314,315,316,32,317,318,33,319,34,320,321,322,323,35,324,325,326,327,328,329,330,331,332,52,333,53,54,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,47,350,351,352,353,354,355,356,357,358,38,359,360,55,361,362,363,68,364,39,56,365,69,57,58,366,367,368,369,370,70,71,72,73,74,75,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,76,393,394,60,395,396,77,78,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,46,79,428,429,430,431,432,433,434,435,436,437,438,439,440,80,441,81,82,83,84,85,86,442,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[220,221,224,226,227,229,238,243,0,1,9],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[32],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[107,108,109,110,111,112,113,115,116,117,118,119,120,12,62,123,131,140,141,142,143,144,145,147,148,149,156,164,165,166,48,167,168,174,64,175,176,49,177,178,179,65,50,51,182,66,194,14,15,16,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,45,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,251,253,255,256,257,259,0,260,1,2,3,4,5,6,261,7,9,262,11,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,282,283,284,21,23,24,291,292,293,294,295,296,298,30,304,305,67,310,317,318,331,332,52,333,53,54,358,38,359,360,55,361,362,68,364,56,365,69,57,58,366,369,74,371,390,392,76,395,396,77,78,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,46,428,429,430,432,433,435,436,437,438,439,80,441,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,449,450,452,458,459,460,461,463,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.EasyMock:557","failures":[108,109,110,111,113,115,120,12,121,121,122,122,13,61,62,63,123,131,140,141,142,143,144,145,147,148,149,156,165,48,167,174,64,175,176,177,179,65,180,181,182,183,66,194,14,15,16,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,45,230,231,232,233,234,235,236,237,238,239,240,242,243,244,245,251,253,254,255,256,257,258,259,0,260,2,3,6,261,7,9,10,262,11,263,264,265,266,267,268,269,270,271,272,273,274,276,277,279,280,281,282,283,284,18,21,23,24,26,291,292,293,294,295,296,298,29,30,302,304,305,67,310,311,312,313,314,315,316,317,33,331,332,52,333,53,54,47,355,359,55,361,68,364,365,69,366,369,70,71,72,73,74,75,371,383,390,392,76,394,395,396,77,78,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,46,79,80,441,81,82,83,84,85,86,442,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,443,444,445,449,450,452,458,473,474,475,476,477,478,479,480,481,482,483,495],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[42,43,497,21,29,30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[423],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[123,124,276,498,499,500,501,502,287,289],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[117,118,12,121,121,122,122,13,61,62,123,124,142,143,144,145,148,149,184,188,191,192,193,194,195,196,14,197,198,199,200,201,202,203,204,205,15,206,207,208,209,210,16,211,212,276,278,503,17,497,18,19,20,21,22,23,24,289,25,26,504,27,291,292,294,295,296,28,298,299,300,301,29,30,302,303,31,32,317,318,33,319,34,35,367,368,369,370,371,377,446,447,448,449,450,452,455,465,466,467,468,469,470,471,472,485,486,487,488,489,490,492],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[489,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[108,110,111,113,120,12,121,121,122,122,62,123,131,140,141,142,143,144,145,147,148,149,156,165,48,167,64,175,176,177,179,65,180,181,182,66,194,14,15,16,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,45,230,231,232,233,234,235,236,237,238,239,240,242,243,244,245,256,0,260,2,3,6,261,7,9,10,262,11,263,264,265,266,267,268,269,270,271,272,273,274,276,277,283,18,21,23,24,26,291,292,293,294,295,296,298,29,30,302,304,305,67,310,311,312,313,317,33,331,332,333,54,359,55,361,68,364,365,69,366,369,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,46,80,81,82,83,84,85,86,442,444,445,449,450,452,474,476,477,478,479,480],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[237],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[254,256,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[144,150,205,211,212,292,301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[48,51,55,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":221,"org.easymock.tests2.UsageTest.argumentsOrdered":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":344,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":107,"org.easymock.tests2.DelegateToTest.testReturnException":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.MockingTest.testPartialClassMocking":449,"org.easymock.tests.MockClassControlTest.testToString":467,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":246,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":87,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":395,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":308,"org.easymock.samples.ExampleTest.answerVsDelegate":109,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":454,"org.easymock.tests2.UsageConstraintsTest.testNull":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":294,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":472,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":272,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests.UsageTest.moreThanOneArgument":364,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":478,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":423,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":398,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":402,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.DependencyTest.testClassMocking":138,"org.easymock.tests2.AnswerTest.answer":279,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":173,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":321,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":312,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":330,"org.easymock.tests2.DependencyTest.testClassMockingSupport":139,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":494,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":171,"org.easymock.tests.UsageThrowableTest.throwError":80,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":323,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":212,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":451,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":444,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":201,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":21,"org.easymock.tests2.MockBuilderTest.testCreateMock":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":36,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":306,"org.easymock.tests.UsageOverloadedMethodTest.overloading":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":210,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":414,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":505,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":232,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests.MockClassControlTest.testEquals":471,"org.easymock.tests2.EasyMockSupportClassTest.testAll":194,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":172,"org.easymock.tests2.CaptureTest.testCaptureAll":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":328,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":113,"org.easymock.tests.UsageVarargTest.allKinds":439,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":333,"org.easymock.samples.BasicClassMockTest.testPrintContent":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":329,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":85,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":492,"org.easymock.samples.ExampleTest.voteForRemoval":110,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":64,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":371,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":265,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":266,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":410,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":216,"org.easymock.tests2.CaptureTest.testCapture2_2446744":262,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":351,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":438,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":463,"org.easymock.tests.UsageExpectAndReturnTest.longType":406,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":326,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":442,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":482,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":476,"org.easymock.tests.UsageCallCountTest.tooManyCalls":464,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":84,"org.easymock.tests.MockingTest.testNiceClassMocking":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":143,"org.easymock.tests.MockingTest.testClassMocking":447,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":497,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":457,"org.easymock.tests2.UsageConstraintsTest.testContains":231,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":223,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":67,"org.easymock.tests.MockTypeTest.fromEasyMockClass":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests.UsageExpectAndReturnTest.object":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":433,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":375,"org.easymock.tests.UsageTest.exactCallCountByLastCall":366,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":124,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":392,"org.easymock.tests.MockClassControlTest.testHashCode":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":152,"org.easymock.tests2.EasyMockSupportTest.testVerify":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":203,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":425,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":169,"org.easymock.tests.UsageVarargTest.varargCharAccepted":432,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests.DefaultClassInstantiatorTest.object":485,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":314,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":373,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":129,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":151,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":469,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":420,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":481,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":16,"org.easymock.tests2.UsageTest.resumeIfFailure":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":242,"org.easymock.tests2.SerializationTest.testAllMockedMethod":278,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":47,"org.easymock.samples.SupportTest.voteForRemovals":120,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":37,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":355,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":280,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":97,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":239,"org.easymock.tests2.DelegateToTest.testWrongClass":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":332,"org.easymock.samples.ConstructorCalledMockTest.testTax":121,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":189,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":191,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":445,"org.easymock.tests2.CaptureTest.testCaptureNone":261,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests.UsageVarargTest.varargByteAccepted":437,"org.easymock.tests2.ThreadingTest.testThreadSafe":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":206,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":117,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":376,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":496,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":353,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":489,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests2.SerializationTest.testClass":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":422,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":128,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":43,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests2.NameTest.nameForMocksControl":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":196,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":450,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":126,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":495,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":227,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":240,"org.easymock.tests.MockingTest.testTwoMocks":448,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":244,"org.easymock.samples.ExampleTest.removeNonExistingDocument":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":133,"org.easymock.tests.UsageStrictMockTest.differentMethods":361,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":153,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":487,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":215,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":465,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":197,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":125,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":15,"org.easymock.samples.ExampleTest.voteAgainstRemoval":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":243,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":86,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":346,"org.easymock.tests.UsageVarargTest.differentLength":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":127,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests2.UsageConstraintsTest.equals":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":299,"org.easymock.tests.UsageTest.openCallCountByLastCall":365,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":77,"org.easymock.tests.UsageCallCountTest.tooFewCalls":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":309,"org.easymock.tests.UsageThrowableTest.throwCheckedException":83,"org.easymock.tests.MockingTest.testStrictClassMocking":446,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":147,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":284,"org.easymock.tests.ObjectMethodsTest.testHashCode":374,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":217,"org.easymock.tests2.NameTest.nameForNiceMock":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.DelegateToTest.testStubDelegate":256,"org.easymock.tests2.AnswerTest.stubAnswer":283,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":359,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":288,"org.easymock.tests.UsageVarargTest.varargLongAccepted":436,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":421,"org.easymock.tests.UsageExpectAndReturnTest.floatType":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":122,"org.easymock.tests.UsageThrowableTest.noUpperLimit":441,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":160,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":237,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":219,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests2.SerializationTest.test":277,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":506,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":404,"org.easymock.tests2.UsageConstraintsTest.testSame":225,"org.easymock.samples.SupportTest.addDocument":119,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":198,"org.easymock.tests.GenericTest.testPackageScope":317,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":159,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":453,"org.easymock.tests2.NameTest.nameForMock":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":415,"org.easymock.tests2.UsageStrictMockTest.differentMethods":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":290,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":372,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":313,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":396,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests2.NameTest.nameForStrictMock":248,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":188,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":488,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":18,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":342,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":202,"org.easymock.tests2.UsageConstraintsTest.testOr":226,"org.easymock.tests.UsageRangeTest.combination":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":292,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.MockBuilderTest.testWithConstructor":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":199,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":335,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":490,"org.easymock.tests.UsageVarargTest.varargShortAccepted":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":462,"org.easymock.tests2.UsageConstraintsTest.cmpTo":230,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":19,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":417,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests2.UsageConstraintsTest.constraints":220,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":360,"org.easymock.samples.ExampleTest.addAndChangeDocument":115,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":116,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":327,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":409,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":401,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":269}}]
