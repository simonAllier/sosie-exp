[{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.Range:44","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,0,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,3,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,6,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,9,472,473,474,475,476,477,478,7,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[303,305,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[37,42,103,106,257,260,261,295,298,301,302,305,320,321,322,346,356,362,6,468,469,470,471,9,472,473,474,475,476,477,478,7,479,480,481,482,483],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,45,46,0,47,48,49,50,51,52,58,59,60,61,62,63,67,68,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,108,109,110,111,119,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,149,150,3,151,152,153,154,155,156,160,161,163,167,168,169,170,180,181,182,184,185,187,188,189,190,191,220,234,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,297,300,302,306,307,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,333,365,366,367,368,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,395,396,397,399,402,404,405,406,407,408,6,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,460,461,465,466,468,473,474,480,482,483,484,485,486,487,490,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[191,371,389,407],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,128,129,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,153,232,243,254,255,256,307,436,443,483,484,485,486],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[114,118,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[255,256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,0,47,48,49,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,108,109,110,111,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,149,150,3,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,172,180,181,182,184,185,186,187,188,189,190,191,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,299,300,301,302,303,304,306,307,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,333,365,366,367,368,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,399,402,404,405,406,407,408,6,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,453,454,455,456,458,460,461,465,466,468,470,471,472,473,474,479,480,482,483,484,485,486,487,490,491,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[173,177],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[74],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[497],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[103],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[375,381,393,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,49,499,3,151,154,155,235,236,243,244,317,439,445,446],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[500,0,47,49,50,150,151,154,155,242,243,244,309,310,311,312,315,317,318,438,439,445,446],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[12,17,18,19,20,21,22,25,26,28,29,30,32,33,34,35,36,47,49,50,75,108,109,110,111,160,161,163,237,238,239,240,246,247,249,250,251,252,253,257,265,266,268,269,271,289,290,291,292,293,294,297,301,302,303,315,317,318,320,343,346,356,362,396,402,403,407,459,460,461,462,464,465,466,470,473,475,477,480],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[131,149,153,243,436,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[301,305,470,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[45,46,0,47,48,49,50,51,52,108,109,110,111,157,164,180,181,182,183,184,185,186,187,188,189,190,191,274,280,292,293,294,303,306,307,313,314,315,316,317,318,319,437,449,450,451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[376,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[501,502,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[295,305,468,474,483],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[47,75,76,77,78,79,137,138,144,236,246,247,249,250,251,252,253,276,282,283,288,315,373,377],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[173,177],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[504,236],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":368,"org.easymock.tests2.UsageTest.argumentsOrdered":446,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":202,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":441,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":263,"org.easymock.tests2.DelegateToTest.testReturnException":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":141,"org.easymock.tests.MockingTest.testPartialClassMocking":160,"org.easymock.tests.MockClassControlTest.testToString":120,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":308,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":80,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":346,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":500,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":375,"org.easymock.tests2.UsageTest.wrongArguments":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":75,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":267,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":42,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":165,"org.easymock.tests2.UsageConstraintsTest.testNull":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":430,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":125,"org.easymock.tests2.CaptureTest.testPrimitive":278,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":79,"org.easymock.tests.UsageTest.moreThanOneArgument":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":99,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":239,"org.easymock.tests.UsageTest.argumentsOrdered":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":53,"org.easymock.tests.UsageVarargTest.varargIntAccepted":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":249,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":253,"org.easymock.tests.ReplayStateInvalidUsageTest.times":224,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests2.DependencyTest.testClassMocking":400,"org.easymock.tests2.AnswerTest.answer":487,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":326,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":39,"org.easymock.tests2.CaptureTest.testAnd":275,"org.easymock.tests2.UsageTest.strictResetToDefault":437,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":110,"org.easymock.tests2.DelegateToTest.testDelegate":399,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":95,"org.easymock.tests.LimitationsTest.mockFinalMethod":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":71,"org.easymock.tests2.DependencyTest.testClassMockingSupport":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":72,"org.easymock.tests2.CaptureTest.testCapture1_2446744":279,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":324,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":218,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":41,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.samples.PartialClassMockTest.testGetArea":257,"org.easymock.tests.MockingTest.testInterfaceMocking":162,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":101,"org.easymock.tests2.UsageTest.niceToStrict":440,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":192,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":473,"org.easymock.tests2.MockBuilderTest.testCreateMock":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":89,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":426,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests.UsageOverloadedMethodTest.overloading":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":381,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":28,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":380,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":284,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":183,"org.easymock.tests.MockClassControlTest.testEquals":124,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":69,"org.easymock.tests2.CaptureTest.testCaptureAll":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":325,"org.easymock.tests.MockNameTest.defaultName":228,"org.easymock.tests2.UsageConstraintsTest.testMatches":382,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":240,"org.easymock.samples.ExampleTest.voteForRemovals":271,"org.easymock.tests.UsageVarargTest.allKinds":191,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":70,"org.easymock.samples.BasicClassMockTest.testPrintContent":259,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":135,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":145,"org.easymock.tests2.UsageConstraintsTest.greaterThan":384,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":109,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":303,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":179,"org.easymock.samples.ExampleTest.voteForRemoval":268,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":405,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":304,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":436,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":423,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":394,"org.easymock.tests2.CaptureTest.testCaptureFirst":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":424,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":448,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":24,"org.easymock.tests2.UsageTest.moreThanOneArgument":438,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":407,"org.easymock.tests2.CaptureTest.testCapture2_2446744":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":210,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":190,"org.easymock.tests.GenericTest.testBridgedEquals":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":65,"org.easymock.tests.UsageExpectAndReturnTest.longType":20,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":98,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageCallCountTest.tooManyCalls":66,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":460,"org.easymock.tests.MockingTest.testNiceClassMocking":166,"org.easymock.tests.MockingTest.testClassMocking":158,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":59,"org.easymock.tests2.UsageConstraintsTest.testContains":379,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":485,"org.easymock.tests2.UsageConstraintsTest.testFind":370,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":128,"org.easymock.tests.MockTypeTest.fromEasyMockClass":40,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":451,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests.UsageExpectAndReturnTest.object":27,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":429,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":185,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":115,"org.easymock.tests.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":14,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":321,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":33,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.MockClassControlTest.testHashCode":123,"org.easymock.tests2.EasyMockSupportTest.testVerify":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":55,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":147,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":323,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":327,"org.easymock.tests.UsageVarargTest.varargCharAccepted":184,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":171,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":215,"org.easymock.tests2.UsageTest.openCallCountByLastCall":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":432,"org.easymock.tests.DefaultClassInstantiatorTest.object":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":146,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":113,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests2.UsageTest.resumeIfFailure":447,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":143,"org.easymock.tests2.StubTest.stubWithReturnValue":307,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":476,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":26,"org.easymock.tests2.SerializationTest.testAllMockedMethod":435,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":92,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":214,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":488,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":16,"org.easymock.tests.UsageExpectAndThrowTest.object":90,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":387,"org.easymock.tests2.DelegateToTest.testWrongClass":397,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":247,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":457,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":91,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":475,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":102,"org.easymock.tests2.CaptureTest.testCaptureNone":283,"org.easymock.tests.UsageUnorderedTest.message":236,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":189,"org.easymock.tests2.ThreadingTest.testThreadSafe":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":63,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":116,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":258,"org.easymock.tests2.CaptureTest.testCapture_2617107":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":212,"org.easymock.tests2.UsageConstraintsTest.any":377,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":223,"org.easymock.tests2.StubTest.stub":306,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":142,"org.easymock.tests.UsageExpectAndThrowTest.longType":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":176,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":222,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":414,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":12,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":36,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.MockedExceptionTest.testMockedException":484,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":450,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":84,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":477,"org.easymock.tests.MockingTest.testNicePartialClassMocking":161,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":294,"org.easymock.tests2.CompareToTest.testCompareEqual":493,"org.easymock.tests2.CaptureTest.testCaptureLast":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":73,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":466,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":374,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":388,"org.easymock.tests.MockingTest.testTwoMocks":159,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":88,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":392,"org.easymock.samples.ExampleTest.removeNonExistingDocument":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":174,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":406,"org.easymock.tests2.MockBuilderTest.testCreateMockString":482,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":118,"org.easymock.tests.UsageExpectAndThrowTest.floatType":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":490,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":322,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":356,"org.easymock.samples.ExampleTest.voteAgainstRemoval":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":203,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":302,"org.easymock.tests.LimitationsTest.privateConstructor":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":496,"org.easymock.tests2.UsageConstraintsTest.testNotNull":391,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":483,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":136,"org.easymock.tests2.UsageTest.defaultResetToNice":444,"org.easymock.samples.ExampleTest.voteAgainstRemovals":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":204,"org.easymock.tests.UsageVarargTest.differentLength":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests2.UsageConstraintsTest.equals":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":298,"org.easymock.tests.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":77,"org.easymock.tests.UsageCallCountTest.tooFewCalls":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":133,"org.easymock.tests.MockingTest.testStrictClassMocking":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":465,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":464,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":492,"org.easymock.tests2.CompareToTest.testGreateOrEqual":498,"org.easymock.tests.ObjectMethodsTest.testHashCode":114,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":408,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":402,"org.easymock.samples.ExampleTest.addDocument":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":491,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":478,"org.easymock.tests.UsageVarargTest.varargLongAccepted":188,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":35,"org.easymock.tests.UsageExpectAndReturnTest.floatType":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":320,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":385,"org.easymock.tests.UsageThrowableTest.noUpperLimit":130,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":366,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":452,"org.easymock.tests2.SerializationTest.test":434,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":18,"org.easymock.tests2.UsageConstraintsTest.testSame":372,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":463,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":164,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":481,"org.easymock.tests2.UsageStrictMockTest.differentMethods":318,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":94,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":111,"org.easymock.tests2.MockedExceptionTest.testRealException":486,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":205,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":227,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":472,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":449,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":456,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":504,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":386,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":470,"org.easymock.tests2.UsageStrictMockTest.range":317,"org.easymock.tests2.UsageConstraintsTest.lessThan":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":200,"org.easymock.tests2.CaptureTest.testCaptureRightOne":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":373,"org.easymock.tests.UsageRangeTest.combination":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":290,"org.easymock.tests.UsageTest.wrongArguments":151,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":193,"org.easymock.tests.UsageVarargTest.varargShortAccepted":187,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":64,"org.easymock.tests2.UsageConstraintsTest.cmpTo":378,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":195,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":443,"org.easymock.tests2.CaptureTest.testCaptureFromStub":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":217,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":471,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":62,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.UsageConstraintsTest.constraints":367,"org.easymock.samples.ExampleTest.addAndChangeDocument":273,"org.easymock.tests.UsageStrictMockTest.testVerify":52,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":262,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":251,"org.easymock.tests.LimitationsTest.abstractClass":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":23,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":427,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":181}}]
