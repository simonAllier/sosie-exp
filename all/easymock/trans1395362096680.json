[{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,1,91,92,93,94,95,96,97,98,99,100,101,2,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,3,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[241,244,245,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[300,301,302,303,161,292],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[304,304,305,305,306,307,308,24,309,310,311,312,313,314,315,316,49,317,318,319,320,321,322,323,324,325,326,327,55,119,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,240,280,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[300,301,302,303,161,292],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,304,305,13,306,307,308,14,15,16,18,19,20,22,23,24,25,26,27,28,29,30,31,309,32,310,33,311,312,313,314,34,315,316,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,317,50,318,319,320,321,322,323,324,325,326,51,52,53,54,55,56,57,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,1,91,93,94,95,96,97,98,99,100,101,2,102,103,104,105,106,107,108,113,116,117,118,119,328,330,331,332,333,334,335,336,120,121,122,123,124,125,126,127,3,128,129,130,131,337,338,339,340,136,137,138,139,140,141,142,143,144,145,146,147,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,174,175,176,177,178,179,185,186,187,188,189,190,191,344,345,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,348,349,350,359,286,288,289,290,291,292,293,294,295,296,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[361],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[35,37,45,86,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1433","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[363,364,365],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[309,32,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[27,30,31,122,140,141,142,366,162,165,166,217,223,227,228,230,233,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[35,36,37,38,45,46,86,0,87,88,89,90,1,91,92,93,2,102,106,107],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.tests2.StubTest.stubWithReturnValue":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":105,"org.easymock.tests2.SerializationTest.testAllMockedMethod":310,"org.easymock.tests2.DelegateToTest.testReturnException":64,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests.MockingTest.testPartialClassMocking":348,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":301,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.MockClassControlTest.testToString":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":231,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":338,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":219,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.UsageExpectAndThrowTest.object":229,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":66,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":254,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.samples.ConstructorCalledMockTest.testTax":304,"org.easymock.tests.UsageStrictMockTest.range":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":138,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":311,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":230,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":358,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":332,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":258,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests.UsageTest.moreThanOneArgument":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":238,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":137,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":135,"org.easymock.tests.UsageUnorderedTest.message":239,"org.easymock.tests.UsageVerifyTest.twoReturns":142,"org.easymock.tests.UsageVarargTest.varargByteAccepted":270,"org.easymock.tests2.ThreadingTest.testThreadSafe":15,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":241,"org.easymock.tests.UsageVarargTest.varargIntAccepted":264,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":188,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":307,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":173,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":331,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests2.StubTest.stub":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":170,"org.easymock.tests.UsageExpectAndThrowTest.longType":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":363,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.SerializationTest.testClass":309,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":20,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests2.AnswerTest.answer":113,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":62,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.tests2.NameTest.nameForMocksControl":112,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":73,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":245,"org.easymock.tests2.DelegateToTest.testDelegate":68,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":333,"org.easymock.tests.MockingTest.testNicePartialClassMocking":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":234,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":320,"org.easymock.tests2.CompareToTest.testCompareEqual":361,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":178,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":316,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":253,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":103,"org.easymock.tests.MockingTest.testTwoMocks":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":149,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":60,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":107,"org.easymock.tests.UsageThrowableTest.throwError":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":165,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":181,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":17,"org.easymock.tests2.MockBuilderTest.testCreateMockString":336,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests.UsageExpectAndThrowTest.floatType":221,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests.UsageVerifyTest.twoThrows":141,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":339,"org.easymock.samples.PartialClassMockTest.testGetArea":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":134,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":325,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":220,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":330,"org.easymock.tests2.MockBuilderTest.testCreateMock":334,"org.easymock.tests2.UsageTest.defaultResetToNice":3,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":228,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":136,"org.easymock.tests.UsageCallCountTest.tooFewCalls":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":364,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":139,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockClassControlTest.testEquals":357,"org.easymock.tests2.EasyMockSupportClassTest.testAll":337,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":61,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":315,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":313,"org.easymock.tests.MockNameTest.defaultName":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":21,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":34,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.tests.ObjectMethodsTest.testHashCode":172,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":19,"org.easymock.tests2.NameTest.nameForNiceMock":111,"org.easymock.tests.UsageVarargTest.allKinds":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":140,"org.easymock.samples.BasicClassMockTest.testPrintContent":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":252,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testStubDelegate":65,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":25,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.tests.UsageVarargTest.varargLongAccepted":269,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":305,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":71,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.samples.SupportTest.addDocument":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":63,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":72,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests.GenericTest.testPackageScope":344,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":18,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":244,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":335,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":271,"org.easymock.tests.GenericTest.testBridgedEquals":347,"org.easymock.tests2.NameTest.nameForMock":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":190,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":249,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":104,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":235,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageCallCountTest.tooManyCalls":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":289,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":185,"org.easymock.tests2.MockedExceptionTest.testRealException":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":224,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":312,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.NameTest.nameForStrictMock":110,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":87,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":319,"org.easymock.tests.MockTypeTest.fromEasyMockClass":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":52,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":328,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":266,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":70,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":242,"org.easymock.tests2.UsageConstraintsTest.testOr":90,"org.easymock.tests.UsageRangeTest.combination":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":317,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests.MockClassControlTest.testHashCode":356,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests2.EasyMockSupportTest.testVerify":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":189,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests.UsageVarargTest.varargCharAccepted":265,"org.easymock.tests2.CaptureTest.testCaptureMultiple":360,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":329,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests2.UsageConstraintsTest.constraints":86,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":225,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.UsageStrictMockTest.testVerify":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":168,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":340,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":250,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":75}}]
