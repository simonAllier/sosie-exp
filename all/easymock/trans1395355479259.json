[{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,16,53,54,55,56,57,58,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[95,96,38,7,8,97,98],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[99,100,101,102,103,45],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[105,106,107,108],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[110,111,112,113,6,8,16,114,115,116,117,118,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,2,133,134,135,136,137,138,139,38,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,48,49,157,158,159,16,160,97,17,18,161,162,163,164,165,166,167,54,168,169,55,170,171,172,56,57,58,106,108,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,20,191,98,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[192,119,120,121,193,194,122,123,124,125,195,126,127,128,129,130,196,197,198,199,200,1,2,201,202,203,204,205,37,206,134,135,136,137,207,138,139,38,140,208,99,209,210,211,212,213,214,110,5,215,141,111,112,142,143,113,39,40,59,144,216,60,217,218,219,220,221,222,223,224,225,226,100,227,228,229,230,231,101,232,233,234,235,236,237,102,103,238,239,41,42,43,44,45,6,7,8,145,146,147,148,149,150,151,152,153,154,155,240,241,242,46,47,48,49,50,243,244,245,246,10,247,248,249,11,12,250,13,251,252,14,253,254,255,256,257,51,52,258,259,260,261,262,263,264,265,157,158,159,16,160,97,17,18,266,267,268,162,269,270,271,272,273,163,164,165,166,274,275,276,277,278,279,280,281,282,283,284,53,285,286,54,287,288,289,290,291,292,293,294,109,295,296,168,169,297,298,299,300,301,302,303,304,305,306,307,55,170,308,309,171,172,56,57,310,311,312,313,58,314,315,106,107,108,316,317,318,319,320,321,322,323,324,173,174,325,326,327,328,175,329,114,330,19,176,331,177,115,116,332,178,179,333,117,334,118,180,335,336,181,182,337,338,339,340,341,342,343,344,104,345,346,94,347,348,29,349,350,351,30,183,352,184,189,190,20,191,98,21,22,353,354,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[95,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[357],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[84,93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[38,5,141,142,143,6,7,8,159,16,97,17,19,176,178,179,185,186,187,188,20,98,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[192,119,120,121,193,194,122,123,124,125,195,126,127,128,129,130,196,197,198,199,200,1,2,201,202,203,204,205,37,206,134,135,136,137,207,138,139,38,140,208,99,209,210,211,212,213,214,110,5,215,141,111,112,142,143,113,39,40,59,144,216,60,217,218,219,220,221,222,223,224,225,226,100,227,228,229,230,231,101,232,233,234,235,236,237,102,103,238,239,41,42,43,44,45,6,7,8,145,146,147,148,149,150,151,152,153,154,155,240,241,242,46,47,48,49,50,243,244,245,246,10,247,248,249,11,12,250,13,251,252,14,253,254,255,256,257,51,52,258,259,260,261,262,263,264,265,157,158,159,16,160,97,17,18,266,267,268,162,269,270,271,272,273,163,164,165,166,274,275,276,277,278,279,280,281,282,283,284,53,285,286,54,287,288,289,290,291,292,293,294,109,295,296,168,169,297,298,299,300,301,302,303,304,305,306,307,55,170,308,309,171,172,56,57,310,311,312,313,58,314,315,106,107,108,316,317,318,319,320,321,322,323,324,173,174,325,326,327,328,175,329,114,330,19,176,331,177,115,116,332,178,179,333,117,334,118,180,335,336,181,182,337,338,339,340,341,342,343,344,104,345,346,94,347,348,29,349,350,351,30,183,352,184,189,190,20,191,98,21,22,353,354,355,356],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[38,359,215,141,142,143,7,8,159,97,176,178,179,98],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[360,5,141,142,143,6,7,8,159,16,97,17,19,176,178,179,185,186,187,188,20,98,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":281,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":205,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":177,"org.easymock.tests2.StubTest.stubWithReturnValue":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.tests2.DelegateToTest.testReturnException":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":203,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":105,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":243,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":315,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":295,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":82,"org.easymock.tests2.DelegateToTest.testWrongClass":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":51,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":52,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":46,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":193,"org.easymock.tests.UsageStrictMockTest.range":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":347,"org.easymock.tests2.UsageConstraintsTest.testNull":283,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":326,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests2.CaptureTest.testPrimitive":308,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":92,"org.easymock.tests.UsageTest.moreThanOneArgument":5,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":209,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":64,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":153,"org.easymock.tests2.ThreadingTest.testThreadSafe":301,"org.easymock.tests.UsageTest.argumentsOrdered":143,"org.easymock.tests.UsageVarargTest.varargIntAccepted":147,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":137,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":49,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":325,"org.easymock.tests2.UsageConstraintsTest.any":54,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":89,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":45,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":204,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":88,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":300,"org.easymock.tests2.SerializationTest.testClass":106,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests.ReplayStateInvalidUsageTest.times":90,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.AnswerTest.answer":118,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":323,"org.easymock.tests2.CaptureTest.testAnd":307,"org.easymock.tests2.UsageTest.strictResetToDefault":330,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":80,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":24,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":104,"org.easymock.tests2.NameTest.nameForMocksControl":188,"org.easymock.tests2.MockedExceptionTest.testMockedException":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":10,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":327,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":65,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":342,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":37,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":285,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":200,"org.easymock.tests2.CaptureTest.testCapture1_2446744":309,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":76,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":11,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":298,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":85,"org.easymock.tests.UsageThrowableTest.throwError":59,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":87,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":303,"org.easymock.tests2.MockBuilderTest.testCreateMockString":329,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":156,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":211,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":292,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":180,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":355,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":69,"org.easymock.samples.PartialClassMockTest.testGetArea":192,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":36,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":346,"org.easymock.tests2.UsageTest.niceToStrict":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":244,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":33,"org.easymock.tests2.UsageConstraintsTest.testNotNull":297,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":220,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":174,"org.easymock.tests2.UsageTest.defaultResetToNice":332,"org.easymock.tests2.MockBuilderTest.testCreateMock":328,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":237,"org.easymock.tests.UsageVarargTest.differentLength":150,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests.UsageTest.openCallCountByLastCall":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":12,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":48,"org.easymock.tests.UsageCallCountTest.tooFewCalls":135,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":290,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":233,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":289,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests.UsageThrowableTest.throwCheckedException":217,"org.easymock.tests2.EasyMockSupportClassTest.testAll":353,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":198,"org.easymock.tests2.CaptureTest.testCaptureAll":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.testMatches":291,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":350,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":210,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":83,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":305,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":78,"org.easymock.tests2.NameTest.nameForNiceMock":187,"org.easymock.tests.UsageVarargTest.allKinds":155,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":73,"org.easymock.tests2.DependencyTest.testInterfaceMocking":314,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":199,"org.easymock.samples.BasicClassMockTest.testPrintContent":120,"org.easymock.samples.ExampleTest.addDocument":128,"org.easymock.tests2.DelegateToTest.testStubDelegate":317,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":219,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.AnswerTest.stubAnswer":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":206,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":94,"org.easymock.tests.UsageVarargTest.varargLongAccepted":152,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":70,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.floatType":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":334,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":62,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":194,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":294,"org.easymock.tests.UsageThrowableTest.noUpperLimit":144,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":279,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":140,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":268,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":216,"org.easymock.tests2.UsageConstraintsTest.testSame":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":225,"org.easymock.samples.SupportTest.addDocument":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":202,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":162,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":63,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":313,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":304,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":175,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":154,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":61,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":138,"org.easymock.tests2.NameTest.nameForMock":185,"org.easymock.tests.UsageExpectAndReturnTest.longType":100,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":234,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":254,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageCallCountTest.tooManyCalls":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":134,"org.easymock.tests2.MockedExceptionTest.testRealException":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":247,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":218,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":47,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":348,"org.easymock.tests2.UsageConstraintsTest.testContains":288,"org.easymock.tests2.NameTest.nameForStrictMock":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":276,"org.easymock.tests2.UsageConstraintsTest.testFind":282,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":181,"org.easymock.tests.MockTypeTest.fromEasyMockClass":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":341,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":182,"org.easymock.tests.UsageExpectAndReturnTest.object":232,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":95,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":173,"org.easymock.tests2.UsageStrictMockTest.range":98,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":67,"org.easymock.tests2.UsageConstraintsTest.lessThan":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":273,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":149,"org.easymock.tests.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":267,"org.easymock.tests2.CaptureTest.testCaptureRightOne":311,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":131,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":102,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":145,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":259,"org.easymock.tests.UsageTest.wrongArguments":141,"org.easymock.tests2.MockBuilderTest.testWithConstructor":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests2.EasyMockSupportTest.testVerify":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":235,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":132,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":207,"org.easymock.tests2.UsageConstraintsTest.cmpTo":287,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":81,"org.easymock.tests.UsageVarargTest.varargCharAccepted":148,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":71,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests2.UsageTest.openCallCountByLastCall":115,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":312,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":84,"org.easymock.tests.UsageTest.unexpectedCallWithArray":215,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":359,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":60,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":136,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":345,"org.easymock.tests2.UsageConstraintsTest.constraints":280,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":248,"org.easymock.samples.ExampleTest.addAndChangeDocument":130,"org.easymock.tests.ReplayStateInvalidCallsTest.times":74,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":103,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":122,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":356,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":197,"org.easymock.tests2.UsageTest.resumeIfFailure":333,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":271,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":96,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":146}}]
