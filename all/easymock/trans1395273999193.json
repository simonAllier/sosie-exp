[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,2,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,10,52,53,54,55,56,57,58,59,60,61,62,63,64,25,65,66,67,68,69,70,71,72,73,74,75,76,76,77,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[78,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[80,81,82],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[83,84,39,41,85,86,47,48,87,88,89],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[36,37,83,84,38,39,40,41,85,90,91,92,42,93,43,44,94,45,46,47,95,96,97,98,48,49,50,99,100,101,102,103,87,104,88,105,106,107,108,109,110,111,89,51,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,6,7,8,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,10,147,11,12,148,149,150,13,14,151,152,153,154,155,15,16,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,52,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,17,18,19,20,197,198,21,199,200,201,202,203,204,205,206,207,208,209,53,54,55,56,57,58,59,210,211,212,213,60,214,215,216,217,218,219,220,221,222,223,224,61,62,225,226,63,227,228,229,230,231,22,23,24,232,233,234,235,236,237,238,239,240,241,242,243,244,245,2,25,246,26,27,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,28,3,29,271,272,30,31,273,65,66,67,68,69,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,70,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,76,76,77,77,337,338,339,340,341,342,343,344,345,346,347,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[351,197,198,352,353],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[36,37,83,84,354,38,39,40,41,85,90,86,91,92,42,93,43,44,94,45,46,47,95,96,97,98,48,49,50,355,99,100,101,356,102,103,87,104,88,105,106,107,108,109,110,111,89,51,112,113,114,115,116,117,357,118,119,120,358,121,359,360,122,123,124,125,126,127,128,6,7,8,361,362,363,78,364,129,365,366,367,368,369,370,130,131,132,133,134,135,136,137,138,139,140,141,142,371,372,143,144,145,146,10,147,11,12,148,149,150,13,14,151,152,153,154,155,15,16,156,157,158,159,160,161,162,163,164,81,165,373,374,166,167,168,169,375,376,377,378,379,79,380,170,381,382,383,384,385,386,171,52,172,387,173,388,389,390,174,391,392,175,393,394,395,396,397,398,399,400,401,176,402,403,404,405,406,177,407,408,178,409,410,179,180,181,182,183,184,185,186,187,411,412,413,414,415,416,417,418,188,419,189,420,421,422,190,191,192,423,193,424,425,194,195,426,196,427,17,18,19,20,428,429,430,351,197,198,352,353,21,199,200,201,202,203,204,205,206,207,208,209,53,54,55,56,57,58,59,431,432,433,434,435,436,437,438,439,210,211,212,440,441,442,213,443,444,445,446,447,448,449,60,214,215,216,217,218,219,220,221,222,223,224,61,62,225,226,63,227,228,229,230,231,22,23,24,450,451,452,232,233,453,234,454,455,456,64,235,236,237,238,239,240,241,242,243,244,245,2,25,246,26,27,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,457,458,269,459,270,28,3,29,271,272,30,31,273,65,66,67,68,69,274,275,276,277,278,279,280,281,282,283,284,285,286,287,460,288,289,461,462,463,464,290,291,292,293,465,294,466,295,296,297,298,467,299,300,301,302,303,304,305,306,468,469,470,307,308,309,310,311,312,313,314,70,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,471,472,473,474,475,476,477,478,71,479,480,481,72,73,482,483,484,485,486,487,488,489,74,35,490,491,492,75,493,494,495,496,497,336,76,77,337,338,339,340,341,342,343,344,345,346,347,348,349,350],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[50,498],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[39,86,47,48],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[114,115,116,117,119,120,6,8,158,159,161,162,163,164,165,166,167,168,169,174,175,176,177,178,186,188,499,189,420,190,191,192,193,194,195,500,196,501,197,198,352,431,436,452,232,233,234,269,295,308,336,76,76,77,77,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[36,37,83,84,38,39,40,41,85,90,91,92,42,93,43,44,94,45,46,47,95,96,98,48,49,50,100,87,104,105,106,109,110,111,89,112,113,114,115,116,117,118,119,120,121,123,6,7,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,10,11,12,149,150,13,151,153,154,155,156,157,158,159,160,161,162,163,165,167,168,169,170,52,174,175,176,177,178,179,180,181,182,183,186,189,190,192,193,195,197,352,199,200,201,202,204,205,206,207,208,209,58,59,61,62,63,22,24,232,233,234,25,26,27,269,270,28,271,272,273,65,66,67,68,69,280,281,282,283,288,70,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,342,348],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[114,115,116,117,119,120,6,8,371,372,158,159,161,162,163,164,165,373,374,166,167,168,169,375,376,388,389,390,174,391,392,175,393,394,395,396,397,398,399,400,401,176,402,403,404,405,406,177,407,408,178,409,184,185,186,411,412,413,415,188,189,420,422,190,191,192,193,425,194,195,196,351,197,198,352,353,431,436,213,443,444,445,446,447,449,450,451,452,232,233,234,456,457,458,269,459,295,307,308,309,310,311,312,313,314,336,76,76,77,77,349,350],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[83,84,39,41,85,86,47,48,87,88,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[36,37,83,84,354,38,39,40,41,85,90,86,91,92,42,93,43,44,94,45,46,47,95,96,97,98,48,49,50,355,99,100,101,356,102,103,87,104,88,105,106,107,108,109,110,111,89,51,112,113,114,115,116,117,357,118,119,120,358,121,359,360,122,123,124,125,126,127,128,6,7,8,361,362,363,78,364,129,365,366,367,368,369,370,130,131,132,133,134,135,136,137,138,139,140,141,142,371,372,143,144,145,146,10,147,11,12,148,149,150,13,14,151,152,153,154,155,15,16,156,157,158,159,160,161,162,163,164,81,165,373,374,166,167,168,169,375,376,377,378,379,79,380,170,381,382,383,384,385,386,171,52,172,387,173,388,389,390,174,391,392,175,393,394,395,396,397,398,399,400,401,176,402,403,404,405,406,177,407,408,178,409,410,179,180,181,182,183,184,185,186,187,411,412,413,414,415,416,417,418,188,419,189,420,421,422,190,191,192,423,193,424,425,194,195,426,196,427,17,18,19,20,428,429,430,351,197,198,352,353,21,199,200,201,202,203,204,205,206,207,208,209,53,54,55,56,57,58,59,431,432,433,434,435,436,437,438,439,210,211,212,440,441,442,213,443,444,445,446,447,448,449,60,214,215,216,217,218,219,220,221,222,223,224,61,62,225,226,63,227,228,229,230,231,22,23,24,450,451,452,232,233,453,234,454,455,456,64,235,236,237,238,239,240,241,242,243,244,245,2,25,246,26,27,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,457,458,269,459,270,28,3,29,271,272,30,31,273,65,66,67,68,69,274,275,276,277,278,279,280,281,282,283,284,285,286,287,460,288,289,461,462,463,464,290,291,292,293,465,294,466,295,296,297,298,467,299,300,301,302,303,304,305,306,468,469,470,307,308,309,310,311,312,313,314,70,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,471,472,473,474,475,476,477,478,71,479,480,481,72,73,482,483,484,485,486,487,488,489,74,35,490,491,492,75,493,494,495,496,497,336,76,77,337,338,339,340,341,342,343,344,345,346,347,348,349,350],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[100,114,115,116,117,118,119,120,123,158,160,161,163,174,175,176,177,178,182,189,190,192,193,195,53,54,56,58,59,232,233,234,269,65,66,69,316,317,318,319,320,324,325,331,332,333,334,335,336,76,76,77,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"position":"org.easymock.ConstructorArgs:54","failures":[503,504,116,120,358,6,388,389,390,174,391,392,175,393,394,395,396,397,398,399,400,401,176,402,403,404,405,406,177,407,408,178,409,419,421,423,425,505,426,76,77],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[164,376,175,184,188,191],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:122","sourceCode":"return this","type":"CtReturnImpl"},"failures":[421],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[10,12,13,14,15,16,17,18,19,20,21,23,24,2,25,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[84,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[506,87,104,88,105,106,107,108,109,110,111,507,89,51,112,113,114,508,199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":486,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":152,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":346,"org.easymock.tests2.DelegateToTest.testReturnException":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":232,"org.easymock.tests.MockClassControlTest.testToString":309,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":427,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":32,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":144,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":61,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":292,"org.easymock.samples.ExampleTest.answerVsDelegate":338,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":436,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":314,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":63,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":474,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageVarargTest.varargIntAccepted":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":65,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":69,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":221,"org.easymock.tests2.DependencyTest.testClassMocking":371,"org.easymock.tests2.AnswerTest.answer":121,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":128,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":433,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests2.UsageTest.strictResetToDefault":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":478,"org.easymock.tests2.DelegateToTest.testDelegate":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests.LimitationsTest.mockFinalMethod":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":231,"org.easymock.tests2.DependencyTest.testClassMockingSupport":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":465,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":126,"org.easymock.tests.UsageThrowableTest.throwError":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":215,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":435,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":408,"org.easymock.samples.PartialClassMockTest.testGetArea":336,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":462,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":397,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests2.ThreadingTest.testChangeDefault":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":190,"org.easymock.tests2.MockBuilderTest.testCreateMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":404,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":258,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":432,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":290,"org.easymock.tests.UsageOverloadedMethodTest.overloading":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":467,"org.easymock.tests2.EasyMockSupportClassTest.testAll":174,"org.easymock.tests.MockClassControlTest.testEquals":313,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":127,"org.easymock.tests2.CaptureTest.testCaptureAll":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":229,"org.easymock.tests.MockNameTest.defaultName":497,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":60,"org.easymock.samples.ExampleTest.voteForRemovals":342,"org.easymock.tests.UsageVarargTest.allKinds":306,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":230,"org.easymock.samples.BasicClassMockTest.testPrintContent":350,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":279,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":448,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":169,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":449,"org.easymock.samples.ExampleTest.voteForRemoval":339,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":437,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":164,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":323,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":492,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":195,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":305,"org.easymock.tests.GenericTest.testBridgedEquals":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":242,"org.easymock.tests.UsageExpectAndReturnTest.longType":319,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":227,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":267,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":97,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":53,"org.easymock.tests.UsageCallCountTest.tooManyCalls":243,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":115,"org.easymock.tests.MockingTest.testClassMocking":451,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":236,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":186,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":201,"org.easymock.tests.MockTypeTest.fromEasyMockClass":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests.UsageExpectAndReturnTest.object":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":300,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":212,"org.easymock.tests.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":73,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":475,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":471,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":409,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.MockClassControlTest.testHashCode":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":399,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":476,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":429,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":418,"org.easymock.tests.UsageVarargTest.varargCharAccepted":299,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":442,"org.easymock.tests2.CaptureTest.testCaptureMultiple":506,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.DefaultClassInstantiatorTest.object":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":428,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":167,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":255,"org.easymock.tests.CapturesMatcherTest.test":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":310,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":490,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":348,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":495,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":359,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":473,"org.easymock.tests.UsageExpectAndThrowTest.object":259,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":59,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":416,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":463,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":304,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":402,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":240,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":349,"org.easymock.tests2.CaptureTest.testCapture_2617107":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":493,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":226,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests2.StubTest.stub":171,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":219,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":335,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.NameTest.nameForMocksControl":20,"org.easymock.tests2.MockedExceptionTest.testMockedException":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":392,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":158,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":193,"org.easymock.tests.MockingTest.testNicePartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":163,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":85,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":452,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":257,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":49,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":80,"org.easymock.samples.ExampleTest.removeNonExistingDocument":343,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":444,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":181,"org.easymock.tests2.MockBuilderTest.testCreateMockString":196,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":393,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":410,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":487,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":461,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":168,"org.easymock.tests.LimitationsTest.privateConstructor":458,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":504,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":331,"org.easymock.tests.UsageVarargTest.differentLength":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":103,"org.easymock.tests2.UsageConstraintsTest.equals":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":373,"org.easymock.tests.UsageTest.openCallCountByLastCall":271,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":225,"org.easymock.tests.UsageCallCountTest.tooFewCalls":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":293,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":502,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests.MockingTest.testStrictClassMocking":450,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":315,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":118,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":124,"org.easymock.tests.ObjectMethodsTest.testHashCode":211,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests2.NameTest.nameForNiceMock":19,"org.easymock.tests2.DependencyTest.testInterfaceMocking":143,"org.easymock.samples.ExampleTest.addDocument":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.DelegateToTest.testStubDelegate":100,"org.easymock.tests2.AnswerTest.stubAnswer":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":424,"org.easymock.tests.UsageVarargTest.varargLongAccepted":303,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndReturnTest.floatType":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":178,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":411,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":317,"org.easymock.samples.SupportTest.addDocument":347,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":357,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":394,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":72,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests2.NameTest.nameForMock":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":328,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":426,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":263,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":283,"org.easymock.tests2.MockedExceptionTest.testRealException":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":489,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":224,"org.easymock.tests2.NameTest.nameForStrictMock":18,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":422,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":162,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":415,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":445,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":189,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":398,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":159,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests2.MockBuilderTest.testWithConstructor":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":395,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":329,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":447,"org.easymock.tests.UsageVarargTest.varargShortAccepted":302,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":241,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":360,"org.easymock.tests2.CompareToTest.testLessThan":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":481,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":51,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":214,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":420,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":239,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":505,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":330,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":344,"org.easymock.tests.UsageStrictMockTest.testVerify":248,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":345,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":228,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":67,"org.easymock.tests.LimitationsTest.abstractClass":457,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":68,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":34,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297}}]
