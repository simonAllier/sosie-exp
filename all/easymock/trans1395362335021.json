[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[56,57,58,59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[64,65,20,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[1,2,107,3,108,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[1,5,6,109,110,12,111,112,113,16,114,19,21,115,116,117,37,118,39,40,40,41,41,119,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[120,121,122,123,60,61,124,125,126,127,128,129,130,1,131,2,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,4,153,154,5,155,156,157,158,159,160,161,162,163,6,164,165,166,167,168,7,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,63,198,199,200,201,62,202,203,204,205,206,8,10,11,207,12,13,14,15,112,113,16,17,19,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,64,65,20,66,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,67,270,271,272,273,274,275,68,276,277,278,279,280,21,115,22,23,24,25,281,282,26,27,283,284,69,28,29,285,30,31,32,33,286,34,117,287,35,36,37,38,288,118,289,290,291,292,39,293,40,41,294,295,296,297,298,299,300,301,302,303,304,42,43,305,306,307,106,308,70,71,72,73,74,75,309,310,76,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,44,349,350,351,352,353,354,56,57,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,58,59,375,376,45,377,378,379,380,77,381,382,383,384,385,386,46,387,388,389,390,47,391,392,393,394,395,396,397,78,79,398,399,400,401,402,403,404,405,406,407,408,409,410,411,119,48,49,50,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,100,474,475,476,477,101,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,102,493,494,495,103,104,496,105,497,498,51,52,53,499,54,500,501,502,503,504,505,506,507,508,509,510,511,512,55,513,514,515,516,517,518],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,131,2,519],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[126,128,129,271,520,521,522,523,338,340,341,399,400,401,451,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[119,412],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[126,128,129,30,32,337,338,340,341,343],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":100,"org.easymock.tests2.UsageTest.argumentsOrdered":278,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":321,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":293,"org.easymock.tests2.DelegateToTest.testReturnException":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.tests.MockClassControlTest.testToString":513,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":175,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":80,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":520,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":473,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":396,"org.easymock.tests2.UsageTest.wrongArguments":272,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":346,"org.easymock.samples.ExampleTest.answerVsDelegate":298,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":501,"org.easymock.tests2.UsageConstraintsTest.testNull":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":518,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":244,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":398,"org.easymock.tests.UsageTest.moreThanOneArgument":474,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":99,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":404,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":481,"org.easymock.tests.UsageTest.argumentsOrdered":479,"org.easymock.tests.UsageVarargTest.varargIntAccepted":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":137,"org.easymock.tests.ReplayStateInvalidUsageTest.times":370,"org.easymock.tests2.DependencyTest.testClassMocking":289,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":269,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":388,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests2.UsageTest.strictResetToDefault":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":352,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":485,"org.easymock.tests2.DelegateToTest.testDelegate":259,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":95,"org.easymock.tests.LimitationsTest.mockFinalMethod":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":411,"org.easymock.tests2.DependencyTest.testClassMockingSupport":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":486,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":267,"org.easymock.tests.UsageThrowableTest.throwError":491,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":364,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":390,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":170,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":460,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.MockingTest.testInterfaceMocking":499,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":394,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":81,"org.easymock.tests2.UsageTest.niceToStrict":273,"org.easymock.tests2.ThreadingTest.testChangeDefault":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":12,"org.easymock.tests2.MockBuilderTest.testCreateMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":166,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":140,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":89,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":503,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":344,"org.easymock.tests.UsageOverloadedMethodTest.overloading":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":163,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":77,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":442,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":195,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":218,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":416,"org.easymock.tests.MockClassControlTest.testEquals":517,"org.easymock.tests2.EasyMockSupportClassTest.testAll":4,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":97,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":409,"org.easymock.tests2.CaptureTest.testCaptureAll":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":268,"org.easymock.tests.MockNameTest.defaultName":348,"org.easymock.tests2.UsageConstraintsTest.testMatches":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":405,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":362,"org.easymock.samples.ExampleTest.voteForRemovals":302,"org.easymock.tests.UsageVarargTest.allKinds":424,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":410,"org.easymock.samples.BasicClassMockTest.testPrintContent":43,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":103,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":230,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":258,"org.easymock.tests2.UsageConstraintsTest.greaterThan":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":351,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":461,"org.easymock.samples.ExampleTest.voteForRemoval":299,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":33,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":453,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":237,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":222,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":238,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":280,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":438,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":329,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":423,"org.easymock.tests.GenericTest.testBridgedEquals":412,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":510,"org.easymock.tests.UsageExpectAndReturnTest.longType":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":407,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":98,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":18,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":402,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":58,"org.easymock.tests.UsageCallCountTest.tooManyCalls":511,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":439,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":495,"org.easymock.tests.MockingTest.testNiceClassMocking":502,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":23,"org.easymock.tests.MockingTest.testClassMocking":498,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":504,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":9,"org.easymock.tests2.UsageConstraintsTest.testContains":194,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.UsageConstraintsTest.testFind":185,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockClass":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests.UsageExpectAndReturnTest.object":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":243,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":418,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":428,"org.easymock.tests.UsageTest.exactCallCountByLastCall":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":384,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":447,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":413,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":380,"org.easymock.tests.MockClassControlTest.testHashCode":516,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":224,"org.easymock.tests2.EasyMockSupportTest.testVerify":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":161,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":56,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":266,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":208,"org.easymock.tests.UsageVarargTest.varargCharAccepted":417,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":334,"org.easymock.tests2.UsageTest.openCallCountByLastCall":275,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":246,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":354,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":493,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":135,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":223,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":515,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":459,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":86,"org.easymock.tests.ReplayStateInvalidCallsTest.times":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":448,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":466,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":7,"org.easymock.tests2.UsageTest.resumeIfFailure":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.StubTest.stubWithReturnValue":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":440,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":327,"org.easymock.samples.SupportTest.voteForRemovals":295,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":92,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":519,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":333,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":121,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":386,"org.easymock.tests.UsageExpectAndThrowTest.object":90,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":201,"org.easymock.tests2.DelegateToTest.testWrongClass":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":489,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":463,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":490,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests.UsageStrictMockTest.range":340,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":264,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":91,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":14,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":345,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":395,"org.easymock.tests2.CaptureTest.testCaptureNone":217,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":249,"org.easymock.tests.UsageUnorderedTest.message":451,"org.easymock.tests.UsageVerifyTest.twoReturns":401,"org.easymock.tests.UsageVarargTest.varargByteAccepted":422,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":164,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":508,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":42,"org.easymock.tests2.CaptureTest.testCapture_2617107":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":331,"org.easymock.tests2.UsageConstraintsTest.any":192,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.UsageExpectAndThrowTest.longType":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":368,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":127,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":450,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":108,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":471,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":130,"org.easymock.tests2.NameTest.nameForMocksControl":179,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":136,"org.easymock.tests2.MockedExceptionTest.testMockedException":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":154,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":172,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":84,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":15,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":132,"org.easymock.tests2.CaptureTest.testCaptureLast":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":487,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":470,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":62,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":467,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":88,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":205,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":253,"org.easymock.samples.ExampleTest.removeNonExistingDocument":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":139,"org.easymock.tests.UsageStrictMockTest.differentMethods":341,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":225,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":252,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":357,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":147,"org.easymock.tests2.MockBuilderTest.testCreateMockString":19,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":155,"org.easymock.tests.UsageExpectAndThrowTest.floatType":82,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":152,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests.UsageVerifyTest.twoThrows":400,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":116,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":6,"org.easymock.samples.ExampleTest.voteAgainstRemoval":300,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":104,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":64,"org.easymock.tests2.UsageTest.defaultResetToNice":276,"org.easymock.samples.ExampleTest.voteAgainstRemovals":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.differentLength":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":133,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests2.UsageConstraintsTest.equals":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":117,"org.easymock.tests.UsageTest.openCallCountByLastCall":477,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":506,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":347,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":494,"org.easymock.tests.MockingTest.testStrictClassMocking":497,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":282,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":61,"org.easymock.tests.ObjectMethodsTest.testHashCode":427,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":469,"org.easymock.tests2.NameTest.nameForNiceMock":178,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":149,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":464,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.samples.ExampleTest.addDocument":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.DelegateToTest.testStubDelegate":256,"org.easymock.tests2.AnswerTest.stubAnswer":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":338,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":112,"org.easymock.tests.UsageVarargTest.varargLongAccepted":421,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":449,"org.easymock.tests.UsageExpectAndReturnTest.floatType":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":492,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":232,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":181,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":260,"org.easymock.tests2.SerializationTest.test":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":214,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":432,"org.easymock.tests2.UsageConstraintsTest.testSame":187,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":281,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":454,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":156,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":231,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":500,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":452,"org.easymock.tests2.NameTest.nameForMock":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":443,"org.easymock.tests2.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":435,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":94,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":353,"org.easymock.tests2.MockedExceptionTest.testRealException":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":0,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":397,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":373,"org.easymock.tests2.NameTest.nameForStrictMock":177,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":207,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":263,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":521,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":200,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":358,"org.easymock.tests.ErrorMessageTest.testGetters":522,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":128,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":458,"org.easymock.tests2.UsageConstraintsTest.lessThan":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":160,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":248,"org.easymock.tests2.UsageConstraintsTest.testOr":188,"org.easymock.tests.UsageRangeTest.combination":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":29,"org.easymock.tests.UsageTest.wrongArguments":476,"org.easymock.tests2.MockBuilderTest.testWithConstructor":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":157,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":312,"org.easymock.tests.UsageVarargTest.varargShortAccepted":420,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":509,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":472,"org.easymock.tests2.UsageConstraintsTest.cmpTo":193,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":122,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":314,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.CaptureTest.testCaptureFromStub":220,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":363,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":11,"org.easymock.tests.UsageTest.unexpectedCallWithArray":475,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":468,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":445,"org.easymock.tests2.UsageConstraintsTest.constraints":182,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":304,"org.easymock.tests.UsageStrictMockTest.testVerify":343,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":408,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":437,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":106,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":523,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":241}}]
