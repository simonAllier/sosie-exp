[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MocksControl:190","failures":[36,37,38,39,40,41,42,43,44,45,46,4,47,48,49,50,51,6,52,53,54,7,8,55,56,57,58,59],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,53,76,77,78,23,24,25,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[96,97,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[99,9,10,100,11,12,101,13,102,103,14,15,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,0,1,130,131,132,133,60,61,134,96,97,98,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,36,153,154,155,156,37,157,158,159,160,161,162,163,164,165,166,167,38,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,39,203,204,205,206,207,208,40,41,209,62,210,211,63,64,42,212,65,2,66,67,43,44,3,45,213,68,46,214,69,215,216,70,4,47,48,217,49,5,71,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,50,72,73,251,252,51,74,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,75,6,287,16,288,17,289,18,290,291,292,293,294,295,52,53,296,54,7,8,55,56,297,298,299,300,301,76,77,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,78,334,335,336,337,338,339,340,341,342,343,344,19,20,21,22,23,345,346,347,24,25,348,79,349,350,80,26,27,28,29,30,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,81,374,375,376,82,83,377,84,378,379,85,380,381,382,383,384,57,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,58,86,408,409,410,411,412,413,414,415,416,417,418,419,31,32,33,34,420,35,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,87,88,89,90,468,469,470,471,91,92,472,59,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[96,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[389,392,393,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[14,14,15,15,105,0,96,474,475,476,477,478,37,161,167,38,168,479,230,231,232,234,236,237,240,480,241,257,260,270,276,341,343,387,425,426,428,440],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[305,306,442,443],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[159,215,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[210,246,73,6,52,296,54,7,8,55,56,324,366,370,371,372,373,81,374,375,376,82,83,377,84,378,379,85,380,381,382,383,384,405,86,441,442,443,447,468,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[481],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[210,246,73,6,52,296,54,7,8,55,56,324,366,370,371,372,373,81,374,375,376,82,83,377,84,378,379,85,380,381,382,383,384,86,441,442,443,447,468,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[171,173,217,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[141,482,37,166,168,263,266,267,425,426,428],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[483,143,145,146,147,148,149,150,152,484,36,153,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":468,"org.easymock.tests2.UsageTest.argumentsOrdered":51,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":454,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":50,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":104,"org.easymock.tests2.DelegateToTest.testReturnException":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":321,"org.easymock.tests.MockingTest.testPartialClassMocking":425,"org.easymock.tests.MockClassControlTest.testToString":434,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":219,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":370,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":402,"org.easymock.tests2.UsageTest.wrongArguments":249,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":285,"org.easymock.samples.ExampleTest.answerVsDelegate":100,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":329,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":430,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":474,"org.easymock.tests2.CaptureTest.testPrimitive":146,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":406,"org.easymock.tests.UsageTest.moreThanOneArgument":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":384,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":389,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageVarargTest.varargIntAccepted":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.ReplayStateInvalidUsageTest.times":359,"org.easymock.tests2.DependencyTest.testClassMocking":126,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":193,"org.easymock.tests2.CaptureTest.testAnd":143,"org.easymock.tests2.UsageTest.strictResetToDefault":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":393,"org.easymock.tests2.DelegateToTest.testDelegate":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":380,"org.easymock.tests.LimitationsTest.mockFinalMethod":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":401,"org.easymock.tests2.DependencyTest.testClassMockingSupport":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":293,"org.easymock.tests2.CaptureTest.testCapture1_2446744":147,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":191,"org.easymock.tests.UsageThrowableTest.throwError":52,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":328,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":278,"org.easymock.samples.PartialClassMockTest.testGetArea":105,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":281,"org.easymock.tests2.UsageTest.niceToStrict":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":265,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":234,"org.easymock.tests2.MockBuilderTest.testCreateMock":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":83,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":283,"org.easymock.tests.UsageOverloadedMethodTest.overloading":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":275,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":366,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":46,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":152,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":411,"org.easymock.tests.MockClassControlTest.testEquals":438,"org.easymock.tests2.EasyMockSupportClassTest.testAll":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":382,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureAll":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":192,"org.easymock.tests.MockNameTest.defaultName":396,"org.easymock.tests2.UsageConstraintsTest.testMatches":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":35,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests.UsageVarargTest.allKinds":419,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":400,"org.easymock.samples.BasicClassMockTest.testPrintContent":107,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":55,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":185,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":325,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":94,"org.easymock.tests2.UsageConstraintsTest.greaterThan":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":168,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":169,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":480,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":440,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":202,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":320,"org.easymock.tests2.CaptureTest.testCaptureFirst":155,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":39,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":347,"org.easymock.tests2.CaptureTest.testCapture2_2446744":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":462,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":240,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":418,"org.easymock.tests.GenericTest.testBridgedEquals":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests.UsageExpectAndReturnTest.longType":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":397,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":383,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":217,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":8,"org.easymock.tests.MockingTest.testNiceClassMocking":431,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":137,"org.easymock.tests.MockingTest.testClassMocking":423,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":333,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":65,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests.MockTypeTest.fromEasyMockClass":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":207,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":413,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":317,"org.easymock.tests.UsageTest.exactCallCountByLastCall":473,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":390,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":27,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":365,"org.easymock.tests.MockClassControlTest.testHashCode":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":179,"org.easymock.tests2.EasyMockSupportTest.testVerify":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":267,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":190,"org.easymock.tests.UsageVarargTest.varargCharAccepted":412,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":93,"org.easymock.tests2.CaptureTest.testCaptureMultiple":483,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":41,"org.easymock.tests.DefaultClassInstantiatorTest.object":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":441,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":376,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":478,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":178,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":375,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":304,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":276,"org.easymock.tests2.UsageTest.resumeIfFailure":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":323,"org.easymock.tests2.StubTest.stubWithReturnValue":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.tests2.SerializationTest.testAllMockedMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":460,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":378,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":466,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":225,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":292,"org.easymock.tests.UsageExpectAndThrowTest.object":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":31,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":32,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":244,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":236,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":254,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":284,"org.easymock.tests2.CaptureTest.testCaptureNone":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":282,"org.easymock.tests.UsageUnorderedTest.message":57,"org.easymock.tests.UsageVerifyTest.twoReturns":287,"org.easymock.tests.UsageVarargTest.varargByteAccepted":417,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":271,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":336,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":106,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":318,"org.easymock.tests2.CaptureTest.testCapture_2617107":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":405,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests2.StubTest.stub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":322,"org.easymock.tests.UsageExpectAndThrowTest.longType":373,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests.LimitationsTest.mockNativeMethod":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":30,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":116,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":481,"org.easymock.tests2.NameTest.nameForMocksControl":223,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":259,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":92,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":428,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":237,"org.easymock.tests.MockingTest.testNicePartialClassMocking":426,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.CaptureTest.testCaptureLast":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":142,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":43,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":48,"org.easymock.tests.MockingTest.testTwoMocks":424,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":82,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":121,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":180,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":309,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":241,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":261,"org.easymock.tests.UsageExpectAndThrowTest.floatType":372,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":256,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":227,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":270,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":38,"org.easymock.tests.LimitationsTest.privateConstructor":386,"org.easymock.tests2.UsageConstraintsTest.testNotNull":5,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":56,"org.easymock.tests2.UsageTest.defaultResetToNice":251,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":26,"org.easymock.tests.UsageVarargTest.differentLength":414,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":115,"org.easymock.tests2.CallbackTest.callback":135,"org.easymock.tests2.UsageConstraintsTest.equals":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":164,"org.easymock.tests.UsageTest.openCallCountByLastCall":91,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":404,"org.easymock.tests.UsageCallCountTest.tooFewCalls":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":286,"org.easymock.tests.UsageThrowableTest.throwCheckedException":7,"org.easymock.tests.MockingTest.testStrictClassMocking":422,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":395,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":120,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":140,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests.ObjectMethodsTest.testHashCode":316,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":222,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.samples.ExampleTest.addDocument":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":272,"org.easymock.tests2.DelegateToTest.testStubDelegate":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":300,"org.easymock.tests.UsageVarargTest.varargLongAccepted":416,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":29,"org.easymock.tests.UsageExpectAndReturnTest.floatType":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":53,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":70,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":242,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":148,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":20,"org.easymock.tests2.UsageConstraintsTest.testSame":66,"org.easymock.samples.SupportTest.addDocument":99,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":95,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":262,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":186,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":429,"org.easymock.tests2.NameTest.nameForMock":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":349,"org.easymock.tests2.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":85,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":457,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":403,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":362,"org.easymock.tests2.NameTest.nameForStrictMock":221,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":243,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":231,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":182,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":201,"org.easymock.tests2.CaptureTest.testCaptureRightOne":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":266,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":37,"org.easymock.tests.UsageTest.wrongArguments":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":263,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":350,"org.easymock.tests.UsageVarargTest.varargShortAccepted":415,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":153,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":232,"org.easymock.tests.UsageTest.unexpectedCallWithArray":470,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":80,"org.easymock.tests2.CaptureTest.testCapture":484,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":103,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":108,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":398,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":149,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.LimitationsTest.abstractClass":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":205}}]
