[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[30,31,32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[34,35,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,8,9,11,12,13,62,63,64,65,66,67,68,69,70,71,14,15,72,16,17,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,18,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,20,124,125,21,22,126,127,23,128,24,25,129,130,131,132,31,32,33,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[15,189,74,75,76,77,190,191,192,193,194,195,196,18,23,197,153,173,178,179,182],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[198],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,199,57,58,59,60,61,7,8,9,200,10,11,201,202,12,13,62,203,204,66,67,205,68,206,207,208,209,69,210,211,212,213,70,214,215,216,217,218,71,14,15,72,16,17,73,219,189,220,74,75,76,77,221,78,79,80,82,222,223,224,225,226,227,190,191,192,193,194,228,83,84,85,86,87,88,89,229,90,91,230,231,232,92,93,233,94,234,235,236,237,95,238,239,240,241,96,242,243,244,245,97,195,196,18,246,247,248,249,250,98,99,100,101,102,103,104,105,251,252,253,254,255,256,257,106,258,259,260,261,262,263,264,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,19,20,124,125,265,266,21,22,267,126,268,127,23,128,24,25,129,131,132,269,270,32,33,133,140,143,144,271,272,273,147,148,274,275,276,149,277,150,278,197,151,152,153,154,279,155,280,281,156,282,283,157,158,159,160,161,162,284,285,163,164,165,166,167,168,169,286,171,172,173,174,175,287,176,177,178,179,180,181,288,289,182,183,184,290,185,186,291,292,187,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[182],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[125,156,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[295,296,297,298,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[303,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[304],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:773","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[38,305,305,306,306,39,40,41,42,43,44,45,46,47,48,49,50,51,307,308,309,52,53,54,55,56,199,57,58,59,60,61,295,7,8,9,200,10,11,201,202,12,13,62,34,35,310,63,64,65,203,204,66,67,205,68,206,207,208,209,69,210,211,212,213,70,214,215,216,217,218,71,14,15,72,16,17,73,219,188,311,312,313,189,220,74,75,76,77,221,78,36,79,80,37,81,82,222,223,224,225,226,227,190,191,192,193,194,314,315,316,317,228,83,84,85,86,87,88,89,318,90,91,230,231,232,92,93,233,94,234,235,236,237,95,238,239,240,241,96,242,243,244,245,97,195,196,18,319,320,98,99,100,101,102,103,104,105,321,251,252,322,323,253,254,255,256,257,106,324,258,259,260,262,263,264,107,108,109,110,111,112,113,325,114,115,116,117,118,119,120,121,122,123,19,20,124,125,265,266,326,21,22,267,126,268,127,23,128,24,25,129,130,26,27,28,29,131,327,328,132,269,270,31,32,33,133,134,135,136,329,137,138,139,330,140,141,142,143,144,145,146,271,272,273,147,148,274,275,276,149,277,150,278,197,151,152,331,153,154,279,155,280,281,156,282,283,157,158,159,160,161,162,284,285,163,164,165,166,167,168,169,332,170,286,171,172,173,174,175,287,176,177,178,179,180,181,288,289,182,183,333,184,290,185,334,186,291,292,187,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":225,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.tests2.StubTest.stubWithReturnValue":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":209,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests2.DelegateToTest.testReturnException":184,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":223,"org.easymock.tests.MockingTest.testPartialClassMocking":63,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":30,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":231,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":134,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":327,"org.easymock.tests.UsageExpectAndThrowTest.object":95,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":4,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":120,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":74,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":305,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.samples.ExampleTest.answerVsDelegate":44,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests2.UsageConstraintsTest.testNull":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":248,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.CaptureTest.testPrimitive":175,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":312,"org.easymock.tests2.CaptureTest.testCaptureNone":179,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":304,"org.easymock.tests.UsageUnorderedTest.message":18,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":59,"org.easymock.tests2.ThreadingTest.testThreadSafe":271,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":321,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":54,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":85,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":50,"org.easymock.tests2.CaptureTest.testCapture_2617107":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":77,"org.easymock.tests2.UsageConstraintsTest.any":153,"org.easymock.tests2.StubTest.stub":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":224,"org.easymock.tests.UsageExpectAndThrowTest.longType":93,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.AnswerTest.answer":131,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests2.CaptureTest.testAnd":172,"org.easymock.tests2.UsageTest.strictResetToDefault":123,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.tests2.NameTest.nameForMocksControl":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":323,"org.easymock.tests2.DelegateToTest.testDelegate":186,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":96,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests2.CaptureTest.testCaptureLast":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":151,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":34,"org.easymock.tests2.CaptureTest.testCapture1_2446744":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":236,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":284,"org.easymock.tests.UsageThrowableTest.throwError":98,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":273,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests.UsageExpectAndThrowTest.floatType":92,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":156,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":135,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.samples.ExampleTest.voteAgainstRemoval":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":311,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":188,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":232,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":162,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":70,"org.easymock.tests.UsageVarargTest.differentLength":199,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":237,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":76,"org.easymock.tests.UsageCallCountTest.tooFewCalls":83,"org.easymock.tests.UsageOverloadedMethodTest.overloading":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":280,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":155,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":180,"org.easymock.tests.UsageThrowableTest.throwCheckedException":102,"org.easymock.tests.MockClassControlTest.testEquals":247,"org.easymock.tests2.EasyMockSupportClassTest.testAll":133,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":89,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":243,"org.easymock.tests2.CaptureTest.testCaptureAll":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":142,"org.easymock.tests2.UsageConstraintsTest.testMatches":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":270,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":48,"org.easymock.tests2.NameTest.nameForNiceMock":28,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":148,"org.easymock.tests.UsageVarargTest.allKinds":61,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":7,"org.easymock.tests2.DependencyTest.testInterfaceMocking":119,"org.easymock.samples.BasicClassMockTest.testPrintContent":51,"org.easymock.samples.ExampleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testStubDelegate":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":104,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests2.AnswerTest.stubAnswer":269,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":282,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":286,"org.easymock.tests.UsageVarargTest.varargLongAccepted":58,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":73,"org.easymock.samples.ExampleTest.voteForRemoval":45,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":306,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":283,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests.UsageThrowableTest.noUpperLimit":99,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":275,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":176,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":100,"org.easymock.tests2.UsageConstraintsTest.testSame":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.samples.SupportTest.addDocument":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":222,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":333,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":207,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests2.CaptureTest.testCapture2_2446744":289,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":60,"org.easymock.tests.GenericTest.testBridgedEquals":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":86,"org.easymock.tests2.NameTest.nameForMock":26,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":295,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":242,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageCallCountTest.tooManyCalls":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":259,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":228,"org.easymock.tests2.MockedExceptionTest.testRealException":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":94,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.testContains":279,"org.easymock.tests2.NameTest.nameForStrictMock":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":187,"org.easymock.tests2.UsageConstraintsTest.testFind":277,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":262,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":5,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":56,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":250,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":181,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":251,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":79,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":68,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":78,"org.easymock.tests.UsageVarargTest.varargShortAccepted":57,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":55,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":328,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":127,"org.easymock.tests2.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests2.CaptureTest.testCaptureFromStub":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":235,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":332,"org.easymock.tests2.UsageConstraintsTest.constraints":276,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":49,"org.easymock.tests.UsageStrictMockTest.testVerify":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":136,"org.easymock.tests2.CompareToTest.testGreateThan":294,"org.easymock.tests2.UsageTest.resumeIfFailure":267,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":53,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113}}]
