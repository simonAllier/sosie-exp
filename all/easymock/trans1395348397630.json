[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[9,10,11,12,0,13,14,15,16,17,18],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[51,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[55,56,9,10,57,11,58,12,0,59,60,61,62,19,63,64,52,65,66,14,67,68,69,15,70,71,72,73,22,23,24,25,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,28,106,29,30,107,108,109,53,110,111,112,32,113,114,115,116,33,16,117,17,118,119,120,121,122,123,18,124,125,126,34,35,36,37,38,39,40,127,128,129,130,131,132,41,42,43,54,44,133,134,135,136,137,138,139,140,45,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,46,47,48,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,21,197,49,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[262,263,264,265,266,22,267,268,23,269,270,271,272,273,274,275,276,277,24,278,279,280,281,282,25,283,284,85,86,87,105,285,286,27,287,288,289,28,106,29,290,30,291,292,31,293,294,295,114,116,33,296,297,34,35,36,37,39,40,298,299,41,300,43,54,44,301,133,302,303,134,304,135,305,306,307,308,309,140,310,311,312,313,314,315,316,317,45,318,151,319,320,321,46,47,48,322,323,324,325,3,4,5,6,326,7,327,8,328,245,246,329,330,257,258,260,260,261,261,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[158,331,332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:115","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[290,33,296,333,334,335,336,337],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[326,338,339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[326,338,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[121,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[340,341,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[55,56,9,10,343,57,11,58,12,0,59,13,60,61,62,19,63,64,52,65,66,14,67,68,344,69,15,70,71,262,263,345,346,347,348,72,73,264,265,266,22,267,268,23,269,270,271,272,273,274,275,276,277,24,278,279,280,281,282,25,283,284,74,349,350,75,76,77,351,78,79,352,353,80,81,82,83,354,355,356,357,358,84,340,359,360,361,362,363,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,364,26,104,105,27,287,289,28,106,29,30,291,292,31,295,365,107,108,366,109,53,367,368,110,369,370,111,371,51,112,32,372,373,113,114,115,116,33,296,16,117,17,118,374,119,120,121,122,123,18,375,376,124,125,377,378,379,380,381,126,341,382,383,384,385,386,34,35,36,37,38,39,40,127,128,129,130,131,387,132,41,300,42,43,54,44,301,388,133,302,303,134,304,135,305,306,307,389,136,137,138,139,390,391,392,393,394,308,309,140,310,311,312,313,314,315,316,317,45,318,395,396,397,398,399,400,401,402,403,404,405,406,407,141,408,409,142,143,410,411,412,413,414,144,415,145,146,147,148,149,150,151,416,152,20,153,417,418,154,155,156,157,158,159,419,420,421,422,423,424,319,320,321,46,47,425,48,426,427,322,428,429,430,160,161,431,432,162,163,164,165,166,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,167,168,169,170,171,457,172,458,459,460,461,462,463,464,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,465,466,467,468,323,469,342,324,470,471,188,189,190,472,191,192,473,193,194,195,196,21,197,49,198,199,200,474,3,4,5,6,326,7,8,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,475,476,477,478,479,480,481,482,483,484,485,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,486,243,244,487,331,332,488,489,328,245,246,329,330,247,248,249,250,251,252,253,490,254,255,256,257,258,259,260,260,261,261,50],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[449],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[55,56,9,10,343,57,11,58,12,0,59,13,60,61,62,19,63,64,52,65,66,14,67,68,344,69,15,70,71,262,491,492,493,263,345,346,347,348,72,73,264,265,266,22,267,268,23,269,270,271,272,273,274,275,276,277,24,278,279,280,281,282,25,283,284,74,349,350,75,76,77,351,78,79,352,353,80,81,82,83,354,355,356,357,358,84,340,359,360,361,362,363,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,364,26,104,105,285,27,287,288,289,28,106,29,290,30,494,291,292,31,293,295,365,107,108,366,109,53,367,368,110,369,370,111,371,51,112,32,372,373,113,114,115,116,33,296,297,16,117,17,118,374,119,120,121,122,123,18,375,376,124,125,377,378,379,380,381,126,341,382,383,384,385,386,495,34,35,36,37,496,38,39,40,497,127,128,129,130,131,387,132,41,300,42,43,54,44,301,388,133,302,303,134,304,135,305,306,307,389,136,137,138,139,390,391,392,393,394,308,309,140,310,311,312,313,314,315,316,317,45,318,395,396,397,398,399,400,401,402,403,404,405,406,407,141,408,409,142,143,410,411,412,413,414,144,415,145,146,147,148,149,150,151,416,152,20,153,417,418,154,155,156,157,158,159,419,420,421,422,423,424,319,320,321,46,47,425,48,426,427,322,428,429,430,160,161,431,432,162,163,164,165,166,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,167,168,169,170,171,498,457,172,458,459,460,461,462,463,464,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,465,466,467,468,323,499,500,469,342,324,470,471,188,189,190,472,191,192,473,193,194,195,196,21,197,49,198,199,200,474,325,3,4,5,6,326,7,327,8,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,475,476,477,478,479,480,481,482,483,484,485,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,486,243,244,487,331,332,488,489,328,245,246,329,330,247,248,249,250,251,252,253,490,254,255,256,257,258,259,260,261,50],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[114,115,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":457,"org.easymock.tests2.UsageTest.argumentsOrdered":370,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":443,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":146,"org.easymock.tests.MockingTest.testPartialClassMocking":46,"org.easymock.tests.MockClassControlTest.testToString":310,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":389,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":223,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":366,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":324,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":427,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.CaptureTest.testPrimitive":118,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":162,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":481,"org.easymock.tests.UsageTest.argumentsOrdered":463,"org.easymock.tests.UsageVarargTest.varargIntAccepted":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":200,"org.easymock.tests.ReplayStateInvalidUsageTest.times":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests2.DependencyTest.testClassMocking":347,"org.easymock.tests2.AnswerTest.answer":74,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":130,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":500,"org.easymock.tests2.CaptureTest.testAnd":16,"org.easymock.tests2.UsageTest.strictResetToDefault":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":485,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":238,"org.easymock.tests.LimitationsTest.mockFinalMethod":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":171,"org.easymock.tests2.DependencyTest.testClassMockingSupport":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":475,"org.easymock.tests2.CaptureTest.testCapture1_2446744":374,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":128,"org.easymock.tests.UsageThrowableTest.throwError":486,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":397,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":284,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.MockingTest.testInterfaceMocking":425,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":420,"org.easymock.tests2.UsageTest.niceToStrict":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":273,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":232,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":499,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":282,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":338,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.MockClassControlTest.testEquals":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":129,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":180,"org.easymock.samples.ExampleTest.voteForRemovals":253,"org.easymock.tests.UsageVarargTest.allKinds":21,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":170,"org.easymock.samples.BasicClassMockTest.testPrintContent":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":488,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":373,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":305,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":8,"org.easymock.samples.ExampleTest.voteForRemoval":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":103,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":301,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":365,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":91,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":92,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":371,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":108,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":26,"org.easymock.tests2.CaptureTest.testCapture2_2446744":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":31,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":196,"org.easymock.tests.GenericTest.testBridgedEquals":330,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":466,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":167,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":241,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":294,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":468,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.UsageCallCountTest.tooManyCalls":467,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":332,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":35,"org.easymock.tests.MockingTest.testNiceClassMocking":322,"org.easymock.tests.MockingTest.testClassMocking":320,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":183,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":286,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests.MockTypeTest.fromEasyMockClass":469,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":97,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":334,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests.UsageTest.exactCallCountByLastCall":464,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":296,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":412,"org.easymock.tests.MockClassControlTest.testHashCode":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":275,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":495,"org.easymock.tests.UsageVarargTest.varargCharAccepted":191,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":325,"org.easymock.tests2.CaptureTest.testCaptureMultiple":1,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.DefaultClassInstantiatorTest.object":3,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":422,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":487,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":304,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":311,"org.easymock.tests2.UsageTest.resumeIfFailure":111,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":148,"org.easymock.tests2.StubTest.stubWithReturnValue":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":290,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":116,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":449,"org.easymock.samples.SupportTest.voteForRemovals":256,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":235,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":455,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":349,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":430,"org.easymock.tests.UsageExpectAndThrowTest.object":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":67,"org.easymock.tests2.DelegateToTest.testWrongClass":372,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":222,"org.easymock.tests.UsageStrictMockTest.range":418,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":345,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":29,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":462,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":421,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":2,"org.easymock.tests.UsageUnorderedTest.message":474,"org.easymock.tests.UsageVerifyTest.twoReturns":159,"org.easymock.tests.UsageVarargTest.varargByteAccepted":195,"org.easymock.tests2.ThreadingTest.testThreadSafe":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":278,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":187,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":432,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":402,"org.easymock.tests2.StubTest.stub":82,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":147,"org.easymock.tests.UsageExpectAndThrowTest.longType":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":326,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":352,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":329,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests2.NameTest.nameForMocksControl":139,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":268,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":461,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":227,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":41,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":30,"org.easymock.tests.MockingTest.testNicePartialClassMocking":47,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":44,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":476,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":68,"org.easymock.tests.MockingTest.testTwoMocks":321,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":231,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":369,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.samples.ExampleTest.removeNonExistingDocument":490,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":364,"org.easymock.tests2.MockBuilderTest.testCreateMockString":295,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.floatType":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":269,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":75,"org.easymock.tests.UsageVerifyTest.twoThrows":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":297,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":419,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests.LimitationsTest.privateConstructor":317,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":489,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests2.UsageTest.defaultResetToNice":110,"org.easymock.samples.ExampleTest.voteAgainstRemovals":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests.UsageVarargTest.differentLength":473,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":125,"org.easymock.tests2.UsageConstraintsTest.equals":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":431,"org.easymock.tests.UsageCallCountTest.tooFewCalls":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":331,"org.easymock.tests.MockingTest.testStrictClassMocking":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":408,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":38,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":77,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.NameTest.nameForNiceMock":138,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":335,"org.easymock.samples.ExampleTest.addDocument":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":279,"org.easymock.tests2.DelegateToTest.testStubDelegate":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":283,"org.easymock.tests2.AnswerTest.stubAnswer":76,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":153,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":494,"org.easymock.tests.UsageVarargTest.varargLongAccepted":194,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":262,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":339,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":4,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":255,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":496,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":270,"org.easymock.tests.GenericTest.testPackageScope":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":426,"org.easymock.tests2.NameTest.nameForMock":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":237,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":446,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests2.NameTest.nameForStrictMock":137,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":289,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":263,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":6,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":353,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":336,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":274,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":300,"org.easymock.tests.UsageTest.wrongArguments":459,"org.easymock.tests2.MockBuilderTest.testWithConstructor":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":271,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":7,"org.easymock.tests.UsageVarargTest.varargShortAccepted":193,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":465,"org.easymock.tests2.UsageConstraintsTest.cmpTo":61,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":368,"org.easymock.tests2.CaptureTest.testCaptureFromStub":375,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":396,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":287,"org.easymock.tests.UsageTest.unexpectedCallWithArray":458,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":417,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.samples.ExampleTest.addAndChangeDocument":254,"org.easymock.tests.UsageStrictMockTest.testVerify":156,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":247,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":168,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":198,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.LimitationsTest.abstractClass":316,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":199,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":95}}]
