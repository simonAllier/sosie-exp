[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[296,297,298,299,300,301,302,303,304,106,305,306,307,110,308,309,111,310,311,312,313,314,315,316,317,318,112,319,320,321,322,323,113,324,325],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[326,327],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[35,37,38,328,329,330,331,61,62,68,69,166,167,169,170,212,214,217,218,332,333,334,241,242,243,244],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:500","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[20,21,22,26,28,335,33,34,35,36,37,38,39,329,45,60,72,73,78,81,86,92,111,311,313,314,315,317,322,324,114,115,116,155,336,156,337,163,338,164,165,166,167,168,169,170,171,339,224,340,225,226,230,231,232,341,233,234,235,236,237,238,239,240],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[35,37,38,61,167,169,170,212,332,333,342,334,241,242,243,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[343,344,345],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.internal.LastControl:70","failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,346,13,14,15,16,17,18,19,20,21,22,23,24,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,347,125,126,127,128,129,130,131,132,133,134,135,348,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,166,167,172,173,174,175,176,177,178,240,241,258,259,260,261,262,271,274,275],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[188,258],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[106,107,108,349],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[350,351,352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,4,5,6,7,8,9,10,11,12,346,13,14,15,16,17,18,19,20,21,22,23,353,24,354,355,25,26,27,28,356,335,29,30,31,32,33,34,35,36,37,38,39,357,328,329,330,331,40,41,42,43,44,45,46,47,48,49,50,51,52,53,358,359,360,361,362,54,363,364,365,366,367,368,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,369,86,370,371,372,87,88,89,373,90,374,296,91,92,375,93,94,376,377,95,96,97,98,378,99,100,101,379,380,381,382,383,384,385,386,102,387,388,103,104,105,347,106,107,108,389,390,391,392,393,109,394,395,396,397,398,399,305,306,307,110,308,309,111,310,311,312,313,314,315,316,317,318,112,319,320,321,322,323,113,324,325,114,115,116,400,117,118,119,401,120,121,122,123,124,125,126,127,128,129,402,130,131,132,133,134,135,348,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,403,404,153,154,155,336,156,157,405,158,159,406,407,160,337,408,409,161,162,410,163,338,411,412,164,165,166,167,168,169,170,171,339,172,173,174,175,176,177,178,413,414,415,416,417,418,419,420,421,422,423,424,425,426,179,180,181,182,183,184,185,427,428,429,430,431,432,433,434,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,0,435,436,437,438,439,440,441,442,220,221,222,223,443,444,445,446,447,448,449,450,224,340,225,226,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,227,228,229,475,476,477,478,479,480,481,482,483,484,485,343,486,487,488,489,230,231,232,341,233,234,235,236,237,238,239,240,490,491,492,493,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,494,264,265,495,496,497,498,499,267,268,269,270,271,272,500,501,273,502,503,504,505,506,507,508,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[498,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[190,194,200,207,208,254,262,268,505,279,285,292,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[373,296,509,510,511,512,513,94,376,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[35,38,39,61,407,167,170,171,212,242,243,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,18,21,27,34,35,36,37,38,39,40,41,47,48,50,53,54,59,60,61,63,64,65,66,70,71,72,73,74,75,76,77,78,80,81,82,83,87,89,90,102,103,104,106,107,109,114,115,116,117,118,119,120,121,122,123,125,129,131,133,134,150,153,154,157,158,159,165,167,168,169,170,171,172,173,174,175,176,177,178,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,215,216,219,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,265,267,268,269,270,271,272,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[40,42,50,128,129,131,133,134,348,145,150],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,346,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,328,329,330,331,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,88,91,92,93,94,96,97,100,101,102,103,104,105,347,106,107,108,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,405,158,159,407,160,161,162,163,164,165,166,167,168,169,170,171,339,172,173,174,175,176,177,178,413,414,415,416,417,418,419,420,421,422,423,424,425,426,179,180,181,182,183,184,185,433,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,443,444,445,446,447,448,449,450,224,340,225,226,227,228,229,476,477,478,482,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,346,13,14,15,16,17,18,19,20,21,22,23,24,354,355,25,26,27,28,356,335,29,30,31,32,33,34,35,36,37,38,39,328,329,330,331,40,41,42,43,44,45,46,47,48,49,50,51,52,53,358,359,360,361,362,54,363,364,365,366,367,368,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,514,85,369,326,86,370,371,372,87,88,89,373,90,296,91,92,515,375,327,516,93,517,518,509,519,520,521,510,511,512,522,523,524,525,526,527,513,528,94,376,377,95,96,97,98,99,100,101,380,384,385,386,102,387,388,103,104,105,347,106,107,108,389,390,391,392,393,109,394,395,396,397,398,399,305,306,307,110,308,309,111,310,311,312,313,314,315,316,317,318,112,319,320,321,322,323,113,324,325,114,115,116,400,117,118,119,401,120,121,122,123,124,125,126,127,128,129,402,130,131,132,133,134,135,348,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,336,156,157,405,158,159,406,407,160,337,408,409,161,162,410,163,338,411,412,164,165,166,167,168,169,170,171,339,172,173,174,175,176,177,178,413,414,415,416,417,418,419,420,421,422,423,424,425,426,179,180,181,182,183,184,185,427,428,429,430,431,432,433,434,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,0,437,438,439,440,441,442,220,221,222,223,443,444,445,446,447,448,449,450,224,340,225,226,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,227,228,229,475,476,477,478,479,480,481,482,483,484,485,343,486,487,488,489,230,231,232,341,233,234,235,236,237,238,239,240,490,491,492,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,494,264,265,495,496,497,498,499,267,268,269,270,271,272,500,501,273,502,503,504,505,506,507,508,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[106,107,108,349],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[8,117,119,120,158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[529],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[530,126,143,146],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[531,532,166,213,533,534],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":129,"org.easymock.tests2.UsageTest.argumentsOrdered":69,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":211,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":461,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":64,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testReturnException":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":161,"org.easymock.tests.MockClassControlTest.testToString":445,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":357,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":191,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":332,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":509,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":222,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":439,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":520,"org.easymock.tests2.CaptureTest.testPrimitive":43,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":210,"org.easymock.tests.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageVarargTest.varargIntAccepted":232,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":527,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests.ReplayStateInvalidUsageTest.times":421,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests2.DependencyTest.testClassMocking":403,"org.easymock.tests2.AnswerTest.answer":102,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":468,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":58,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":436,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":431,"org.easymock.tests2.DelegateToTest.testDelegate":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":206,"org.easymock.tests.LimitationsTest.mockFinalMethod":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":190,"org.easymock.tests2.DependencyTest.testClassMockingSupport":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":432,"org.easymock.tests2.CaptureTest.testCapture1_2446744":44,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":56,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":415,"org.easymock.tests.UsageThrowableTest.throwError":245,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":438,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":325,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests.MockingTest.testInterfaceMocking":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":504,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests2.UsageTest.niceToStrict":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":304,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":365,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":531,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":200,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":77,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":425,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":220,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":323,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":344,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":49,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":341,"org.easymock.tests.MockClassControlTest.testEquals":449,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":265,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":521,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":188,"org.easymock.tests2.CaptureTest.testCaptureAll":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":57,"org.easymock.tests.MockNameTest.defaultName":489,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":240,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":189,"org.easymock.samples.BasicClassMockTest.testPrintContent":6,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":251,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":513,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":340,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":488,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":356,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":515,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":74,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":400,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":75,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":52,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":469,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":239,"org.easymock.tests.GenericTest.testBridgedEquals":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":299,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":209,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":327,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":442,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":507,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":185,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":250,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":96,"org.easymock.tests.MockingTest.testClassMocking":408,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":426,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":326,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":31,"org.easymock.tests2.UsageConstraintsTest.testFind":130,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":229,"org.easymock.tests.MockTypeTest.fromEasyMockClass":437,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":156,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":510,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":234,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":303,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":497,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":428,"org.easymock.tests2.ConstraintsToStringTest.findToString":529,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":376,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":158,"org.easymock.tests.ResultTest.createThrowResultToString":352,"org.easymock.tests.MockClassControlTest.testHashCode":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":390,"org.easymock.tests2.EasyMockSupportTest.testVerify":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":316,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":429,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":55,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":347,"org.easymock.tests.UsageVarargTest.varargCharAccepted":233,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":519,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":481,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":474,"org.easymock.tests2.UsageTest.openCallCountByLastCall":65,"org.easymock.tests.DefaultClassInstantiatorTest.object":482,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":490,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":317,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":528,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":389,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":447,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":197,"org.easymock.tests.CapturesMatcherTest.test":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":506,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.UsageTest.resumeIfFailure":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":373,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":467,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":517,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":532,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":203,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":349,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":473,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":387,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":499,"org.easymock.tests.UsageExpectAndThrowTest.object":201,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":178,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":385,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":95,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":423,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":221,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":533,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":505,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests.UsageUnorderedTest.message":241,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":238,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":319,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":182,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":5,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":175,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":420,"org.easymock.tests2.StubTest.stub":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndThrowTest.longType":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":419,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.SerializationTest.testClass":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":273,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":495,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":524,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.NameTest.nameForMocksControl":331,"org.easymock.tests2.MockedExceptionTest.testMockedException":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":309,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":195,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":162,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":518,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":358,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":433,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":409,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":199,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":151,"org.easymock.samples.ExampleTest.removeNonExistingDocument":346,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":391,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":484,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":93,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":443,"org.easymock.tests.UsageExpectAndThrowTest.floatType":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":310,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":103,"org.easymock.tests.ResultTest.createReturnResultToString":351,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":377,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.tests.ResultTest.createDelegateResultToString":350,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":252,"org.easymock.tests2.UsageTest.defaultResetToNice":67,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests.UsageVarargTest.differentLength":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests2.CallbackTest.callback":114,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":354,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":174,"org.easymock.tests.UsageCallCountTest.tooFewCalls":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":223,"org.easymock.tests.UsageThrowableTest.throwCheckedException":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":534,"org.easymock.tests.MockingTest.testStrictClassMocking":337,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":99,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":105,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":525,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":125,"org.easymock.tests2.NameTest.nameForNiceMock":330,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":511,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":320,"org.easymock.tests2.DelegateToTest.testStubDelegate":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.AnswerTest.stubAnswer":104,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":374,"org.easymock.tests.UsageVarargTest.varargLongAccepted":237,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":397,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":127,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":345,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":483,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":378,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":311,"org.easymock.tests.GenericTest.testPackageScope":264,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":396,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":338,"org.easymock.tests2.NameTest.nameForMock":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":205,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests2.MockedExceptionTest.testRealException":32,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":386,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":173,"org.easymock.tests2.NameTest.nameForStrictMock":329,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":372,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":384,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":333,"org.easymock.tests.ErrorMessageTest.testGetters":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":152,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":522,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":514,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":315,"org.easymock.tests2.UsageConstraintsTest.testOr":133,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":214,"org.easymock.tests2.MockBuilderTest.testWithConstructor":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":312,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":486,"org.easymock.tests.UsageVarargTest.varargShortAccepted":236,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":183,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.CaptureTest.testCaptureFromStub":51,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":414,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.UsageConstraintsTest.constraints":128,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests2.CompareToTest.testGreateThan":530,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":187,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":523,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests.LimitationsTest.abstractClass":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":231,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":334}}]
