[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,4,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[54,55,56,22,23,57,58,59,60,29,61,62,44,45,63,50,64,65,66,67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.AT_LEAST_ONCE"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[71,50,72],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,8,97,98,99,100,101,102,103,54,11,12,13,104,14,15,55,56,16,17,18,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,19,141,20,142,21,22,23,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,24,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,57,202,203,204,25,26,27,205,206,207,208,209,210,211,58,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,28,238,239,240,241,242,243,244,245,246,59,247,248,249,250,251,252,253,254,255,256,257,1,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,60,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,29,300,301,302,2,303,3,304,305,306,30,307,308,309,31,32,310,311,33,312,313,314,315,316,317,318,4,34,319,320,35,36,37,61,62,321,38,39,40,41,42,322,323,43,44,45,324,325,326,327,328,329,330,331,332,5,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,46,358,359,360,361,362,363,47,48,49,364,365,366,367,368,369,370,371,372,373,374,71,63,50,375,376,64,377,65,66,378,379,380,381,382,67,383,384,68,51,385,69,386,387,388,389,390,391,70,392,393,0,394,395,396,397,398,399,400,401,402,52,403,53,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[378,379],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[238,243,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[79,174,2,3,4,330,5,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[458,458,459,459,76,205,208,460,461,462,463,345,350,464,465,360,466,467,468,47,469,49,470,403,405],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[78,79,80,81,82,83,85,91,92,93,95,96,97,98,99,100,101,54,11,12,104,107,471,472,473,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,23,143,144,151,153,154,157,170,171,172,173,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,201,57,202,203,204,206,207,211,58,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,234,236,237,239,60,284,295,296,297,298,299,29,300,301,302,2,3,304,305,317,4,319,320,36,37,321,40,322,323,45,324,460,326,327,328,329,330,5,333,334,335,336,337,338,463,339,340,357,360,361,366,474,475,476,370,371,374,71,63,50,375,64,377,65,66,378,379,381,382,67,383,384,68,51,385,69,386,387,388,390,391,70,392,393,394,395,396,397,400,402,403,422,423,424,425,427,428,429,430,431,432,435,449,450,453,454,455,456,457],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[461,463,466,478,479,480,481,482,483,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[205,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[174,176,330,449,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[273,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[10,11,12,14,15,16,17,20,22,24,28,35,38,39,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[10,11,12,14,15,16,17,20,22,24,28,35,38,39,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[458,458,459,459,76,108,111,205,208,460,461,463,345,350,356,357,46,358,359,360,362,363,467,468,48,49,398,470,52,403,405,454],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[152,155,181,182,183,184,185,186,197,198,199,252,305,454,455,456,457],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[487,488,489],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[458,458,459,459,76,86,87,108,111,114,115,116,471,472,473,120,180,205,206,207,208,209,232,233,234,235,238,239,240,241,242,243,244,245,269,270,271,272,273,274,276,282,460,461,463,340,341,342,492,343,493,344,345,346,347,494,495,348,496,497,349,498,350,351,352,353,354,355,356,499,500,357,46,358,359,360,361,362,363,468,47,48,49,365,366,474,367,475,476,393,0,395,396,397,398,400,470,401,402,52,403,53,404,405,418,419,454,455,456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[79,174,1,4,330,332,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":375,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":255,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":37,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":77,"org.easymock.tests2.DelegateToTest.testReturnException":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":182,"org.easymock.tests.MockingTest.testPartialClassMocking":471,"org.easymock.tests.MockClassControlTest.testToString":240,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":325,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":495,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":479,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageTest.wrongArguments":35,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":111,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":119,"org.easymock.tests2.UsageConstraintsTest.testNull":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":33,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":245,"org.easymock.tests2.CaptureTest.testPrimitive":425,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageTest.moreThanOneArgument":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":297,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":290,"org.easymock.tests.UsageVarargTest.varargIntAccepted":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":483,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":441,"org.easymock.tests.ReplayStateInvalidUsageTest.times":166,"org.easymock.tests2.DependencyTest.testClassMocking":315,"org.easymock.tests2.AnswerTest.answer":330,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":422,"org.easymock.tests2.UsageTest.strictResetToDefault":319,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":309,"org.easymock.tests2.DelegateToTest.testDelegate":453,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests.LimitationsTest.mockFinalMethod":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":196,"org.easymock.tests2.DependencyTest.testClassMockingSupport":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":426,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":160,"org.easymock.tests.UsageThrowableTest.throwError":283,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":110,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":500,"org.easymock.samples.PartialClassMockTest.testGetArea":76,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":161,"org.easymock.tests.MockingTest.testInterfaceMocking":117,"org.easymock.tests2.CompareToTest.testLessOrEqual":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":146,"org.easymock.tests2.UsageTest.niceToStrict":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":360,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":384,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":132,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":485,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":383,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":431,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":94,"org.easymock.tests.MockClassControlTest.testEquals":244,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests2.CaptureTest.testCaptureAll":423,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.MockNameTest.defaultName":102,"org.easymock.tests2.UsageConstraintsTest.testMatches":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":298,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":54,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":195,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":288,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":484,"org.easymock.tests2.UsageConstraintsTest.greaterThan":385,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":404,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":371,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":398,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":307,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":181,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":448,"org.easymock.tests2.CaptureTest.testCaptureFirst":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":308,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":434,"org.easymock.tests2.UsageTest.moreThanOneArgument":320,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":262,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":100,"org.easymock.tests.GenericTest.testBridgedEquals":209,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":491,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":26,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":192,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":295,"org.easymock.tests.UsageCallCountTest.tooManyCalls":27,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":287,"org.easymock.tests.MockingTest.testNiceClassMocking":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":366,"org.easymock.tests.MockingTest.testClassMocking":115,"org.easymock.tests2.UsageConstraintsTest.testContains":67,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":201,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":456,"org.easymock.tests2.UsageConstraintsTest.testFind":64,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":58,"org.easymock.tests.MockTypeTest.fromEasyMockClass":109,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests.UsageExpectAndReturnTest.object":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":311,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":480,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":96,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":148,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":461,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":176,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.MockClassControlTest.testHashCode":243,"org.easymock.tests2.EasyMockSupportTest.testVerify":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":497,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":174,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":89,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":95,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":268,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":267,"org.easymock.tests2.UsageTest.openCallCountByLastCall":61,"org.easymock.tests.DefaultClassInstantiatorTest.object":269,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":313,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":88,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":10,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":197,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":356,"org.easymock.tests2.UsageTest.resumeIfFailure":40,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":184,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":466,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":340,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":260,"org.easymock.samples.SupportTest.voteForRemovals":75,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":266,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":331,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":150,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":387,"org.easymock.tests2.DelegateToTest.testWrongClass":451,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.samples.ConstructorCalledMockTest.testTax":458,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":420,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":362,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":168,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests2.CaptureTest.testCaptureNone":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":147,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":6,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":99,"org.easymock.tests2.ThreadingTest.testThreadSafe":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":351,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":204,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":424,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":264,"org.easymock.tests2.UsageConstraintsTest.any":381,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":165,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":164,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.SerializationTest.testClass":463,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":411,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.MockedExceptionTest.testMockedException":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":344,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":303,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":393,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":363,"org.easymock.tests.MockingTest.testNicePartialClassMocking":472,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":397,"org.easymock.tests2.CompareToTest.testNotComparable":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.CaptureTest.testCaptureLast":429,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":476,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":378,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":388,"org.easymock.tests.MockingTest.testTwoMocks":116,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.samples.ExampleTest.removeNonExistingDocument":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":162,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":271,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":372,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":238,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":462,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":350,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":256,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":403,"org.easymock.tests.LimitationsTest.privateConstructor":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":490,"org.easymock.tests2.UsageConstraintsTest.testNotNull":391,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":454,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":289,"org.easymock.tests2.UsageTest.defaultResetToNice":321,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.UsageVarargTest.differentLength":8,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.UsageConstraintsTest.equals":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":470,"org.easymock.tests.UsageTest.openCallCountByLastCall":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":155,"org.easymock.tests.UsageCallCountTest.tooFewCalls":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":286,"org.easymock.tests.MockingTest.testStrictClassMocking":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":475,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":442,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":368,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":334,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":482,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":374,"org.easymock.tests2.DependencyTest.testInterfaceMocking":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":481,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":499,"org.easymock.tests2.DelegateToTest.testStubDelegate":450,"org.easymock.tests2.AnswerTest.stubAnswer":333,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":142,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":467,"org.easymock.tests.UsageVarargTest.varargLongAccepted":98,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":460,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageThrowableTest.noUpperLimit":60,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":418,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":427,"org.easymock.tests2.SerializationTest.test":339,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":486,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.samples.SupportTest.addDocument":74,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":347,"org.easymock.tests.GenericTest.testPackageScope":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":118,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":469,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":457,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":1,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":323,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":419,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":386,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":272,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":496,"org.easymock.tests2.CaptureTest.testCaptureRightOne":432,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.MockBuilderTest.testWithConstructor":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":494,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":59,"org.easymock.tests.UsageVarargTest.varargShortAccepted":97,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":25,"org.easymock.tests2.UsageConstraintsTest.cmpTo":382,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":248,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests2.CaptureTest.testCaptureFromStub":433,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":159,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":358,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":144,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":73,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":193,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":127,"org.easymock.tests.LimitationsTest.abstractClass":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":92}}]
