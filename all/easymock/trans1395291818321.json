[{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[0,1,2,20,21,4,22,6,7,9,11,12,18,23,24,25,26],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[27],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[29,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,29,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,0,1,2,3,157,158,159,20,21,160,4,5,161,22,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,6,7,181,8,9,10,11,12,13,14,15,182,183,184,185,186,187,188,189,16,17,190,191,192,18,19,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,23,24,25,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,26,27,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[35,42,43,44,45,46,47,48,49,52,53,54,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,105,111,114,124,130,29,138,139,141,145,146,147,149,152,153,155,0,1,2,3,157,158,159,20,21,160,4,5,161,22,162,163,164,165,166,167,168,170,173,174,175,176,179,180,6,7,8,9,10,11,12,13,15,182,183,184,185,186,187,188,189,16,17,190,191,192,18,19,193,194,195,196,197,203,211,212,213,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,248,249,250,251,252,253,254,255,256,258,23,24,25,259,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,303,304,305,306,307,308,309,310,311,312,313,314,315,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,365,366,367,368,369,370,371,372,373,374,408,409,410,411,412,413,414,415,416,418,419,420,421,422,423,424,26,425,426,437,438,439,440,441,442,443,444,445,447,448,451,456,457,458,459,460,461,463,464,465,466,467,468,469,470,471,472,477,478,480],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[489],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:136","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.util.Set<java.lang.reflect.Method>) {\n    java.util.Set<org.easymock.internal.MethodSerializationWrapper>.add(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method));\n}","type":"CtForEachImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[42,44,75,79,96,97,98,99,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,490,139,491,141,142,144,145,146,147,149,151,152,153,492,493,155,494,495,496,497,498,499,162,163,165,166,167,168,170,171,172,173,174,175,176,177,178,194,195,196,240,240,241,241,242,243,244,260,265,288,317,318,319,320,321,322,324,338,339,340,341,407,27,425,426,427,428,429,430,431,432,433,434,435,436,474,475,476,477,478,480,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[7,11,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[35,42,43,49,53,57,58,62,63,64,66,68,69,70,73,74,82,83,84,85,86,87,88,89,90,91,92,93,96,97,98,99,101,102,103,105,111,114,124,130,138,141,145,147,149,153,0,1,3,157,20,21,160,4,161,22,162,163,164,165,166,167,170,174,175,176,179,180,6,7,8,9,10,11,12,13,15,182,183,184,185,186,187,188,189,16,17,190,192,18,19,193,196,203,212,216,217,218,219,220,223,225,226,229,231,233,234,236,242,248,250,251,252,258,23,259,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,293,294,297,310,311,312,313,314,340,365,367,368,369,370,371,372,373,374,425,429,437,439,450,461,462,463,464,468,470,471,477,478,480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[33,34,35,36,37,39,40,201,202,203,204,205,207,208,230,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,86,87,89,91,92,93,94,95,98,99,101,102,105,106,108,111,113,114,116,117,120,121,122,123,124,126,129,130,131,132,133,29,138,141,144,145,146,147,151,152,156,0,1,2,3,157,158,159,20,21,160,4,5,161,22,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,179,180,6,7,181,8,9,10,11,12,13,14,15,182,183,184,185,186,187,188,189,16,17,190,191,192,18,19,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,240,241,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,23,24,25,259,263,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,26,27,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[225,226,437,470,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[299,300,453,454],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[51,388],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[42,43,44,500],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[260],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[0,2,4,6,7,9,11,12,14,16,18],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[42,44,96,97,98,99,102,103,105,111,114,124,130,139,491,141,142,145,146,147,149,152,153,493,155,495,497,498,162,163,165,166,167,168,170,173,174,175,176,196,240,240,241,241,242,243,244,260,265,288,340,425,426,427,430,476,477,478,480],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[42,105,106,148,151,502,503,504,505,506,507,508,509,510],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[334,387,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[225,226,437,470,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[49,52,53,59,60,61,232],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":72,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":385,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":230,"org.easymock.tests2.DelegateToTest.testReturnException":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":409,"org.easymock.tests.MockingTest.testPartialClassMocking":477,"org.easymock.tests.MockClassControlTest.testToString":431,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":133,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":342,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":258,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":255,"org.easymock.samples.ExampleTest.answerVsDelegate":232,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":265,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":91,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":494,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":259,"org.easymock.tests.UsageTest.moreThanOneArgument":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":361,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":442,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":296,"org.easymock.tests.UsageVarargTest.varargIntAccepted":416,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":139,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":314,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests.ReplayStateInvalidUsageTest.times":334,"org.easymock.tests2.DependencyTest.testClassMocking":55,"org.easymock.tests2.AnswerTest.answer":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":48,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":262,"org.easymock.tests2.UsageTest.strictResetToDefault":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":86,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":488,"org.easymock.tests2.DelegateToTest.testDelegate":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":357,"org.easymock.tests.LimitationsTest.mockFinalMethod":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":460,"org.easymock.tests2.DependencyTest.testClassMockingSupport":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":157,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":46,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":328,"org.easymock.tests.UsageThrowableTest.throwError":365,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":264,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":455,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":132,"org.easymock.samples.PartialClassMockTest.testGetArea":242,"org.easymock.tests.MockingTest.testInterfaceMocking":479,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":311,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":246,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":119,"org.easymock.tests2.UsageTest.niceToStrict":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":145,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":351,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":87,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":454,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":279,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":184,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":160,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":417,"org.easymock.tests.MockClassControlTest.testEquals":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":111,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":426,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":359,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":47,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests.MockNameTest.defaultName":325,"org.easymock.tests2.UsageConstraintsTest.testMatches":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":443,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":326,"org.easymock.samples.ExampleTest.voteForRemovals":236,"org.easymock.tests.UsageVarargTest.allKinds":26,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":459,"org.easymock.samples.BasicClassMockTest.testPrintContent":244,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":371,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":205,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests2.UsageConstraintsTest.greaterThan":188,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":462,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":176,"org.easymock.samples.ExampleTest.voteForRemoval":233,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":177,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":217,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":492,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":168,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":84,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":408,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":85,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":275,"org.easymock.tests2.CaptureTest.testCapture2_2446744":161,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":424,"org.easymock.tests.GenericTest.testBridgedEquals":428,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":308,"org.easymock.tests.UsageExpectAndReturnTest.longType":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":456,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":82,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":360,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":191,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":440,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":299,"org.easymock.tests.UsageCallCountTest.tooManyCalls":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":370,"org.easymock.tests.MockingTest.testNiceClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testClassMocking":475,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests2.UsageConstraintsTest.testContains":183,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":302,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":252,"org.easymock.tests.MockTypeTest.fromEasyMockClass":263,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":61,"org.easymock.tests.UsageExpectAndReturnTest.object":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":39,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":419,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":405,"org.easymock.tests.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":399,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":106,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":447,"org.easymock.tests.MockClassControlTest.testHashCode":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":199,"org.easymock.tests2.EasyMockSupportTest.testVerify":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":121,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":453,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":45,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":156,"org.easymock.tests.UsageVarargTest.varargCharAccepted":418,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":316,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastCall":68,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":93,"org.easymock.tests.DefaultClassInstantiatorTest.object":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":452,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":403,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":349,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":499,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":33,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":348,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":298,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":130,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":411,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":391,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":503,"org.easymock.samples.SupportTest.voteForRemovals":229,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":354,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":397,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":50,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":401,"org.easymock.tests.UsageExpectAndThrowTest.object":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":17,"org.easymock.tests2.DelegateToTest.testWrongClass":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":373,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":374,"org.easymock.tests.UsageStrictMockTest.range":470,"org.easymock.samples.ConstructorCalledMockTest.testTax":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":80,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":353,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":108,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":254,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":247,"org.easymock.tests.UsageUnorderedTest.message":315,"org.easymock.tests.UsageVerifyTest.twoReturns":439,"org.easymock.tests.UsageVarargTest.varargByteAccepted":423,"org.easymock.tests2.ThreadingTest.testThreadSafe":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":125,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":306,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":406,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests2.StubTest.stub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndThrowTest.longType":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":332,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":224,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":340,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":32,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":501,"org.easymock.tests2.NameTest.nameForMocksControl":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":34,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":480,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":346,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":478,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":30,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":363,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":190,"org.easymock.tests.MockingTest.testTwoMocks":476,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":350,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":19,"org.easymock.samples.ExampleTest.removeNonExistingDocument":237,"org.easymock.tests.UsageStrictMockTest.differentMethods":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":200,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":319,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":218,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":115,"org.easymock.tests.UsageExpectAndThrowTest.floatType":344,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":110,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":52,"org.easymock.tests.UsageVerifyTest.twoThrows":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":107,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":386,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":372,"org.easymock.tests2.UsageTest.defaultResetToNice":70,"org.easymock.samples.ExampleTest.voteAgainstRemovals":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":283,"org.easymock.tests.UsageVarargTest.differentLength":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":31,"org.easymock.tests2.CallbackTest.callback":95,"org.easymock.tests2.UsageConstraintsTest.equals":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":171,"org.easymock.tests.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":256,"org.easymock.tests.UsageThrowableTest.throwCheckedException":369,"org.easymock.tests.MockingTest.testStrictClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":101,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":54,"org.easymock.tests.ObjectMethodsTest.testHashCode":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.NameTest.nameForNiceMock":136,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":220,"org.easymock.tests2.DependencyTest.testInterfaceMocking":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.DelegateToTest.testStubDelegate":212,"org.easymock.tests2.AnswerTest.stubAnswer":53,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":468,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":422,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.floatType":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":241,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":207,"org.easymock.tests.UsageThrowableTest.noUpperLimit":366,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":180,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":75,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":158,"org.easymock.tests2.SerializationTest.test":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":318,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":269,"org.easymock.samples.SupportTest.addDocument":228,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":100,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":116,"org.easymock.tests.GenericTest.testPackageScope":425,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":206,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":356,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":402,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":464,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":81,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":388,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":337,"org.easymock.tests2.NameTest.nameForStrictMock":135,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":79,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":141,"org.easymock.tests2.UsageStrictMockTest.range":225,"org.easymock.tests2.UsageConstraintsTest.lessThan":193,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":292,"org.easymock.tests2.MockBuilderTest.testWithConstructor":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":117,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargShortAccepted":421,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":307,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.CaptureTest.testCaptureFromStub":5,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":327,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":142,"org.easymock.tests.UsageTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":467,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":282,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":469,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":238,"org.easymock.tests.UsageStrictMockTest.testVerify":473,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":239,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":457,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":274,"org.easymock.tests.LimitationsTest.abstractClass":338,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":313,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":88}}]
