[{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[20,12,21,22,23,24,25,26,27,28,29,13,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[9,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[44,45,46,47,5,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[29,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[61,62,63,7,64,8,65,66,9,39,10,67,68,69,41,70,71,72,73,74,75,76,77,78,79,11,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,44,99,100,45,46,47,5,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,40,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,12,21,22,23,24,25,26,27,139,28,13,30,31,32,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,49,161,162,163,164,165,166,6,167,168,169,50,51,52,53,54,55,170,171,42,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,56,190,191,192,193,194,195,196,2,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,43,243,244,14,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,58,59,60,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,15,307,16,17,308,18,309,310,19,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[312,138,313,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,248,346,347,348,349,350,351,3,352,353,354,4,355,356,357,357,358,358,359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[361,362,363,364,365,366,367,368,369,370,371,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[373,374,375,376,377,99,100,378,379,380,381,382,383,384,385,386,387,141,142,388,389,390,391,392,306,311],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[61,62,63,7,393,64,8,65,66,9,39,10,67,68,69,41,70,71,72,73,74,75,76,77,78,79,11,80,81,394,395,396,397,398,399,82,83,400,401,84,402,403,404,405,406,407,408,409,410,411,412,413,414,85,86,87,88,89,90,91,92,93,94,95,96,97,98,44,373,374,375,376,377,99,100,378,379,380,381,382,45,46,47,5,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,415,416,417,418,419,420,421,422,423,424,120,121,122,123,40,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,313,12,21,22,23,24,25,26,27,139,28,13,30,31,32,140,383,384,385,386,387,141,142,388,389,390,391,392,425,426,427,428,143,369,144,145,146,147,148,429,149,150,430,151,431,432,433,434,435,315,317,318,319,320,321,322,323,436,152,153,154,155,437,156,157,438,158,439,324,325,326,327,328,329,330,331,332,333,334,335,440,441,0,442,443,444,445,446,447,448,48,449,159,160,49,161,162,163,164,165,166,6,167,168,169,50,51,52,53,54,55,336,170,171,42,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,337,338,339,450,451,452,343,453,187,454,188,189,56,190,191,192,193,194,195,455,456,457,458,459,460,461,57,462,463,464,465,466,467,468,1,196,469,470,471,472,473,2,474,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,475,221,222,223,224,225,226,227,228,344,229,230,345,231,232,233,234,235,476,236,237,238,239,240,241,242,43,243,244,14,245,246,247,477,248,346,347,348,349,350,478,351,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,479,58,59,60,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,3,352,353,354,4,306,15,307,16,17,308,18,480,309,310,19,355,356,311,359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":464,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":124,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":311,"org.easymock.tests2.DelegateToTest.testReturnException":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":51,"org.easymock.tests.MockingTest.testPartialClassMocking":340,"org.easymock.tests.MockClassControlTest.testToString":326,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":278,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":188,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":213,"org.easymock.samples.ExampleTest.answerVsDelegate":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":331,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":191,"org.easymock.tests.UsageTest.moreThanOneArgument":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":297,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":217,"org.easymock.tests.UsageTest.argumentsOrdered":209,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":246,"org.easymock.tests.ReplayStateInvalidUsageTest.times":447,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.DependencyTest.testClassMocking":398,"org.easymock.tests2.AnswerTest.answer":85,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":469,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":147,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":194,"org.easymock.tests2.DelegateToTest.testDelegate":137,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":293,"org.easymock.tests.LimitationsTest.mockFinalMethod":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":201,"org.easymock.tests2.DependencyTest.testClassMockingSupport":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":271,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":145,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":0,"org.easymock.tests.UsageThrowableTest.throwError":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":230,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":219,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":370,"org.easymock.samples.PartialClassMockTest.testGetArea":359,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":182,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":406,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":418,"org.easymock.tests2.MockBuilderTest.testCreateMock":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":287,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":211,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":260,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":41,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":476,"org.easymock.tests2.EasyMockSupportClassTest.testAll":84,"org.easymock.tests.MockClassControlTest.testEquals":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":146,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":199,"org.easymock.tests.MockNameTest.defaultName":159,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":218,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":43,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":200,"org.easymock.samples.BasicClassMockTest.testPrintContent":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":304,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":91,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":478,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":321,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":351,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":434,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":132,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":256,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":470,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":423,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":242,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":226,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":252,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":296,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":215,"org.easymock.tests.UsageCallCountTest.tooManyCalls":227,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":303,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":427,"org.easymock.tests.MockingTest.testNiceClassMocking":343,"org.easymock.tests.MockingTest.testClassMocking":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":475,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":64,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":163,"org.easymock.tests.MockTypeTest.fromEasyMockClass":229,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":149,"org.easymock.tests.UsageExpectAndReturnTest.object":259,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":237,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":438,"org.easymock.tests.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":366,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":166,"org.easymock.tests.MockClassControlTest.testHashCode":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":185,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":425,"org.easymock.tests.UsageVarargTest.varargCharAccepted":236,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":477,"org.easymock.tests2.CaptureTest.testCaptureMultiple":20,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":474,"org.easymock.tests2.UsageTest.openCallCountByLastCall":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":184,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":319,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":284,"org.easymock.tests.CapturesMatcherTest.test":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":414,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":327,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":53,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":363,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":258,"org.easymock.tests2.SerializationTest.testAllMockedMethod":313,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":196,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":35,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":290,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":314,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":86,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":454,"org.easymock.tests.UsageExpectAndThrowTest.object":288,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":270,"org.easymock.tests.UsageStrictMockTest.range":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":357,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":396,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":48,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":183,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.UsageUnorderedTest.message":247,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":241,"org.easymock.tests2.ThreadingTest.testThreadSafe":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":224,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":190,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":446,"org.easymock.tests2.StubTest.stub":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":52,"org.easymock.tests.UsageExpectAndThrowTest.longType":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":445,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.SerializationTest.testClass":312,"org.easymock.tests.LimitationsTest.mockNativeMethod":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":268,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":354,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests2.NameTest.nameForMocksControl":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":402,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":282,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":421,"org.easymock.tests.MockingTest.testNicePartialClassMocking":341,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":36,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests2.CompareToTest.testCompareEqual":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":272,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":368,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":286,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":80,"org.easymock.samples.ExampleTest.removeNonExistingDocument":480,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":443,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":116,"org.easymock.tests2.MockBuilderTest.testCreateMockString":424,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":404,"org.easymock.tests.UsageExpectAndThrowTest.floatType":280,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":88,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":408,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":320,"org.easymock.tests.LimitationsTest.privateConstructor":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":371,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":305,"org.easymock.tests2.UsageTest.defaultResetToNice":127,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.UsageVarargTest.differentLength":238,"org.easymock.tests2.CallbackTest.callback":140,"org.easymock.tests2.UsageConstraintsTest.equals":393,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":316,"org.easymock.tests.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":56,"org.easymock.tests.UsageCallCountTest.tooFewCalls":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":428,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":214,"org.easymock.tests.UsageThrowableTest.throwCheckedException":302,"org.easymock.tests.MockingTest.testStrictClassMocking":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":448,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":90,"org.easymock.tests.ObjectMethodsTest.testHashCode":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":37,"org.easymock.tests2.NameTest.nameForNiceMock":154,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.samples.ExampleTest.addDocument":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.DelegateToTest.testStubDelegate":134,"org.easymock.tests2.AnswerTest.stubAnswer":89,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":172,"org.easymock.tests.UsageVarargTest.varargLongAccepted":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.floatType":251,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":267,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":358,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests.UsageThrowableTest.noUpperLimit":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":62,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":394,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":346,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":250,"org.easymock.samples.SupportTest.addDocument":310,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":405,"org.easymock.tests.GenericTest.testPackageScope":352,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":261,"org.easymock.tests2.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":292,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":195,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":449,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":189,"org.easymock.tests2.NameTest.nameForStrictMock":153,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":417,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":415,"org.easymock.tests2.UsageStrictMockTest.range":95,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":430,"org.easymock.tests.UsageTest.wrongArguments":205,"org.easymock.tests2.MockBuilderTest.testWithConstructor":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":262,"org.easymock.tests.UsageVarargTest.varargShortAccepted":239,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":225,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":126,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":441,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":416,"org.easymock.tests.UsageTest.unexpectedCallWithArray":204,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":223,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":263,"org.easymock.tests2.CaptureTest.testCapture":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":173,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.samples.ExampleTest.addAndChangeDocument":309,"org.easymock.tests.UsageStrictMockTest.testVerify":177,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":306,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":198,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":255,"org.easymock.tests.LimitationsTest.abstractClass":332,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":234}}]
