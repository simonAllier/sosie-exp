[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,34,35,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[51,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[66,67,68,69,70],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[79,2,19,20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,81,82,83,84,0,2,3,4,5,85,86,87,88,89,90,91,92,93,94,95,96,97,9,98,10,11,99,13,14,15,17,18,20,22,100,101,102,103,104,105,106,107,108,109,52,110,111,112,113,114,66,115,116,117,118,119,67,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,23,24,25,26,139,140,141,142,143,68,144,69,145,146,147,148,149,150,70,151,152,153,154,155,156,27,28,29,30,157,31,32,158,159,33,160,161,162,163,164,165,166,34,35,167,36,168,169,170,171,172,173,174,175,176,177,37,38,178,179,180,181,182,183,184,185,186,187,188,189,39,190,191,192,193,194,195,41,42,43,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,47,48,49,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,50,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[66,120,125,136],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[45],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[284,285,286,287,288,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[18,290,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[9,98,10,291],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[84,103,109,113,125,128,136,137,138,141,142,144,148,149,151,177,292,293,196,202,208,212,214,224,230,236,240,242,244,294,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,17,299,18,21,300,290,301,302,303,23,304,305,306,307,308,309,310,311,27,30,159,33,37,38,312,39,313,314,315,316,317,40,41,42,43,45,318,319,46,320,321,322,323,324,325,326,327,328,329,50,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[68,69,331,146,147,150,70,332,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[71,72,78],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[336,337,338,339,340,341,342,343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[130,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":110,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":133,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests2.DelegateToTest.testReturnException":101,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":285,"org.easymock.samples.SupportTest.voteForRemovals":170,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":51,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":290,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":131,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":249,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":64,"org.easymock.samples.ConstructorCalledMockTest.testTax":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":260,"org.easymock.samples.ExampleTest.answerVsDelegate":172,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":74,"org.easymock.tests2.UsageConstraintsTest.testNull":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":4,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":40,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":303,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":259,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":343,"org.easymock.tests2.CaptureTest.testCaptureNone":149,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":295,"org.easymock.tests.UsageUnorderedTest.message":294,"org.easymock.tests.UsageVerifyTest.twoReturns":271,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":309,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":183,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":37,"org.easymock.tests2.CaptureTest.testCapture_2617107":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":3,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":325,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests.LimitationsTest.mockNativeMethod":50,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":243,"org.easymock.tests2.AnswerTest.answer":80,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":155,"org.easymock.tests2.CaptureTest.testAnd":68,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":60,"org.easymock.tests2.UsageTest.strictResetToDefault":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":18,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":107,"org.easymock.tests2.NameTest.nameForMocksControl":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":61,"org.easymock.tests2.MockedExceptionTest.testMockedException":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests2.DelegateToTest.testDelegate":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":11,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":5,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":15,"org.easymock.tests.LimitationsTest.mockFinalMethod":330,"org.easymock.tests2.CaptureTest.testCaptureLast":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":256,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":266,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":132,"org.easymock.tests.MockingTest.testTwoMocks":46,"org.easymock.tests2.CaptureTest.testCapture1_2446744":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":153,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":135,"org.easymock.tests.UsageThrowableTest.throwError":334,"org.easymock.tests.UsageStrictMockTest.differentMethods":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":54,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":323,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":58,"org.easymock.tests2.MockBuilderTest.testCreateMockString":8,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":305,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":189,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":127,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":81,"org.easymock.tests.UsageVerifyTest.twoThrows":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.samples.ExampleTest.voteAgainstRemoval":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":342,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.LimitationsTest.privateConstructor":329,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":158,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":78,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":2,"org.easymock.tests2.MockBuilderTest.testCreateMock":6,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":59,"org.easymock.tests2.CallbackTest.callback":84,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":63,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":258,"org.easymock.tests.UsageCallCountTest.tooFewCalls":181,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":75,"org.easymock.tests.UsageOverloadedMethodTest.overloading":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":261,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.MockingTest.testStrictClassMocking":318,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":264,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":65,"org.easymock.tests2.CaptureTest.testCaptureAll":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":157,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":188,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":143,"org.easymock.tests2.NameTest.nameForNiceMock":165,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":269,"org.easymock.tests2.DependencyTest.testInterfaceMocking":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":265,"org.easymock.samples.BasicClassMockTest.testPrintContent":38,"org.easymock.samples.ExampleTest.addDocument":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":310,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests2.AnswerTest.stubAnswer":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":56,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":220,"org.easymock.tests2.UsageConstraintsTest.greaterThan":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":246,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":336,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":327,"org.easymock.samples.ExampleTest.voteForRemoval":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":300,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":242,"org.easymock.tests.UsageExpectAndReturnTest.floatType":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":35,"org.easymock.tests.UsageThrowableTest.noUpperLimit":216,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":41,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":114,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":301,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":146,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":87,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":225,"org.easymock.tests2.UsageConstraintsTest.testSame":118,"org.easymock.samples.SupportTest.addDocument":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":306,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests2.CaptureTest.testCapture2_2446744":333,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":57,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":76,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":73,"org.easymock.tests2.NameTest.nameForMock":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":262,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":248,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":180,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":250,"org.easymock.tests.MockingTest.testNiceClassMocking":320,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":319,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":79,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.NameTest.nameForStrictMock":164,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":179,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":33,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":72,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":14,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageExpectAndReturnTest.object":234,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":302,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":324,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":93,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":55,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.UsageConstraintsTest.testOr":119,"org.easymock.tests.UsageRangeTest.combination":245,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":12,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":53,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":229,"org.easymock.tests2.EasyMockSupportTest.testVerify":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":237,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":152,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":71,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":332,"org.easymock.tests.UsageTest.unexpectedCallWithArray":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":335,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":238,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":177,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":241,"org.easymock.tests.UsageStrictMockTest.testVerify":223,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":263,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests.LimitationsTest.abstractClass":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":91}}]
