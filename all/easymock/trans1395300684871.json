[{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,32,33,34,35,6,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[72,73,74,75,76],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83,84,42,43,45,47,48,54,57,60,67,85,86],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,8,9,125,126,77,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,10,11,12,13,14,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,78,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,79,198,199,200,201,202,203,204,205,15,16,206,207,208,209,210,17,211,212,213,214,215,216,217,218,80,81,219,220,221,222,223,224,0,1,225,2,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,18,253,82,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,19,296,297,298,299,300,83,301,302,303,20,21,304,22,23,24,25,26,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,27,28,5,29,30,31,32,33,34,35,6,36,37,38,326,327,328,329,330,331,332,333,39,334,335,336,72,337,338,339,73,340,341,342,343,344,345,346,347,348,40,349,350,84,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,74,378,379,380,381,382,383,384,385,386,387,388,389,87,390,391,392,393,394,41,42,43,44,395,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,396,397,398,399,400,401,402,403,404,405,406,407,408,69,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,85,86,444,445,446,447,448,70,449,71,450,451,452,453,454,455,456,457,458,459,460,461,462,3,463,4,464,465,75,466,467,468,469,470,471,472,473,474,475,476,76,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[489,435,436,437],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[58],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[235,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[212,213,214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,9,126,77,10,11,14,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,175,78,179,180,181,196,197,79,198,200,201,202,203,204,205,15,16,17,215,216,80,81,221,0,1,2,289,291,292,294,83,301,302,20,21,22,23,24,25,26,308,316,317,318,319,320,322,325,27,28,5,29,30,33,34,35,6,37,38,326,327,328,329,330,331,39,72,337,338,341,40,350,84,352,365,375,74,387,392,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,397,398,399,401,404,405,406,407,408,69,409,415,422,423,424,425,426,427,428,429,430,431,432,433,435,436,438,439,440,442,85,86,444,447,448,457,458,459,460,462,3,463,75,469,471,473,76,481,483,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[491],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[338],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[234,235,236,237,239,241],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[353,492,493,494,495,496,472],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[90,115,120,175,176,177,189,224,0,1,2,303,308,309,310,311,311,312,312,326,327,329,330,331,332,39,336,72,337,338,352,497,375,74,387,392,435,437,457,458,459,460,3,463,464,498,75,466,469,470,471,473,476,76,499,478,481],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,10,11,14,206,253,256,257,266,271,276,296,297,298,299,300,20,21,22,23,24,25,26,341,40,41,56,59,60,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,124,9,125,126,77,127,130,131,136,137,138,139,141,142,10,11,12,13,14,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,175,176,178,78,180,181,182,185,194,195,196,197,79,198,199,200,201,202,203,204,205,15,16,207,208,209,210,17,211,215,216,80,81,219,221,242,243,244,246,247,249,250,251,252,18,289,291,292,19,296,297,298,299,300,83,301,302,303,20,21,22,23,24,25,26,309,310,313,314,315,316,317,318,319,320,321,322,324,325,27,28,5,29,30,31,32,33,34,35,6,36,37,38,326,327,328,329,330,331,39,340,341,348,40,349,350,84,351,365,375,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,397,398,399,401,404,405,406,407,408,69,409,415,422,423,424,425,426,427,428,430,431,432,433,434,436,437,438,439,440,442,443,85,86,445,447,448,70,71,457,460,462,479,480,481,482,483,486,487,488],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[123,8,125,126,77,140,141,142,78,500,501,215,217,218,219,220,221,248,19,301,302,502,304,325,327,72,338,347,349,350,84,43,58,423,427,428,431,438,441,442,443,445,446,447,448,75,476,76,478],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[8,503,504,217,505,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[435,436,437],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[27,5,6,43,44,46,48,49,51,61,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[352,353,492,493,494,507,508,435,472,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[41,59,62,509],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[28,29,33,34,35,38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[27,5,29,30,31,32,33,35,510,6,36,38],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[8,503,504,217,505,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[28,5,30,31,32,33,34,38,58,64],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[27,5,29,30,31,32,33,35,510,6,36,38],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[99,103,104,106,109,126,77,155,159,160,162,165,260,350,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[43,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[398],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[352,353,492,493,494,507,508,435,472,475],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":44,"org.easymock.tests2.UsageTest.argumentsOrdered":446,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":262,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":443,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":314,"org.easymock.tests2.DelegateToTest.testReturnException":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":208,"org.easymock.tests.MockingTest.testPartialClassMocking":0,"org.easymock.tests.MockClassControlTest.testToString":190,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":342,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":50,"org.easymock.tests2.UsageTest.wrongArguments":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":10,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":231,"org.easymock.samples.ExampleTest.answerVsDelegate":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":120,"org.easymock.tests2.UsageConstraintsTest.testNull":46,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":227,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":329,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":431,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":195,"org.easymock.tests2.CaptureTest.testPrimitive":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":170,"org.easymock.tests.UsageTest.moreThanOneArgument":216,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":129,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":26,"org.easymock.tests.ReplayStateInvalidUsageTest.times":284,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":365,"org.easymock.tests2.DependencyTest.testClassMocking":402,"org.easymock.tests2.AnswerTest.answer":483,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":358,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":117,"org.easymock.tests2.CaptureTest.testAnd":27,"org.easymock.tests2.UsageTest.strictResetToDefault":439,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":180,"org.easymock.tests2.DelegateToTest.testDelegate":401,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":166,"org.easymock.tests.LimitationsTest.mockFinalMethod":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":147,"org.easymock.tests2.DependencyTest.testClassMockingSupport":403,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":148,"org.easymock.tests2.CaptureTest.testCapture1_2446744":30,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":356,"org.easymock.tests.UsageThrowableTest.throwError":198,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":278,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":119,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":394,"org.easymock.samples.PartialClassMockTest.testGetArea":308,"org.easymock.tests.MockingTest.testInterfaceMocking":225,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":23,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":172,"org.easymock.tests2.UsageTest.niceToStrict":442,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":469,"org.easymock.tests2.MockBuilderTest.testCreateMock":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":160,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":427,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":214,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":196,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":35,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":245,"org.easymock.tests.MockClassControlTest.testEquals":194,"org.easymock.tests2.EasyMockSupportClassTest.testAll":375,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":145,"org.easymock.tests2.CaptureTest.testCaptureAll":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":357,"org.easymock.tests.MockNameTest.defaultName":288,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":322,"org.easymock.tests.UsageVarargTest.allKinds":18,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":146,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":204,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":508,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":338,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":241,"org.easymock.samples.ExampleTest.voteForRemoval":319,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":407,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":332,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":438,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":424,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":207,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":396,"org.easymock.tests2.CaptureTest.testCaptureFirst":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":425,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":448,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":440,"org.easymock.tests2.CaptureTest.testCapture2_2446744":37,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":270,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests.GenericTest.testBridgedEquals":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":141,"org.easymock.tests.UsageExpectAndReturnTest.longType":98,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":143,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":169,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":306,"org.easymock.tests.UsageCallCountTest.tooManyCalls":142,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":458,"org.easymock.tests.MockingTest.testNiceClassMocking":228,"org.easymock.tests.MockingTest.testClassMocking":223,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":135,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":481,"org.easymock.tests2.UsageConstraintsTest.testFind":45,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":79,"org.easymock.tests.MockTypeTest.fromEasyMockClass":118,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageExpectAndReturnTest.object":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":247,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":185,"org.easymock.tests.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":130,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":111,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":411,"org.easymock.tests.MockClassControlTest.testHashCode":193,"org.easymock.tests2.EasyMockSupportTest.testVerify":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":500,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":355,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":359,"org.easymock.tests.UsageVarargTest.varargCharAccepted":246,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":233,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":275,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":433,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":212,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":183,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":72,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":392,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":191,"org.easymock.tests2.UsageTest.resumeIfFailure":447,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":210,"org.easymock.tests2.StubTest.stubWithReturnValue":341,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests2.SerializationTest.testAllMockedMethod":437,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":316,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":163,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":274,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":484,"org.easymock.tests.UsageExpectAndThrowTest.object":161,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":94,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":399,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":21,"org.easymock.tests.UsageStrictMockTest.range":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":311,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":455,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":471,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":173,"org.easymock.tests2.CaptureTest.testCaptureNone":34,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":490,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":502,"org.easymock.tests.UsageVerifyTest.twoReturns":302,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":388,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":186,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":272,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":283,"org.easymock.tests2.StubTest.stub":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":307,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":282,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":349,"org.easymock.tests2.SerializationTest.testClass":435,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":415,"org.easymock.tests.LimitationsTest.mockNativeMethod":90,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":351,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":7,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.MockedExceptionTest.testMockedException":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":449,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":2,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":326,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":473,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":331,"org.easymock.tests2.CaptureTest.testCaptureLast":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":463,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":49,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.MockingTest.testTwoMocks":224,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":159,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.samples.ExampleTest.removeNonExistingDocument":323,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":412,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":236,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":408,"org.easymock.tests2.MockBuilderTest.testCreateMockString":478,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":188,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":486,"org.easymock.tests.UsageVerifyTest.twoThrows":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":354,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":387,"org.easymock.samples.ExampleTest.voteAgainstRemoval":320,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":337,"org.easymock.tests.LimitationsTest.privateConstructor":89,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":479,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":205,"org.easymock.tests2.UsageTest.defaultResetToNice":444,"org.easymock.samples.ExampleTest.voteAgainstRemovals":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":264,"org.easymock.tests.UsageVarargTest.differentLength":248,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.CallbackTest.callback":325,"org.easymock.tests2.UsageConstraintsTest.equals":395,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":334,"org.easymock.tests.UsageTest.openCallCountByLastCall":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":462,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":488,"org.easymock.tests.ObjectMethodsTest.testHashCode":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":409,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.DependencyTest.testInterfaceMocking":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.AnswerTest.stubAnswer":487,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":474,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":352,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":450,"org.easymock.tests2.SerializationTest.test":436,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":96,"org.easymock.tests2.UsageConstraintsTest.testSame":47,"org.easymock.samples.SupportTest.addDocument":315,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":461,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":175,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":226,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":477,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":165,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":181,"org.easymock.tests2.MockedExceptionTest.testRealException":482,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":287,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":454,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":75,"org.easymock.tests2.UsageStrictMockTest.range":350,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":507,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":260,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.testOr":48,"org.easymock.tests.UsageRangeTest.combination":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":327,"org.easymock.tests.UsageTest.wrongArguments":218,"org.easymock.tests2.MockBuilderTest.testWithConstructor":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":82,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":239,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":140,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":255,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":277,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":466,"org.easymock.tests.UsageTest.unexpectedCallWithArray":217,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":109,"org.easymock.tests2.CaptureTest.testCapture":510,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.UsageConstraintsTest.constraints":43,"org.easymock.samples.ExampleTest.addAndChangeDocument":324,"org.easymock.tests2.ConstraintsToStringTest.containsToString":491,"org.easymock.tests.UsageStrictMockTest.testVerify":128,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":313,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests2.CompareToTest.testGreateThan":509,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":144,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":32,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.LimitationsTest.abstractClass":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":25,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":428,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
