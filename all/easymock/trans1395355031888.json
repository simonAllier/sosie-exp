[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > (this.int)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"minimum","callCount":"minimum"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,23,60,24,61,62,63,26,64,65,27,66,67,68,69,70,71,72,73,74,28,75,76,77,78,79,29,80,81,82,83,84,85,86,87,42,45,88,89,90],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[24,118,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[119,120,121,122,123,124,125,126,127,128,59,129,130,131,99,100,101,102,109,110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[132,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[133,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[137],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[138,139,140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[141,142,143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[144],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[59,129],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:109","sourceCode":"org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,137,160,161,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[24,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[163],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":44,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":148,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.MockingTest.testPartialClassMocking":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.MockClassControlTest.testToString":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":76,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":64,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":126,"org.easymock.tests.UsageStrictMockTest.range":151,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":51,"org.easymock.samples.ExampleTest.answerVsDelegate":91,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":40,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":6,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.UsageConstraintsTest.testNull":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":156,"org.easymock.tests2.SerializationTest.test":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":85,"org.easymock.tests2.CaptureTest.testPrimitive":102,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":61,"org.easymock.tests2.UsageConstraintsTest.testSame":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":62,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":141,"org.easymock.tests2.CaptureTest.testCaptureFirst":112,"org.easymock.tests2.CaptureTest.testCaptureNone":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":67,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests2.CaptureTest.testCapture2_2446744":111,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":75,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.UsageStrictMockTest.differentMethods":162,"org.easymock.tests2.UsageConstraintsTest.any":128,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":146,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":157,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":15,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":147,"org.easymock.tests2.CaptureTest.testAnd":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":83,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":65,"org.easymock.tests2.NameTest.nameForStrictMock":132,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":160,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":153,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":10,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":9,"org.easymock.tests2.UsageConstraintsTest.testFind":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.CompareToTest.testNotComparable":117,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.CaptureTest.testCaptureLast":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":95,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":45,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":161,"org.easymock.tests.MockingTest.testTwoMocks":7,"org.easymock.tests2.CaptureTest.testCapture1_2446744":103,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":88,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.CaptureTest.testCaptureRightOne":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":71,"org.easymock.tests2.UsageConstraintsTest.testOr":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":16,"org.easymock.tests.MockClassControlTest.testHashCode":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":68,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":133,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":70,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":90,"org.easymock.tests2.UsageConstraintsTest.testNotNull":130,"org.easymock.tests2.CaptureTest.testCaptureFromStub":110,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":77,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":134,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":150,"org.easymock.tests2.UsageConstraintsTest.constraints":119,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":20,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":79,"org.easymock.tests.CapturesMatcherTest.test":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":43,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":19,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":105,"org.easymock.tests2.EasyMockSupportClassTest.testAll":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":5,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests2.CaptureTest.testCaptureAll":100}}]
