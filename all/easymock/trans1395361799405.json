[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:82","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[39,40,41,42,43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[44,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,16,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[101,50,102,103,104,105,74,82,84,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[107,108,109,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[17,112,113,46,18,114,115,116,117,118,119,47,48,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,52,53,54,137,138,139,140,141,142,143,144,145,146,147,148,149,150,55,151,152,153,154,56,57,155,156,157,158,159,160,161,59,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,61,110,111,62,195,63,64,65,66,67,72,74,75,196,80,81,82,83,197,84,85,198,199,200,201,202,203,204,205,206,207,208,209,210,211,86,16,212,87,88,89,91,94,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,99],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[228,229],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[230],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,44,45,45,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[232,233,234,235,271,146,237,238,239,240,241,242,243,11,255,261,203,215,220,221,224],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[274,275,272],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[277,278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[115,147,279,109,110,280,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[17,44,45,112,113,46,18,114,115,116,117,118,119,282,283,47,48,284,285,286,120,121,122,287,123,124,288,125,126,127,128,129,289,231,290,130,131,0,291,292,132,293,294,133,134,135,295,136,296,49,297,298,299,300,50,301,302,303,304,51,52,53,305,54,306,307,308,309,1,137,138,310,139,311,2,312,313,140,314,315,3,316,141,317,4,318,5,319,142,143,232,144,320,321,145,322,323,324,325,326,327,328,233,329,234,235,271,146,236,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,147,346,148,149,347,150,348,55,349,350,351,352,353,354,237,238,239,240,241,355,356,357,358,359,360,361,362,363,364,365,366,151,152,367,153,154,277,56,57,58,278,155,156,368,369,6,157,158,370,159,371,7,372,373,160,374,375,8,376,161,377,9,378,10,379,380,59,381,242,243,11,382,60,102,103,104,383,384,385,244,386,387,388,245,246,389,390,391,392,274,393,394,279,247,395,100,396,12,248,397,398,399,400,401,228,402,403,404,229,405,406,407,408,409,410,105,162,163,164,165,166,167,168,169,411,412,13,413,414,249,250,251,252,253,415,416,417,418,107,419,108,230,254,170,171,172,173,174,175,176,420,177,178,179,180,181,421,422,182,183,109,184,185,423,186,187,188,424,425,426,189,190,427,191,428,192,255,193,429,430,194,61,431,432,433,434,435,436,110,437,280,111,438,281,439,440,441,442,62,195,63,443,444,445,64,446,447,65,448,449,450,451,452,453,454,455,456,66,457,458,459,460,461,67,462,463,68,70,71,464,72,73,74,75,465,76,77,79,80,81,82,83,466,197,84,85,467,468,469,276,198,199,256,257,470,200,471,258,259,260,261,201,202,273,203,204,262,205,263,264,206,265,266,207,208,209,210,211,267,268,269,86,16,212,87,88,89,90,472,91,473,474,92,93,94,95,475,476,19,20,21,477,22,213,23,24,25,26,27,28,106,478,479,480,214,215,216,217,14,218,219,220,221,222,223,270,15,224,29,30,31,481,32,225,33,34,35,36,37,38,275,226,272,227,482,483,484,485,99,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[272],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[113,114,116,117,119,239,355],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[487,488,489,490,42,43,491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[143,232,320,321,322,255,429,430],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":200,"org.easymock.tests2.UsageTest.argumentsOrdered":190,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":274,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":188,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":18,"org.easymock.tests2.DelegateToTest.testReturnException":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":350,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.tests.MockClassControlTest.testToString":102,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":432,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":369,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":487,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":202,"org.easymock.tests2.UsageTest.wrongArguments":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":234,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":344,"org.easymock.samples.ExampleTest.answerVsDelegate":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests2.UsageConstraintsTest.testNull":259,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":178,"org.easymock.tests2.CaptureTest.testPrimitive":217,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":10,"org.easymock.tests.UsageTest.moreThanOneArgument":291,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":411,"org.easymock.tests.UsageTest.argumentsOrdered":134,"org.easymock.tests.UsageVarargTest.varargIntAccepted":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":27,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":241,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.ReplayStateInvalidUsageTest.times":338,"org.easymock.tests2.DependencyTest.testClassMocking":421,"org.easymock.tests2.AnswerTest.answer":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":396,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":442,"org.easymock.tests2.CaptureTest.testAnd":214,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":298,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests2.DelegateToTest.testDelegate":483,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":161,"org.easymock.tests.LimitationsTest.mockFinalMethod":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.DependencyTest.testClassMockingSupport":422,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":295,"org.easymock.tests2.CaptureTest.testCapture1_2446744":14,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":440,"org.easymock.tests.UsageThrowableTest.throwError":162,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":332,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":300,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":101,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":463,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests.MockingTest.testInterfaceMocking":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":238,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":452,"org.easymock.tests2.UsageTest.niceToStrict":187,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":459,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":35,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":373,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":342,"org.easymock.tests.UsageOverloadedMethodTest.overloading":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":149,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":263,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":205,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":222,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":287,"org.easymock.tests.MockClassControlTest.testEquals":384,"org.easymock.tests2.EasyMockSupportClassTest.testAll":64,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":9,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":441,"org.easymock.tests2.CaptureTest.testCaptureAll":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests.MockNameTest.defaultName":289,"org.easymock.tests2.UsageConstraintsTest.testMatches":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":330,"org.easymock.samples.ExampleTest.voteForRemovals":119,"org.easymock.tests.UsageVarargTest.allKinds":129,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":290,"org.easymock.samples.BasicClassMockTest.testPrintContent":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":168,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":428,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":354,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":405,"org.easymock.samples.ExampleTest.voteForRemoval":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":475,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":469,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":90,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":349,"org.easymock.tests2.CaptureTest.testCaptureFirst":224,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":2,"org.easymock.tests2.UsageTest.moreThanOneArgument":423,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":128,"org.easymock.tests.GenericTest.testBridgedEquals":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":153,"org.easymock.tests.UsageExpectAndReturnTest.longType":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":378,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":210,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.UsageCallCountTest.tooManyCalls":154,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testNiceClassMocking":308,"org.easymock.tests.MockingTest.testClassMocking":304,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":69,"org.easymock.tests2.UsageConstraintsTest.testContains":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":99,"org.easymock.tests2.UsageConstraintsTest.testFind":258,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":368,"org.easymock.tests.MockTypeTest.fromEasyMockClass":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":488,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":124,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":409,"org.easymock.tests.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":412,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":431,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":20,"org.easymock.tests.MockClassControlTest.testHashCode":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":454,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":13,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":439,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":196,"org.easymock.tests.UsageVarargTest.varargCharAccepted":123,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastCall":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":401,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":19,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":4,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":360,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":67,"org.easymock.tests2.UsageTest.resumeIfFailure":427,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":352,"org.easymock.tests2.StubTest.stubWithReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":211,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":313,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":100,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":40,"org.easymock.samples.SupportTest.voteForRemovals":113,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":375,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":399,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":437,"org.easymock.tests.UsageExpectAndThrowTest.object":160,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":328,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":208,"org.easymock.tests2.DelegateToTest.testWrongClass":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":243,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":320,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":479,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":374,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":443,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":343,"org.easymock.tests2.CaptureTest.testCaptureNone":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":325,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":131,"org.easymock.tests.UsageVarargTest.varargByteAccepted":127,"org.easymock.tests2.ThreadingTest.testThreadSafe":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":457,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":152,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":410,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":47,"org.easymock.tests2.CaptureTest.testCapture_2617107":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":146,"org.easymock.tests2.UsageConstraintsTest.any":203,"org.easymock.tests2.StubTest.stub":230,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndThrowTest.longType":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":404,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":336,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.SerializationTest.testClass":62,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests.LimitationsTest.mockNativeMethod":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":5,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":58,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":31,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.NameTest.nameForMocksControl":436,"org.easymock.tests2.MockedExceptionTest.testMockedException":485,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":447,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":419,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":75,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":29,"org.easymock.tests2.CaptureTest.testCaptureLast":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":201,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":209,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":372,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":189,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":268,"org.easymock.samples.ExampleTest.removeNonExistingDocument":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":34,"org.easymock.tests.UsageStrictMockTest.differentMethods":321,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":21,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":402,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":276,"org.easymock.tests2.MockBuilderTest.testCreateMockString":79,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":448,"org.easymock.tests.UsageExpectAndThrowTest.floatType":157,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":111,"org.easymock.tests.UsageVerifyTest.twoThrows":130,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests.LimitationsTest.privateConstructor":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":267,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":484,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":169,"org.easymock.tests2.UsageTest.defaultResetToNice":426,"org.easymock.samples.ExampleTest.voteAgainstRemovals":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":30,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.UsageConstraintsTest.equals":471,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":473,"org.easymock.tests.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":345,"org.easymock.tests.UsageThrowableTest.throwCheckedException":166,"org.easymock.tests.MockingTest.testStrictClassMocking":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":33,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":281,"org.easymock.tests.ObjectMethodsTest.testHashCode":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":42,"org.easymock.tests2.NameTest.nameForNiceMock":435,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":199,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":489,"org.easymock.samples.ExampleTest.addDocument":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.DelegateToTest.testStubDelegate":272,"org.easymock.tests2.AnswerTest.stubAnswer":438,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":232,"org.easymock.tests.UsageVarargTest.varargLongAccepted":126,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.floatType":137,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":26,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":266,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":106,"org.easymock.tests2.SerializationTest.test":195,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":218,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":1,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.samples.SupportTest.addDocument":112,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":466,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":449,"org.easymock.tests.GenericTest.testPackageScope":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":25,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests2.NameTest.nameForMock":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":430,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":474,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":376,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":418,"org.easymock.tests2.MockedExceptionTest.testRealException":486,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":39,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":235,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":341,"org.easymock.tests2.NameTest.nameForStrictMock":434,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":464,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":403,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":429,"org.easymock.tests2.UsageConstraintsTest.lessThan":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":453,"org.easymock.tests2.CaptureTest.testCaptureRightOne":223,"org.easymock.tests2.UsageConstraintsTest.testOr":261,"org.easymock.tests.UsageRangeTest.combination":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":450,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":125,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":367,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":425,"org.easymock.tests2.CaptureTest.testCaptureFromStub":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":331,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":71,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":316,"org.easymock.tests2.UsageConstraintsTest.constraints":470,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.samples.ExampleTest.addAndChangeDocument":283,"org.easymock.tests.UsageStrictMockTest.testVerify":322,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":311,"org.easymock.tests.LimitationsTest.abstractClass":379,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":121}}]
