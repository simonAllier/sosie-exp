[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"bridgeMethod","equalsMethod":"result"}},{"position":"org.easymock.Capture:134","failures":[0,1],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"lastControl","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[21],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[26,27,28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,26,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,9,97,98,99,10,100,101,22,23,24,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,27,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,29,30,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[26,73,76,77,191,137,27,192,156,157,158,193,194,173,29,30],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[195,8,196],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[197],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[198,199,137,192,200,201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,202,203,204,205,206,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[207],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[208,73,76,77,198,209,199,210,137,211,192,156,157,158,200,201,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[215,216,31,32,33,34,35,36,37,38,39,40,217,41,42,43,44,45,46,47,48,49,50,218,219,51,220,221,222,223,52,224,225,226,227,228,53,229,230,54,55,56,26,57,58,231,232,233,234,235,59,60,61,62,236,63,64,65,66,67,68,237,238,69,239,240,241,242,243,70,244,245,246,247,248,249,250,251,252,253,71,72,208,73,74,75,254,255,256,76,77,257,78,79,80,81,82,83,84,85,258,86,87,88,89,90,259,2,260,261,3,262,91,263,92,4,93,264,265,266,267,6,268,94,7,269,95,96,9,97,270,98,99,10,11,271,272,273,274,275,276,277,100,213,214,101,278,279,280,22,23,24,281,282,283,284,285,102,286,287,288,289,290,291,292,293,294,103,295,296,104,297,298,299,300,301,302,303,304,305,105,306,307,308,309,310,106,311,312,107,313,314,315,108,316,109,317,110,318,319,320,111,112,321,322,323,113,324,325,114,326,327,115,116,328,117,118,329,119,330,331,120,332,333,121,122,123,124,125,126,334,335,336,337,127,128,338,339,340,129,341,130,131,342,132,191,343,344,345,133,134,346,135,347,348,349,350,136,137,138,139,27,140,141,351,142,143,144,145,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,146,147,148,370,149,150,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,151,152,386,153,387,388,389,390,154,391,392,393,394,155,395,396,397,398,399,211,192,156,400,401,157,158,159,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,160,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,161,162,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,163,164,165,467,166,167,468,168,169,170,171,172,469,19,470,471,173,472,29,30,174,175,176,177,178,179,180,181,473,474,475,476,477,478,479,480,481,482,182,483,183,184,484,485,486,487,488,489,490,491,492,493,494,495,496,185,497,498,499,500,501,20,502,503,504,505,506,186,187,507,188,508,509,510,511,189,512,513,514,515,190,516,517,518,519],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[314,365,433,489,490,491,492,493,494,501,20,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[459,463],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[51,55,59,60,61,62,236,63,64,65,66,67,68,237,238,69,280,111,321,322,323,113,325,114,326,327,115,116,328,117,118,329,119,330,331,120,332,333,121,122,123,124,125,126,334,335,338,340,137,138,142,143,144,145,352,353,354,172,173,478,479,480,481,482,493,503,504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[51,520,118],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,26,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,9,97,98,99,10,100,101,22,23,24,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,27,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,29,30,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[215,216,31,32,33,34,35,36,37,38,39,40,217,41,42,43,44,45,46,47,48,49,50,218,219,51,220,221,222,223,52,224,225,226,227,228,53,229,230,54,55,56,26,57,58,231,232,233,234,235,59,60,61,62,236,63,64,65,66,67,68,237,238,69,239,240,241,242,243,70,244,245,246,247,248,249,250,251,252,253,71,72,208,73,74,75,254,255,256,76,77,257,78,79,80,81,82,83,84,85,258,86,87,88,89,90,259,2,260,261,3,262,91,263,92,4,93,264,265,266,267,6,268,94,7,269,95,96,9,97,270,98,99,10,11,271,272,273,274,275,276,277,100,213,214,101,278,279,280,22,23,24,281,282,283,284,285,102,286,287,288,289,290,291,292,293,294,103,295,296,104,297,298,299,300,301,302,303,304,305,105,306,307,308,309,310,106,311,312,107,313,314,315,108,316,109,317,110,318,319,320,111,112,321,322,323,113,324,325,114,326,327,115,116,328,117,118,329,119,330,331,120,332,333,121,122,123,124,125,126,334,335,336,337,127,128,338,339,340,129,341,130,131,342,132,191,343,344,345,133,134,346,135,347,348,349,350,136,137,138,139,27,140,141,351,142,143,144,145,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,146,147,148,370,149,150,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,151,152,386,153,387,388,389,390,154,391,392,393,394,155,395,396,397,398,399,211,192,156,400,401,157,158,159,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,160,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,161,162,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,163,164,165,467,166,167,468,168,169,170,171,172,469,19,470,471,173,472,29,30,174,175,176,177,178,179,180,181,473,474,475,476,477,478,479,480,481,482,182,483,183,184,484,485,486,487,488,489,490,491,492,493,494,495,496,185,497,498,499,500,501,20,502,503,504,505,506,186,187,507,188,508,509,510,511,189,512,513,514,515,190,516,517,518,519],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[215,216,31,32,33,34,35,36,37,38,39,40,217,41,42,43,44,45,46,47,48,49,50,218,219,51,220,221,222,223,52,224,225,226,227,228,53,229,230,54,55,56,26,57,58,231,232,233,234,235,59,60,61,62,236,63,64,65,66,67,68,237,238,69,239,240,241,242,243,70,244,245,246,247,248,249,250,251,252,253,71,72,208,73,74,75,254,255,256,76,77,257,78,79,80,81,82,83,84,85,258,86,87,88,89,90,259,2,260,261,3,262,91,263,92,4,93,264,265,266,267,6,268,94,7,269,95,96,9,97,270,98,99,10,11,271,272,273,274,275,276,277,100,213,214,101,278,279,280,22,23,24,281,282,283,284,285,102,286,287,288,289,290,291,292,293,294,103,295,296,104,297,298,299,300,301,302,303,304,305,105,306,307,308,309,310,106,311,312,107,313,314,315,108,316,109,317,110,318,319,320,111,112,321,322,323,113,324,325,114,326,327,115,116,328,117,118,329,119,330,331,120,332,333,121,122,123,124,125,126,334,335,336,337,127,128,338,339,340,129,341,130,131,342,132,191,343,344,345,133,134,346,135,347,348,349,350,136,137,138,139,27,140,141,351,142,143,144,145,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,146,147,148,370,149,150,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,151,152,386,153,387,388,389,390,154,391,392,393,394,155,395,396,397,398,399,211,192,156,400,401,157,158,159,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,160,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,161,162,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,163,164,165,467,166,167,468,168,169,170,171,172,469,19,470,471,173,472,29,30,174,175,176,177,178,179,180,181,473,474,475,476,477,478,479,480,481,482,182,483,183,184,484,485,486,487,488,489,490,491,492,493,494,495,496,185,497,498,499,500,501,20,502,503,504,505,506,186,187,507,188,508,509,510,511,189,512,513,514,515,190,516,517,518,519],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[521,321,332,125],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[236,238,373,385,388,393,396,398,399,444,173,506,509,514,517,519],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1191","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":399,"org.easymock.tests2.UsageTest.argumentsOrdered":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":75,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":490,"org.easymock.tests.MockingTest.testPartialClassMocking":133,"org.easymock.tests.MockClassControlTest.testToString":417,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":231,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":384,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":104,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":142,"org.easymock.tests2.UsageTest.wrongArguments":73,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":413,"org.easymock.samples.ExampleTest.answerVsDelegate":36,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":407,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":48,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":422,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":87,"org.easymock.tests2.CaptureTest.testPrimitive":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":352,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":398,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":475,"org.easymock.tests.UsageTest.argumentsOrdered":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":478,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":259,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":290,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":482,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.DependencyTest.testClassMocking":336,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":253,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":404,"org.easymock.tests2.CaptureTest.testAnd":59,"org.easymock.tests2.UsageTest.strictResetToDefault":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":83,"org.easymock.tests2.DelegateToTest.testDelegate":110,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":155,"org.easymock.tests.LimitationsTest.mockFinalMethod":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":383,"org.easymock.tests2.DependencyTest.testClassMockingSupport":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":236,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":251,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":471,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":477,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":312,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.MockingTest.testInterfaceMocking":346,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":358,"org.easymock.tests2.CompareToTest.testLessOrEqual":521,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":499,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":385,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":196,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":91,"org.easymock.tests2.MockBuilderTest.testCreateMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":390,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":198,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":84,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":403,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":411,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":16,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":310,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":512,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":119,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":467,"org.easymock.tests.MockClassControlTest.testEquals":421,"org.easymock.tests2.EasyMockSupportClassTest.testAll":103,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":396,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":209,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":381,"org.easymock.tests.MockNameTest.defaultName":466,"org.easymock.tests2.UsageConstraintsTest.testMatches":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":476,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":355,"org.easymock.samples.ExampleTest.voteForRemovals":40,"org.easymock.tests.UsageVarargTest.allKinds":172,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":472,"org.easymock.samples.BasicClassMockTest.testPrintContent":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":382,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":287,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":317,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":464,"org.easymock.tests2.UsageConstraintsTest.greaterThan":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":224,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":465,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":225,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":319,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":218,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":182,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":81,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":489,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":82,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":78,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":509,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.UsageTest.moreThanOneArgument":208,"org.easymock.tests2.CaptureTest.testCapture2_2446744":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":267,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":171,"org.easymock.tests.GenericTest.testBridgedEquals":485,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":14,"org.easymock.tests.UsageExpectAndReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":379,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":397,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":410,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":473,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.UsageCallCountTest.tooManyCalls":150,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":510,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":96,"org.easymock.tests.MockingTest.testNiceClassMocking":349,"org.easymock.tests.MockingTest.testClassMocking":344,"org.easymock.tests2.UsageConstraintsTest.testContains":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":368,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":325,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":450,"org.easymock.tests.MockTypeTest.fromEasyMockClass":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":340,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":86,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":203,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":454,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":372,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":516,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":130,"org.easymock.tests.MockClassControlTest.testHashCode":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":303,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":19,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":250,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":280,"org.easymock.tests.UsageVarargTest.varargCharAccepted":166,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":457,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests.DefaultClassInstantiatorTest.object":458,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":452,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":194,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":281,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":419,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":387,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":517,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":501,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":492,"org.easymock.tests2.StubTest.stubWithReturnValue":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":511,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":442,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":199,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":392,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":448,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":213,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":488,"org.easymock.tests.UsageExpectAndThrowTest.object":154,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":122,"org.easymock.tests2.DelegateToTest.testWrongClass":109,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":353,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":354,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":276,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":95,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":391,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":92,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":292,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":412,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":500,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.UsageUnorderedTest.message":173,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":197,"org.easymock.tests.UsageVarargTest.varargByteAccepted":170,"org.easymock.tests2.ThreadingTest.testThreadSafe":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":306,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":148,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":145,"org.easymock.tests2.UsageConstraintsTest.any":117,"org.easymock.tests2.StubTest.stub":313,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":462,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":519,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":241,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":296,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":386,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":135,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":93,"org.easymock.tests.MockingTest.testNicePartialClassMocking":134,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.CompareToTest.testCompareEqual":520,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":377,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests.MockingTest.testTwoMocks":345,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":389,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":334,"org.easymock.samples.ExampleTest.removeNonExistingDocument":217,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":245,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":283,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":460,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":320,"org.easymock.tests2.MockBuilderTest.testCreateMockString":268,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":415,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":297,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":101,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":269,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":52,"org.easymock.tests.LimitationsTest.privateConstructor":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":13,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":256,"org.easymock.samples.ExampleTest.voteAgainstRemovals":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":190,"org.easymock.tests.UsageVarargTest.differentLength":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":240,"org.easymock.tests2.CallbackTest.callback":107,"org.easymock.tests2.UsageConstraintsTest.equals":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":220,"org.easymock.tests.UsageTest.openCallCountByLastCall":400,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":144,"org.easymock.tests.UsageCallCountTest.tooFewCalls":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":414,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":201,"org.easymock.tests.MockingTest.testStrictClassMocking":343,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":504,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":244,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":279,"org.easymock.tests.ObjectMethodsTest.testHashCode":453,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":205,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":112,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":204,"org.easymock.samples.ExampleTest.addDocument":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":311,"org.easymock.tests2.DelegateToTest.testStubDelegate":316,"org.easymock.tests2.AnswerTest.stubAnswer":278,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":264,"org.easymock.tests.UsageVarargTest.varargLongAccepted":169,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":518,"org.easymock.tests.UsageExpectAndReturnTest.floatType":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":216,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":289,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":333,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":322,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":271,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":506,"org.easymock.tests2.UsageConstraintsTest.testSame":326,"org.easymock.samples.SupportTest.addDocument":42,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":270,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":298,"org.easymock.tests.GenericTest.testPackageScope":183,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":288,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":347,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":513,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":6,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":507,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":394,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":425,"org.easymock.tests2.MockedExceptionTest.testRealException":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":366,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":8,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":275,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":461,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":260,"org.easymock.tests2.UsageStrictMockTest.range":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":80,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":302,"org.easymock.tests2.UsageConstraintsTest.testOr":327,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":156,"org.easymock.tests2.MockBuilderTest.testWithConstructor":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":299,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":463,"org.easymock.tests.UsageVarargTest.varargShortAccepted":168,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":370,"org.easymock.tests2.UsageConstraintsTest.cmpTo":118,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.CaptureTest.testCaptureFromStub":237,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":356,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":261,"org.easymock.tests.UsageTest.unexpectedCallWithArray":192,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":147,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":515,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.UsageConstraintsTest.constraints":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":41,"org.easymock.tests.UsageStrictMockTest.testVerify":351,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":44,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":380,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":508,"org.easymock.tests.LimitationsTest.abstractClass":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":481,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":164,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":85}}]
