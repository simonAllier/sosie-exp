[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[3,4,5,6,7,8],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[13,32,33,34,35,36,37,38,39,28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[41,42,43,44,10,45,11,46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[69,9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[17,19,20,25,30],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[70,71,72,73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[74,59,75,76,77,78,79,80,81,82,67,83,84,85],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[74,86,87,59,60,88,89,90,91,92,93,94,77,95,96,78,79,97,98,80,99,81,82,100,101,42,102,103,104,105,106,107,108,109,110,111,112,113,114,67,68,45,9,52,49,6,115,116,83,117,118,84,85,119,120,121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[86,59,60,122,123,124,125,75,94,80,99,81,82,113,67,68,126,127,128,129,130,131,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.LastControl:70","failures":[74,86,132,88,133,134,89,69,135,92,98,80,136,137,138,139,140,141,142,41,101,42,143,102,103,104,105,106,144,43,145,146,107,147,113,148,149,150,44,10,151,45,152,11,46,153,47,9,154,155,156,157,158,52,159,160,48,161,162,163,164,49,165,166,167,168],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[41,42,43,44,10,45,11,46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.Range:52","failures":[74,86,59,60,169,170,171,172,173,90,91,93,94,77,95,96,78,79,97,174,98,175,80,99,81,82,4,109,110,111,112,113,67,68,45,152,9,154,49,165,8,115,116,83,117,118,84,85,119,120],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":158,"org.easymock.tests2.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests.ObjectMethodsTest.testHashCode":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":56,"org.easymock.tests2.NameTest.nameForNiceMock":111,"org.easymock.tests.UsageVarargTest.allKinds":98,"org.easymock.tests2.DelegateToTest.testReturnException":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":99,"org.easymock.tests.MockClassControlTest.testToString":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":19,"org.easymock.tests2.AnswerTest.stubAnswer":121,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":86,"org.easymock.tests2.UsageConstraintsTest.greaterThan":159,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":7,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":137,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageTest.wrongArguments":83,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.ConstraintsToStringTest.orToString":126,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":13,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":37,"org.easymock.tests2.UsageConstraintsTest.testNull":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":28,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":89,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests2.CaptureTest.testCaptureNone":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.UsageUnorderedTest.message":80,"org.easymock.tests2.CaptureTest.testCapture2_2446744":146,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests.UsageVerifyTest.twoReturns":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":131,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":138,"org.easymock.tests2.NameTest.nameForMock":109,"org.easymock.tests2.CaptureTest.testCapture_2617107":42,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":24,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":134,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageCallCountTest.tooManyCalls":173,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":50,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":65,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":55,"org.easymock.tests2.CaptureTest.testAnd":41,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":125,"org.easymock.tests2.NameTest.nameForMocksControl":112,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.testContains":155,"org.easymock.tests2.NameTest.nameForStrictMock":110,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.DelegateToTest.testDelegate":8,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":29,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.CaptureTest.testCaptureLast":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":122,"org.easymock.tests2.UsageConstraintsTest.lessThan":166,"org.easymock.tests2.CaptureTest.testCapture1_2446744":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":62,"org.easymock.tests.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":69,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":66,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests.UsageStrictMockTest.differentMethods":60,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":169,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":3,"org.easymock.tests.UsageTest.wrongArguments":77,"org.easymock.tests2.ConstraintsToStringTest.andToString":130,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":36,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode":2,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":1,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":170,"org.easymock.tests.UsageVerifyTest.twoThrows":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":70,"org.easymock.tests2.UsageConstraintsTest.cmpTo":154,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":18,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":32,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureFromStub":145,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.CallbackTest.callback":100,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":26,"org.easymock.tests.UsageTest.unexpectedCallWithArray":76,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":75,"org.easymock.tests.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":127,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":133,"org.easymock.tests.UsageCallCountTest.tooFewCalls":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":58,"org.easymock.tests2.UsageConstraintsTest.constraints":44,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":35,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":17,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.tests2.ConstraintsToStringTest.notToString":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":156,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":129,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":22,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":140,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":124,"org.easymock.tests2.CaptureTest.testCaptureAll":101}}]
