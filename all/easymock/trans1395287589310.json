[{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[95,96,97,98,99,100,101,102,103,104,41,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[106,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[109,31,33,34,35,40,42,43,44,45,110,46,47,111,112,50,51,52,53,54,55,113,57,59,68,70,72,73,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[116,117,118,119],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[120,77,78,79,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,16,17,142,143,144,145,146,80,147,81,82,148,149,150,151,152,109,153,154,155,95,96,97,98,99,100,156,157,158,159,160,161,162,163,83,164,165,166,167,168,169,170,23,30,171,172,173,174,31,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,84,85,86,205,33,34,35,206,207,208,209,210,211,212,213,214,215,36,37,38,39,216,217,218,40,219,87,88,89,103,104,41,105,42,43,44,45,110,46,47,220,221,222,223,48,224,49,225,226,227,228,229,230,112,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,4,5,254,6,255,7,8,117,256,257,258,259,118,260,261,262,263,10,264,265,266,11,267,119,50,268,90,269,270,271,272,51,52,53,54,55,113,57,58,59,61,62,64,67,70,71,72,73,91,92,93,94,273,274,275,276,12,277,13,278,279,280,281,282,283,14,284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[285,286,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[288,289,290,291,292,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[18,20,21,40,294,48,60,67,114,68,69,70,71,72,73,74,75,115,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[298,261,270,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[153,209,211,212,214,218],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[288,77,78,82,149,299,151,300,301,83,302,303,304,305,306,307,175,184,308,84,85,86,207,210,87,88,231,6,255,256,257,11,267,309,90,310,311,312,313,314,315,91,92,93,94,273],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[16,17,18,20,21,23,30,31,32,33,34,35,36,36,37,37,38,39,40,41,316,294,317,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,114,68,69,70,71,72,73,74,75,115,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[318,319,320,321,48,50,322,323,324],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[108,19],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[288,327,328,300,289,302,305,306,329,330,85,86,331,310,313,314],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[332,333,210,232,273,334,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[335,288,336,327,78,337,338,299,300,301,289,302,305,306,307,171,339,85,86,340,341,331,88,342,232,234,238,239,242,4,261,309,310,269,270,313,314,272,315,56,63,65,68,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[77,327,78,343,344,146,328,300,83,291,345,330,308,346,84,85,86,87,331,88,90,347,292,348,349,350,351],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":314,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":301,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":270,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":323,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":266,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests2.DelegateToTest.testReturnException":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":96,"org.easymock.tests.MockingTest.testPartialClassMocking":33,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":293,"org.easymock.samples.SupportTest.voteForRemovals":218,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":108,"org.easymock.tests.MockClassControlTest.testToString":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.object":195,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":318,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests2.UsageTest.wrongArguments":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageStrictMockTest.range":327,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":144,"org.easymock.samples.ExampleTest.answerVsDelegate":210,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":21,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":196,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":57,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":29,"org.easymock.tests2.CaptureTest.testPrimitive":278,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests.UsageTest.moreThanOneArgument":83,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests2.CaptureTest.testCaptureNone":282,"org.easymock.tests.UsageUnorderedTest.message":300,"org.easymock.tests.UsageVerifyTest.twoReturns":86,"org.easymock.tests.UsageVarargTest.varargByteAccepted":182,"org.easymock.tests2.ThreadingTest.testThreadSafe":227,"org.easymock.tests.UsageTest.argumentsOrdered":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":0,"org.easymock.tests.UsageVarargTest.varargIntAccepted":177,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":149,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":67,"org.easymock.tests2.UsageConstraintsTest.any":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":71,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":97,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":298,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests2.AnswerTest.answer":273,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":317,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests2.UsageTest.strictResetToDefault":268,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":62,"org.easymock.tests2.NameTest.nameForMocksControl":94,"org.easymock.tests2.MockedExceptionTest.testMockedException":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":2,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":73,"org.easymock.tests.MockingTest.testNicePartialClassMocking":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":200,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":59,"org.easymock.tests2.CaptureTest.testCaptureLast":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":346,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":168,"org.easymock.tests.MockingTest.testTwoMocks":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":308,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":193,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":267,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":297,"org.easymock.tests.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.ConstraintsToStringTest.andToString":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":342,"org.easymock.tests2.MockBuilderTest.testCreateMockString":76,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":163,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":261,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":274,"org.easymock.tests.UsageVerifyTest.twoThrows":85,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.samples.ExampleTest.voteAgainstRemoval":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests2.UsageTest.niceToStrict":269,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":186,"org.easymock.tests2.ThreadingTest.testChangeDefault":295,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":103,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":287,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":70,"org.easymock.tests2.UsageTest.defaultResetToNice":271,"org.easymock.tests2.MockBuilderTest.testCreateMock":74,"org.easymock.samples.ExampleTest.voteAgainstRemovals":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.UsageVarargTest.differentLength":339,"org.easymock.tests2.CallbackTest.callback":232,"org.easymock.tests.UsageTest.openCallCountByLastCall":303,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":194,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":142,"org.easymock.tests.UsageCallCountTest.tooFewCalls":82,"org.easymock.tests.UsageOverloadedMethodTest.overloading":206,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":259,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":145,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.MockClassControlTest.testEquals":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":316,"org.easymock.tests2.CaptureTest.testCaptureAll":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.testMatches":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":110,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":162,"org.easymock.tests2.CompareToTest.testGreateOrEqual":116,"org.easymock.samples.ExampleTest.voteForRemovals":214,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":229,"org.easymock.tests2.NameTest.nameForNiceMock":93,"org.easymock.tests.UsageVarargTest.allKinds":184,"org.easymock.tests2.DependencyTest.testInterfaceMocking":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":320,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":167,"org.easymock.samples.ExampleTest.addDocument":213,"org.easymock.tests2.DelegateToTest.testStubDelegate":112,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests2.AnswerTest.stubAnswer":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":321,"org.easymock.tests2.UsageConstraintsTest.greaterThan":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":172,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":65,"org.easymock.tests.UsageVarargTest.varargLongAccepted":181,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.samples.ExampleTest.voteForRemoval":211,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.tests2.ConstraintsToStringTest.orToString":347,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":263,"org.easymock.tests.UsageThrowableTest.noUpperLimit":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":253,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests2.SerializationTest.test":224,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":106,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.testSame":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.samples.SupportTest.addDocument":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":95,"org.easymock.tests2.CaptureTest.testCaptureFirst":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":315,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests2.UsageTest.moreThanOneArgument":90,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":1,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":75,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":183,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests2.NameTest.nameForMock":91,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests2.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":81,"org.easymock.tests2.MockedExceptionTest.testRealException":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":333,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.testContains":258,"org.easymock.tests2.NameTest.nameForStrictMock":92,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":254,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":58,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":250,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":331,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":319,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":179,"org.easymock.tests.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":205,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":3,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":322,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":175,"org.easymock.tests.UsageTest.wrongArguments":302,"org.easymock.tests.MockClassControlTest.testHashCode":27,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":23,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":107,"org.easymock.tests.UsageVarargTest.varargShortAccepted":180,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":220,"org.easymock.tests2.UsageConstraintsTest.cmpTo":257,"org.easymock.tests.UsageVarargTest.varargCharAccepted":178,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests2.UsageTest.openCallCountByLastCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":285,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":192,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":63,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests2.ConstraintsToStringTest.notToString":348,"org.easymock.tests.UsageStrictMockTest.testVerify":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":216,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":165,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests2.UsageTest.resumeIfFailure":272,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":153,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":176}}]
