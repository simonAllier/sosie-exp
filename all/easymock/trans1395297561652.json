[{"position":"org.easymock.internal.RecordState:136","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,17,17,18,18,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[37,44,45,47,59,61,62,63,64,65,66,67,68,70,72,73,74,80,83,84,89,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[90,91,92,93,94,95,96,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[98,86,99,87],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[102,103,104,105,106,107],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:84","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[102,103,104,105,106,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[108,34],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[109,102,4,110,111,112,113,114,115,116,117,118,119,19,120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[0,131,132,133,134,135,136,137,138,139,140,35,36,1,2,141,142,3,109,143,144,145,146,147,148,149,150,151,152,153,154,38,155,156,102,4,157,110,111,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,112,105,113,191,192,114,115,193,39,5,6,7,8,9,194,195,196,197,198,199,200,201,202,116,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,41,42,220,43,221,222,223,91,92,93,94,95,96,44,224,225,45,226,227,10,11,228,46,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,117,118,119,262,263,264,265,266,12,13,14,15,16,267,268,269,270,271,272,273,274,275,276,277,19,278,120,121,279,280,97,281,282,283,284,285,52,53,55,56,286,287,122,123,288,289,290,291,292,124,125,293,294,295,296,57,297,298,299,300,301,302,58,126,127,128,129,59,61,62,303,63,64,67,68,70,75,76,304,77,78,79,80,81,305,82,83,84,85,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,20,328,329,330,331,332,333,334,335,21,22,336,337,23,24,25,26,100,101,338,339,27,340,28,29,341,30,31,130,342,343,344,345,32,33,34,86,99,87,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[108,34],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[0,131,347,348,349,132,133,134,135,136,137,138,139,140,35,36,37,1,2,141,142,3,109,143,144,145,146,147,148,149,150,151,152,153,154,38,155,156,102,4,157,110,111,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,350,188,351,190,112,105,113,191,192,114,115,193,352,353,354,355,356,39,5,6,7,8,9,194,195,196,197,198,199,200,201,202,357,116,203,204,205,206,207,208,209,210,211,212,213,214,358,359,360,215,216,217,361,40,41,42,43,91,92,93,94,95,96,362,363,364,365,366,10,11,228,46,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,117,118,119,262,263,264,265,266,12,13,14,15,16,267,268,269,270,271,272,273,274,17,17,18,18,47,367,368,48,49,369,370,371,275,372,276,277,19,278,120,121,279,280,97,51,52,53,54,373,55,56,286,287,122,123,288,289,290,291,292,124,125,293,294,295,296,57,297,298,299,300,301,302,58,126,127,128,129,59,61,63,64,65,66,67,68,70,71,72,73,74,75,76,304,77,78,79,80,81,82,83,84,85,307,374,375,308,309,310,311,312,376,313,314,315,377,316,317,318,319,320,321,322,323,324,325,326,327,20,328,329,378,379,380,381,382,383,384,385,386,387,388,389,390,330,331,332,333,334,335,21,22,336,337,23,24,25,26,100,101,391,338,339,27,340,28,29,341,30,31,130,342,343,344,345,32,33,34,86,99,87,346],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[392,35,36,37,393,394,395,38,396,39,218,219,40,41,42,43,223,44,45,228,46,229,230,231,232,233,234,266,397,398,399,400,401,402,17,18,47,48,49,403,284,51,52,53,54,55,56,295,296,57,58,404,405,59,406,61,62,407,303,63,64,65,408,66,409,67,68,410,70,411,412,71,413,72,414,415,416,417,418,419,420,73,421,422,423,424,425,74,75,76,77,78,79,80,81,426,305,82,83,84,85,306,89,86,87],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[427,428,429],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[0,131,132,133,134,135,136,137,138,139,140,35,36,1,2,141,142,3,109,143,144,145,146,147,148,149,150,151,152,153,154,38,155,156,102,4,157,110,111,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,112,105,113,191,192,114,115,193,39,5,6,7,8,9,194,195,196,197,198,199,201,202,116,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,41,42,43,91,92,93,94,95,96,10,11,228,46,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,117,118,119,262,263,264,265,266,12,13,14,15,16,267,268,269,270,271,272,273,274,17,17,18,18,47,367,368,48,49,369,370,371,275,372,276,277,19,278,120,121,279,280,97,51,52,53,54,373,55,56,286,287,122,123,288,289,290,291,292,124,125,293,294,295,296,57,297,298,299,300,301,302,58,126,127,128,129,59,61,63,64,65,66,67,68,70,71,72,73,74,75,76,304,77,78,79,80,81,82,83,84,85,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,20,328,329,378,379,380,381,382,383,384,385,386,387,388,389,390,330,331,332,333,334,335,21,22,336,337,23,24,25,26,100,101,338,339,27,340,28,29,341,30,31,130,342,343,344,345,32,33,34,86,99,87,346],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[430],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[289,78,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[431,432,433,434,435,404,408],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[35,36,37,38,39,40,41,42,43,44,45,46,17,17,18,18,47,48,49,436,50,437,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[0,131,347,348,349,134,35,37,1,2,141,142,3,109,38,4,110,111,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,438,351,439,190,112,191,192,193,352,353,354,355,356,39,5,6,7,8,9,199,201,202,116,358,359,360,361,41,42,43,91,92,93,94,95,96,362,363,364,365,366,10,11,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,117,118,119,12,13,14,15,16,267,268,269,270,272,274,17,17,18,18,47,370,371,275,372,19,120,121,280,97,51,52,53,54,373,55,56,286,287,122,288,290,291,292,293,294,295,296,57,297,298,299,300,301,302,58,61,63,65,66,68,71,72,73,74,75,76,304,77,78,79,81,83,84,85,307,374,375,308,309,310,311,312,376,313,314,315,377,316,317,318,320,321,324,325,326,327,20,328,329,378,379,380,381,382,383,384,385,386,387,388,389,331,21,22,336,337,23,24,25,26,100,101,338,339,27,340,28,29,341,30,31,130,342,343,345,32,33,34,86,99,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[17,18,47,72,73,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[0,131,347,348,349,132,133,134,135,136,137,138,139,140,392,35,36,37,393,440,1,2,141,142,3,109,143,144,145,146,147,148,149,150,151,152,153,154,394,395,38,396,155,156,102,4,157,110,111,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,350,188,189,438,351,439,190,112,105,113,191,192,114,115,193,441,442,443,444,445,446,447,90,448,449,450,451,452,453,454,455,352,456,457,458,459,460,353,461,354,355,356,39,5,6,7,8,9,194,195,196,197,198,199,200,201,202,357,116,203,204,205,206,462,207,208,209,210,211,212,213,214,358,359,360,463,215,216,217,464,465,361,218,219,40,41,42,220,43,221,222,223,91,92,93,94,95,96,362,363,364,365,366,44,466,467,224,225,45,226,227,10,11,468,228,46,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,117,118,119,262,263,264,265,469,266,397,398,399,400,401,470,402,12,13,14,15,16,267,268,269,270,271,272,273,274,17,18,47,367,368,48,49,369,370,471,472,473,474,475,371,476,477,478,479,480,481,482,483,275,372,276,277,19,278,120,121,279,280,97,403,281,282,283,284,484,285,51,52,53,54,485,373,55,56,486,286,287,122,123,288,289,290,291,292,124,125,293,294,295,296,57,297,298,299,300,301,302,58,404,405,487,126,127,128,129,59,406,61,62,407,303,63,64,65,408,66,488,409,67,68,410,70,411,412,489,71,490,413,72,414,415,416,491,417,418,419,420,492,73,421,422,423,424,425,74,493,494,75,76,304,77,78,79,80,428,81,426,305,82,83,84,85,306,89,307,374,375,308,309,310,311,495,312,376,313,314,315,377,316,317,318,319,320,321,322,323,324,325,326,327,20,328,329,378,379,380,381,382,383,384,385,386,387,388,389,390,330,496,497,498,499,500,331,501,502,503,504,505,506,332,333,334,335,21,22,336,337,507,23,24,25,26,100,101,391,338,339,27,340,28,29,341,30,31,130,342,343,344,345,32,33,34,86,99,87,346],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[86,99,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[37,44,45,47,59,60,61,62,63,65,66,68,69,70,80,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,131,347,348,349,132,133,134,135,136,137,138,139,140,392,35,36,37,393,1,2,141,142,3,109,143,144,145,146,147,148,149,150,151,152,153,154,394,395,38,396,155,156,102,4,157,110,111,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,350,188,189,438,351,439,190,112,105,113,191,192,114,115,193,441,442,443,444,445,446,447,90,448,449,450,451,452,453,454,455,352,456,457,458,459,460,353,461,354,355,356,39,5,6,7,8,9,194,195,196,197,198,199,200,201,202,357,116,203,204,205,206,462,207,208,209,210,211,212,213,214,358,359,360,463,215,216,217,464,465,361,218,219,40,41,42,220,43,221,222,223,91,92,93,94,95,96,362,363,364,365,366,44,466,467,224,225,45,226,227,10,11,468,228,46,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,117,118,119,262,263,264,265,266,397,398,399,400,401,402,12,13,14,15,16,267,268,269,270,271,272,273,274,17,18,47,367,368,48,49,369,370,471,472,473,474,475,371,476,477,478,479,480,481,482,483,275,372,276,277,19,278,120,121,279,280,97,403,284,484,285,51,52,53,54,485,373,55,56,486,286,287,122,123,288,289,290,291,292,124,125,293,294,295,296,57,297,298,299,300,301,302,58,404,487,126,127,128,129,59,61,62,303,63,64,65,66,488,409,67,68,70,411,412,489,71,490,413,72,414,415,416,491,417,418,419,420,492,73,421,422,423,424,425,74,493,494,75,76,304,77,78,79,80,428,81,426,305,82,83,84,85,306,89,307,374,375,308,309,310,311,495,312,376,313,314,315,377,316,317,318,319,320,321,322,323,324,325,326,327,20,328,329,378,379,380,381,382,383,384,385,386,387,388,389,390,330,496,497,498,499,500,331,501,502,503,504,505,506,332,333,334,335,21,22,336,337,507,23,24,25,26,100,101,391,338,339,27,340,28,29,341,30,31,130,342,343,344,345,32,33,34,86,99,87,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[431,432,433,434,435,404,408],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[317,318,319,320,327,20,100,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":337,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.UsageTest.argumentsOrdered":125,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":450,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":289,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":367,"org.easymock.tests2.DelegateToTest.testReturnException":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":92,"org.easymock.tests.MockingTest.testPartialClassMocking":41,"org.easymock.tests.MockClassControlTest.testToString":229,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":487,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":431,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":101,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":506,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":268,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":45,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":387,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":234,"org.easymock.tests2.CaptureTest.testPrimitive":320,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":3,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":14,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":435,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":9,"org.easymock.tests.ReplayStateInvalidUsageTest.times":151,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":331,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":307,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":335,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":467,"org.easymock.tests2.CaptureTest.testAnd":317,"org.easymock.tests2.UsageTest.strictResetToDefault":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":13,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":382,"org.easymock.tests2.DelegateToTest.testDelegate":316,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":253,"org.easymock.tests.LimitationsTest.mockFinalMethod":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":198,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":350,"org.easymock.tests2.CaptureTest.testCapture1_2446744":321,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":333,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":145,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":225,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":146,"org.easymock.tests.MockingTest.testInterfaceMocking":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":359,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":239,"org.easymock.tests2.UsageTest.niceToStrict":288,"org.easymock.tests2.ThreadingTest.testChangeDefault":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":503,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":106,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":247,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":466,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageOverloadedMethodTest.overloading":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":425,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":340,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":326,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":71,"org.easymock.tests.MockClassControlTest.testEquals":233,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":255,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":196,"org.easymock.tests2.CaptureTest.testCaptureAll":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":334,"org.easymock.tests.MockNameTest.defaultName":468,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":15,"org.easymock.samples.ExampleTest.voteForRemovals":272,"org.easymock.tests.UsageVarargTest.allKinds":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":197,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":96,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":377,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":470,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":402,"org.easymock.samples.ExampleTest.voteForRemoval":269,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":80,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":380,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":91,"org.easymock.tests2.CaptureTest.testCaptureFirst":329,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":381,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":301,"org.easymock.tests2.CaptureTest.testCapture2_2446744":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":213,"org.easymock.tests.GenericTest.testBridgedEquals":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":139,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":378,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":344,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":12,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":140,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":505,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testNiceClassMocking":223,"org.easymock.tests.MockingTest.testClassMocking":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":133,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":60,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":237,"org.easymock.tests.MockTypeTest.fromEasyMockClass":224,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":312,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":432,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":208,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":217,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.MockClassControlTest.testHashCode":232,"org.easymock.tests2.EasyMockSupportTest.testVerify":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":419,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":332,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":330,"org.easymock.tests.UsageVarargTest.varargCharAccepted":207,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":469,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":461,"org.easymock.tests2.UsageTest.openCallCountByLastCall":290,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":389,"org.easymock.tests.DefaultClassInstantiatorTest.object":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":420,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":244,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":230,"org.easymock.tests2.UsageTest.resumeIfFailure":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":94,"org.easymock.tests2.StubTest.stubWithReturnValue":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":345,"org.easymock.tests2.SerializationTest.testAllMockedMethod":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":352,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":107,"org.easymock.samples.SupportTest.voteForRemovals":370,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":250,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":353,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":439,"org.easymock.tests.UsageExpectAndThrowTest.object":248,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":342,"org.easymock.tests2.DelegateToTest.testWrongClass":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":11,"org.easymock.tests.UsageStrictMockTest.range":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":484,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":411,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":153,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":103,"org.easymock.tests2.CaptureTest.testCaptureNone":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":360,"org.easymock.tests.UsageUnorderedTest.message":109,"org.easymock.tests.UsageVerifyTest.twoReturns":119,"org.easymock.tests.UsageVarargTest.varargByteAccepted":212,"org.easymock.tests2.ThreadingTest.testThreadSafe":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":421,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":137,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":464,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests2.CaptureTest.testCapture_2617107":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":142,"org.easymock.tests2.UsageConstraintsTest.any":338,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":150,"org.easymock.tests2.StubTest.stub":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":93,"org.easymock.tests.UsageExpectAndThrowTest.longType":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":400,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":149,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":371,"org.easymock.tests.LimitationsTest.mockNativeMethod":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":498,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":437,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests2.NameTest.nameForMocksControl":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":500,"org.easymock.tests2.MockedExceptionTest.testMockedException":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":413,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":495,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":242,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":66,"org.easymock.tests.MockingTest.testNicePartialClassMocking":42,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":79,"org.easymock.tests2.CompareToTest.testNotComparable":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":496,"org.easymock.tests2.CaptureTest.testCaptureLast":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":188,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":343,"org.easymock.tests.MockingTest.testTwoMocks":40,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":246,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":429,"org.easymock.samples.ExampleTest.removeNonExistingDocument":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":502,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":147,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":398,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":300,"org.easymock.tests2.MockBuilderTest.testCreateMockString":70,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":414,"org.easymock.tests.UsageExpectAndThrowTest.floatType":240,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":405,"org.easymock.tests.UsageVerifyTest.twoThrows":118,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":395,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":295,"org.easymock.tests2.UsageTest.defaultResetToNice":292,"org.easymock.samples.ExampleTest.voteAgainstRemovals":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":497,"org.easymock.tests.UsageVarargTest.differentLength":209,"org.easymock.tests2.CallbackTest.callback":346,"org.easymock.tests2.UsageConstraintsTest.equals":507,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":141,"org.easymock.tests.UsageCallCountTest.tooFewCalls":135,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":104,"org.easymock.tests.MockingTest.testStrictClassMocking":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":501,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":373,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":310,"org.easymock.tests.ObjectMethodsTest.testHashCode":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":434,"org.easymock.tests2.NameTest.nameForNiceMock":128,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":433,"org.easymock.samples.ExampleTest.addDocument":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":314,"org.easymock.tests2.AnswerTest.stubAnswer":309,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":4,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":211,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests.UsageThrowableTest.noUpperLimit":161,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":403,"org.easymock.tests2.SerializationTest.test":99,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":322,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.samples.SupportTest.addDocument":369,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":485,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":415,"org.easymock.tests.GenericTest.testPackageScope":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":221,"org.easymock.tests2.NameTest.nameForMock":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":410,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":252,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":261,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":2,"org.easymock.tests2.NameTest.nameForStrictMock":127,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":303,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":399,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":130,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":61,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":418,"org.easymock.tests2.CaptureTest.testCaptureRightOne":327,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":76,"org.easymock.tests.UsageTest.wrongArguments":113,"org.easymock.tests2.MockBuilderTest.testWithConstructor":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":416,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":401,"org.easymock.tests.UsageVarargTest.varargShortAccepted":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":138,"org.easymock.tests2.UsageConstraintsTest.cmpTo":339,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":375,"org.easymock.tests2.CompareToTest.testLessThan":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":144,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":62,"org.easymock.tests.UsageTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.UsageConstraintsTest.constraints":336,"org.easymock.samples.ExampleTest.addAndChangeDocument":274,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":368,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":195,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":7,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":50,"org.easymock.tests.LimitationsTest.abstractClass":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":384,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":205}}]
