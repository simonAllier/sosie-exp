[{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,14,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,0,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"failures":[1,10],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[17,18,19,20,21,22,313,23,314,315,316,24,25,26,317,318,27,28,29,30,31,32,33,1,14,15,319,320,34,35,321,322,323,324,325,36,37,326,327,328,329,330,331,332,333,334,335,336,337,38,39,40,338,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,339,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,340,341,342,108,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,9,374,375,10,376,377,378,379,380,381,382,383,384,109,110,385,386,387,388,389,111,112,113,114,390,115,116,117,118,391,392,393,394,395,119,396,397,398,120,121,122,123,124,125,12,13,399,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,400,146,401,402,403,404,405,406,407,408,409,410,411,412,413,414,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,415,179,180,181,182,183,184,185,186,416,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,417,217,218,219,220,221,222,223,224,225,226,227,0,228,229,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,230,231,232,233,234,235,236,237,238,439,440,441,442,443,444,445,446,447,448,449,450,239,451,452,453,240,241,454,242,243,244,245,246,247,248,249,250,251,252,253,455,254,255,256,257,258,259,260,261,456,262,263,457,264,458,265,266,267,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,268,475,476,477,478,479,269,480,270,271,272,273,481,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,482,483,484,485,299,300,301,302,303,304,305,306,307,308,486,487,309,488,489,490,491,492,493,494,310,311,495,312,496],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17,19,20,22,316,25,30,1,14,34,35,36,39,48,50,51,53,54,55,57,59,60,61,64,65,66,67,69,70,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,345,355,361,367,371,373,374,377,109,113,391,392,393,394,119,396,397,120,124,12,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,400,146,401,402,403,406,410,411,412,152,157,158,161,166,168,169,170,171,172,173,179,180,181,182,435,233,235,236,244,245,248,249,252,265,266,267,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,484,299,301,307,488,489,491,310,311,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[18,316,30,33,39,40,41,48,50,51,54,55,57,59,60,64,67,69,70,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,99,100,101,102,104,105,106,107,371,124,125,126,127,128,132,133,134,137,138,141,143,402,411,157,158,161,166,169,170,171,172,173,191,194,195,198,200,201,202,203,205,206,207,208,210,211,212,213,233,235,236,244,245,248,249,266,267,270,271,272,273,274,275,278,280,281,282,283,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,307,310,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,19,20,22,316,25,30,1,14,34,35,36,39,48,50,51,53,54,55,57,59,60,64,65,66,67,69,70,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,345,355,361,371,373,374,109,391,392,393,394,119,396,397,120,124,12,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,145,400,146,401,402,403,406,411,157,158,161,166,168,169,170,171,172,173,179,180,181,435,437,233,235,236,244,245,248,249,252,265,266,267,468,470,478,479,480,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,484,299,301,307,488,489,491,310,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[497,107],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[498,499,500,501,502,503,504,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[18,40,41,120,121,122,123,124,125,126,147],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[48,67,73,74,79,87,91,157,158,159,160,161,191,233,261,294,295,296,297,298,307,308,310,311],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[506,98],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[48,67,73,74,79,87,91,157,158,159,160,233,261,294,295,296,297,298,307,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[80,82,98,104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[497,107],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[317,317,318,318,39,48,77,80,81,84,85,86,87,93,95,96,98,99,105,106,107,157,158,161,182,183,184,185,186,233,439,239,459,463,464,473,477,294,295,296,297,298,307,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[85,90,100,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[50,507,235,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[316,1,345,355,361,365,508,367,368,371,372,373,374,376,377,509,379,404,410,411,414,437,451,454],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[1,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[426,427,431],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[510,511,512,513,232,246],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[17,18,19,20,22,23,316,25,317,317,318,318,28,29,30,31,32,33,1,14,34,35,36,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,345,355,361,365,367,371,372,373,374,376,377,379,109,111,112,113,114,391,392,393,394,119,396,397,120,121,122,123,124,125,12,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,400,146,401,402,403,404,406,409,410,411,412,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,416,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,224,225,226,227,0,228,435,437,230,232,233,234,235,236,237,239,244,245,246,247,248,249,250,251,252,254,261,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,484,299,300,301,302,303,304,305,306,307,308,309,488,489,491,310,311,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[514],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[66,68,76,82,83,85,87,88,90,100,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[317,317,318,318,1,375,10,12,13,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.LastControl:94","failures":[66,67,68,69,76,77,82,83,84,85,86,87,88,89,90,91,100,101,105,106],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[66,67,68,69,76,77,82,83,84,85,86,87,88,89,90,91,100,101,105,106],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":58,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":488,"org.easymock.tests.MockClassControlTest.testToString":419,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.tests2.UsageTest.wrongArguments":56,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":164,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":454,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":401,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests.UsageTest.moreThanOneArgument":245,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":225,"org.easymock.tests.UsageTest.argumentsOrdered":251,"org.easymock.tests.UsageVarargTest.varargIntAccepted":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":294,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":333,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":298,"org.easymock.tests.ReplayStateInvalidUsageTest.times":447,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":36,"org.easymock.tests2.DependencyTest.testClassMocking":319,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":45,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":453,"org.easymock.tests2.CaptureTest.testAnd":66,"org.easymock.tests2.UsageTest.strictResetToDefault":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":409,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.DelegateToTest.testDelegate":33,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests.LimitationsTest.mockFinalMethod":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":306,"org.easymock.tests2.DependencyTest.testClassMockingSupport":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":177,"org.easymock.tests2.CaptureTest.testCapture1_2446744":70,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":43,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":441,"org.easymock.tests.UsageThrowableTest.throwError":166,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":241,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.samples.PartialClassMockTest.testGetArea":316,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":180,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":458,"org.easymock.tests2.UsageTest.niceToStrict":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":371,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":452,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":176,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":162,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":500,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":285,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":94,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":417,"org.easymock.tests.MockClassControlTest.testEquals":423,"org.easymock.tests2.EasyMockSupportClassTest.testAll":108,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":436,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":44,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":304,"org.easymock.tests.MockNameTest.defaultName":193,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":185,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":305,"org.easymock.samples.BasicClassMockTest.testPrintContent":315,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":432,"org.easymock.tests2.UsageConstraintsTest.greaterThan":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":412,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":433,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":413,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":404,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":416,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":28,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":281,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.UsageTest.moreThanOneArgument":55,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":476,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":438,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":501,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":259,"org.easymock.tests.UsageExpectAndReturnTest.longType":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":302,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":509,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":103,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":155,"org.easymock.tests.UsageCallCountTest.tooManyCalls":260,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":392,"org.easymock.tests.MockingTest.testClassMocking":487,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":508,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":93,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":113,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":240,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests.UsageExpectAndReturnTest.object":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":218,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":502,"org.easymock.tests.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":495,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":149,"org.easymock.tests.MockClassControlTest.testHashCode":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":352,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":175,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":42,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":217,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":425,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":504,"org.easymock.tests.DefaultClassInstantiatorTest.object":426,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":174,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":380,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":410,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":154,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":361,"org.easymock.tests2.UsageTest.resumeIfFailure":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests2.StubTest.stubWithReturnValue":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":283,"org.easymock.tests2.SerializationTest.testAllMockedMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":511,"org.easymock.samples.SupportTest.voteForRemovals":25,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":269,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":121,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":496,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DelegateToTest.testWrongClass":31,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":311,"org.easymock.tests.UsageStrictMockTest.range":235,"org.easymock.samples.ConstructorCalledMockTest.testTax":317,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":336,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":373,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":449,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":181,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.UsageUnorderedTest.message":261,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":514,"org.easymock.tests.UsageVerifyTest.twoReturns":301,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":257,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":264,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":314,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":160,"org.easymock.tests2.UsageConstraintsTest.any":91,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":446,"org.easymock.tests2.StubTest.stub":38,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":430,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":445,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":484,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":323,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests2.NameTest.nameForMocksControl":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":344,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":338,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":374,"org.easymock.tests.MockingTest.testNicePartialClassMocking":489,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":2,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":397,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":102,"org.easymock.tests.MockingTest.testTwoMocks":309,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":443,"org.easymock.tests.UsageStrictMockTest.differentMethods":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":382,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":129,"org.easymock.tests2.MockBuilderTest.testCreateMockString":379,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":229,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":399,"org.easymock.tests.UsageVerifyTest.twoThrows":300,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":355,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":411,"org.easymock.tests.LimitationsTest.privateConstructor":483,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":111,"org.easymock.tests2.UsageTest.defaultResetToNice":61,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":289,"org.easymock.tests.UsageVarargTest.differentLength":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":322,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests2.UsageConstraintsTest.equals":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":407,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":159,"org.easymock.tests.UsageCallCountTest.tooFewCalls":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":165,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":396,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":37,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":448,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":119,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":125,"org.easymock.tests.ObjectMethodsTest.testHashCode":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests2.NameTest.nameForNiceMock":117,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.stubAnswer":124,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":375,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests.UsageThrowableTest.noUpperLimit":167,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":331,"org.easymock.tests2.SerializationTest.test":14,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":427,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":275,"org.easymock.samples.SupportTest.addDocument":24,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":395,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":347,"org.easymock.tests.GenericTest.testPackageScope":435,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests2.NameTest.nameForMock":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":286,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests2.MockedExceptionTest.testRealException":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":337,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":158,"org.easymock.tests2.NameTest.nameForStrictMock":116,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":505,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":402,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":335,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":367,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":6,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":351,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":400,"org.easymock.tests.UsageTest.wrongArguments":247,"org.easymock.tests2.MockBuilderTest.testWithConstructor":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":287,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":431,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":258,"org.easymock.tests2.UsageConstraintsTest.cmpTo":92,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":122,"org.easymock.tests2.CompareToTest.testLessThan":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.CaptureTest.testCaptureFromStub":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":440,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":368,"org.easymock.tests.UsageTest.unexpectedCallWithArray":246,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":23,"org.easymock.tests.UsageStrictMockTest.testVerify":238,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":231,"org.easymock.tests2.CompareToTest.testGreateThan":506,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":303,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":296,"org.easymock.tests.LimitationsTest.abstractClass":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":280,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":297,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":215}}]
