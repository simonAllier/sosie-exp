[{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[59,60,61,62,63,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,22,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,138,139,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[35,178,179,37,38,70,75,76,81,83,84,180,85,86,87,181,88,89,90,92,95,97,101,182,183,184,185,186,187,0,188,1,2,189,190,191,3,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,44,45,46,47,48,49,50,51,52,53,54,55,56,57,237,238,239,240,130,131,133,134,135,136,137,241,242,243,244,245,246,247,248,39,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,144,267,268,269,270,271,272,151,153,154,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,160,161,162,301,302,303,304,61,8,305,9,10,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,11,62,329,330,331,332,333,334,12,335,336,337,338,339,340,341,342,343,173,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,13,14,15,361,362,363,364,365,366,367,368,369,370,371,372],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[71,82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[24,25,373,374,26,27,29,30,375,376,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[190,196,135,136,137,241,243,261,377,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,295,299,300,328,331,341,342,344,345,346,347,348,349,360],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[378],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[263,272,311,317,324,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[1,2,61,9,10,62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[379,179,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[380,19,20,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[243,377,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,296,297,298,299,300,342,348,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[380,16,17,18,19,20,384,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[84,180,85],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[202],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[84,180,85,385],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[152,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":206,"org.easymock.tests2.UsageTest.argumentsOrdered":199,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":194,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":33,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":345,"org.easymock.tests.MockingTest.testPartialClassMocking":160,"org.easymock.tests.MockClassControlTest.testToString":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":273,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":212,"org.easymock.tests2.UsageTest.wrongArguments":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":339,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":352,"org.easymock.samples.ExampleTest.answerVsDelegate":39,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":177,"org.easymock.tests2.UsageConstraintsTest.testNull":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":150,"org.easymock.tests2.CaptureTest.testPrimitive":47,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":343,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":292,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":264,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":272,"org.easymock.tests2.AnswerTest.answer":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":240,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests2.UsageTest.strictResetToDefault":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":288,"org.easymock.tests.LimitationsTest.mockFinalMethod":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":238,"org.easymock.tests.UsageThrowableTest.throwError":293,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":128,"org.easymock.samples.PartialClassMockTest.testGetArea":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":269,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":115,"org.easymock.tests2.UsageTest.niceToStrict":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":274,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":31,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":350,"org.easymock.tests.UsageOverloadedMethodTest.overloading":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":319,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":53,"org.easymock.tests.MockClassControlTest.testEquals":149,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":65,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":356,"org.easymock.tests2.UsageConstraintsTest.testMatches":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":265,"org.easymock.samples.ExampleTest.voteForRemovals":252,"org.easymock.tests.UsageVarargTest.allKinds":372,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":13,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":299,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":384,"org.easymock.tests2.UsageConstraintsTest.greaterThan":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":98,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":170,"org.easymock.samples.ExampleTest.voteForRemoval":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":79,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":344,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":315,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.CaptureTest.testCapture2_2446744":56,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":235,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":371,"org.easymock.tests.GenericTest.testBridgedEquals":156,"org.easymock.tests.UsageExpectAndReturnTest.longType":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":354,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":262,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":124,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":298,"org.easymock.tests.MockingTest.testNiceClassMocking":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests.MockingTest.testClassMocking":158,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":71,"org.easymock.tests2.UsageConstraintsTest.testContains":215,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":255,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":207,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests.UsageExpectAndReturnTest.object":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":17,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":367,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":324,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":363,"org.easymock.tests.MockClassControlTest.testHashCode":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":117,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":237,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":366,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests2.UsageTest.openCallCountByLastCall":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":279,"org.easymock.tests.CapturesMatcherTest.test":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":325,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":126,"org.easymock.tests2.UsageTest.resumeIfFailure":200,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":347,"org.easymock.tests2.StubTest.stubWithReturnValue":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":382,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":60,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":285,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":385,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":379,"org.easymock.tests.UsageExpectAndThrowTest.object":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":223,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":362,"org.easymock.samples.ConstructorCalledMockTest.testTax":138,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":104,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":351,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":63,"org.easymock.tests2.CaptureTest.testCaptureNone":52,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":370,"org.easymock.tests2.ThreadingTest.testThreadSafe":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":121,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":259,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests2.CaptureTest.testCapture_2617107":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":342,"org.easymock.tests2.UsageConstraintsTest.any":213,"org.easymock.tests2.StubTest.stub":242,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":168,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.SerializationTest.testClass":84,"org.easymock.tests.LimitationsTest.mockNativeMethod":173,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":30,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":247,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":109,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":277,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":161,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":28,"org.easymock.tests2.CaptureTest.testCaptureLast":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":302,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":211,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":224,"org.easymock.tests.MockingTest.testTwoMocks":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":281,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":198,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":227,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":166,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":234,"org.easymock.tests2.MockBuilderTest.testCreateMockString":83,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":111,"org.easymock.tests.UsageExpectAndThrowTest.floatType":275,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":178,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":383,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":172,"org.easymock.tests2.UsageConstraintsTest.testNotNull":226,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":300,"org.easymock.tests2.UsageTest.defaultResetToNice":197,"org.easymock.samples.ExampleTest.voteAgainstRemovals":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":29,"org.easymock.tests2.CallbackTest.callback":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":93,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":341,"org.easymock.tests.UsageCallCountTest.tooFewCalls":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":353,"org.easymock.tests.UsageThrowableTest.throwCheckedException":297,"org.easymock.tests.MockingTest.testStrictClassMocking":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":261,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":43,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":236,"org.easymock.tests2.NameTest.nameForNiceMock":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":18,"org.easymock.samples.ExampleTest.addDocument":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":122,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":127,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":369,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests.UsageExpectAndReturnTest.floatType":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":101,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":139,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":221,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":102,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":165,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":112,"org.easymock.tests.GenericTest.testPackageScope":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests2.NameTest.nameForMock":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":320,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":41,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":340,"org.easymock.tests2.NameTest.nameForStrictMock":245,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":74,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":167,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":5,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":222,"org.easymock.tests.ErrorMessageTest.testGetters":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":228,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":116,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.UsageConstraintsTest.testOr":210,"org.easymock.tests.UsageRangeTest.combination":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":113,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":321,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":169,"org.easymock.tests.UsageVarargTest.varargShortAccepted":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":214,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":36,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.CaptureTest.testCaptureFromStub":55,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":322,"org.easymock.tests2.UsageConstraintsTest.constraints":205,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests.UsageStrictMockTest.testVerify":307,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":34,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":50,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":270,"org.easymock.tests.LimitationsTest.abstractClass":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":314,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":271,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":7,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":364}}]
