[{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[215,216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[218,219,220,221,222,223,224,225],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7,9,16,35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"equalsMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[226,227,228,229,230,231],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[7,9,16,29,30,32,34,35,232,46,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[218,218,219,219,18,26,233,220,234],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[235,236,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[238,18,239,240,241,242,243,74,244,96,245,246,97,247,248,249,250,251,252,253],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,254,6,7,8,9,10,255,11,12,13,14,15,16,256,257,17,18,19,20,21,22,258,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,259,49,50,51,52,260,261,262,263,264,53,54,55,56,57,58,59,60,265,61,62,266,63,64,267,268,65,269,270,66,271,272,67,273,68,69,70,71,242,72,274,73,243,74,275,276,75,76,277,278,77,279,78,79,280,281,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,245,246,282,97,98,283,249,250,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,284,121,122,285,286,287,288,289,290,251,291,292,252,293,294,295,123,124,125,126,127,128,296,129,130,131,132,133,134,135,136,137,138,139,297,140,298,299,300,301,302,303,141,142,143,144,145,304,146,230,305,306,307,308,309,310,147,148,149,150,151,311,312,152,153,313,154,314,315,316,155,156,157,158,159,160,161,162,163,164,165,166,167,168,317,318,169,231,170,319,320,171,172,173,174,175,176,321,177,178,179,180,181,182,183,184,322,323,324,185,186,187,325,326,327,328,188,329,330,189,331,332,333,334,335,336,337,338,339,340,341,342,190,191,343,344,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,345,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[281,80,105,109,110,112,115,348,320,171,349,350,351,197,201,202,204,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[238,352,353,218,218,219,219,18,20,26,354,53,54,355,55,56,356,239,240,241,67,273,69,70,71,242,72,73,243,74,275,244,94,96,245,246,97,98,247,248,283,249,250,251,252,123,297,140,298,299,300,301,302,303,357,152,153,154,174,175,253,358,176,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[238,352,353,218,218,219,219,18,20,26,354,53,54,355,55,56,356,239,240,241,67,273,69,70,71,242,72,73,243,74,275,360,361,94,96,362,245,246,97,98,247,248,283,249,363,250,251,252,123,140,357,152,153,154,174,175,253,176],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"i","callCount":"i"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[43],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[218,218,219,219,220,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[8,13,14,17,23,27,41,44,52,62,75,76,277,87,101,107,113,117,119,290,366,146,178,193,199,205,209,211],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[63,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[218,218,219,219,256,27,28,31,32,33,34,39,41,42,44,45,50,51,52,79,141,142,143,144,145,163,164,165,166,167,168,170,190,191,192,213,214],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[36,41,52,367],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[0,5,8,10,13,14,17,30,32,35,36,37,40,43,46,47,48,49,50,79,281,80,368,369,370,87,286,287,290,155,168,170,320,171,177,186,191,343],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[235,236,237],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":304,"org.easymock.tests2.UsageTest.argumentsOrdered":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":137,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":64,"org.easymock.tests2.StubTest.stubWithReturnValue":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":110,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests2.DelegateToTest.testReturnException":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":135,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":227,"org.easymock.tests.MockClassControlTest.testToString":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":36,"org.easymock.tests2.UsageTest.wrongArguments":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":190,"org.easymock.tests.UsageStrictMockTest.range":320,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":354,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":252,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":315,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":369,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":303,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":247,"org.easymock.tests2.CaptureTest.testPrimitive":10,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":143,"org.easymock.tests2.CaptureTest.testCaptureNone":14,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":215,"org.easymock.tests.UsageUnorderedTest.message":290,"org.easymock.tests.UsageVerifyTest.twoReturns":187,"org.easymock.tests.UsageVarargTest.varargByteAccepted":131,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageTest.argumentsOrdered":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":126,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":184,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":352,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":261,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":98,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests2.StubTest.stub":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":136,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":337,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":225,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":253,"org.easymock.tests2.AnswerTest.answer":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":91,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":61,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":73,"org.easymock.tests2.NameTest.nameForMocksControl":86,"org.easymock.tests2.MockedExceptionTest.testMockedException":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":157,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":351,"org.easymock.tests2.DelegateToTest.testDelegate":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":154,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":248,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":71,"org.easymock.tests2.CaptureTest.testCaptureLast":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":151,"org.easymock.tests.MockingTest.testTwoMocks":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":255,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":89,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":217,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":333,"org.easymock.tests.UsageThrowableTest.throwError":284,"org.easymock.samples.ExampleTest.removeNonExistingDocument":254,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":335,"org.easymock.tests.UsageStrictMockTest.differentMethods":171,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":292,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":216,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":277,"org.easymock.tests2.MockBuilderTest.testCreateMockString":250,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":297,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":43,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":58,"org.easymock.tests.UsageVerifyTest.twoThrows":186,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":240,"org.easymock.samples.PartialClassMockTest.testGetArea":238,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":334,"org.easymock.tests.MockingTest.testInterfaceMocking":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":74,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests2.UsageTest.niceToStrict":63,"org.easymock.tests2.UsageConstraintsTest.testNotNull":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":289,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":92,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":97,"org.easymock.tests2.MockBuilderTest.testCreateMock":283,"org.easymock.tests2.UsageTest.defaultResetToNice":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":116,"org.easymock.tests.UsageVarargTest.differentLength":296,"org.easymock.tests2.CallbackTest.callback":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":220,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageCallCountTest.tooFewCalls":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":177,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":328,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":355,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":112,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":40,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":286,"org.easymock.tests2.EasyMockSupportClassTest.testAll":356,"org.easymock.tests.MockClassControlTest.testEquals":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":175,"org.easymock.tests.MockingTest.testStrictClassMocking":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":90,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":317,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":42,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":60,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":144,"org.easymock.tests2.CompareToTest.testGreateOrEqual":367,"org.easymock.tests.ObjectMethodsTest.testHashCode":346,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.NameTest.nameForNiceMock":85,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":77,"org.easymock.tests.UsageVarargTest.allKinds":133,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":185,"org.easymock.samples.BasicClassMockTest.testPrintContent":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":150,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testStubDelegate":22,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":288,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":279,"org.easymock.tests2.AnswerTest.stubAnswer":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":275,"org.easymock.tests.UsageVarargTest.varargLongAccepted":130,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":276,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":76,"org.easymock.tests.UsageExpectAndReturnTest.floatType":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":121,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":176,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":11,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":122,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":336,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":108,"org.easymock.tests.GenericTest.testPackageScope":174,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":278,"org.easymock.tests2.CaptureTest.testCapture2_2446744":257,"org.easymock.tests2.UsageTest.moreThanOneArgument":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":249,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":314,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":132,"org.easymock.tests.GenericTest.testBridgedEquals":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":323,"org.easymock.tests2.NameTest.nameForMock":83,"org.easymock.tests.UsageExpectAndReturnTest.longType":104,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":147,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":113,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":105,"org.easymock.tests.UsageCallCountTest.tooManyCalls":324,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":158,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":181,"org.easymock.tests2.MockedExceptionTest.testRealException":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":191,"org.easymock.tests.MockingTest.testNiceClassMocking":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":53,"org.easymock.tests.MockingTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":362,"org.easymock.tests2.NameTest.nameForStrictMock":84,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":94,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":178,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests.MockTypeTest.fromEasyMockClass":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":70,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":100,"org.easymock.tests.UsageExpectAndReturnTest.object":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":263,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":245,"org.easymock.tests2.UsageStrictMockTest.range":281,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":128,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":347,"org.easymock.tests.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":348,"org.easymock.tests2.CaptureTest.testCaptureRightOne":16,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":233,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":117,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":327,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests.MockClassControlTest.testHashCode":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":114,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":88,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":272,"org.easymock.tests2.UsageConstraintsTest.cmpTo":38,"org.easymock.tests.UsageVarargTest.varargCharAccepted":127,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":78,"org.easymock.tests2.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":370,"org.easymock.tests.DefaultClassInstantiatorTest.object":295,"org.easymock.tests2.CaptureTest.testCaptureFromStub":256,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":332,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":246,"org.easymock.tests.UsageTest.unexpectedCallWithArray":230,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":285,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":183,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":243,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":118,"org.easymock.tests.UsageStrictMockTest.testVerify":173,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":241,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":148,"org.easymock.tests2.UsageTest.resumeIfFailure":66,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":12,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":260}}]
