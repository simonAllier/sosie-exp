[{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[26,27,28,29,30],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[41,42,43,44,45,31,32,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,33,69,70,71,72,73,74,75,76,77,78,79,80,34,35,81,82,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[83,84,85,86,5,6,17,18,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,36,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[87,89,138,104,112,114,139,140,128,141,136,36,137],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[142,143,144,145,146,147,148,149,38,39,150,40],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[142,143,39,151,152,153,154,155,156,157,158],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[159,160,161,158],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[162,163,164,88,89,151,165,90,166,92,167,168,102,103,31,105,169,170,106,107,171,172,173,174,109,175,176,177,178,179,111,180,113,114,181,182,183,184,185,186,127,34,129,130,131,132,187,36,137],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[87,88,89,188,189,190,191,192,193,90,194,195,196,197,198,166,199,92,200,201,94,95,202,203,96,97,204,205,167,206,100,101,102,207,208,209,210,176,211,212,213,214,215,216,112,113,114,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[252,207,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[254,255,43,188,189,190,191,192,193,90,195,196,197,256,198,91,166,199,92,93,201,94,95,202,96,97,98,167,99,206,257,100,101,168,102,103,258,259,260,115,116,117,261,262,263,264,265,266,267,221,222,223,120,123,245,135,268,269,247,29,29,30,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[162,163,164,88,89,151,165,90,166,92,167,168,102,103,31,105,169,170,106,107,171,172,173,174,109,175,176,177,178,179,111,180,113,114,181,182,183,184,185,186,127,34,129,130,131,132,187,36,137],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[270,271,272,273,274,275],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[254,192,277,278,279,280,281,270,271,272,282,273,275],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[88,105,106,107,111,113,182,127,129,130,131,132,36,137],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[254,192,277,278,279,270,271,272,282,275],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[284],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[166,93,167,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[254,255,41,42,43,285,286,287,188,288,289,189,290,291,292,293,294,295,296,297,298,190,299,300,301,302,303,191,304,305,192,277,306,307,193,90,195,196,197,256,308,198,26,309,91,166,199,92,310,93,201,94,95,202,96,97,311,312,98,167,99,313,206,257,100,101,279,168,102,103,258,314,315,316,317,318,319,320,321,322,259,260,115,116,117,261,323,262,324,263,264,265,266,325,326,267,221,222,223,327,120,123,328,329,245,330,268,269,247,29,29,30,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[320,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[254,333,255,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[316,317,318,319,321,322],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[254,333,255,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[335,336,337],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[83,84,85,86,159,160,254,333,255,142,338,143,144,145,146,147,148,37,149,39,339,40,340,341,342,343,5,43,162,17,163,344,87,164,88,89,138,188,189,190,191,192,345,346,151,152,347,153,348,154,155,349,156,350,351,352,353,354,355,165,356,357,157,358,359,161,360,158,361,362,193,90,194,195,196,197,198,166,199,92,363,364,283,200,365,201,94,95,202,203,96,97,366,45,204,205,167,206,100,101,102,31,367,104,105,169,170,368,32,369,106,107,171,172,370,173,371,108,372,174,109,373,110,175,374,375,376,377,207,378,379,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,258,380,381,209,210,176,211,212,213,215,382,66,67,383,179,384,111,112,180,113,114,139,385,68,386,33,69,70,71,72,73,263,264,221,222,223,78,387,80,224,225,226,227,228,229,388,389,230,231,390,232,233,234,391,235,236,237,238,239,392,393,394,395,396,183,397,398,399,400,401,402,403,404,405,406,185,186,127,240,241,242,243,244,245,34,128,130,407,35,131,132,187,408,409,81,141,410,411,82,136,36,137,412,246,268,269,24,247,25,248,413,249,250,414,251,415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message","this":"message"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[349,354,362,416],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":152,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":253,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":170,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":75,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.tests.MockClassControlTest.testToString":115,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":293,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":46,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":270,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":349,"org.easymock.tests2.UsageTest.wrongArguments":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":215,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.samples.ExampleTest.answerVsDelegate":413,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":123,"org.easymock.tests2.UsageConstraintsTest.testNull":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":195,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":262,"org.easymock.tests2.CaptureTest.testPrimitive":144,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":383,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":65,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":219,"org.easymock.tests.UsageTest.argumentsOrdered":132,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":5,"org.easymock.tests2.DependencyTest.testClassMocking":311,"org.easymock.tests2.AnswerTest.answer":340,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":156,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests2.UsageTest.strictResetToDefault":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":372,"org.easymock.tests2.DelegateToTest.testDelegate":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":61,"org.easymock.tests.LimitationsTest.mockFinalMethod":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":78,"org.easymock.tests2.DependencyTest.testClassMockingSupport":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":118,"org.easymock.tests2.CaptureTest.testCapture1_2446744":145,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":59,"org.easymock.tests.UsageThrowableTest.throwError":68,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":122,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":178,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":305,"org.easymock.samples.PartialClassMockTest.testGetArea":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":208,"org.easymock.tests2.UsageTest.niceToStrict":169,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":335,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":206,"org.easymock.tests2.MockBuilderTest.testCreateMock":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":55,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":402,"org.easymock.tests.UsageOverloadedMethodTest.overloading":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":303,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":354,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":331,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":353,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":149,"org.easymock.tests2.EasyMockSupportClassTest.testAll":188,"org.easymock.tests.MockClassControlTest.testEquals":323,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":63,"org.easymock.tests2.CaptureTest.testCaptureAll":338,"org.easymock.tests.MockNameTest.defaultName":126,"org.easymock.tests2.UsageConstraintsTest.testMatches":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":220,"org.easymock.samples.ExampleTest.voteForRemovals":251,"org.easymock.tests.UsageVarargTest.allKinds":401,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":136,"org.easymock.samples.BasicClassMockTest.testPrintContent":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":72,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":275,"org.easymock.tests2.UsageConstraintsTest.greaterThan":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.samples.ExampleTest.voteForRemoval":249,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":310,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":256,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":371,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":74,"org.easymock.tests2.CaptureTest.testCaptureFirst":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":389,"org.easymock.tests2.UsageTest.moreThanOneArgument":104,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.CaptureTest.testCapture2_2446744":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":400,"org.easymock.tests.GenericTest.testBridgedEquals":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":185,"org.easymock.tests.UsageExpectAndReturnTest.longType":227,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":64,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":161,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":217,"org.easymock.tests.UsageCallCountTest.tooManyCalls":186,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":71,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":94,"org.easymock.tests.MockingTest.testNiceClassMocking":327,"org.easymock.tests.MockingTest.testClassMocking":326,"org.easymock.tests2.UsageConstraintsTest.testContains":352,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":347,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":82,"org.easymock.tests.MockTypeTest.fromEasyMockClass":121,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":160,"org.easymock.tests.UsageExpectAndReturnTest.object":390,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":271,"org.easymock.tests.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":277,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":236,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.MockClassControlTest.testHashCode":261,"org.easymock.tests2.EasyMockSupportTest.testVerify":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":296,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":408,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":181,"org.easymock.tests.UsageVarargTest.varargCharAccepted":395,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":344,"org.easymock.tests2.UsageTest.openCallCountByLastCall":368,"org.easymock.tests.DefaultClassInstantiatorTest.object":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":336,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":375,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":133,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":166,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":116,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":77,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":278,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":360,"org.easymock.tests2.SerializationTest.testAllMockedMethod":255,"org.easymock.samples.SupportTest.voteForRemovals":246,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":58,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":334,"org.easymock.tests.UsageExpectAndThrowTest.object":56,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":358,"org.easymock.tests2.DelegateToTest.testWrongClass":378,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":209,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":210,"org.easymock.tests.UsageStrictMockTest.range":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":100,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":285,"org.easymock.tests2.CaptureTest.testCaptureNone":37,"org.easymock.tests.UsageUnorderedTest.message":127,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":177,"org.easymock.tests.UsageVerifyTest.twoReturns":137,"org.easymock.tests.UsageVarargTest.varargByteAccepted":399,"org.easymock.tests2.ThreadingTest.testThreadSafe":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":299,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":406,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":134,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":268,"org.easymock.tests2.CaptureTest.testCapture_2617107":143,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":67,"org.easymock.tests2.UsageConstraintsTest.any":350,"org.easymock.tests2.StubTest.stub":366,"org.easymock.tests.UsageExpectAndThrowTest.longType":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":76,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.SerializationTest.testClass":254,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":2,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.NameTest.nameForMocksControl":86,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":289,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":50,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":197,"org.easymock.tests2.CaptureTest.testCaptureLast":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":359,"org.easymock.tests.MockingTest.testTwoMocks":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":54,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":361,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":283,"org.easymock.tests2.MockBuilderTest.testCreateMockString":103,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":259,"org.easymock.tests.UsageExpectAndThrowTest.floatType":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":290,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":287,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":341,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":190,"org.easymock.samples.ExampleTest.voteAgainstRemoval":250,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":199,"org.easymock.tests.LimitationsTest.privateConstructor":329,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":73,"org.easymock.tests2.UsageTest.defaultResetToNice":369,"org.easymock.samples.ExampleTest.voteAgainstRemovals":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":235,"org.easymock.tests.UsageVarargTest.differentLength":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":1,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":26,"org.easymock.tests.UsageTest.openCallCountByLastCall":407,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":202,"org.easymock.tests.UsageThrowableTest.throwCheckedException":70,"org.easymock.tests.MockingTest.testStrictClassMocking":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":95,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":343,"org.easymock.tests2.CompareToTest.testGreateOrEqual":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":273,"org.easymock.tests2.NameTest.nameForNiceMock":85,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":365,"org.easymock.tests2.DependencyTest.testInterfaceMocking":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":272,"org.easymock.samples.ExampleTest.addDocument":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":300,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.AnswerTest.stubAnswer":342,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests.UsageVarargTest.varargLongAccepted":398,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":192,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests.UsageThrowableTest.noUpperLimit":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":21,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":346,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":306,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":146,"org.easymock.tests2.SerializationTest.test":333,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":332,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":225,"org.easymock.tests2.UsageConstraintsTest.testSame":348,"org.easymock.samples.SupportTest.addDocument":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":291,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests2.NameTest.nameForMock":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":28,"org.easymock.tests2.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":280,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":382,"org.easymock.tests2.NameTest.nameForStrictMock":84,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":313,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":307,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":319,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":167,"org.easymock.tests2.UsageStrictMockTest.range":88,"org.easymock.tests2.UsageConstraintsTest.lessThan":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":282,"org.easymock.tests2.CaptureTest.testCaptureRightOne":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":295,"org.easymock.tests2.UsageConstraintsTest.testOr":154,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":90,"org.easymock.tests.UsageTest.wrongArguments":130,"org.easymock.tests2.MockBuilderTest.testWithConstructor":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":292,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.UsageVarargTest.varargShortAccepted":397,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":321,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":184,"org.easymock.tests2.UsageConstraintsTest.cmpTo":351,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.CaptureTest.testCaptureFromStub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":99,"org.easymock.tests.UsageTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":391,"org.easymock.tests2.CaptureTest.testCapture":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.UsageConstraintsTest.constraints":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":415,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":384,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":388,"org.easymock.tests.LimitationsTest.abstractClass":328,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109}}]
