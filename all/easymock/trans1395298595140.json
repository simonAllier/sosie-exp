[{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,293],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[119,126,129,132,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[86,92,93,150,295,210,211,214,215,241,242,255,266,269,272],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[296,111,127,128,297,298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[36,159],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,9,10,13,17,19,299,300,301,302,303,20,304,305,21,306,307,308,309,310,311,312,313,314,22,315,316,317,318,319,23,320,321,109,110,322,323,111,112,113,114,324,115,116,117,118,119,121,122,123,124,125,325,326,126,127,128,129,327,328,130,131,132,133,135,136,329,330,140,331,142,143,144,332,333,334,335,336,337,338,339,340,341,161,162,163,342,343,344,345,346,347,348,349,350,351,187,188,352,353,202,354,355,356,357,251,358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[45,46],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[0,1,359,360,361,362,325],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[363,364,365],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[366,367,368,369,370,371,331],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[28,29,33,34,372,45,61,63,71],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[43,373],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[299,113,132,135,343,345,346,347,374,355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:317","failures":[375,376,377,378],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[379,380,381,382,210,269],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,11,12,14,15,16,18,24,25,26,27,28,29,30,31,32,33,34,35,372,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,383,384,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,385,77,78,386,79,80,81,387,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,134,137,138,139,388,389,390,391,392,141,393,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,394,159,160,332,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,395,396,397,398,399,400,401,184,402,185,186,403,189,190,191,192,193,194,195,196,197,198,199,200,201,404,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,405,406,407,408,409,410,411,412,375,376,243,244,245,246,247,248,249,250,252,413,253,254,414,415,255,256,257,258,259,260,416,417,261,262,263,264,265,418,377,378,266,267,268,269,270,271,272,273,274,419,275,276,277,278,279,280,420,421,422,423,424,281,282,283,284,285,425,426,286,287,288,289,290,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[333,337],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[427,428,429,430,431,432,17,301,302,303,20,304,305,21,306,307,308,309,310,311,312,313,314,22,315,316,317,318,319,23,320,321,324,433,434],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[13,17,109,296,110,322,111,112,113,114,115,116,435,117,124,436,352,354,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[28,34,61,63,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[351,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.RecordState:324","failures":[241,247,248],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[379,380,381,382,210,269],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[437,438,359,439,366,360,362,132,136,294,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[206,440],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[441,442],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[395,396,416],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[2,3,4,5,6,7,8,16,17,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,74,75,76,78,79,80,82,84,85,87,88,91,94,109,111,112,118,120,121,122,123,125,126,128,131,132,135,136,137,389,390,391,392,140,142,143,144,145,147,148,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,402,185,186,443,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,207,209,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,244,245,251,415,256,257,258,259,260,261,262,263,264,265,268,270,273,274,419,275,276,277,278,279,280,281,282,283,284,285,425,426,286,287,288,289],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[17,18,19,444],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[445],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[3,79,81,387,82,253,446],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[153,447,206,448,417],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,9,10,13,17,19,20,21,22,23,109,296,110,322,111,112,113,114,115,116,435,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,436,140,144,341,161,162,163,443,187,188,352,202,354,355,251],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[153,206],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":276,"org.easymock.tests.MockingTest.testPartialClassMocking":161,"org.easymock.tests.MockClassControlTest.testToString":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":217,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":157,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":350,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":329,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":207,"org.easymock.tests.UsageTest.moreThanOneArgument":209,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":283,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":420,"org.easymock.tests.UsageTest.argumentsOrdered":215,"org.easymock.tests.UsageVarargTest.varargIntAccepted":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.AnswerTest.answer":53,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":60,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":424,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":232,"org.easymock.tests.LimitationsTest.mockFinalMethod":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":395,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":58,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":447,"org.easymock.tests.UsageThrowableTest.throwError":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":409,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":321,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":406,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":310,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":432,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":226,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":379,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":425,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":155,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":429,"org.easymock.tests.UsageOverloadedMethodTest.overloading":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":319,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":175,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":441,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":20,"org.easymock.tests.MockClassControlTest.testEquals":349,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":234,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":365,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":59,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":361,"org.easymock.tests.MockNameTest.defaultName":394,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":284,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":199,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":240,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":249,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":280,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":338,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":202,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":275,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":386,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":198,"org.easymock.tests.GenericTest.testBridgedEquals":353,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":430,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":291,"org.easymock.tests.UsageExpectAndReturnTest.longType":167,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":435,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":235,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":404,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":292,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":131,"org.easymock.tests.MockingTest.testNiceClassMocking":342,"org.easymock.tests.MockingTest.testClassMocking":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":426,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":296,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":144,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":239,"org.easymock.tests.MockTypeTest.fromEasyMockClass":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests.UsageExpectAndReturnTest.object":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":368,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":400,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":159,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":421,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":331,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":180,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":253,"org.easymock.tests.MockClassControlTest.testHashCode":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":312,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":363,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":422,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":57,"org.easymock.tests.UsageVarargTest.varargCharAccepted":192,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":433,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":398,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":246,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":223,"org.easymock.tests.CapturesMatcherTest.test":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":23,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":346,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":364,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":278,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":416,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":380,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":229,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":444,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":383,"org.easymock.tests.UsageExpectAndThrowTest.object":227,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":46,"org.easymock.tests2.DelegateToTest.testWrongClass":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":201,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":272,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":130,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":156,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":381,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":407,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":266,"org.easymock.tests.UsageVerifyTest.twoReturns":242,"org.easymock.tests.UsageVarargTest.varargByteAccepted":197,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":315,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":289,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":401,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":206,"org.easymock.tests2.UsageConstraintsTest.any":36,"org.easymock.tests2.StubTest.stub":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageExpectAndThrowTest.longType":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":336,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":251,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":352,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":298,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.NameTest.nameForMocksControl":392,"org.easymock.tests2.MockedExceptionTest.testMockedException":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":305,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":162,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":396,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":34,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":47,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":225,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.tests.UsageStrictMockTest.differentMethods":273,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":334,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":385,"org.easymock.tests2.MockBuilderTest.testCreateMockString":117,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.floatType":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":54,"org.easymock.tests.UsageVerifyTest.twoThrows":241,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":405,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.LimitationsTest.privateConstructor":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":438,"org.easymock.tests2.UsageConstraintsTest.testNotNull":50,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":250,"org.easymock.tests2.UsageTest.defaultResetToNice":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":179,"org.easymock.tests.UsageVarargTest.differentLength":194,"org.easymock.tests2.CallbackTest.callback":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":325,"org.easymock.tests.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":205,"org.easymock.tests.UsageCallCountTest.tooFewCalls":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":158,"org.easymock.tests.UsageThrowableTest.throwCheckedException":247,"org.easymock.tests.MockingTest.testStrictClassMocking":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":382,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":134,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":56,"org.easymock.tests.ObjectMethodsTest.testHashCode":399,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":370,"org.easymock.tests2.NameTest.nameForNiceMock":391,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":369,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":316,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.stubAnswer":55,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":270,"org.easymock.tests.UsageVarargTest.varargLongAccepted":196,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":182,"org.easymock.tests.UsageExpectAndReturnTest.floatType":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":140,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":299,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":442,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":307,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":423,"org.easymock.tests2.NameTest.nameForMock":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":176,"org.easymock.tests2.UsageStrictMockTest.differentMethods":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":362,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":231,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":186,"org.easymock.tests2.MockedExceptionTest.testRealException":145,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":204,"org.easymock.tests2.NameTest.nameForStrictMock":390,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":300,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":150,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":311,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":119,"org.easymock.tests.UsageTest.wrongArguments":211,"org.easymock.tests2.MockBuilderTest.testWithConstructor":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":177,"org.easymock.tests.UsageVarargTest.varargShortAccepted":195,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":290,"org.easymock.tests2.UsageConstraintsTest.cmpTo":37,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":322,"org.easymock.tests.UsageTest.unexpectedCallWithArray":210,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":288,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":178,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.UsageStrictMockTest.testVerify":419,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CompareToTest.testGreateThan":373,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":170,"org.easymock.tests.LimitationsTest.abstractClass":356,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102}}]
