[{"position":"org.easymock.internal.RecordState:173","failures":[0],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[75,76,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[78,79,5,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[83,84,85,71],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[86,87,21,24,25,26,88,89,37,47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[90],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[91,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[92,93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[95,96,97,98,99,100,101,102,92,103,104,105,106,107,108,109,110,111,111,112,112,113,114,115,116,117,118,4,94,119,120,121,122,123,124,7,125,126],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[127,128,129,130,131,132],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[127,128,129,130,131,132],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[95,133,134,96,97,135,81,98,136,137,127,99,100,101,102,92,103,138,139,140,141,104,105,113,142,143,62,64,144,145,146,1,147,78,148,149,150,151,152,153,154,2,115,155,156,157,158,159,116,117,79,3,118,4,94,119,5,160,6,161,162,120,163,121,122,164,123,124,80,165,166,167,168,7,125,126,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:315","failures":[133,135,81,169,170,171,172,173,174,175,176,177,178,140,141,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,114,200,201,38,39,40,202],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[204,205,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[133,135,175,176,177,178,140,141,114,38,39,40,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[136,127,99,209,210,211,212,128,213,129,214,215,216,217,130,218,219,220,221,222,223,224,225,226,227,113,228,229,230,231,232,233,234,131,235,236,237,238,239,240,132,241,242],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[136,243,209,210,244,245,246,247,248,170,171,220,249,250,226,251,228,229,252,253,233,50,57,66,2,254,255,256,257,258,259,260,3,5,160,161,163,80,165,166,168,261],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[133,135,81,244,169,246,247,248,170,171,172,173,174,175,176,177,178,140,141,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,226,114,200,201,38,39,40,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[8,9,10,96,11,243,12,15,16,17,18,175,104,22,23,24,25,26,27,28,29,262,106,111,111,112,112,30,31,32,251,34,35,89,36,37,263,38,39,40,264,265,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,70,84,71],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[252,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[95,133,266,267,268,269,270,8,9,96,97,135,81,98,136,11,271,127,99,272,209,210,273,244,245,169,246,247,248,170,171,274,275,276,277,278,218,219,220,279,12,100,101,102,92,103,138,280,281,174,223,282,283,284,285,286,287,288,289,290,139,16,17,18,140,104,105,22,291,249,182,183,185,190,195,250,226,227,292,293,294,295,296,297,298,30,299,300,31,32,301,302,303,304,305,306,113,142,228,229,307,34,35,89,36,308,37,263,200,91,231,252,253,309,232,233,310,40,143,311,264,42,45,47,48,50,52,53,54,55,56,57,312,58,59,60,62,65,66,67,70,313,314,315,316,317,1,147,78,148,149,150,151,152,153,154,2,156,157,254,318,255,319,256,257,320,321,258,259,260,322,159,3,118,4,94,5,160,161,162,163,121,164,123,80,165,166,167,168,7,84,85,71,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[95,133,134,323,324,325,326,327,266,267,268,328,269,270,90,8,9,10,329,86,96,97,135,81,98,136,137,330,331,332,333,334,335,336,337,338,339,340,341,342,11,343,243,271,127,99,272,209,210,273,344,244,245,169,246,247,248,170,171,345,346,274,275,347,276,348,349,350,351,277,352,353,354,355,278,356,357,358,359,211,212,360,361,362,363,172,217,130,218,364,173,219,220,279,365,366,367,368,369,370,371,372,373,204,374,205,375,376,377,378,379,380,381,382,206,207,383,208,384,385,386,12,100,101,102,92,103,138,93,387,388,389,280,221,281,174,222,223,224,282,283,284,390,285,286,391,287,288,289,290,139,392,393,394,395,396,397,398,399,87,400,13,14,15,16,17,401,18,402,403,19,175,176,177,178,140,141,404,405,406,407,408,20,409,410,411,412,21,413,414,104,105,415,22,23,24,25,26,27,28,29,291,249,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,250,416,417,418,225,226,227,419,420,421,422,76,262,423,424,425,426,427,77,428,106,107,108,109,110,292,293,294,295,296,297,429,298,111,112,30,299,300,31,32,301,302,430,431,432,433,434,303,435,436,437,438,439,440,441,442,304,305,251,306,113,142,228,229,307,82,114,88,443,444,445,33,446,447,34,35,89,36,448,308,37,263,449,200,91,230,231,252,253,450,201,309,232,233,451,310,38,39,40,202,452,453,454,143,311,264,455,456,457,265,458,459,460,41,461,42,43,462,44,45,46,47,463,48,203,464,49,50,465,51,466,467,468,52,469,470,53,471,472,473,474,475,476,477,478,479,54,480,481,482,483,484,55,485,486,56,57,312,58,59,60,61,487,62,488,63,64,65,66,67,68,69,70,489,490,313,491,314,144,492,145,146,315,0,316,493,317,1,147,78,148,149,150,151,152,153,154,2,115,155,156,157,254,318,255,319,256,257,320,321,258,259,260,322,158,494,495,496,497,498,159,499,500,501,502,503,504,505,506,507,508,116,117,79,3,509,118,4,94,119,5,160,6,161,162,120,163,121,122,164,123,124,80,165,166,167,168,7,125,126,84,85,71,261],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[111,112,264,455,461,462,463,464,510,465,511,512,513,488,84],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[84,85,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[95,133,134,96,97,135,81,98,136,137,127,99,100,101,102,92,103,138,139,140,141,104,105,113,142,143,62,64,144,145,146,1,147,78,148,149,150,151,152,153,154,2,115,155,156,157,158,159,116,117,79,3,118,4,94,119,5,160,6,161,162,120,163,121,122,164,123,124,80,165,166,167,168,7,125,126,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[95,96,97,98,99,100,101,102,92,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,4,94,119,120,121,122,123,124,7,125,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:71","failures":[10,20,21,30,41,42,43,45,46,47,48,49,50,51,53,54,55,61,65,66,69,84],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":374,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":253,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":299,"org.easymock.tests2.DelegateToTest.testReturnException":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":176,"org.easymock.tests.MockingTest.testPartialClassMocking":16,"org.easymock.tests.MockClassControlTest.testToString":24,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":457,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":53,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":305,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":96,"org.easymock.tests2.UsageTest.wrongArguments":231,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":504,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":421,"org.easymock.samples.ExampleTest.answerVsDelegate":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":21,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":403,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":29,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":148,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests.UsageTest.moreThanOneArgument":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":108,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":404,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":100,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":439,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":237,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests.ReplayStateInvalidUsageTest.times":337,"org.easymock.tests2.DependencyTest.testClassMocking":441,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":508,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":410,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":319,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":408,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":389,"org.easymock.tests2.DependencyTest.testClassMockingSupport":442,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":211,"org.easymock.tests2.CaptureTest.testCapture1_2446744":149,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":506,"org.easymock.tests.UsageThrowableTest.throwError":244,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":331,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":412,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":440,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":110,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":486,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":101,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":87,"org.easymock.tests2.UsageTest.niceToStrict":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":131,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":419,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":352,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":163,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":154,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":390,"org.easymock.tests.MockClassControlTest.testEquals":28,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":507,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":387,"org.easymock.tests2.CaptureTest.testCaptureAll":147,"org.easymock.tests.MockNameTest.defaultName":415,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":109,"org.easymock.samples.ExampleTest.voteForRemovals":297,"org.easymock.tests.UsageVarargTest.allKinds":139,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":388,"org.easymock.samples.BasicClassMockTest.testPrintContent":32,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":170,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":251,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":141,"org.easymock.tests2.UsageConstraintsTest.greaterThan":123,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":428,"org.easymock.samples.ExampleTest.voteForRemoval":294,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":453,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":61,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":12,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":318,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":175,"org.easymock.tests2.CaptureTest.testCaptureFirst":156,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":255,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":349,"org.easymock.tests2.CaptureTest.testCapture2_2446744":155,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":381,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":290,"org.easymock.tests.GenericTest.testBridgedEquals":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":106,"org.easymock.tests.UsageCallCountTest.tooManyCalls":270,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":213,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":35,"org.easymock.tests.MockingTest.testNiceClassMocking":19,"org.easymock.tests.MockingTest.testClassMocking":14,"org.easymock.tests2.UsageConstraintsTest.testContains":120,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":326,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":179,"org.easymock.tests.MockTypeTest.fromEasyMockClass":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":145,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests.UsageExpectAndReturnTest.object":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":502,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":321,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":398,"org.easymock.tests.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":405,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":455,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":356,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":431,"org.easymock.tests.MockClassControlTest.testHashCode":27,"org.easymock.tests2.EasyMockSupportTest.testVerify":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":477,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":236,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":406,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":505,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":158,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":208,"org.easymock.tests2.UsageTest.openCallCountByLastCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.DefaultClassInstantiatorTest.object":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":134,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":396,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":478,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":430,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":26,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":384,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":55,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":238,"org.easymock.tests2.UsageTest.resumeIfFailure":451,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":178,"org.easymock.tests2.StubTest.stubWithReturnValue":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":463,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":351,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":379,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":513,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":132,"org.easymock.samples.SupportTest.voteForRemovals":302,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":489,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":363,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":165,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":104,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":105,"org.easymock.samples.ConstructorCalledMockTest.testTax":111,"org.easymock.tests.UsageStrictMockTest.range":209,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":446,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":466,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":420,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":394,"org.easymock.tests2.CaptureTest.testCaptureNone":153,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":72,"org.easymock.tests.UsageUnorderedTest.message":136,"org.easymock.tests.UsageVerifyTest.twoReturns":227,"org.easymock.tests.UsageVarargTest.varargByteAccepted":289,"org.easymock.tests2.ThreadingTest.testThreadSafe":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":480,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":268,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":399,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":31,"org.easymock.tests2.CaptureTest.testCapture_2617107":78,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":360,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":206,"org.easymock.tests2.UsageConstraintsTest.any":161,"org.easymock.tests2.StubTest.stub":82,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":386,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":207,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":426,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.SerializationTest.testClass":84,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests.LimitationsTest.mockNativeMethod":11,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":496,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":498,"org.easymock.tests2.MockedExceptionTest.testMockedException":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":470,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":18,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":17,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":494,"org.easymock.tests2.CaptureTest.testCaptureLast":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":263,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":166,"org.easymock.tests.MockingTest.testTwoMocks":15,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":125,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":74,"org.easymock.samples.ExampleTest.removeNonExistingDocument":429,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":500,"org.easymock.tests.UsageStrictMockTest.differentMethods":210,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":432,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":424,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":73,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":454,"org.easymock.tests2.ConstraintsToStringTest.andToString":240,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":471,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":456,"org.easymock.tests.UsageVerifyTest.twoThrows":226,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":295,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":205,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":342,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":171,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests2.UsageTest.defaultResetToNice":309,"org.easymock.samples.ExampleTest.voteAgainstRemovals":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":495,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests2.UsageConstraintsTest.equals":509,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":488,"org.easymock.tests.UsageTest.openCallCountByLastCall":364,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":135,"org.easymock.tests.UsageCallCountTest.tooFewCalls":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":422,"org.easymock.tests.UsageThrowableTest.throwCheckedException":247,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":129,"org.easymock.tests.MockingTest.testStrictClassMocking":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":499,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":308,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":314,"org.easymock.tests.ObjectMethodsTest.testHashCode":397,"org.easymock.tests2.NameTest.nameForNiceMock":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":304,"org.easymock.samples.ExampleTest.addDocument":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.AnswerTest.stubAnswer":491,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":99,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":203,"org.easymock.tests.UsageVarargTest.varargLongAccepted":288,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":204,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":264,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":112,"org.easymock.tests2.ConstraintsToStringTest.orToString":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":438,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.UsageThrowableTest.noUpperLimit":245,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":117,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":88,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":150,"org.easymock.tests2.SerializationTest.test":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testSame":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":346,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":75,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":448,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":472,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":402,"org.easymock.tests2.NameTest.nameForMock":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":353,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":465,"org.easymock.tests2.UsageStrictMockTest.differentMethods":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":418,"org.easymock.tests2.MockedExceptionTest.testRealException":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":512,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":340,"org.easymock.tests2.NameTest.nameForStrictMock":458,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":33,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":425,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":80,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":228,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":476,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.UsageConstraintsTest.testOr":119,"org.easymock.tests.UsageRangeTest.combination":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":218,"org.easymock.tests2.MockBuilderTest.testWithConstructor":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":473,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":427,"org.easymock.tests.UsageVarargTest.varargShortAccepted":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":328,"org.easymock.tests2.UsageConstraintsTest.cmpTo":162,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":330,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":130,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":267,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":510,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":355,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":298,"org.easymock.tests2.ConstraintsToStringTest.notToString":235,"org.easymock.tests.UsageStrictMockTest.testVerify":344,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":300,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":93,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":102,"org.easymock.tests.LimitationsTest.abstractClass":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":257,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283}}]
