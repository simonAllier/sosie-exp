[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[46,47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[57,58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[60,61,62,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[64,65,66,0,67,68,69,70,71,72,1,2,3,4,73,5,6,7,9,10,11,12,13,74,75,76,14,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,15,16,17,18,102,103,104,105,106,107,108,109,19,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,21,22,134,135,23,136,137,138,139,140,141,142,143,144,145,146,147,148,53,57,149,24,25,150,58,151,26,152,153,154,155,156,157,158,59,159,160,161,162,28,29,163,164,51,52,165,166,167,168,169,170,171,172,173,174,175,176,177,30,60,178,61,31,179,32,180,181,34,35,36,37,38,39,182,183,184,185,186,187,62,188,189,190,191,192,193,44,194,195,45,196],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[197,198,140,144],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[199,200,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[203,204,182,183],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[199,200,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[71,205,206,207,72,1,208,2,209,210,3,4,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,73,5,46,6,7,230,8,9,10,11,12,13,74,231,232,233,234,75,76,14,77,78,79,80,81,235,236,237,238,239,82,83,240,241,84,242,85,86,87,88,243,89,90,91,92,244,93,94,95,96,97,98,99,100,101,15,16,17,18,102,103,104,105,245,106,107,108,109,19,20,246,247,248,249,250,251,252,110,253,254,255,111,112,113,256,114,257,258,115,116,259,260,117,261,118,119,120,121,262,122,123,124,125,263,126,127,128,129,264,130,131,265,266,267,268,269,270,271,272,273,274,275,276,277,278,132,133,21,22,134,135,23,136,137,47,48,49,279,280,198,281,282,138,139,140,141,283,142,143,284,285,144,145,146,286,287,288,289,290,147,148,53,57,149,24,25,150,58,151,291,26,27,152,153,154,155,156,157,158,59,159,160,161,162,28,29,163,292,164,51,52,293,294,295,165,166,167,168,169,170,171,172,173,174,296,175,176,200,201,202,297,298,177,299,300,30,301,302,303,304,305,60,178,306,307,308,309,61,310,31,179,32,33,180,181,34,35,311,36,37,312,38,313,39,204,314,315,182,183,184,185,316,186,317,318,187,319,320,321,322,62,188,189,323,324,325,326,327,328,329,330,190,191,40,41,42,43,192,193,44,194,195,45,196,331,332,333,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[156],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[335,336,337,338,339],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[209,210,3,4,6,230,8,11,12,13,16,17,245,110,132,21,134,135,23,139,142,143,144,53,156,52,60,309,61,310,31,33,180,181,36,37,312,38,186,62,189,191,192,194,195,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[340,340,341,341,224,225,226,227,228,74,97,98,99,100,101,111,112,114,130,131,22,147,148,149,24,25,150,152,154,155,157,158,59,28,29,163,296,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:37","sourceCode":"if (!(java.util.LinkedList<org.easymock.internal.Range>.isEmpty())) {\n    final org.easymock.internal.Range org.easymock.internal.Range = java.util.LinkedList<org.easymock.internal.Range>.getLast();\n    if (!(org.easymock.internal.Range.hasFixedCount())) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[176,200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[75,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[232,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[64,342,343,340,340,341,341,344,345,346,347,223,236,237,238,239,246,348,349,289,200,202,305,350,60,351,178,306,307,308,309,61,352,310,313,353,316,186,318,187,319,320,321,322,62,188,189,323,324,325,326,328,329,331,332,333,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[225,241,88,93,94,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.UsageTest.argumentsOrdered":37,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":145,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":181,"org.easymock.tests2.StubTest.stubWithReturnValue":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":88,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":162,"org.easymock.tests2.SerializationTest.testAllMockedMethod":202,"org.easymock.tests2.DelegateToTest.testReturnException":298,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":281,"org.easymock.tests.MockingTest.testPartialClassMocking":237,"org.easymock.samples.SupportTest.voteForRemovals":65,"org.easymock.tests.MockClassControlTest.testToString":247,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":123,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":199,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":332,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":115,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":204,"org.easymock.tests.UsageExpectAndThrowTest.object":262,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":111,"org.easymock.samples.ConstructorCalledMockTest.testTax":340,"org.easymock.tests.UsageStrictMockTest.range":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":323,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":307,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":252,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":144,"org.easymock.tests2.CaptureTest.testPrimitive":167,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":221,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":129,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":49,"org.easymock.tests2.CaptureTest.testCaptureNone":172,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":108,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":2,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":97,"org.easymock.tests2.CaptureTest.testCapture_2617107":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests2.UsageConstraintsTest.any":26,"org.easymock.tests2.StubTest.stub":330,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":101,"org.easymock.tests.UsageExpectAndThrowTest.longType":260,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":217,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":194,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests2.SerializationTest.testClass":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":347,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":294,"org.easymock.tests.ReplayStateInvalidUsageTest.times":219,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":346,"org.easymock.tests2.AnswerTest.answer":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":304,"org.easymock.tests2.CaptureTest.testAnd":295,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":322,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests2.NameTest.nameForMocksControl":43,"org.easymock.tests2.MockedExceptionTest.testMockedException":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":254,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":10,"org.easymock.tests2.DelegateToTest.testDelegate":30,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":316,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":308,"org.easymock.tests.MockingTest.testNicePartialClassMocking":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":319,"org.easymock.tests2.CaptureTest.testCaptureLast":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":258,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":329,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":257,"org.easymock.tests2.CaptureTest.testCapture1_2446744":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":120,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":29,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":56,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":213,"org.easymock.tests.UsageThrowableTest.throwError":75,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":215,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":336,"org.easymock.tests2.ConstraintsToStringTest.andToString":54,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":52,"org.easymock.tests2.MockBuilderTest.testCreateMockString":310,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":20,"org.easymock.tests.UsageExpectAndThrowTest.floatType":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":228,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":156,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":315,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":333,"org.easymock.samples.PartialClassMockTest.testGetArea":64,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":47,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":116,"org.easymock.tests2.UsageTest.niceToStrict":180,"org.easymock.tests2.ThreadingTest.testChangeDefault":55,"org.easymock.tests2.UsageConstraintsTest.testNotNull":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":178,"org.easymock.tests2.UsageTest.defaultResetToNice":311,"org.easymock.tests2.MockBuilderTest.testCreateMock":309,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.UsageVarargTest.differentLength":245,"org.easymock.tests2.CallbackTest.callback":191,"org.easymock.tests.UsageTest.openCallCountByLastCall":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":121,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":113,"org.easymock.tests.UsageCallCountTest.tooFewCalls":1,"org.easymock.tests.UsageOverloadedMethodTest.overloading":73,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":326,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":89,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":153,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests2.EasyMockSupportClassTest.testAll":331,"org.easymock.tests.MockClassControlTest.testEquals":251,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":303,"org.easymock.tests2.CaptureTest.testCaptureAll":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":231,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":325,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":220,"org.easymock.tests2.UsageConstraintsTest.testMatches":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":327,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":227,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":211,"org.easymock.tests.ObjectMethodsTest.testHashCode":280,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests2.NameTest.nameForNiceMock":42,"org.easymock.tests.UsageVarargTest.allKinds":19,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":343,"org.easymock.tests2.DelegateToTest.testStubDelegate":177,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":205,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.UsageConstraintsTest.greaterThan":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":253,"org.easymock.tests.UsageVarargTest.varargLongAccepted":107,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":189,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":339,"org.easymock.samples.ExampleTest.voteForRemoval":67,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":51,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":313,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":341,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageThrowableTest.noUpperLimit":76,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":158,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.SerializationTest.test":201,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":169,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":83,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":297,"org.easymock.tests2.CaptureTest.testCaptureFirst":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":86,"org.easymock.tests.GenericTest.testPackageScope":344,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":293,"org.easymock.tests2.UsageTest.moreThanOneArgument":32,"org.easymock.tests2.CaptureTest.testCapture2_2446744":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":210,"org.easymock.tests2.NameTest.nameForMock":40,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":128,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":161,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageCallCountTest.tooManyCalls":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":125,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":72,"org.easymock.tests2.MockedExceptionTest.testRealException":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":261,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":324,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":207,"org.easymock.tests2.NameTest.nameForStrictMock":41,"org.easymock.tests2.UsageConstraintsTest.testContains":152,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":289,"org.easymock.tests2.UsageConstraintsTest.testFind":149,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":5,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":187,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":185,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":337,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":321,"org.easymock.tests.ErrorMessageTest.testGetters":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":60,"org.easymock.tests2.UsageStrictMockTest.range":195,"org.easymock.tests2.UsageConstraintsTest.lessThan":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":285,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":198,"org.easymock.tests.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests2.CaptureTest.testCaptureRightOne":174,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":93,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests.MockClassControlTest.testHashCode":250,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":246,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":91,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":233,"org.easymock.tests.UsageVarargTest.varargShortAccepted":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":301,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":209,"org.easymock.tests2.UsageConstraintsTest.cmpTo":27,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":314,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests2.UsageTest.openCallCountByLastCall":34,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests.DefaultClassInstantiatorTest.object":235,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":232,"org.easymock.tests2.CaptureTest.testCaptureFromStub":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":212,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":230,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":92,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":62,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.samples.ExampleTest.addAndChangeDocument":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":94,"org.easymock.tests.UsageStrictMockTest.testVerify":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":334,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":248,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":133,"org.easymock.tests2.UsageTest.resumeIfFailure":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":170,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":85,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":100,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":143}}]
