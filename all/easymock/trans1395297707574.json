[{"position":"org.easymock.internal.MockBuilder:172","failures":[0,1],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[2],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[68,69,70,71],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[74,75,76,77,78,79,80,81,36,82,83,12,84,85,86,87,13,37,88,89,90,91,92,38,93,94,95,96,97,39,98,99,100,40,101,41,102,103,104,105,106,107,108,109,110,111,112,113,114,42,43,115,116,117,118,119,44,120,121,122,123,124,45,125,126,127,46,128,47,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,4,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,0,190,191,192,48,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,49,244,245,246,50,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,51,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,68,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,7,328,329,330,8,331,52,332,333,334,335,336,53,54,337,338,339,340,55,56,57,58,69,341,342,343,344,345,346,347,9,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,59,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,14,15,16,17,18,392,19,20,21,22,23,24,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,60,412,10,413,414,415,416,1,417,418,419,420,11,421,422,423,424,425,426,427,61,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,25,26,27,28,29,455,30,31,32,33,34,35,62,456,457,458,459,460,70,461,462,3,463,2,464,465,466,467,63,468,469,64,470,471,472,473,71,474,475,476,65,477,66,478,67,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.RecordState:99","failures":[74,75,77,78,80,83,110,112,43,115,116,117,118,119,44,120,121,122,123,124,45,125,126,127,46,128,47,129,130,131,132,133,134,169,171,172,173,174,175,176,177,178,181,182,184,192,48,195,196,199,211,216,218,219,225,226,228,263,264,51,288,289,290,291,292,307,308,311,316,317,318,319,320,321,324,7,328,329,331,52,333,334,53,54,337,338,340,55,56,57,58,69,341,345,9,357,363,368,370,374,376,377,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,398,399,400,409,10,415,1,417,11,426,427,61,429,431,432,433,436,437,440,442,443,451,452,454,455,62,456,457,458,460,70,461,462,3,463,464,465,466,467,63,468,469,64,470,471,472,473,474,475,476,65,479],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[37,88,89,90,91,92,38,93,94,95,96,97,39,98,99,100,40,101,41,102,169,171,172,173,174,175,176,180,183,192,196,204,209,51,426,432,454],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[72,481,52,340,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[75,76,77,78,79,80,36,37,88,89,90,91,92,38,93,94,95,96,97,39,98,99,100,40,101,41,102,110,111,43,115,116,117,118,119,44,120,121,122,123,124,45,125,126,127,46,128,47,129,130,131,132,133,134,142,149,150,151,152,153,154,155,156,157,162,170,171,177,178,181,182,183,184,48,200,201,202,203,204,205,211,214,216,219,220,221,225,226,228,254,255,256,257,258,259,264,51,265,266,267,268,269,288,289,290,291,292,296,297,298,300,301,303,304,305,306,68,307,308,311,316,318,319,320,321,324,327,328,331,52,332,333,335,336,53,54,337,338,55,56,57,341,59,366,367,368,369,370,373,374,375,376,377,378,394,395,399,400,403,404,405,406,408,409,60,412,415,416,427,61,429,430,433,436,439,440,443,444,445,446,447,448,451,453,454,62,456,457,458,460,70,461,462,3,463,464,465,466,467,63,468,469,64,470,471,472,473,474,475,476,65,66,67,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[109,113],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[180,453],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[376,482,483,484,485,486,487,419,479,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[488,376,377,378],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[81,143,149,150,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,193,212,221,255,260,271,272,273,276,277,278,279,280,281,282,283,284,285,286,287,322,327,366,367,379,386,391,392,412,416,420,421,433,445,446,447,448,455,66],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[246,252,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[331,332,338,457,458,70,462,3,2,471,475],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[471],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[376,419],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[109,113],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[74,75,76,77,78,80,36,83,84,84,85,85,37,88,89,90,91,92,38,93,94,95,96,97,39,98,99,100,40,101,41,102,103,104,105,107,110,112,114,42,43,115,116,117,118,119,44,120,121,122,123,124,45,125,126,127,46,128,47,129,130,131,132,133,134,135,136,137,138,139,140,141,142,149,150,151,153,154,155,156,157,158,159,160,163,164,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,0,190,191,192,48,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,211,213,215,216,217,218,219,220,225,226,228,50,252,256,263,264,51,265,266,267,268,269,271,272,274,275,288,289,290,291,292,293,294,295,68,307,308,311,313,314,316,317,318,319,320,321,324,327,7,328,329,8,331,52,332,333,334,335,336,53,54,337,338,339,340,55,56,57,58,69,341,345,9,357,363,59,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,392,19,393,394,395,396,398,399,400,407,408,409,410,411,60,412,10,413,415,1,417,11,421,426,427,61,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,444,445,446,447,451,452,453,454,455,30,62,456,457,458,460,70,461,462,3,463,2,464,465,466,467,63,468,469,64,470,471,472,473,71,474,475,476,65,66,67,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[74,75,76,77,78,79,80,81,36,82,83,12,84,84,85,85,86,87,13,37,88,89,90,91,92,38,93,94,95,96,97,39,98,99,100,40,101,41,102,103,104,105,106,107,108,109,110,111,112,113,114,42,43,115,116,117,118,119,44,120,121,122,123,124,45,125,126,127,46,128,47,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,4,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,0,191,192,48,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,49,244,245,246,50,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,51,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,68,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,7,328,329,330,331,52,332,333,334,335,336,53,54,337,338,339,340,55,56,57,58,69,341,342,345,347,9,349,350,353,354,355,356,357,359,362,363,364,365,59,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,386,388,389,390,391,14,15,16,17,18,392,19,20,21,22,23,24,395,396,398,399,407,408,409,410,411,60,10,414,415,416,1,419,420,422,423,424,425,426,427,61,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,451,452,453,454,25,26,27,28,29,455,30,31,32,33,34,35,62,456,457,458,459,460,70,461,462,3,463,2,464,465,466,467,63,468,469,64,470,471,472,473,71,474,475,476,65,477,66,478,67,479,480],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:314","failures":[159,160,294,295],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":458,"org.easymock.tests2.UsageTest.argumentsOrdered":435,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":242,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":430,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":201,"org.easymock.tests.MockingTest.testPartialClassMocking":225,"org.easymock.tests.MockClassControlTest.testToString":163,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":37,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":452,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":463,"org.easymock.tests2.UsageTest.wrongArguments":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":151,"org.easymock.samples.ExampleTest.answerVsDelegate":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":0,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":319,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":388,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":168,"org.easymock.tests2.CaptureTest.testPrimitive":333,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":102,"org.easymock.tests.UsageTest.moreThanOneArgument":48,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":137,"org.easymock.tests.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageVarargTest.varargIntAccepted":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":288,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":34,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":292,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests.ReplayStateInvalidUsageTest.times":284,"org.easymock.tests2.DependencyTest.testClassMocking":449,"org.easymock.tests2.AnswerTest.answer":370,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":448,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":187,"org.easymock.tests2.CaptureTest.testAnd":331,"org.easymock.tests2.UsageTest.strictResetToDefault":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":383,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":141,"org.easymock.tests2.DelegateToTest.testDelegate":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":100,"org.easymock.tests.LimitationsTest.mockFinalMethod":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":157,"org.easymock.tests2.DependencyTest.testClassMockingSupport":450,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":313,"org.easymock.tests2.CaptureTest.testCapture1_2446744":334,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":446,"org.easymock.tests.UsageThrowableTest.throwError":169,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":278,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":189,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":365,"org.easymock.samples.PartialClassMockTest.testGetArea":74,"org.easymock.tests.MockingTest.testInterfaceMocking":227,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":104,"org.easymock.tests2.UsageTest.niceToStrict":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":232,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":415,"org.easymock.tests2.MockBuilderTest.testCreateMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":384,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":124,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":467,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":337,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":299,"org.easymock.tests.MockClassControlTest.testEquals":167,"org.easymock.tests2.EasyMockSupportClassTest.testAll":345,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":155,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests.MockNameTest.defaultName":114,"org.easymock.tests2.UsageConstraintsTest.testMatches":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":268,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":276,"org.easymock.samples.ExampleTest.voteForRemovals":80,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":175,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":438,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":329,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":148,"org.easymock.samples.ExampleTest.voteForRemoval":77,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":322,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":426,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":381,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":200,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":407,"org.easymock.tests2.CaptureTest.testCaptureFirst":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":382,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":437,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.CaptureTest.testCapture2_2446744":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":248,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":306,"org.easymock.tests.GenericTest.testBridgedEquals":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":261,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":153,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":379,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":41,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":136,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":265,"org.easymock.tests.UsageCallCountTest.tooManyCalls":262,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":394,"org.easymock.tests.MockingTest.testNiceClassMocking":231,"org.easymock.tests.MockingTest.testClassMocking":223,"org.easymock.tests2.UsageConstraintsTest.testContains":466,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":255,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":368,"org.easymock.tests2.UsageConstraintsTest.testFind":460,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":51,"org.easymock.tests.MockTypeTest.fromEasyMockClass":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests.UsageExpectAndReturnTest.object":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":483,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":301,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":273,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":237,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":138,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":480,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":46,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":208,"org.easymock.tests.MockClassControlTest.testHashCode":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":26,"org.easymock.tests2.EasyMockSupportTest.testVerify":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":445,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":477,"org.easymock.tests.UsageVarargTest.varargCharAccepted":300,"org.easymock.tests2.CaptureTest.testCaptureMultiple":481,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":390,"org.easymock.tests.DefaultClassInstantiatorTest.object":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":293,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":25,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":165,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":38,"org.easymock.tests.CapturesMatcherTest.test":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":158,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":363,"org.easymock.tests2.UsageTest.resumeIfFailure":436,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":203,"org.easymock.tests2.StubTest.stubWithReturnValue":454,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":487,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":378,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":50,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":39,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":252,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":371,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":108,"org.easymock.tests.UsageExpectAndThrowTest.object":96,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":472,"org.easymock.tests2.DelegateToTest.testWrongClass":410,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":308,"org.easymock.samples.ConstructorCalledMockTest.testTax":84,"org.easymock.tests.UsageStrictMockTest.range":218,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":424,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":1,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":105,"org.easymock.tests2.CaptureTest.testCaptureNone":54,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.UsageVerifyTest.twoReturns":184,"org.easymock.tests.UsageVarargTest.varargByteAccepted":305,"org.easymock.tests2.ThreadingTest.testThreadSafe":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":358,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":259,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":250,"org.easymock.tests2.UsageConstraintsTest.any":464,"org.easymock.tests2.StubTest.stub":453,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":160,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":4,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":282,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":441,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":455,"org.easymock.tests2.SerializationTest.testClass":376,"org.easymock.tests.LimitationsTest.mockNativeMethod":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":129,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":444,"org.easymock.tests2.NameTest.nameForMocksControl":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":18,"org.easymock.tests2.MockedExceptionTest.testMockedException":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":347,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":478,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":316,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":417,"org.easymock.tests.MockingTest.testNicePartialClassMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":14,"org.easymock.tests2.CaptureTest.testCaptureLast":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":314,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":400,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":473,"org.easymock.tests.MockingTest.testTwoMocks":224,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":434,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":476,"org.easymock.samples.ExampleTest.removeNonExistingDocument":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":20,"org.easymock.tests.UsageStrictMockTest.differentMethods":219,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":27,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":58,"org.easymock.tests2.MockBuilderTest.testCreateMockString":421,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":161,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":373,"org.easymock.tests.UsageVerifyTest.twoThrows":183,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":357,"org.easymock.samples.ExampleTest.voteAgainstRemoval":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":328,"org.easymock.tests.LimitationsTest.privateConstructor":310,"org.easymock.tests2.UsageConstraintsTest.testNotNull":475,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":176,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":366,"org.easymock.tests2.UsageTest.defaultResetToNice":433,"org.easymock.samples.ExampleTest.voteAgainstRemovals":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests.UsageVarargTest.differentLength":302,"org.easymock.tests2.CallbackTest.callback":59,"org.easymock.tests2.UsageConstraintsTest.equals":459,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":325,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":396,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":152,"org.easymock.tests.UsageThrowableTest.throwCheckedException":173,"org.easymock.tests.MockingTest.testStrictClassMocking":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":399,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":19,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":398,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":375,"org.easymock.tests.ObjectMethodsTest.testHashCode":272,"org.easymock.tests2.NameTest.nameForNiceMock":405,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":341,"org.easymock.tests2.DependencyTest.testInterfaceMocking":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":484,"org.easymock.samples.ExampleTest.addDocument":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":359,"org.easymock.tests2.DelegateToTest.testStubDelegate":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.stubAnswer":374,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":216,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":418,"org.easymock.tests.UsageVarargTest.varargLongAccepted":304,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":241,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":47,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":479,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":85,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":470,"org.easymock.tests.UsageThrowableTest.noUpperLimit":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":33,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":456,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":422,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":335,"org.easymock.tests2.SerializationTest.test":377,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":144,"org.easymock.tests2.UsageConstraintsTest.testSame":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":397,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":349,"org.easymock.tests.GenericTest.testPackageScope":110,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":229,"org.easymock.tests2.NameTest.nameForMock":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":45,"org.easymock.tests2.UsageStrictMockTest.differentMethods":443,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":99,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":133,"org.easymock.tests2.MockedExceptionTest.testRealException":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":287,"org.easymock.tests2.NameTest.nameForStrictMock":404,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":414,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":471,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":146,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":10,"org.easymock.tests2.UsageStrictMockTest.range":442,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":380,"org.easymock.tests2.CaptureTest.testCaptureRightOne":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":353,"org.easymock.tests2.UsageConstraintsTest.testOr":462,"org.easymock.tests.UsageRangeTest.combination":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":317,"org.easymock.tests.UsageTest.wrongArguments":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":350,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":233,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":147,"org.easymock.tests.UsageVarargTest.varargShortAccepted":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":260,"org.easymock.tests2.UsageConstraintsTest.cmpTo":465,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":235,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":432,"org.easymock.tests2.CaptureTest.testCaptureFromStub":339,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":277,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":413,"org.easymock.tests.UsageTest.unexpectedCallWithArray":193,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":126,"org.easymock.tests2.CaptureTest.testCapture":73,"org.easymock.tests2.UsageConstraintsTest.constraints":457,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.samples.ExampleTest.addAndChangeDocument":36,"org.easymock.tests.UsageStrictMockTest.testVerify":221,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":44,"org.easymock.tests.LimitationsTest.abstractClass":309,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":385,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297}}]
