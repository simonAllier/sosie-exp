[{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[44,45,119,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + (org.easymock.internal.Range.toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[24,32,33,34,35,36,38,41,42,43,80,82,83,84,85,86,87,145,147,148,152,153,188,254,264,268,269,272,280,281,283,284,285,286,290,291,293,294,296,297,298,299,300,302,303,304,305,335,343,358,374,396,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[29,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[215,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[31,90,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[226,453,454],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[154,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:228","sourceCode":"return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[236,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[456,457,458,459],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[226,453,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[0,460,461,1,2,3,4,5,6,7,8,9,10,12,13,14,18,19,20,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,462,463,464,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,95,96,97,98,99,100,101,114,115,116,117,118,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,150,151,152,153,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,455,455,184,186,187,188,236,237,238,239,240,241,242,243,249,250,251,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,465,306,309,310,311,312,313,314,315,466,316,317,320,322,327,333,334,335,338,339,340,341,342,343,344,346,347,467,348,349,468,469,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,395,396,397,398,406,417,418,419,420,421,422,423,424,425,426,427,428,429,430,436,444,445,446,448,449,450,451,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:624","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,4,401,402,403,404,405,406,407,408,409,410,411,412,431,432,433,434,435,436,437,438,439,440,441,442],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[470,471,472,32,33,34,36,44,45,83,85,86,188,283,296,298,299,473,474,475,476,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[103,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[353,399],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[231],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":359,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":291,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":207,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":286,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testReturnException":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":127,"org.easymock.tests.MockingTest.testPartialClassMocking":462,"org.easymock.tests.MockClassControlTest.testToString":191,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":301,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":162,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":322,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":279,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":97,"org.easymock.tests2.UsageTest.wrongArguments":284,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":116,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":58,"org.easymock.tests2.UsageConstraintsTest.testNull":362,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":388,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":272,"org.easymock.tests2.CaptureTest.testPrimitive":420,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":181,"org.easymock.tests.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":244,"org.easymock.tests.UsageVarargTest.varargIntAccepted":20,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":132,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":136,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":436,"org.easymock.tests.ReplayStateInvalidUsageTest.times":110,"org.easymock.tests2.DependencyTest.testClassMocking":276,"org.easymock.tests2.AnswerTest.answer":306,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":315,"org.easymock.tests2.CaptureTest.testAnd":417,"org.easymock.tests2.UsageTest.strictResetToDefault":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":267,"org.easymock.tests2.DelegateToTest.testDelegate":448,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":177,"org.easymock.tests.LimitationsTest.mockFinalMethod":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":141,"org.easymock.tests2.DependencyTest.testClassMockingSupport":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":44,"org.easymock.tests2.CaptureTest.testCapture1_2446744":421,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":313,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":104,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":49,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":105,"org.easymock.tests.MockingTest.testInterfaceMocking":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":163,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":235,"org.easymock.tests2.UsageTest.niceToStrict":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":338,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":474,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":171,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageOverloadedMethodTest.overloading":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":332,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":372,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":71,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":453,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":371,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":426,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":21,"org.easymock.tests.MockClassControlTest.testEquals":195,"org.easymock.tests2.EasyMockSupportClassTest.testAll":320,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":179,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":479,"org.easymock.tests2.CaptureTest.testCaptureAll":418,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":314,"org.easymock.tests.MockNameTest.defaultName":30,"org.easymock.tests2.UsageConstraintsTest.testMatches":373,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":29,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":140,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":242,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":131,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":228,"org.easymock.tests2.UsageConstraintsTest.greaterThan":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":398,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":229,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":399,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":352,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":391,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":265,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":126,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":443,"org.easymock.tests2.CaptureTest.testCaptureFirst":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":266,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":293,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":67,"org.easymock.tests2.CaptureTest.testCapture2_2446744":429,"org.easymock.tests2.UsageTest.moreThanOneArgument":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":343,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":28,"org.easymock.tests.GenericTest.testBridgedEquals":158,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":152,"org.easymock.tests.UsageExpectAndReturnTest.longType":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":137,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":180,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.UsageCallCountTest.tooManyCalls":153,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":241,"org.easymock.tests.MockingTest.testNiceClassMocking":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":347,"org.easymock.tests.MockingTest.testClassMocking":54,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":146,"org.easymock.tests2.UsageConstraintsTest.testContains":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":451,"org.easymock.tests2.UsageConstraintsTest.testFind":361,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":161,"org.easymock.tests.MockTypeTest.fromEasyMockClass":48,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageExpectAndReturnTest.object":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":271,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":23,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":92,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":245,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":76,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":120,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":402,"org.easymock.tests.MockClassControlTest.testHashCode":194,"org.easymock.tests2.EasyMockSupportTest.testVerify":275,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":312,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":345,"org.easymock.tests.UsageVarargTest.varargCharAccepted":22,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":221,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":220,"org.easymock.tests2.UsageTest.openCallCountByLastCall":287,"org.easymock.tests.DefaultClassInstantiatorTest.object":222,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":15,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":231,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":472,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":396,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":168,"org.easymock.tests.CapturesMatcherTest.test":455,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":142,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":476,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":333,"org.easymock.tests2.UsageTest.resumeIfFailure":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":129,"org.easymock.tests2.StubTest.stubWithReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":174,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":219,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":307,"org.easymock.tests.UsageExpectAndThrowTest.object":172,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":94,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":378,"org.easymock.tests2.DelegateToTest.testWrongClass":446,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":186,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":460,"org.easymock.tests.UsageStrictMockTest.range":85,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":415,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":340,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":112,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":115,"org.easymock.tests2.CaptureTest.testCaptureNone":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":91,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":457,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":34,"org.easymock.tests.UsageVarargTest.varargByteAccepted":27,"org.easymock.tests2.ThreadingTest.testThreadSafe":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":328,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":150,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":419,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":217,"org.easymock.tests2.UsageConstraintsTest.any":368,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":109,"org.easymock.tests2.StubTest.stub":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":144,"org.easymock.tests.UsageExpectAndThrowTest.longType":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":108,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.SerializationTest.testClass":466,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":406,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":305,"org.easymock.tests2.MockedExceptionTest.testMockedException":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":321,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":464,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":166,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":259,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":385,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":341,"org.easymock.tests.MockingTest.testNicePartialClassMocking":463,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.CaptureTest.testCaptureLast":424,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":469,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":365,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":379,"org.easymock.tests.MockingTest.testTwoMocks":55,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":290,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":383,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":459,"org.easymock.samples.ExampleTest.removeNonExistingDocument":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":106,"org.easymock.tests.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":403,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":224,"org.easymock.tests2.ConstraintsToStringTest.andToString":477,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":353,"org.easymock.tests2.MockBuilderTest.testCreateMockString":344,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":189,"org.easymock.tests.UsageExpectAndThrowTest.floatType":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":323,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":309,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":327,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":397,"org.easymock.tests.LimitationsTest.privateConstructor":183,"org.easymock.tests2.UsageConstraintsTest.testNotNull":382,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":449,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":243,"org.easymock.tests2.UsageTest.defaultResetToNice":289,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.UsageVarargTest.differentLength":24,"org.easymock.tests2.CallbackTest.callback":280,"org.easymock.tests2.UsageConstraintsTest.equals":360,"org.easymock.tests.UsageTest.openCallCountByLastCall":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":99,"org.easymock.tests.UsageCallCountTest.tooFewCalls":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":117,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":458,"org.easymock.tests.UsageThrowableTest.throwCheckedException":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":470,"org.easymock.tests.MockingTest.testStrictClassMocking":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":468,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":96,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":467,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":349,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":311,"org.easymock.tests.ObjectMethodsTest.testHashCode":232,"org.easymock.tests2.NameTest.nameForNiceMock":304,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":355,"org.easymock.tests2.DependencyTest.testInterfaceMocking":278,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":445,"org.easymock.tests2.AnswerTest.stubAnswer":310,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":83,"org.easymock.tests.UsageVarargTest.varargLongAccepted":26,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":206,"org.easymock.tests.UsageExpectAndReturnTest.floatType":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":465,"org.easymock.tests2.ConstraintsToStringTest.orToString":473,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":410,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageThrowableTest.noUpperLimit":237,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":357,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":413,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":422,"org.easymock.tests2.SerializationTest.test":316,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":454,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":61,"org.easymock.tests2.UsageConstraintsTest.testSame":363,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":324,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":409,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":57,"org.easymock.tests2.NameTest.nameForMock":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":72,"org.easymock.tests2.UsageStrictMockTest.differentMethods":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":176,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":257,"org.easymock.tests2.MockedExceptionTest.testRealException":452,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":210,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":98,"org.easymock.tests2.NameTest.nameForStrictMock":303,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":337,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":414,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":225,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":335,"org.easymock.tests2.UsageStrictMockTest.range":298,"org.easymock.tests2.UsageConstraintsTest.lessThan":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":264,"org.easymock.tests2.CaptureTest.testCaptureRightOne":427,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":456,"org.easymock.tests2.UsageConstraintsTest.testOr":364,"org.easymock.tests.UsageRangeTest.combination":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":386,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":198,"org.easymock.tests.UsageVarargTest.varargShortAccepted":25,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":151,"org.easymock.tests2.UsageConstraintsTest.cmpTo":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.CaptureTest.testCaptureFromStub":428,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":103,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":336,"org.easymock.tests.UsageTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":84,"org.easymock.tests2.UsageConstraintsTest.constraints":358,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests2.ConstraintsToStringTest.notToString":475,"org.easymock.tests.UsageStrictMockTest.testVerify":88,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":138,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":134,"org.easymock.tests.LimitationsTest.abstractClass":182,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":135,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":269}}]
