[{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[329,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[190,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,18,19,32,33,41,43,44,47,48,49,50,51,58,60,61,62,63,64,65,66,67,70,336,337,73,74,76,81,86,99,109,127,128,129,134,144,338,145,146,339,147,151,152,154,159,164,169,170,172,173,174,176,179,181,182,184,185,190,191,192,193,195,196,197,198,200,201,203,1,205,206,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,238,239,241,242,244,248,252,253,256,260,264,265,268,273,274,275,276,277,280,281,282,283,286,292,293,294,295,296,297,298,299,300,301,302,303,305,307,308,309,310,311,313,319,320,321,322,323,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[340,212],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[203],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[341,184,185,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[203,1,257,302],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[40,342],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[340,0,343,344,345],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[346,347,348,349,317,318],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[2,3,4,350,5,6,7,351,352,353,354,355,8,9,10,11,12,13,14,15,16,332,356,17,18,19,357,358,359,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,360,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,361,362,363,336,337,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,364,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,365,366,367,136,137,138,139,140,141,142,143,368,144,338,145,146,339,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,369,170,171,172,370,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,371,197,198,199,200,201,202,203,1,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,372,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,373,374,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,317,318,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[291],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[375,273,274,275,276,277,278,279,280,282,283,284,285,286],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[350,5,6,7,57,109,110,364,376,377,129,137,378,379,380,174,184,186,226,227,228,229,231,232,237,381,238,382,239,240,241,242,243,244,383,245,248,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,314,315,317,317,318,318,319],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[384],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[3,4,20,385,386,40,43,93,94,97,98,181,255,261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[2,4,5,6,7,8,9,10,11,387,388,389,390,391,18,358,359,32,33,34,41,43,44,47,48,49,50,51,58,60,61,62,63,64,65,66,67,70,91,92,95,96,99,109,364,127,128,129,368,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,174,176,179,181,182,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,238,239,241,242,244,248,252,253,254,256,258,259,260,263,264,265,267,273,274,276,277,280,281,282,283,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,307,308,309,310,311,313,319,320,322,323,325],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":190,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.UsageTest.argumentsOrdered":262,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":384,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":257,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":316,"org.easymock.tests2.DelegateToTest.testReturnException":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":131,"org.easymock.tests.MockingTest.testPartialClassMocking":5,"org.easymock.tests.MockClassControlTest.testToString":138,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":71,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":295,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageTest.wrongArguments":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":113,"org.easymock.samples.ExampleTest.answerVsDelegate":321,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":377,"org.easymock.tests2.UsageConstraintsTest.testNull":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":301,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests2.CaptureTest.testPrimitive":276,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":90,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":54,"org.easymock.tests.UsageTest.argumentsOrdered":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":351,"org.easymock.tests.UsageVarargTest.varargIntAccepted":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":47,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":51,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests.ReplayStateInvalidUsageTest.times":123,"org.easymock.tests2.AnswerTest.answer":265,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":236,"org.easymock.tests2.CaptureTest.testAnd":273,"org.easymock.tests2.UsageTest.strictResetToDefault":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests2.DelegateToTest.testDelegate":173,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":336,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":234,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":117,"org.easymock.tests.UsageThrowableTest.throwError":58,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":56,"org.easymock.samples.PartialClassMockTest.testGetArea":319,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":118,"org.easymock.tests2.CompareToTest.testLessOrEqual":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":72,"org.easymock.tests2.UsageTest.niceToStrict":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":239,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":80,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":342,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":111,"org.easymock.tests.UsageOverloadedMethodTest.overloading":33,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":146,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":160,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":32,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":200,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":330,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":282,"org.easymock.tests.MockClassControlTest.testEquals":142,"org.easymock.tests2.EasyMockSupportClassTest.testAll":294,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":378,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":235,"org.easymock.tests2.CaptureTest.testCaptureAll":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":202,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":55,"org.easymock.samples.ExampleTest.voteForRemovals":325,"org.easymock.tests.UsageVarargTest.allKinds":31,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":15,"org.easymock.samples.BasicClassMockTest.testPrintContent":315,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":135,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":370,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":309,"org.easymock.samples.ExampleTest.voteForRemoval":322,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":304,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":130,"org.easymock.tests2.CaptureTest.testCaptureFirst":286,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":254,"org.easymock.tests2.CaptureTest.testCapture2_2446744":285,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":107,"org.easymock.tests.UsageExpectAndReturnTest.longType":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":12,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":89,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":383,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":208,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":52,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":362,"org.easymock.tests.UsageCallCountTest.tooManyCalls":108,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":101,"org.easymock.tests2.UsageConstraintsTest.testContains":199,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":248,"org.easymock.tests2.UsageConstraintsTest.testFind":191,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":34,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageExpectAndReturnTest.object":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":25,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":37,"org.easymock.tests.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":18,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":165,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":21,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":145,"org.easymock.tests.MockClassControlTest.testHashCode":141,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":353,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":233,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":372,"org.easymock.tests.UsageVarargTest.varargCharAccepted":24,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastCall":258,"org.easymock.tests.DefaultClassInstantiatorTest.object":17,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":35,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":140,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":77,"org.easymock.tests.CapturesMatcherTest.test":375,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":361,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":297,"org.easymock.tests2.UsageTest.resumeIfFailure":263,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":133,"org.easymock.tests2.StubTest.stubWithReturnValue":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":186,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.samples.SupportTest.voteForRemovals":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":83,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":341,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":356,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":373,"org.easymock.tests.UsageExpectAndThrowTest.object":81,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":128,"org.easymock.tests.UsageStrictMockTest.range":43,"org.easymock.samples.ConstructorCalledMockTest.testTax":317,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":241,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":112,"org.easymock.tests2.CaptureTest.testCaptureNone":281,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":29,"org.easymock.tests2.ThreadingTest.testThreadSafe":289,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":105,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":314,"org.easymock.tests2.CaptureTest.testCapture_2617107":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests2.UsageConstraintsTest.any":197,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":122,"org.easymock.tests2.StubTest.stub":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":132,"org.easymock.tests.UsageExpectAndThrowTest.longType":74,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":329,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":121,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.SerializationTest.testClass":184,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.NameTest.nameForMocksControl":272,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":75,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":242,"org.easymock.tests.MockingTest.testNicePartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":303,"org.easymock.tests2.CaptureTest.testCaptureLast":280,"org.easymock.tests2.CompareToTest.testCompareEqual":343,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":195,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":232,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":79,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":211,"org.easymock.samples.ExampleTest.removeNonExistingDocument":326,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":119,"org.easymock.tests.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":291,"org.easymock.tests2.MockBuilderTest.testCreateMockString":245,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":136,"org.easymock.tests.UsageExpectAndThrowTest.floatType":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":203,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":266,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":296,"org.easymock.samples.ExampleTest.voteAgainstRemoval":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":308,"org.easymock.tests2.UsageConstraintsTest.testNotNull":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":246,"org.easymock.tests2.UsageTest.defaultResetToNice":260,"org.easymock.samples.ExampleTest.voteAgainstRemovals":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":164,"org.easymock.tests.UsageVarargTest.differentLength":26,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":114,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":231,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":335,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":230,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":268,"org.easymock.tests.ObjectMethodsTest.testHashCode":36,"org.easymock.tests2.CompareToTest.testGreateOrEqual":344,"org.easymock.tests2.NameTest.nameForNiceMock":271,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":293,"org.easymock.tests2.DependencyTest.testInterfaceMocking":310,"org.easymock.samples.ExampleTest.addDocument":324,"org.easymock.tests2.DelegateToTest.testStubDelegate":171,"org.easymock.tests2.AnswerTest.stubAnswer":267,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":41,"org.easymock.tests.UsageVarargTest.varargLongAccepted":28,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":167,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":174,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":318,"org.easymock.tests.UsageThrowableTest.noUpperLimit":59,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":204,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":188,"org.easymock.tests2.SerializationTest.test":185,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":150,"org.easymock.tests2.UsageConstraintsTest.testSame":193,"org.easymock.samples.SupportTest.addDocument":312,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":120,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":354,"org.easymock.tests2.NameTest.nameForMock":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":161,"org.easymock.tests2.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":11,"org.easymock.tests2.MockedExceptionTest.testRealException":249,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":179,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests2.NameTest.nameForStrictMock":270,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":302,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":205,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":238,"org.easymock.tests2.UsageStrictMockTest.range":181,"org.easymock.tests2.UsageConstraintsTest.lessThan":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":283,"org.easymock.tests2.UsageConstraintsTest.testOr":194,"org.easymock.tests.UsageRangeTest.combination":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":299,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor":346,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":162,"org.easymock.tests.UsageVarargTest.varargShortAccepted":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":106,"org.easymock.tests2.UsageConstraintsTest.cmpTo":198,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":374,"org.easymock.tests2.CompareToTest.testLessThan":340,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests2.CaptureTest.testCaptureFromStub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":116,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":382,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":104,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.constraints":189,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.samples.ExampleTest.addAndChangeDocument":327,"org.easymock.tests.UsageStrictMockTest.testVerify":46,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":328,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":39,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":13,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":49,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":379,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":155,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":50,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219}}]
