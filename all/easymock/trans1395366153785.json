[{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,2,7,8,10,84,85,86,11,12,87,88,89,90,91,92,93,94,95,96,97,15,16,17,18,98,99,100,101,102,19,103,104,105,106,107,108,109,110,29,111,112,113,30,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[32,226,227,33,228,229,230,231,232,123,145],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[1,7,11,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[233],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[34,234,35,36,37,38,39,235,40,54,56,57,58,60,61,62,63,64,65,236,66,237,67,90,91,92,93,109,110,29,111,113,30,116,238,238,239,239,118,129,130,138,150,151,152,240,241,166,167,168,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[35,242],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[243,244,87,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[246,247,248,249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[58,60,62,65,237,250,251,252,183,253,254,255,186,193],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[226,228,229,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:371","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[32,226,227,33,228,229,230,34,234,258,259,35,36,37,38,260,39,235,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,261,64,262,263,65,236,66,237,264,265,67,26,266,267,268,269,270,68,271,272,273,274,275,276,277,69,278,70,279,280,281,71,250,72,251,252,73,282,283,284,285,74,75,286,76,77,78,287,288,79,80,81,289,82,83,290,1,2,291,3,4,5,6,7,8,9,10,84,292,85,244,293,86,294,295,11,12,87,88,89,13,14,245,231,296,232,297,298,299,90,300,301,91,302,303,304,305,306,307,308,309,310,92,311,312,313,314,315,93,316,317,318,319,94,95,320,321,322,96,97,15,16,17,18,323,98,99,100,101,102,19,20,324,103,104,105,106,107,325,326,327,328,329,108,330,331,332,333,334,335,109,110,29,111,112,113,30,114,115,116,336,337,338,339,340,341,342,343,238,239,117,118,119,120,121,122,123,124,125,126,127,128,344,129,130,345,131,346,347,132,133,134,135,136,348,349,350,351,352,353,354,137,138,139,140,141,142,143,144,145,355,146,147,356,148,149,357,358,359,360,361,150,362,151,152,240,363,364,365,366,367,368,369,257,370,371,372,256,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,153,154,391,155,392,393,394,395,156,396,397,398,399,157,400,401,402,403,158,159,160,161,162,163,164,165,404,405,241,166,167,406,168,407,408,409,169,170,171,172,173,174,175,176,177,178,179,180,410,181,411,412,182,183,253,184,254,255,185,186,187,413,414,415,416,417,418,419,420,188,189,421,190,422,423,424,425,191,426,427,428,429,192,430,431,432,433,434,435,436,437,438,439,193,194,440,441,195,196,197,442,443,444,445,446,447,448,449,198,450,451,452,199,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,200,201,202,469,470,471,472,473,203,204,205,206,207,208,209,210,211,212,213,474,475,214,215,476,477,478,216,217,218,479,219,220,480,221,222,223,224,225,481,482,483,484,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[355,356,410,181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:77","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[250,251,252,286,76,80,81,340,341,342,343,148,183,253,254,255,439,194,195,196,442,475,214,215],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[263,79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[32,33,228,229,230,34,234,35,36,37,38,39,235,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,236,66,237,67,68,69,278,70,280,281,71,250,72,251,252,73,74,75,286,76,77,78,287,288,79,80,81,289,82,83,290,1,2,3,4,5,6,7,8,10,84,292,85,244,293,86,294,295,11,12,87,88,89,13,14,245,231,232,90,91,92,93,94,95,320,321,322,96,97,15,16,17,18,323,98,99,100,101,102,19,20,324,103,104,105,106,107,108,109,110,29,111,112,113,30,114,115,116,336,337,338,238,239,117,118,119,120,121,122,123,124,125,126,127,344,129,130,346,347,132,133,134,135,136,348,349,350,351,352,353,354,145,146,147,149,357,358,359,360,361,150,151,152,389,390,153,154,391,155,392,393,394,395,156,396,397,398,399,157,400,401,402,403,158,159,160,161,162,163,164,165,166,167,168,412,182,183,253,184,254,255,185,419,420,188,189,421,190,422,423,424,425,191,426,427,428,429,192,430,431,432,433,438,439,193,194,440,441,195,196,197,442,443,445,446,447,448,449,198,450,199,459,460,461,462,463,464,203,204,205,206,207,208,209,210,211,212,213,474,475,214,215,476,477,216,217,218,219,220,480,221,222,223,224,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":438,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":256,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":117,"org.easymock.tests2.DelegateToTest.testReturnException":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":460,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests.MockClassControlTest.testToString":139,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":339,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":389,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":447,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":205,"org.easymock.samples.ExampleTest.answerVsDelegate":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":484,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":408,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":50,"org.easymock.tests2.CaptureTest.testPrimitive":18,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":450,"org.easymock.tests.UsageTest.moreThanOneArgument":439,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":403,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":352,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":454,"org.easymock.tests.UsageTest.argumentsOrdered":196,"org.easymock.tests.UsageVarargTest.varargIntAccepted":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":275,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":361,"org.easymock.tests.ReplayStateInvalidUsageTest.times":177,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.DependencyTest.testClassMocking":318,"org.easymock.tests2.AnswerTest.answer":32,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":107,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":45,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":458,"org.easymock.tests2.DelegateToTest.testDelegate":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":157,"org.easymock.tests.LimitationsTest.mockFinalMethod":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests2.DependencyTest.testClassMockingSupport":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":410,"org.easymock.tests2.CaptureTest.testCapture1_2446744":323,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":105,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":171,"org.easymock.tests.UsageThrowableTest.throwError":158,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":483,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":317,"org.easymock.samples.PartialClassMockTest.testGetArea":118,"org.easymock.tests.MockingTest.testInterfaceMocking":406,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":358,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":436,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":470,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":390,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":395,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":246,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":46,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":203,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":315,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":426,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":102,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests.MockClassControlTest.testEquals":143,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":106,"org.easymock.tests2.CaptureTest.testCaptureAll":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests.MockNameTest.defaultName":434,"org.easymock.tests2.UsageConstraintsTest.testMatches":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":353,"org.easymock.samples.ExampleTest.voteForRemovals":127,"org.easymock.tests.UsageVarargTest.allKinds":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":164,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":464,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":272,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":279,"org.easymock.tests2.UsageConstraintsTest.greaterThan":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":444,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":237,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":418,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":264,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":43,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":459,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":44,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":423,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":286,"org.easymock.tests2.CaptureTest.testCapture2_2446744":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":224,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":135,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":402,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":242,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":478,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":400,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":350,"org.easymock.tests.UsageCallCountTest.tooManyCalls":136,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":163,"org.easymock.tests.MockingTest.testNiceClassMocking":409,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.MockingTest.testClassMocking":405,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":131,"org.easymock.tests2.UsageConstraintsTest.testContains":292,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":3,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":474,"org.easymock.tests.MockTypeTest.fromEasyMockClass":482,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":412,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageExpectAndReturnTest.object":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":49,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":220,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":202,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":0,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":471,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":455,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":430,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":146,"org.easymock.tests.MockClassControlTest.testHashCode":142,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":308,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":456,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":387,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":219,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastCall":287,"org.easymock.tests.DefaultClassInstantiatorTest.object":187,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":386,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":431,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":465,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":93,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":462,"org.easymock.tests2.StubTest.stubWithReturnValue":338,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":425,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":378,"org.easymock.samples.SupportTest.voteForRemovals":121,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":397,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":384,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":226,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":473,"org.easymock.tests.UsageExpectAndThrowTest.object":156,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":12,"org.easymock.tests2.DelegateToTest.testWrongClass":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":476,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":477,"org.easymock.samples.ConstructorCalledMockTest.testTax":238,"org.easymock.tests.UsageStrictMockTest.range":254,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":284,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":396,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":179,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":437,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests.UsageUnorderedTest.message":442,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests.UsageVarargTest.varargByteAccepted":223,"org.easymock.tests2.ThreadingTest.testThreadSafe":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":311,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":133,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":469,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":129,"org.easymock.tests2.CaptureTest.testCapture_2617107":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":176,"org.easymock.tests2.StubTest.stub":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":461,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":383,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":416,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":175,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":433,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":327,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":73,"org.easymock.tests2.NameTest.nameForMocksControl":343,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":301,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":441,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":391,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":296,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.CompareToTest.testNotComparable":233,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":241,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":394,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":14,"org.easymock.samples.ExampleTest.removeNonExistingDocument":128,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":173,"org.easymock.tests.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":414,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":322,"org.easymock.tests2.MockBuilderTest.testCreateMockString":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":137,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":302,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":299,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":33,"org.easymock.tests.UsageVerifyTest.twoThrows":214,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":92,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":452,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":28,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":165,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":114,"org.easymock.tests2.UsageTest.defaultResetToNice":79,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.differentLength":480,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":326,"org.easymock.tests2.CallbackTest.callback":230,"org.easymock.tests2.UsageConstraintsTest.equals":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":262,"org.easymock.tests.UsageTest.openCallCountByLastCall":440,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":449,"org.easymock.tests.UsageCallCountTest.tooFewCalls":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":206,"org.easymock.tests.UsageThrowableTest.throwCheckedException":162,"org.easymock.tests.MockingTest.testStrictClassMocking":404,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":248,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":112,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":229,"org.easymock.tests.ObjectMethodsTest.testHashCode":201,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":97,"org.easymock.tests2.NameTest.nameForNiceMock":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":94,"org.easymock.samples.ExampleTest.addDocument":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":312,"org.easymock.tests2.DelegateToTest.testStubDelegate":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.AnswerTest.stubAnswer":228,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":253,"org.easymock.tests.UsageVarargTest.varargLongAccepted":222,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":432,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":239,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":274,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":295,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":290,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":282,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests2.SerializationTest.test":55,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":420,"org.easymock.tests2.UsageConstraintsTest.testSame":5,"org.easymock.samples.SupportTest.addDocument":120,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":303,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":273,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":407,"org.easymock.tests2.NameTest.nameForMock":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":25,"org.easymock.tests2.UsageStrictMockTest.differentMethods":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":399,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":446,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":448,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":180,"org.easymock.tests2.NameTest.nameForStrictMock":341,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":259,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":283,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":234,"org.easymock.tests2.UsageStrictMockTest.range":251,"org.easymock.tests2.UsageConstraintsTest.lessThan":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":371,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":307,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageTest.wrongArguments":194,"org.easymock.tests2.MockBuilderTest.testWithConstructor":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":304,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":365,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":417,"org.easymock.tests.UsageVarargTest.varargShortAccepted":221,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":134,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":170,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":258,"org.easymock.tests.UsageTest.unexpectedCallWithArray":193,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":132,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":429,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.samples.ExampleTest.addAndChangeDocument":344,"org.easymock.tests.UsageStrictMockTest.testVerify":186,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":359,"org.easymock.tests.LimitationsTest.abstractClass":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":422,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":47,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":217}}]
