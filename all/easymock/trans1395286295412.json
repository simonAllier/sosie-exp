[{"position":"org.easymock.internal.RecordState:280","failures":[0,1,2,3,4,5,6,7],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,3,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[182,183],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[184,185,186,187,188],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[189,190],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[184,185,186,187,191,188],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[30,44,68,192,71,193,194,195,75,76,78,84,86,196,197,93,94,98,102,103,106,198,111,199,115,200,201,202,203,204,144,191,205,206,207,148,152,208,209,210,188,211,164,165,212,213,214,215,172],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[92,93,94,95,96,216,121,127,128,129,217,218,219,220,152,153,154,155,221,163,164,165,177,222,223,224,225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[70,192,194,195,92,93,94,226,227,228,229,201,230,231,232,145,205,206,207,188,163,164,165,171,215,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[192,194,195,93,201,203,191,205,206,207,188,164,215,172],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[8,24,233,234,235,111,236,112,237,113,114,199,115,238,200,239,240,241],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[8,242,9,0,10,11,243,12,244,245,13,246,247,248,249,250,14,15,251,16,17,252,253,18,19,20,21,254,22,23,24,25,255,2,3,4,6,256,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,257,50,51,52,53,54,55,56,57,58,59,60,61,258,62,259,63,64,65,66,67,68,69,70,192,71,193,72,73,74,194,195,75,76,77,78,79,80,81,82,233,83,260,84,85,86,87,88,90,91,196,261,92,197,93,94,262,95,96,97,98,99,100,101,102,103,104,105,106,107,108,263,198,216,264,265,266,109,267,268,110,269,234,111,112,237,113,114,199,115,200,270,271,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,272,137,138,139,140,141,142,201,143,273,274,275,276,277,204,278,279,280,281,282,283,284,217,285,286,287,288,289,218,290,291,144,145,191,205,146,147,206,207,148,292,293,294,295,296,149,150,151,152,154,155,221,297,298,299,156,157,158,159,160,162,300,210,301,188,163,211,164,165,302,166,303,167,168,169,170,304,305,306,307,212,213,214,171,215,172,308,7,309,310,177,178,311,312,179,313,314,315,316,317,222,318,319,320,321,322,223,224,225,323,324,325,326,327,328,180,181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[24,27,329,330,331,332,333,334,335,336,337,338,339],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[8,3,27,54,55,56,57,58,59,60,64,65,66,67,77,79,80,82,90,111,112,113,114,115,143,149,150,151,157],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[28,45,50,340],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[84,344,111,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[26,68,73,267,268,110,269,136,137,138,139,140,141,142,283,284,217,285,286,287,144,147,300,170,215,309,311,312,313,314,315,316,317,222,318,319,320,321,322,223,224,225,323,324,325,326,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":285,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":193,"org.easymock.tests2.StubTest.stubWithReturnValue":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":337,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":255,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":284,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":219,"org.easymock.tests.MockingTest.testPartialClassMocking":149,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":185,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":161,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":313,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":220,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests.UsageExpectAndThrowTest.object":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":230,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":331,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":180,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":181,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests2.UsageTest.wrongArguments":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests.UsageStrictMockTest.range":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":80,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests2.CaptureTest.testPrimitive":16,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":328,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests.UsageTest.moreThanOneArgument":145,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":186,"org.easymock.tests2.CaptureTest.testCaptureNone":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":176,"org.easymock.tests.UsageUnorderedTest.message":201,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":208,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageVarargTest.varargByteAccepted":280,"org.easymock.tests2.ThreadingTest.testThreadSafe":87,"org.easymock.tests.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageVarargTest.varargIntAccepted":275,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":307,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":246,"org.easymock.tests2.CaptureTest.testCapture_2617107":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":237,"org.easymock.tests2.UsageConstraintsTest.any":38,"org.easymock.tests2.StubTest.stub":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.UsageExpectAndThrowTest.longType":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":217,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests.LimitationsTest.mockNativeMethod":143,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":241,"org.easymock.tests2.AnswerTest.answer":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":69,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":260,"org.easymock.tests2.NameTest.nameForMocksControl":229,"org.easymock.tests2.MockedExceptionTest.testMockedException":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":154,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":317,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":324,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":330,"org.easymock.tests2.CaptureTest.testCaptureLast":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":60,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":296,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":49,"org.easymock.tests2.CaptureTest.testCapture1_2446744":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":52,"org.easymock.tests.UsageThrowableTest.throwError":136,"org.easymock.tests.UsageStrictMockTest.differentMethods":165,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":209,"org.easymock.tests2.MockBuilderTest.testCreateMockString":200,"org.easymock.tests.UsageExpectAndThrowTest.floatType":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":44,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":258,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests2.CompareToTest.testLessOrEqual":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":314,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":112,"org.easymock.tests2.MockBuilderTest.testCreateMock":199,"org.easymock.tests2.UsageTest.defaultResetToNice":74,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":131,"org.easymock.tests.UsageVarargTest.differentLength":204,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests.UsageTest.openCallCountByLastCall":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":321,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":184,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageCallCountTest.tooFewCalls":305,"org.easymock.tests.UsageOverloadedMethodTest.overloading":169,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":309,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":41,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":139,"org.easymock.tests2.EasyMockSupportClassTest.testAll":64,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":326,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":300,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":58,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":290,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":335,"org.easymock.tests2.NameTest.nameForNiceMock":228,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests.UsageVarargTest.allKinds":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":95,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":295,"org.easymock.samples.BasicClassMockTest.testPrintContent":247,"org.easymock.samples.ExampleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":287,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":5,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":336,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":153,"org.easymock.tests.UsageVarargTest.varargLongAccepted":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":86,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests.UsageExpectAndReturnTest.floatType":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests.UsageThrowableTest.noUpperLimit":272,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":167,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":252,"org.easymock.tests2.SerializationTest.test":25,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":117,"org.easymock.samples.SupportTest.addDocument":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":283,"org.easymock.tests2.CaptureTest.testCaptureFirst":23,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":100,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests2.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.CaptureTest.testCapture2_2446744":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":115,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":281,"org.easymock.tests2.NameTest.nameForMock":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":213,"org.easymock.tests.UsageExpectAndReturnTest.longType":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":292,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":327,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":128,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":325,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":120,"org.easymock.tests.UsageCallCountTest.tooManyCalls":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":155,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":304,"org.easymock.tests2.MockedExceptionTest.testRealException":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":235,"org.easymock.tests2.NameTest.nameForStrictMock":227,"org.easymock.tests2.UsageConstraintsTest.testContains":40,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":81,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":271,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":210,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":231,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":111,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":332,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":345,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":334,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":98,"org.easymock.tests2.CaptureTest.testCaptureRightOne":21,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":329,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":132,"org.easymock.tests.UsageTest.wrongArguments":205,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":7,"org.easymock.tests2.EasyMockSupportTest.testVerify":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":308,"org.easymock.tests.UsageVarargTest.varargShortAccepted":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":216,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":212,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":202,"org.easymock.tests2.UsageConstraintsTest.cmpTo":39,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":189,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":108,"org.easymock.tests2.CaptureTest.testCaptureFromStub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":236,"org.easymock.tests.UsageTest.unexpectedCallWithArray":191,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":138,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":306,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":130,"org.easymock.tests2.CaptureTest.testCapture":182,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":84,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":318,"org.easymock.samples.ExampleTest.addAndChangeDocument":244,"org.easymock.tests.CapturesMatcherTest.test":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":248,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":253,"org.easymock.tests2.UsageTest.resumeIfFailure":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":274,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":103}}]
