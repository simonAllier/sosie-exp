[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return this.java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,7,56,57,58,8,9,59,60,10,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,11,98,12,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,13,131,132,133,134,135,136,137,138,6,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,25,178,179,180,181,182,183,184,185,14,186,187,188,189,190,15,16,191,192,17,28,18,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,19,209,210,211,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[42,43,44,45,213,46,62,102,214,215,216,217,218,219,220,221,206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[222,38,39,223,224,40,225,226,227,228,229,230,231,232,41,42,43,44,45,213,46,233,234,235,236,237,238,239,49,50,51,52,53,54,55,56,61,240,64,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,11,98,12,241,242,243,244,245,246,247,248,249,250,251,99,252,253,254,100,101,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,255,256,257,258,259,13,133,134,260,218,219,220,221,135,136,137,138,6,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,261,163,164,165,166,167,169,170,171,262,172,173,176,177,25,178,263,179,180,182,264,265,266,267,268,183,269,186,187,189,190,270,271,28,18,193,194,195,196,197,198,199,200,272,201,273,274,275,202,203,204,205,276,206,207,277,278,279,280,281,19,211,212],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[269,282],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[66,67,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"failures":[283,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[56,11,98,12,13,133,134,187,19,211,212],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":45,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.tests2.StubTest.stubWithReturnValue":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":263,"org.easymock.tests2.DelegateToTest.testReturnException":179,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":43,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":22,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":30,"org.easymock.tests2.DelegateToTest.testWrongClass":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":127,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":100,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageStrictMockTest.range":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":257,"org.easymock.samples.ExampleTest.answerVsDelegate":38,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.CaptureTest.testPrimitive":167,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":104,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":51,"org.easymock.tests2.CaptureTest.testCaptureNone":262,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":248,"org.easymock.tests2.ThreadingTest.testThreadSafe":160,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":93,"org.easymock.tests2.CaptureTest.testCapture_2617107":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":103,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":269,"org.easymock.tests2.UsageConstraintsTest.any":144,"org.easymock.tests2.StubTest.stub":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":44,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests.ReplayStateInvalidUsageTest.times":35,"org.easymock.tests.LimitationsTest.mockNativeMethod":41,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests2.AnswerTest.answer":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":267,"org.easymock.tests2.CaptureTest.testAnd":164,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":274,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":2,"org.easymock.tests2.MockedExceptionTest.testMockedException":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.DelegateToTest.testDelegate":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":198,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":201,"org.easymock.tests2.CaptureTest.testCaptureLast":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":205,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":230,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests2.CaptureTest.testCapture1_2446744":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.tests.UsageThrowableTest.throwError":63,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":48,"org.easymock.tests.UsageStrictMockTest.differentMethods":133,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":4,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":161,"org.easymock.tests2.MockBuilderTest.testCreateMockString":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":53,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":193,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":223,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":69,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":24,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.UsageTest.defaultResetToNice":270,"org.easymock.samples.ExampleTest.voteAgainstRemovals":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":36,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests.UsageTest.openCallCountByLastCall":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":102,"org.easymock.tests.UsageCallCountTest.tooFewCalls":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":147,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":258,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":3,"org.easymock.tests.UsageThrowableTest.throwCheckedException":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":228,"org.easymock.tests2.CaptureTest.testCaptureAll":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":204,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":52,"org.easymock.samples.ExampleTest.voteForRemovals":40,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests.UsageVarargTest.allKinds":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests2.DependencyTest.testInterfaceMocking":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":229,"org.easymock.samples.ExampleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":68,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests2.AnswerTest.stubAnswer":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":46,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":34,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests.UsageVarargTest.varargLongAccepted":247,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.samples.ExampleTest.voteForRemoval":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":169,"org.easymock.tests2.SerializationTest.test":178,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":217,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":42,"org.easymock.tests2.CaptureTest.testCaptureFirst":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests.GenericTest.testPackageScope":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.CaptureTest.testCapture2_2446744":175,"org.easymock.tests2.UsageTest.moreThanOneArgument":187,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":184,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":249,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":235,"org.easymock.tests2.MockedExceptionTest.testRealException":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":234,"org.easymock.tests2.UsageConstraintsTest.testContains":146,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":220,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":55,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":197,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":129,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":273,"org.easymock.tests2.UsageStrictMockTest.range":210,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":31,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":33,"org.easymock.tests2.CaptureTest.testCaptureRightOne":173,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":283,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":29,"org.easymock.tests.UsageRangeTest.combination":99,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":284,"org.easymock.tests.UsageVarargTest.varargShortAccepted":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":264,"org.easymock.tests2.UsageConstraintsTest.cmpTo":145,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":23,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.UsageTest.openCallCountByLastCall":15,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests2.CaptureTest.testCaptureFromStub":174,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests2.CaptureTest.testCapture":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.samples.ExampleTest.addAndChangeDocument":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.tests.CapturesMatcherTest.test":20,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":214,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":227,"org.easymock.tests2.UsageTest.resumeIfFailure":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":96,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242}}]
