[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[22,23,24,25,26],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,56,57,2,3,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,6,92,93,7,8,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[110],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[19,111,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[112,113,114,115,116],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[22,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[118,119,120,121,19,122,70,123,71,124,125,126,127,72,128,129,130,131,132,110,133,134],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[27,135,28,29,30,31,32,33,34,35,36,37,118,136,137,38,138,139,140,0,39,141,40,142,143,144,41,42,145,146,43,147,148,119,120,121,149,150,151,152,153,154,19,111,44,155,156,157,45,158,159,160,161,162,46,47,48,49,163,164,165,166,167,168,169,170,171,172,173,174,175,176,51,177,178,179,180,181,182,183,184,185,186,187,52,53,188,189,190,54,55,1,56,57,2,3,191,192,193,194,195,62,63,196,197,64,65,66,67,198,199,200,201,68,69,202,203,204,205,206,207,208,209,210,211,212,213,122,70,71,124,125,126,127,72,128,214,215,216,217,218,219,220,221,129,222,223,130,131,224,225,226,227,228,229,230,73,231,232,233,234,235,236,237,238,239,240,241,242,243,244,4,245,74,246,247,75,76,248,249,250,77,78,251,79,252,253,254,255,256,257,80,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,81,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,83,84,85,86,312,87,88,89,90,91,6,92,93,7,8,313,314,315,316,10,11,12,317,318,319,320,321,322,323,324,325,326,327,328,329,330,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,57,2,4,79,6,93,7,10,11,12,332,333,334,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[27,135,28,29,30,31,32,33,34,35,36,37,118,136,137,38,138,139,140,0,39,141,40,142,143,144,41,42,145,146,43,147,148,119,120,121,149,150,151,152,153,154,19,111,44,155,156,157,45,158,159,160,161,162,46,47,48,49,163,164,165,166,167,168,169,170,171,172,173,174,175,176,51,177,178,179,180,181,182,183,184,185,186,187,52,53,188,189,190,54,55,1,56,57,2,3,191,192,193,194,195,62,63,196,197,64,65,66,67,198,199,200,201,68,69,202,203,204,205,206,207,208,209,210,211,212,213,122,70,71,124,125,126,127,72,128,214,215,216,217,218,219,220,221,129,222,223,130,131,224,225,226,227,228,229,230,73,231,232,233,234,235,236,237,238,239,240,241,242,243,244,4,245,74,246,247,75,76,248,249,250,77,78,251,79,252,253,254,255,256,257,80,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,81,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,83,84,85,86,312,87,88,89,90,91,6,92,93,7,8,313,314,315,316,10,11,12,317,318,319,320,321,322,323,324,325,326,327,328,329,330,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"invocation"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[27,135,28,29,30,31,32,33,34,35,36,37,118,136,136,137,137,38,138,139,140,0,39,141,40,142,143,144,41,42,145,146,43,147,148,119,120,121,149,150,151,152,153,154,19,111,44,155,156,157,45,158,159,160,161,162,46,47,48,49,337,163,164,165,338,166,167,168,169,170,171,172,173,174,175,176,50,51,177,178,179,180,181,182,183,184,185,186,187,52,53,188,189,190,54,55,1,56,57,2,3,58,59,60,61,191,339,340,192,193,194,195,62,63,196,197,64,65,66,67,198,199,200,201,68,205,206,207,208,209,210,211,212,213,70,71,125,126,72,214,215,216,217,218,219,220,221,222,130,131,224,225,226,227,228,229,230,73,231,341,241,242,243,244,4,74,246,247,75,76,248,249,250,77,78,251,79,342,252,253,254,255,256,257,80,110,343,344,345,346,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,81,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,347,348,349,82,83,84,85,86,87,88,89,90,91,6,92,93,7,8,94,313,350,314,315,351,9,10,11,12,317,318,319,320,321,322,323,324,325,326,327,328,352,329,330,353,354,355,95,356,357,358,359,96,97,360,361,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"failures":[138],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[27,135,28,29,30,31,362,32,33,34,35,36,37,118,136,137,38,138,13,363,139,140,0,39,141,40,142,143,144,41,42,145,146,364,43,147,365,366,367,148,368,369,119,370,371,372,373,374,375,376,377,378,120,379,380,381,382,383,121,384,385,149,150,151,152,153,386,154,19,111,44,155,156,157,45,158,159,160,161,162,46,47,48,49,337,163,164,165,338,166,167,168,169,170,331,171,172,173,174,175,176,50,51,177,178,179,180,181,182,183,184,185,186,187,52,53,188,189,190,54,55,1,56,57,2,3,387,58,59,60,61,191,339,340,192,193,194,195,62,63,196,197,64,65,66,67,198,199,200,201,68,69,202,203,204,205,388,389,390,391,392,206,393,394,395,396,397,398,207,208,209,210,399,211,212,213,400,122,401,70,123,402,403,71,124,125,20,126,336,21,127,72,404,128,405,406,214,215,407,408,409,410,411,412,413,216,217,218,219,220,221,129,414,222,415,416,223,130,131,224,417,132,418,419,420,421,422,225,423,424,425,426,427,428,226,227,228,229,230,73,429,430,231,431,232,233,234,235,432,341,433,236,237,238,239,240,241,242,243,244,4,245,74,246,247,75,76,248,249,250,77,78,251,79,434,435,342,252,253,436,254,437,438,439,255,256,440,257,80,110,441,343,344,5,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,345,458,459,460,461,462,346,463,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,464,465,466,467,468,469,470,471,472,473,474,475,278,81,279,280,281,282,283,284,285,286,287,288,289,290,291,476,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,133,477,478,479,480,134,481,482,347,348,349,82,483,83,84,85,86,312,87,88,89,90,91,6,92,93,7,8,94,313,350,314,315,351,9,316,10,11,12,484,485,22,23,24,486,25,487,26,317,318,319,320,321,322,323,324,325,326,327,328,352,329,330,353,354,355,95,356,357,358,359,96,97,360,361,98,99,100,488,101,102,103,104,105,106,107,108,489,109,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[19,111,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[490,494,499],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[118,71,125,126,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[19,111,44,504],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:275","sourceCode":"return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[331],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[136,137,138,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[27,135,28,29,30,31,32,33,34,35,36,37,118,136,136,137,137,38,138,139,140,0,39,141,40,142,143,144,41,42,145,146,43,147,148,119,120,121,149,150,151,152,153,154,19,111,44,155,156,157,45,158,159,160,161,162,46,47,48,49,163,164,165,166,167,168,169,170,171,172,173,174,175,176,51,177,178,179,180,181,182,183,184,185,186,187,53,188,189,190,54,55,1,56,57,2,3,58,59,60,61,191,192,193,194,195,62,63,196,197,64,65,66,67,198,199,200,201,68,69,202,203,204,205,206,207,208,209,210,211,212,213,122,71,124,125,126,72,128,214,215,216,217,218,219,220,221,222,223,131,225,226,227,228,229,230,73,231,232,233,234,235,236,237,238,239,240,242,243,244,4,245,74,246,247,75,76,248,249,250,77,78,251,79,252,253,254,255,256,257,80,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,465,467,468,470,473,475,278,81,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,82,483,83,84,85,86,89,90,91,6,92,93,7,8,94,9,10,11,12,317,318,319,320,321,322,323,324,325,326,327,328,352,329,330,98,99,100,101,102,104,105,106,107,108,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[39,41,42,57,245,74,75,76,79,506,91,93,11,12],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[19,111,44,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[182,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[134],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[40,182,220,470],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[36,37,118,136,136,137,137,138,13,507,365,366,367,148,368,369,119,370,371,372,373,374,375,376,377,378,120,379,380,381,382,383,121,384,385,149,150,151,19,44,207,208,209,210,212,213,122,508,70,123,403,71,124,125,126,21,127,72,503,128,407,411,216,217,219,220,221,129,222,415,416,223,130,131,224,417,132,73,429,430,231,431,434,435,342,252,253,254,439,440,257,80,110,441,133,134,485,22,23,24,486,25,26,493,494,495,496,497,498,499,500,501],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":452,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":35,"org.easymock.tests2.DelegateToTest.testReturnException":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":318,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests.MockClassControlTest.testToString":496,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":387,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":292,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":332,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":176,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":249,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":134,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":438,"org.easymock.tests2.UsageConstraintsTest.testNull":172,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":219,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests2.CaptureTest.testPrimitive":196,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":251,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":359,"org.easymock.tests.UsageVarargTest.varargIntAccepted":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":327,"org.easymock.tests.ReplayStateInvalidUsageTest.times":472,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests2.DependencyTest.testClassMocking":405,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":478,"org.easymock.tests2.CaptureTest.testAnd":195,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":329,"org.easymock.tests2.DelegateToTest.testDelegate":166,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":307,"org.easymock.tests.LimitationsTest.mockFinalMethod":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":240,"org.easymock.tests2.DependencyTest.testClassMockingSupport":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":466,"org.easymock.tests.UsageThrowableTest.throwError":278,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":480,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":385,"org.easymock.samples.PartialClassMockTest.testGetArea":118,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":467,"org.easymock.tests.MockingTest.testInterfaceMocking":436,"org.easymock.tests2.CompareToTest.testLessOrEqual":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":493,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":301,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":477,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":180,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests.MockClassControlTest.testEquals":500,"org.easymock.tests2.EasyMockSupportClassTest.testAll":148,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":309,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":238,"org.easymock.tests.MockNameTest.defaultName":476,"org.easymock.tests2.UsageConstraintsTest.testMatches":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":31,"org.easymock.tests.UsageVarargTest.allKinds":108,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.samples.BasicClassMockTest.testPrintContent":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":239,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":283,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":322,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":338,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":352,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":224,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":26,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":417,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":157,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":317,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":45,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":265,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":201,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":107,"org.easymock.tests.GenericTest.testBridgedEquals":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":261,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":236,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":503,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":310,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":52,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":282,"org.easymock.tests.MockingTest.testNiceClassMocking":439,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":208,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":508,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":483,"org.easymock.tests2.UsageConstraintsTest.testContains":178,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":171,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests.MockTypeTest.fromEasyMockClass":479,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":89,"org.easymock.tests.UsageExpectAndReturnTest.object":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests.MockClassControlTest.testHashCode":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests2.EasyMockSupportTest.testVerify":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":313,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":101,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests.DefaultClassInstantiatorTest.object":485,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":109,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":498,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":353,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests2.UsageTest.resumeIfFailure":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":320,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":267,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.samples.SupportTest.voteForRemovals":34,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":304,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":346,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":339,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":433,"org.easymock.tests.UsageExpectAndThrowTest.object":302,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":186,"org.easymock.tests2.DelegateToTest.testWrongClass":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.samples.ConstructorCalledMockTest.testTax":136,"org.easymock.tests.UsageStrictMockTest.range":93,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":412,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":303,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":474,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests2.CaptureTest.testCaptureNone":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests.UsageUnorderedTest.message":79,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":106,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":86,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":492,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":36,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":78,"org.easymock.tests2.UsageConstraintsTest.any":51,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":471,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndThrowTest.longType":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":319,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":486,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":470,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":3,"org.easymock.tests2.NameTest.nameForMocksControl":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":386,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":296,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.CompareToTest.testCompareEqual":114,"org.easymock.tests2.CaptureTest.testCaptureLast":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":187,"org.easymock.tests.MockingTest.testTwoMocks":342,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":300,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.samples.ExampleTest.removeNonExistingDocument":362,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":23,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":228,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":494,"org.easymock.tests.UsageExpectAndThrowTest.floatType":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":363,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":131,"org.easymock.tests.LimitationsTest.privateConstructor":430,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":284,"org.easymock.tests2.UsageTest.defaultResetToNice":144,"org.easymock.samples.ExampleTest.voteAgainstRemovals":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests.UsageVarargTest.differentLength":103,"org.easymock.tests2.CallbackTest.callback":205,"org.easymock.tests2.UsageConstraintsTest.equals":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":415,"org.easymock.tests.UsageTest.openCallCountByLastCall":246,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":77,"org.easymock.tests.UsageCallCountTest.tooFewCalls":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests.UsageThrowableTest.throwCheckedException":281,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":209,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":473,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":490,"org.easymock.tests2.CompareToTest.testGreateOrEqual":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":17,"org.easymock.tests2.NameTest.nameForNiceMock":60,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.DelegateToTest.testStubDelegate":164,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":336,"org.easymock.tests.UsageVarargTest.varargLongAccepted":105,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.floatType":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":138,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":184,"org.easymock.tests.UsageThrowableTest.noUpperLimit":81,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":168,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":407,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":64,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":22,"org.easymock.tests2.UsageConstraintsTest.testSame":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":259,"org.easymock.samples.SupportTest.addDocument":33,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":371,"org.easymock.tests.GenericTest.testPackageScope":257,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":437,"org.easymock.tests2.NameTest.nameForMock":58,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":404,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":306,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":330,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":413,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":455,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":475,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":250,"org.easymock.tests2.NameTest.nameForStrictMock":59,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":411,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":185,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":24,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":333,"org.easymock.tests.ErrorMessageTest.testGetters":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.UsageConstraintsTest.testOr":174,"org.easymock.tests.UsageRangeTest.combination":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":217,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":495,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":271,"org.easymock.tests.UsageVarargTest.varargShortAccepted":104,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":25,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":312,"org.easymock.tests2.UsageConstraintsTest.cmpTo":177,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":340,"org.easymock.tests2.CompareToTest.testLessThan":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":200,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":465,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":123,"org.easymock.tests.UsageTest.unexpectedCallWithArray":245,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":272,"org.easymock.tests2.UsageConstraintsTest.constraints":169,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":32,"org.easymock.tests.UsageStrictMockTest.testVerify":94,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":90,"org.easymock.tests2.CompareToTest.testGreateThan":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":237,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":65,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":325,"org.easymock.tests.LimitationsTest.abstractClass":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":264,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":99,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":335}}]
